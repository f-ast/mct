head	1.7;
access;
symbols
	v20081020-0700:1.7
	v20080722-1827:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080503-1740:1.6
	v20080425-1959:1.5
	v20080407-2250:1.5
	v20080407-1545:1.5
	v20080331-1625:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080114-2222:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	v20070403-1500:1.4
	v20070330-1300:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.3.2.3
	M1_20:1.3
	v20060728-0500:1.3.2.2
	v20060721-1130:1.3.2.2
	v20060713-1700:1.3.2.1
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.00.14.41;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	3e924820f4604567;

1.6
date	2008.05.03.18.33.03;	author ahunter;	state Exp;
branches;
next	1.5;
commitid	1c13481cafcc4567;

1.5
date	2007.05.17.16.26.50;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	71d9464c82444567;

1.4
date	2006.10.03.15.07.26;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.43;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.26;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.07.07.18.58.37;	author mmostafa;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2006.07.17.20.27.55;	author ahunter;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2006.09.13.16.48.16;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.runtime.notation.Anchor;
import org.eclipse.gmf.runtime.notation.Bendpoints;
import org.eclipse.gmf.runtime.notation.Edge;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.View;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Edge</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.EdgeImpl#getSource <em>Source</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.EdgeImpl#getTarget <em>Target</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.EdgeImpl#getBendpoints <em>Bendpoints</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.EdgeImpl#getSourceAnchor <em>Source Anchor</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.EdgeImpl#getTargetAnchor <em>Target Anchor</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
/*
 * @@canBeSeenBy %partners
 */
public class EdgeImpl extends ViewImpl implements Edge {
    /**
	 * The cached value of the '{@@link #getSource() <em>Source</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSource()
	 * @@generated
	 * @@ordered
	 */
	protected View source;

				/**
	 * The cached value of the '{@@link #getTarget() <em>Target</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTarget()
	 * @@generated
	 * @@ordered
	 */
	protected View target;

				/**
	 * The cached value of the '{@@link #getBendpoints() <em>Bendpoints</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBendpoints()
	 * @@generated
	 * @@ordered
	 */
	protected Bendpoints bendpoints;

				/**
	 * The cached value of the '{@@link #getSourceAnchor() <em>Source Anchor</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceAnchor()
	 * @@generated
	 * @@ordered
	 */
	protected Anchor sourceAnchor;

				/**
	 * The cached value of the '{@@link #getTargetAnchor() <em>Target Anchor</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetAnchor()
	 * @@generated
	 * @@ordered
	 */
	protected Anchor targetAnchor;

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EdgeImpl() {
		super();
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return NotationPackage.Literals.EDGE;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public View getSource() {
		return source;
	}

    /**
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
      * @@generated Not
     */
	public NotificationChain basicSetSource(View newSource, NotificationChain msgs) {
        if (eContainingFeature() == NotationPackage.eINSTANCE.getDiagram_PersistedEdges()){
            if (newSource!=null && newSource.eContainingFeature() == NotationPackage.eINSTANCE.getView_TransientChildren()){
                EObject container = newSource.eContainer();
                if (container!=null && container instanceof View){
                    View parent = (View)container;
                    parent.persistChildren();
                }
            }
        }
        View oldSource = source;
        source = newSource;
        if (eNotificationRequired()) {
            ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE, oldSource, newSource);
            if (msgs == null) msgs = notification; else msgs.add(notification);
        }
        return msgs;
    }
    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSource(View newSource) {
		if (newSource != source) {
			NotificationChain msgs = null;
			if (source != null)
				msgs = ((InternalEObject)source).eInverseRemove(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
			if (newSource != null)
				msgs = ((InternalEObject)newSource).eInverseAdd(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
			msgs = basicSetSource(newSource, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE, newSource, newSource));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public View getTarget() {
		return target;
	}

    /**
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @@generated Not
     */
	public NotificationChain basicSetTarget(View newTarget, NotificationChain msgs) {
        if (eContainingFeature() == NotationPackage.eINSTANCE.getDiagram_PersistedEdges()){
            if (newTarget!=null && newTarget.eContainingFeature() == NotationPackage.eINSTANCE.getView_TransientChildren()){
                EObject container = newTarget.eContainer();
                if (container!=null && container instanceof View){
                    View parent = (View)container;
                    parent.persistChildren();
                }
            }
        }
        View oldTarget = target;
        target = newTarget;
        if (eNotificationRequired()) {
            ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET, oldTarget, newTarget);
            if (msgs == null) msgs = notification; else msgs.add(notification);
        }
        return msgs;
    }

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTarget(View newTarget) {
		if (newTarget != target) {
			NotificationChain msgs = null;
			if (target != null)
				msgs = ((InternalEObject)target).eInverseRemove(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
			if (newTarget != null)
				msgs = ((InternalEObject)newTarget).eInverseAdd(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
			msgs = basicSetTarget(newTarget, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET, newTarget, newTarget));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Bendpoints getBendpoints() {
		return bendpoints;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetBendpoints(Bendpoints newBendpoints, NotificationChain msgs) {
		Bendpoints oldBendpoints = bendpoints;
		bendpoints = newBendpoints;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__BENDPOINTS, oldBendpoints, newBendpoints);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBendpoints(Bendpoints newBendpoints) {
		if (newBendpoints != bendpoints) {
			NotificationChain msgs = null;
			if (bendpoints != null)
				msgs = ((InternalEObject)bendpoints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__BENDPOINTS, null, msgs);
			if (newBendpoints != null)
				msgs = ((InternalEObject)newBendpoints).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__BENDPOINTS, null, msgs);
			msgs = basicSetBendpoints(newBendpoints, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__BENDPOINTS, newBendpoints, newBendpoints));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Anchor getSourceAnchor() {
		return sourceAnchor;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetSourceAnchor(Anchor newSourceAnchor, NotificationChain msgs) {
		Anchor oldSourceAnchor = sourceAnchor;
		sourceAnchor = newSourceAnchor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE_ANCHOR, oldSourceAnchor, newSourceAnchor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceAnchor(Anchor newSourceAnchor) {
		if (newSourceAnchor != sourceAnchor) {
			NotificationChain msgs = null;
			if (sourceAnchor != null)
				msgs = ((InternalEObject)sourceAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__SOURCE_ANCHOR, null, msgs);
			if (newSourceAnchor != null)
				msgs = ((InternalEObject)newSourceAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__SOURCE_ANCHOR, null, msgs);
			msgs = basicSetSourceAnchor(newSourceAnchor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE_ANCHOR, newSourceAnchor, newSourceAnchor));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Anchor getTargetAnchor() {
		return targetAnchor;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetTargetAnchor(Anchor newTargetAnchor, NotificationChain msgs) {
		Anchor oldTargetAnchor = targetAnchor;
		targetAnchor = newTargetAnchor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET_ANCHOR, oldTargetAnchor, newTargetAnchor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTargetAnchor(Anchor newTargetAnchor) {
		if (newTargetAnchor != targetAnchor) {
			NotificationChain msgs = null;
			if (targetAnchor != null)
				msgs = ((InternalEObject)targetAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__TARGET_ANCHOR, null, msgs);
			if (newTargetAnchor != null)
				msgs = ((InternalEObject)newTargetAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__TARGET_ANCHOR, null, msgs);
			msgs = basicSetTargetAnchor(newTargetAnchor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET_ANCHOR, newTargetAnchor, newTargetAnchor));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public Bendpoints createBendpoints(EClass eClass) {
		Bendpoints newBendpoints = (Bendpoints) eClass.getEPackage().getEFactoryInstance().create(eClass);
		setBendpoints(newBendpoints);
		return newBendpoints;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 */
	public Anchor createSourceAnchor(EClass eClass) {
		Anchor newAnchor = (Anchor) eClass.getEPackage().getEFactoryInstance().create(eClass);
		setSourceAnchor(newAnchor);
		return newAnchor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 */
	public Anchor createTargetAnchor(EClass eClass) {
		Anchor newAnchor = (Anchor) eClass.getEPackage().getEFactoryInstance().create(eClass);
		setTargetAnchor(newAnchor);
		return newAnchor;
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case NotationPackage.EDGE__EANNOTATIONS:
				return ((InternalEList)getEAnnotations()).basicAdd(otherEnd, msgs);
			case NotationPackage.EDGE__SOURCE_EDGES:
				return ((InternalEList)getSourceEdges()).basicAdd(otherEnd, msgs);
			case NotationPackage.EDGE__TARGET_EDGES:
				return ((InternalEList)getTargetEdges()).basicAdd(otherEnd, msgs);
			case NotationPackage.EDGE__SOURCE:
				if (source != null)
					msgs = ((InternalEObject)source).eInverseRemove(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
				return basicSetSource((View)otherEnd, msgs);
			case NotationPackage.EDGE__TARGET:
				if (target != null)
					msgs = ((InternalEObject)target).eInverseRemove(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
				return basicSetTarget((View)otherEnd, msgs);
		}
		return eDynamicInverseAdd(otherEnd, featureID, msgs);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case NotationPackage.EDGE__EANNOTATIONS:
				return ((InternalEList)getEAnnotations()).basicRemove(otherEnd, msgs);
			case NotationPackage.EDGE__SOURCE_EDGES:
				return ((InternalEList)getSourceEdges()).basicRemove(otherEnd, msgs);
			case NotationPackage.EDGE__TARGET_EDGES:
				return ((InternalEList)getTargetEdges()).basicRemove(otherEnd, msgs);
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				return ((InternalEList)getPersistedChildren()).basicRemove(otherEnd, msgs);
			case NotationPackage.EDGE__STYLES:
				return ((InternalEList)getStyles()).basicRemove(otherEnd, msgs);
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				return ((InternalEList)getTransientChildren()).basicRemove(otherEnd, msgs);
			case NotationPackage.EDGE__SOURCE:
				return basicSetSource(null, msgs);
			case NotationPackage.EDGE__TARGET:
				return basicSetTarget(null, msgs);
			case NotationPackage.EDGE__BENDPOINTS:
				return basicSetBendpoints(null, msgs);
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				return basicSetSourceAnchor(null, msgs);
			case NotationPackage.EDGE__TARGET_ANCHOR:
				return basicSetTargetAnchor(null, msgs);
		}
		return eDynamicInverseRemove(otherEnd, featureID, msgs);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case NotationPackage.EDGE__EANNOTATIONS:
				return getEAnnotations();
			case NotationPackage.EDGE__VISIBLE:
				return isVisible() ? Boolean.TRUE : Boolean.FALSE;
			case NotationPackage.EDGE__TYPE:
				return getType();
			case NotationPackage.EDGE__MUTABLE:
				return isMutable() ? Boolean.TRUE : Boolean.FALSE;
			case NotationPackage.EDGE__SOURCE_EDGES:
				return getSourceEdges();
			case NotationPackage.EDGE__TARGET_EDGES:
				return getTargetEdges();
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				return getPersistedChildren();
			case NotationPackage.EDGE__STYLES:
				return getStyles();
			case NotationPackage.EDGE__ELEMENT:
				if (resolve) return getElement();
				return basicGetElement();
			case NotationPackage.EDGE__DIAGRAM:
				if (resolve) return getDiagram();
				return basicGetDiagram();
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				return getTransientChildren();
			case NotationPackage.EDGE__SOURCE:
				return getSource();
			case NotationPackage.EDGE__TARGET:
				return getTarget();
			case NotationPackage.EDGE__BENDPOINTS:
				return getBendpoints();
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				return getSourceAnchor();
			case NotationPackage.EDGE__TARGET_ANCHOR:
				return getTargetAnchor();
		}
		return eDynamicGet(featureID, resolve, coreType);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case NotationPackage.EDGE__EANNOTATIONS:
				getEAnnotations().clear();
				getEAnnotations().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__VISIBLE:
				setVisible(((Boolean)newValue).booleanValue());
				return;
			case NotationPackage.EDGE__TYPE:
				setType((String)newValue);
				return;
			case NotationPackage.EDGE__MUTABLE:
				setMutable(((Boolean)newValue).booleanValue());
				return;
			case NotationPackage.EDGE__SOURCE_EDGES:
				getSourceEdges().clear();
				getSourceEdges().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__TARGET_EDGES:
				getTargetEdges().clear();
				getTargetEdges().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				getPersistedChildren().clear();
				getPersistedChildren().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__STYLES:
				getStyles().clear();
				getStyles().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__ELEMENT:
				setElement((EObject)newValue);
				return;
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				getTransientChildren().clear();
				getTransientChildren().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__SOURCE:
				setSource((View)newValue);
				return;
			case NotationPackage.EDGE__TARGET:
				setTarget((View)newValue);
				return;
			case NotationPackage.EDGE__BENDPOINTS:
				setBendpoints((Bendpoints)newValue);
				return;
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				setSourceAnchor((Anchor)newValue);
				return;
			case NotationPackage.EDGE__TARGET_ANCHOR:
				setTargetAnchor((Anchor)newValue);
				return;
		}
		eDynamicSet(featureID, newValue);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public void eUnset(int featureID) {
		switch (featureID) {
			case NotationPackage.EDGE__EANNOTATIONS:
				getEAnnotations().clear();
				return;
			case NotationPackage.EDGE__VISIBLE:
				setVisible(VISIBLE_EDEFAULT);
				return;
			case NotationPackage.EDGE__TYPE:
				setType(TYPE_EDEFAULT);
				return;
			case NotationPackage.EDGE__MUTABLE:
				setMutable(MUTABLE_EDEFAULT);
				return;
			case NotationPackage.EDGE__SOURCE_EDGES:
				getSourceEdges().clear();
				return;
			case NotationPackage.EDGE__TARGET_EDGES:
				getTargetEdges().clear();
				return;
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				getPersistedChildren().clear();
				return;
			case NotationPackage.EDGE__STYLES:
				getStyles().clear();
				return;
			case NotationPackage.EDGE__ELEMENT:
				unsetElement();
				return;
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				getTransientChildren().clear();
				return;
			case NotationPackage.EDGE__SOURCE:
				setSource((View)null);
				return;
			case NotationPackage.EDGE__TARGET:
				setTarget((View)null);
				return;
			case NotationPackage.EDGE__BENDPOINTS:
				setBendpoints((Bendpoints)null);
				return;
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				setSourceAnchor((Anchor)null);
				return;
			case NotationPackage.EDGE__TARGET_ANCHOR:
				setTargetAnchor((Anchor)null);
				return;
		}
		eDynamicUnset(featureID);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public boolean eIsSet(int featureID) {
		switch (featureID) {
			case NotationPackage.EDGE__EANNOTATIONS:
				return eAnnotations != null && !eAnnotations.isEmpty();
			case NotationPackage.EDGE__VISIBLE:
				return ((eFlags & VISIBLE_EFLAG) != 0) != VISIBLE_EDEFAULT;
			case NotationPackage.EDGE__TYPE:
				return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
			case NotationPackage.EDGE__MUTABLE:
				return ((eFlags & MUTABLE_EFLAG) != 0) != MUTABLE_EDEFAULT;
			case NotationPackage.EDGE__SOURCE_EDGES:
				return sourceEdges != null && !sourceEdges.isEmpty();
			case NotationPackage.EDGE__TARGET_EDGES:
				return targetEdges != null && !targetEdges.isEmpty();
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				return persistedChildren != null && !persistedChildren.isEmpty();
			case NotationPackage.EDGE__STYLES:
				return styles != null && !styles.isEmpty();
			case NotationPackage.EDGE__ELEMENT:
				return isSetElement();
			case NotationPackage.EDGE__DIAGRAM:
				return basicGetDiagram() != null;
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				return transientChildren != null && !transientChildren.isEmpty();
			case NotationPackage.EDGE__SOURCE:
				return source != null;
			case NotationPackage.EDGE__TARGET:
				return target != null;
			case NotationPackage.EDGE__BENDPOINTS:
				return bendpoints != null;
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				return sourceAnchor != null;
			case NotationPackage.EDGE__TARGET_ANCHOR:
				return targetAnchor != null;
		}
		return eDynamicIsSet(featureID);
	}

} //EdgeImpl
@


1.6
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@a447 2
			case NotationPackage.EDGE__UUID:
				return getUUID();
a494 3
			case NotationPackage.EDGE__UUID:
				setUUID((byte[])newValue);
				return;
a555 3
			case NotationPackage.EDGE__UUID:
				setUUID(UUID_EDEFAULT);
				return;
a610 2
			case NotationPackage.EDGE__UUID:
				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
@


1.5
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@d448 2
d497 3
d561 3
d619 2
@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d51 2
a52 2
     * The cached value of the '{@@link #getSource() <em>Source</em>}' reference.
     * <!-- begin-user-doc -->
d54 5
a58 5
     * @@see #getSource()
     * @@generated
     * @@ordered
     */
	protected View source = null;
d60 3
a62 3
    /**
     * The cached value of the '{@@link #getTarget() <em>Target</em>}' reference.
     * <!-- begin-user-doc -->
d64 5
a68 5
     * @@see #getTarget()
     * @@generated
     * @@ordered
     */
	protected View target = null;
d70 3
a72 3
    /**
     * The cached value of the '{@@link #getBendpoints() <em>Bendpoints</em>}' containment reference.
     * <!-- begin-user-doc -->
d74 5
a78 5
     * @@see #getBendpoints()
     * @@generated
     * @@ordered
     */
	protected Bendpoints bendpoints = null;
d80 3
a82 3
    /**
     * The cached value of the '{@@link #getSourceAnchor() <em>Source Anchor</em>}' containment reference.
     * <!-- begin-user-doc -->
d84 5
a88 5
     * @@see #getSourceAnchor()
     * @@generated
     * @@ordered
     */
	protected Anchor sourceAnchor = null;
d90 3
a92 3
    /**
     * The cached value of the '{@@link #getTargetAnchor() <em>Target Anchor</em>}' containment reference.
     * <!-- begin-user-doc -->
d94 5
a98 5
     * @@see #getTargetAnchor()
     * @@generated
     * @@ordered
     */
	protected Anchor targetAnchor = null;
d101 1
a101 1
     * <!-- begin-user-doc -->
d103 2
a104 2
     * @@generated
     */
d106 2
a107 2
        super();
    }
d110 1
a110 1
     * <!-- begin-user-doc -->
d112 2
a113 2
     * @@generated
     */
d115 2
a116 2
        return NotationPackage.Literals.EDGE;
    }
d119 1
a119 1
     * <!-- begin-user-doc -->
d121 2
a122 2
     * @@generated
     */
d124 2
a125 2
        return source;
    }
d151 1
a151 1
     * <!-- begin-user-doc -->
d153 2
a154 2
     * @@generated
     */
d156 12
a167 12
        if (newSource != source) {
            NotificationChain msgs = null;
            if (source != null)
                msgs = ((InternalEObject)source).eInverseRemove(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
            if (newSource != null)
                msgs = ((InternalEObject)newSource).eInverseAdd(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
            msgs = basicSetSource(newSource, msgs);
            if (msgs != null) msgs.dispatch();
        }
        else if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE, newSource, newSource));
    }
d170 1
a170 1
     * <!-- begin-user-doc -->
d172 2
a173 2
     * @@generated
     */
d175 2
a176 2
        return target;
    }
d203 1
a203 1
     * <!-- begin-user-doc -->
d205 2
a206 2
     * @@generated
     */
d208 12
a219 12
        if (newTarget != target) {
            NotificationChain msgs = null;
            if (target != null)
                msgs = ((InternalEObject)target).eInverseRemove(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
            if (newTarget != null)
                msgs = ((InternalEObject)newTarget).eInverseAdd(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
            msgs = basicSetTarget(newTarget, msgs);
            if (msgs != null) msgs.dispatch();
        }
        else if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET, newTarget, newTarget));
    }
d222 1
a222 1
     * <!-- begin-user-doc -->
d224 2
a225 2
     * @@generated
     */
d227 2
a228 2
        return bendpoints;
    }
d231 1
a231 1
     * <!-- begin-user-doc -->
d233 2
a234 2
     * @@generated
     */
d236 8
a243 8
        Bendpoints oldBendpoints = bendpoints;
        bendpoints = newBendpoints;
        if (eNotificationRequired()) {
            ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__BENDPOINTS, oldBendpoints, newBendpoints);
            if (msgs == null) msgs = notification; else msgs.add(notification);
        }
        return msgs;
    }
d246 1
a246 1
     * <!-- begin-user-doc -->
d248 2
a249 2
     * @@generated
     */
d251 12
a262 12
        if (newBendpoints != bendpoints) {
            NotificationChain msgs = null;
            if (bendpoints != null)
                msgs = ((InternalEObject)bendpoints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__BENDPOINTS, null, msgs);
            if (newBendpoints != null)
                msgs = ((InternalEObject)newBendpoints).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__BENDPOINTS, null, msgs);
            msgs = basicSetBendpoints(newBendpoints, msgs);
            if (msgs != null) msgs.dispatch();
        }
        else if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__BENDPOINTS, newBendpoints, newBendpoints));
    }
d265 1
a265 1
     * <!-- begin-user-doc -->
d267 2
a268 2
     * @@generated
     */
d270 2
a271 2
        return sourceAnchor;
    }
d274 1
a274 1
     * <!-- begin-user-doc -->
d276 2
a277 2
     * @@generated
     */
d279 8
a286 8
        Anchor oldSourceAnchor = sourceAnchor;
        sourceAnchor = newSourceAnchor;
        if (eNotificationRequired()) {
            ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE_ANCHOR, oldSourceAnchor, newSourceAnchor);
            if (msgs == null) msgs = notification; else msgs.add(notification);
        }
        return msgs;
    }
d289 1
a289 1
     * <!-- begin-user-doc -->
d291 2
a292 2
     * @@generated
     */
d294 12
a305 12
        if (newSourceAnchor != sourceAnchor) {
            NotificationChain msgs = null;
            if (sourceAnchor != null)
                msgs = ((InternalEObject)sourceAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__SOURCE_ANCHOR, null, msgs);
            if (newSourceAnchor != null)
                msgs = ((InternalEObject)newSourceAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__SOURCE_ANCHOR, null, msgs);
            msgs = basicSetSourceAnchor(newSourceAnchor, msgs);
            if (msgs != null) msgs.dispatch();
        }
        else if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE_ANCHOR, newSourceAnchor, newSourceAnchor));
    }
d308 1
a308 1
     * <!-- begin-user-doc -->
d310 2
a311 2
     * @@generated
     */
d313 2
a314 2
        return targetAnchor;
    }
d317 1
a317 1
     * <!-- begin-user-doc -->
d319 2
a320 2
     * @@generated
     */
d322 8
a329 8
        Anchor oldTargetAnchor = targetAnchor;
        targetAnchor = newTargetAnchor;
        if (eNotificationRequired()) {
            ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET_ANCHOR, oldTargetAnchor, newTargetAnchor);
            if (msgs == null) msgs = notification; else msgs.add(notification);
        }
        return msgs;
    }
d332 1
a332 1
     * <!-- begin-user-doc -->
d334 2
a335 2
     * @@generated
     */
d337 12
a348 12
        if (newTargetAnchor != targetAnchor) {
            NotificationChain msgs = null;
            if (targetAnchor != null)
                msgs = ((InternalEObject)targetAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__TARGET_ANCHOR, null, msgs);
            if (newTargetAnchor != null)
                msgs = ((InternalEObject)newTargetAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__TARGET_ANCHOR, null, msgs);
            msgs = basicSetTargetAnchor(newTargetAnchor, msgs);
            if (msgs != null) msgs.dispatch();
        }
        else if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET_ANCHOR, newTargetAnchor, newTargetAnchor));
    }
d382 1
a382 1
     * <!-- begin-user-doc -->
d384 2
a385 2
     * @@generated
     */
d387 18
a404 18
        switch (featureID) {
            case NotationPackage.EDGE__EANNOTATIONS:
                return ((InternalEList)getEAnnotations()).basicAdd(otherEnd, msgs);
            case NotationPackage.EDGE__SOURCE_EDGES:
                return ((InternalEList)getSourceEdges()).basicAdd(otherEnd, msgs);
            case NotationPackage.EDGE__TARGET_EDGES:
                return ((InternalEList)getTargetEdges()).basicAdd(otherEnd, msgs);
            case NotationPackage.EDGE__SOURCE:
                if (source != null)
                    msgs = ((InternalEObject)source).eInverseRemove(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
                return basicSetSource((View)otherEnd, msgs);
            case NotationPackage.EDGE__TARGET:
                if (target != null)
                    msgs = ((InternalEObject)target).eInverseRemove(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
                return basicSetTarget((View)otherEnd, msgs);
        }
        return eDynamicInverseAdd(otherEnd, featureID, msgs);
    }
d407 1
a407 1
     * <!-- begin-user-doc -->
d409 2
a410 2
     * @@generated
     */
d412 26
a437 26
        switch (featureID) {
            case NotationPackage.EDGE__EANNOTATIONS:
                return ((InternalEList)getEAnnotations()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__SOURCE_EDGES:
                return ((InternalEList)getSourceEdges()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__TARGET_EDGES:
                return ((InternalEList)getTargetEdges()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                return ((InternalEList)getPersistedChildren()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__STYLES:
                return ((InternalEList)getStyles()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                return ((InternalEList)getTransientChildren()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__SOURCE:
                return basicSetSource(null, msgs);
            case NotationPackage.EDGE__TARGET:
                return basicSetTarget(null, msgs);
            case NotationPackage.EDGE__BENDPOINTS:
                return basicSetBendpoints(null, msgs);
            case NotationPackage.EDGE__SOURCE_ANCHOR:
                return basicSetSourceAnchor(null, msgs);
            case NotationPackage.EDGE__TARGET_ANCHOR:
                return basicSetTargetAnchor(null, msgs);
        }
        return eDynamicInverseRemove(otherEnd, featureID, msgs);
    }
d440 1
a440 1
     * <!-- begin-user-doc -->
d442 2
a443 2
     * @@generated
     */
d445 38
a482 38
        switch (featureID) {
            case NotationPackage.EDGE__EANNOTATIONS:
                return getEAnnotations();
            case NotationPackage.EDGE__VISIBLE:
                return isVisible() ? Boolean.TRUE : Boolean.FALSE;
            case NotationPackage.EDGE__TYPE:
                return getType();
            case NotationPackage.EDGE__MUTABLE:
                return isMutable() ? Boolean.TRUE : Boolean.FALSE;
            case NotationPackage.EDGE__SOURCE_EDGES:
                return getSourceEdges();
            case NotationPackage.EDGE__TARGET_EDGES:
                return getTargetEdges();
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                return getPersistedChildren();
            case NotationPackage.EDGE__STYLES:
                return getStyles();
            case NotationPackage.EDGE__ELEMENT:
                if (resolve) return getElement();
                return basicGetElement();
            case NotationPackage.EDGE__DIAGRAM:
                if (resolve) return getDiagram();
                return basicGetDiagram();
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                return getTransientChildren();
            case NotationPackage.EDGE__SOURCE:
                return getSource();
            case NotationPackage.EDGE__TARGET:
                return getTarget();
            case NotationPackage.EDGE__BENDPOINTS:
                return getBendpoints();
            case NotationPackage.EDGE__SOURCE_ANCHOR:
                return getSourceAnchor();
            case NotationPackage.EDGE__TARGET_ANCHOR:
                return getTargetAnchor();
        }
        return eDynamicGet(featureID, resolve, coreType);
    }
d485 1
a485 1
     * <!-- begin-user-doc -->
d487 2
a488 2
     * @@generated
     */
d490 55
a544 55
        switch (featureID) {
            case NotationPackage.EDGE__EANNOTATIONS:
                getEAnnotations().clear();
                getEAnnotations().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__VISIBLE:
                setVisible(((Boolean)newValue).booleanValue());
                return;
            case NotationPackage.EDGE__TYPE:
                setType((String)newValue);
                return;
            case NotationPackage.EDGE__MUTABLE:
                setMutable(((Boolean)newValue).booleanValue());
                return;
            case NotationPackage.EDGE__SOURCE_EDGES:
                getSourceEdges().clear();
                getSourceEdges().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__TARGET_EDGES:
                getTargetEdges().clear();
                getTargetEdges().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                getPersistedChildren().clear();
                getPersistedChildren().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__STYLES:
                getStyles().clear();
                getStyles().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__ELEMENT:
                setElement((EObject)newValue);
                return;
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                getTransientChildren().clear();
                getTransientChildren().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__SOURCE:
                setSource((View)newValue);
                return;
            case NotationPackage.EDGE__TARGET:
                setTarget((View)newValue);
                return;
            case NotationPackage.EDGE__BENDPOINTS:
                setBendpoints((Bendpoints)newValue);
                return;
            case NotationPackage.EDGE__SOURCE_ANCHOR:
                setSourceAnchor((Anchor)newValue);
                return;
            case NotationPackage.EDGE__TARGET_ANCHOR:
                setTargetAnchor((Anchor)newValue);
                return;
        }
        eDynamicSet(featureID, newValue);
    }
d547 1
a547 1
     * <!-- begin-user-doc -->
d549 2
a550 2
     * @@generated
     */
d552 49
a600 49
        switch (featureID) {
            case NotationPackage.EDGE__EANNOTATIONS:
                getEAnnotations().clear();
                return;
            case NotationPackage.EDGE__VISIBLE:
                setVisible(VISIBLE_EDEFAULT);
                return;
            case NotationPackage.EDGE__TYPE:
                setType(TYPE_EDEFAULT);
                return;
            case NotationPackage.EDGE__MUTABLE:
                setMutable(MUTABLE_EDEFAULT);
                return;
            case NotationPackage.EDGE__SOURCE_EDGES:
                getSourceEdges().clear();
                return;
            case NotationPackage.EDGE__TARGET_EDGES:
                getTargetEdges().clear();
                return;
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                getPersistedChildren().clear();
                return;
            case NotationPackage.EDGE__STYLES:
                getStyles().clear();
                return;
            case NotationPackage.EDGE__ELEMENT:
                unsetElement();
                return;
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                getTransientChildren().clear();
                return;
            case NotationPackage.EDGE__SOURCE:
                setSource((View)null);
                return;
            case NotationPackage.EDGE__TARGET:
                setTarget((View)null);
                return;
            case NotationPackage.EDGE__BENDPOINTS:
                setBendpoints((Bendpoints)null);
                return;
            case NotationPackage.EDGE__SOURCE_ANCHOR:
                setSourceAnchor((Anchor)null);
                return;
            case NotationPackage.EDGE__TARGET_ANCHOR:
                setTargetAnchor((Anchor)null);
                return;
        }
        eDynamicUnset(featureID);
    }
d603 1
a603 1
     * <!-- begin-user-doc -->
d605 2
a606 2
     * @@generated
     */
d608 36
a643 36
        switch (featureID) {
            case NotationPackage.EDGE__EANNOTATIONS:
                return eAnnotations != null && !eAnnotations.isEmpty();
            case NotationPackage.EDGE__VISIBLE:
                return ((eFlags & VISIBLE_EFLAG) != 0) != VISIBLE_EDEFAULT;
            case NotationPackage.EDGE__TYPE:
                return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
            case NotationPackage.EDGE__MUTABLE:
                return ((eFlags & MUTABLE_EFLAG) != 0) != MUTABLE_EDEFAULT;
            case NotationPackage.EDGE__SOURCE_EDGES:
                return sourceEdges != null && !sourceEdges.isEmpty();
            case NotationPackage.EDGE__TARGET_EDGES:
                return targetEdges != null && !targetEdges.isEmpty();
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                return persistedChildren != null && !persistedChildren.isEmpty();
            case NotationPackage.EDGE__STYLES:
                return styles != null && !styles.isEmpty();
            case NotationPackage.EDGE__ELEMENT:
                return isSetElement();
            case NotationPackage.EDGE__DIAGRAM:
                return basicGetDiagram() != null;
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                return transientChildren != null && !transientChildren.isEmpty();
            case NotationPackage.EDGE__SOURCE:
                return source != null;
            case NotationPackage.EDGE__TARGET:
                return target != null;
            case NotationPackage.EDGE__BENDPOINTS:
                return bendpoints != null;
            case NotationPackage.EDGE__SOURCE_ANCHOR:
                return sourceAnchor != null;
            case NotationPackage.EDGE__TARGET_ANCHOR:
                return targetAnchor != null;
        }
        return eDynamicIsSet(featureID);
    }
@


1.3
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d14 2
d19 1
d22 1
d130 1
a130 1
     * @@generated
d133 9
a149 1

d181 1
a181 1
     * @@generated
d184 9
d388 6
d403 1
a403 1
        return super.eInverseAdd(otherEnd, featureID, msgs);
d413 12
d436 1
a436 1
        return super.eInverseRemove(otherEnd, featureID, msgs);
d446 24
d481 1
a481 1
        return super.eGet(featureID, resolve, coreType);
d491 36
d543 1
a543 1
        super.eSet(featureID, newValue);
d553 30
d599 1
a599 1
        super.eUnset(featureID);
d609 22
d642 1
a642 1
        return super.eIsSet(featureID);
@


1.3.2.1
log
@[149051] gmf_R1_0_maintenance mmostafa 060707 Connecting a persistent Edge to a canonical Node does not make that Node persistent
@
text
@a16 1
import org.eclipse.emf.ecore.EObject;
d126 1
a126 1
     * @@generated Not
a128 9
        if (eContainingFeature() == NotationPackage.eINSTANCE.getDiagram_PersistedEdges()){
            if (newSource!=null && newSource.eContainingFeature() == NotationPackage.eINSTANCE.getView_TransientChildren()){
                EObject container = newSource.eContainer();
                if (container!=null && container instanceof View){
                    View parent = (View)container;
                    parent.persistChildren();
                }
            }
        }
d169 1
a169 1
     * @@generated Not
a171 9
        if (eContainingFeature() == NotationPackage.eINSTANCE.getDiagram_PersistedEdges()){
            if (newTarget!=null && newTarget.eContainingFeature() == NotationPackage.eINSTANCE.getView_TransientChildren()){
                EObject container = newTarget.eContainer();
                if (container!=null && container instanceof View){
                    View parent = (View)container;
                    parent.persistChildren();
                }
            }
        }
@


1.3.2.2
log
@[141061] gmf_r1_0_maintenance ylulu 060717 Performance: Notation metamodel can reduce its memory usage
@
text
@a13 2
import java.util.Collection;

a19 1
import org.eclipse.emf.ecore.util.InternalEList;
d127 1
a127 1
      * @@generated Not
d147 1
a385 6
            case NotationPackage.EDGE__EANNOTATIONS:
                return ((InternalEList)getEAnnotations()).basicAdd(otherEnd, msgs);
            case NotationPackage.EDGE__SOURCE_EDGES:
                return ((InternalEList)getSourceEdges()).basicAdd(otherEnd, msgs);
            case NotationPackage.EDGE__TARGET_EDGES:
                return ((InternalEList)getTargetEdges()).basicAdd(otherEnd, msgs);
d395 1
a395 1
        return eDynamicInverseAdd(otherEnd, featureID, msgs);
a404 12
            case NotationPackage.EDGE__EANNOTATIONS:
                return ((InternalEList)getEAnnotations()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__SOURCE_EDGES:
                return ((InternalEList)getSourceEdges()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__TARGET_EDGES:
                return ((InternalEList)getTargetEdges()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                return ((InternalEList)getPersistedChildren()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__STYLES:
                return ((InternalEList)getStyles()).basicRemove(otherEnd, msgs);
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                return ((InternalEList)getTransientChildren()).basicRemove(otherEnd, msgs);
d416 1
a416 1
        return eDynamicInverseRemove(otherEnd, featureID, msgs);
a425 24
            case NotationPackage.EDGE__EANNOTATIONS:
                return getEAnnotations();
            case NotationPackage.EDGE__VISIBLE:
                return isVisible() ? Boolean.TRUE : Boolean.FALSE;
            case NotationPackage.EDGE__TYPE:
                return getType();
            case NotationPackage.EDGE__MUTABLE:
                return isMutable() ? Boolean.TRUE : Boolean.FALSE;
            case NotationPackage.EDGE__SOURCE_EDGES:
                return getSourceEdges();
            case NotationPackage.EDGE__TARGET_EDGES:
                return getTargetEdges();
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                return getPersistedChildren();
            case NotationPackage.EDGE__STYLES:
                return getStyles();
            case NotationPackage.EDGE__ELEMENT:
                if (resolve) return getElement();
                return basicGetElement();
            case NotationPackage.EDGE__DIAGRAM:
                if (resolve) return getDiagram();
                return basicGetDiagram();
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                return getTransientChildren();
d437 1
a437 1
        return eDynamicGet(featureID, resolve, coreType);
a446 36
            case NotationPackage.EDGE__EANNOTATIONS:
                getEAnnotations().clear();
                getEAnnotations().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__VISIBLE:
                setVisible(((Boolean)newValue).booleanValue());
                return;
            case NotationPackage.EDGE__TYPE:
                setType((String)newValue);
                return;
            case NotationPackage.EDGE__MUTABLE:
                setMutable(((Boolean)newValue).booleanValue());
                return;
            case NotationPackage.EDGE__SOURCE_EDGES:
                getSourceEdges().clear();
                getSourceEdges().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__TARGET_EDGES:
                getTargetEdges().clear();
                getTargetEdges().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                getPersistedChildren().clear();
                getPersistedChildren().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__STYLES:
                getStyles().clear();
                getStyles().addAll((Collection)newValue);
                return;
            case NotationPackage.EDGE__ELEMENT:
                setElement((EObject)newValue);
                return;
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                getTransientChildren().clear();
                getTransientChildren().addAll((Collection)newValue);
                return;
d463 1
a463 1
        eDynamicSet(featureID, newValue);
a472 30
            case NotationPackage.EDGE__EANNOTATIONS:
                getEAnnotations().clear();
                return;
            case NotationPackage.EDGE__VISIBLE:
                setVisible(VISIBLE_EDEFAULT);
                return;
            case NotationPackage.EDGE__TYPE:
                setType(TYPE_EDEFAULT);
                return;
            case NotationPackage.EDGE__MUTABLE:
                setMutable(MUTABLE_EDEFAULT);
                return;
            case NotationPackage.EDGE__SOURCE_EDGES:
                getSourceEdges().clear();
                return;
            case NotationPackage.EDGE__TARGET_EDGES:
                getTargetEdges().clear();
                return;
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                getPersistedChildren().clear();
                return;
            case NotationPackage.EDGE__STYLES:
                getStyles().clear();
                return;
            case NotationPackage.EDGE__ELEMENT:
                unsetElement();
                return;
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                getTransientChildren().clear();
                return;
d489 1
a489 1
        eDynamicUnset(featureID);
a498 22
            case NotationPackage.EDGE__EANNOTATIONS:
                return eAnnotations != null && !eAnnotations.isEmpty();
            case NotationPackage.EDGE__VISIBLE:
                return ((eFlags & VISIBLE_EFLAG) != 0) != VISIBLE_EDEFAULT;
            case NotationPackage.EDGE__TYPE:
                return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
            case NotationPackage.EDGE__MUTABLE:
                return ((eFlags & MUTABLE_EFLAG) != 0) != MUTABLE_EDEFAULT;
            case NotationPackage.EDGE__SOURCE_EDGES:
                return sourceEdges != null && !sourceEdges.isEmpty();
            case NotationPackage.EDGE__TARGET_EDGES:
                return targetEdges != null && !targetEdges.isEmpty();
            case NotationPackage.EDGE__PERSISTED_CHILDREN:
                return persistedChildren != null && !persistedChildren.isEmpty();
            case NotationPackage.EDGE__STYLES:
                return styles != null && !styles.isEmpty();
            case NotationPackage.EDGE__ELEMENT:
                return isSetElement();
            case NotationPackage.EDGE__DIAGRAM:
                return basicGetDiagram() != null;
            case NotationPackage.EDGE__TRANSIENT_CHILDREN:
                return transientChildren != null && !transientChildren.isEmpty();
d510 1
a510 1
        return eDynamicIsSet(featureID);
@


1.3.2.3
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a13 2
import java.util.Collection;

a16 2
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
a18 2
import org.eclipse.emf.ecore.util.InternalEList;

d46 8
a53 8
	/**
	 * The cached value of the '{@@link #getSource() <em>Source</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSource()
	 * @@generated
	 * @@ordered
	 */
d56 8
a63 8
	/**
	 * The cached value of the '{@@link #getTarget() <em>Target</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTarget()
	 * @@generated
	 * @@ordered
	 */
d66 8
a73 8
	/**
	 * The cached value of the '{@@link #getBendpoints() <em>Bendpoints</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBendpoints()
	 * @@generated
	 * @@ordered
	 */
d76 8
a83 8
	/**
	 * The cached value of the '{@@link #getSourceAnchor() <em>Source Anchor</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceAnchor()
	 * @@generated
	 * @@ordered
	 */
d86 8
a93 8
	/**
	 * The cached value of the '{@@link #getTargetAnchor() <em>Target Anchor</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetAnchor()
	 * @@generated
	 * @@ordered
	 */
d96 2
a97 2
	/**
	 * <!-- begin-user-doc -->
d99 2
a100 2
	 * @@generated
	 */
d102 2
a103 2
		super();
	}
d105 2
a106 2
	/**
	 * <!-- begin-user-doc -->
d108 2
a109 2
	 * @@generated
	 */
d111 2
a112 2
		return NotationPackage.eINSTANCE.getEdge();
	}
d114 2
a115 2
	/**
	 * <!-- begin-user-doc -->
d117 2
a118 2
	 * @@generated
	 */
d120 2
a121 2
		return source;
	}
d123 2
a124 2
	/**
	 * <!-- begin-user-doc -->
d126 2
a127 2
	 * @@generated
	 */
d129 8
a136 8
		View oldSource = source;
		source = newSource;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE, oldSource, newSource);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}
d138 2
a139 2
	/**
	 * <!-- begin-user-doc -->
d141 2
a142 2
	 * @@generated
	 */
d144 12
a155 12
		if (newSource != source) {
			NotificationChain msgs = null;
			if (source != null)
				msgs = ((InternalEObject)source).eInverseRemove(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
			if (newSource != null)
				msgs = ((InternalEObject)newSource).eInverseAdd(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
			msgs = basicSetSource(newSource, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE, newSource, newSource));
	}
d157 2
a158 2
	/**
	 * <!-- begin-user-doc -->
d160 2
a161 2
	 * @@generated
	 */
d163 2
a164 2
		return target;
	}
d166 2
a167 2
	/**
	 * <!-- begin-user-doc -->
d169 2
a170 2
	 * @@generated
	 */
d172 8
a179 8
		View oldTarget = target;
		target = newTarget;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET, oldTarget, newTarget);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}
d181 2
a182 2
	/**
	 * <!-- begin-user-doc -->
d184 2
a185 2
	 * @@generated
	 */
d187 12
a198 12
		if (newTarget != target) {
			NotificationChain msgs = null;
			if (target != null)
				msgs = ((InternalEObject)target).eInverseRemove(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
			if (newTarget != null)
				msgs = ((InternalEObject)newTarget).eInverseAdd(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
			msgs = basicSetTarget(newTarget, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET, newTarget, newTarget));
	}
d200 2
a201 2
	/**
	 * <!-- begin-user-doc -->
d203 2
a204 2
	 * @@generated
	 */
d206 2
a207 2
		return bendpoints;
	}
d209 2
a210 2
	/**
	 * <!-- begin-user-doc -->
d212 2
a213 2
	 * @@generated
	 */
d215 8
a222 8
		Bendpoints oldBendpoints = bendpoints;
		bendpoints = newBendpoints;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__BENDPOINTS, oldBendpoints, newBendpoints);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}
d224 2
a225 2
	/**
	 * <!-- begin-user-doc -->
d227 2
a228 2
	 * @@generated
	 */
d230 12
a241 12
		if (newBendpoints != bendpoints) {
			NotificationChain msgs = null;
			if (bendpoints != null)
				msgs = ((InternalEObject)bendpoints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__BENDPOINTS, null, msgs);
			if (newBendpoints != null)
				msgs = ((InternalEObject)newBendpoints).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__BENDPOINTS, null, msgs);
			msgs = basicSetBendpoints(newBendpoints, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__BENDPOINTS, newBendpoints, newBendpoints));
	}
d243 2
a244 2
	/**
	 * <!-- begin-user-doc -->
d246 2
a247 2
	 * @@generated
	 */
d249 2
a250 2
		return sourceAnchor;
	}
d252 2
a253 2
	/**
	 * <!-- begin-user-doc -->
d255 2
a256 2
	 * @@generated
	 */
d258 8
a265 8
		Anchor oldSourceAnchor = sourceAnchor;
		sourceAnchor = newSourceAnchor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE_ANCHOR, oldSourceAnchor, newSourceAnchor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}
d267 2
a268 2
	/**
	 * <!-- begin-user-doc -->
d270 2
a271 2
	 * @@generated
	 */
d273 12
a284 12
		if (newSourceAnchor != sourceAnchor) {
			NotificationChain msgs = null;
			if (sourceAnchor != null)
				msgs = ((InternalEObject)sourceAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__SOURCE_ANCHOR, null, msgs);
			if (newSourceAnchor != null)
				msgs = ((InternalEObject)newSourceAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__SOURCE_ANCHOR, null, msgs);
			msgs = basicSetSourceAnchor(newSourceAnchor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__SOURCE_ANCHOR, newSourceAnchor, newSourceAnchor));
	}
d286 2
a287 2
	/**
	 * <!-- begin-user-doc -->
d289 2
a290 2
	 * @@generated
	 */
d292 2
a293 2
		return targetAnchor;
	}
d295 2
a296 2
	/**
	 * <!-- begin-user-doc -->
d298 2
a299 2
	 * @@generated
	 */
d301 8
a308 8
		Anchor oldTargetAnchor = targetAnchor;
		targetAnchor = newTargetAnchor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET_ANCHOR, oldTargetAnchor, newTargetAnchor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}
d310 2
a311 2
	/**
	 * <!-- begin-user-doc -->
d313 2
a314 2
	 * @@generated
	 */
d316 12
a327 12
		if (newTargetAnchor != targetAnchor) {
			NotificationChain msgs = null;
			if (targetAnchor != null)
				msgs = ((InternalEObject)targetAnchor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__TARGET_ANCHOR, null, msgs);
			if (newTargetAnchor != null)
				msgs = ((InternalEObject)newTargetAnchor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NotationPackage.EDGE__TARGET_ANCHOR, null, msgs);
			msgs = basicSetTargetAnchor(newTargetAnchor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.EDGE__TARGET_ANCHOR, newTargetAnchor, newTargetAnchor));
	}
d360 133
a492 273
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case NotationPackage.EDGE__EANNOTATIONS:
					return ((InternalEList)getEAnnotations()).basicAdd(otherEnd, msgs);
				case NotationPackage.EDGE__SOURCE_EDGES:
					return ((InternalEList)getSourceEdges()).basicAdd(otherEnd, msgs);
				case NotationPackage.EDGE__TARGET_EDGES:
					return ((InternalEList)getTargetEdges()).basicAdd(otherEnd, msgs);
				case NotationPackage.EDGE__SOURCE:
					if (source != null)
						msgs = ((InternalEObject)source).eInverseRemove(this, NotationPackage.VIEW__SOURCE_EDGES, View.class, msgs);
					return basicSetSource((View)otherEnd, msgs);
				case NotationPackage.EDGE__TARGET:
					if (target != null)
						msgs = ((InternalEObject)target).eInverseRemove(this, NotationPackage.VIEW__TARGET_EDGES, View.class, msgs);
					return basicSetTarget((View)otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
		}
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case NotationPackage.EDGE__EANNOTATIONS:
					return ((InternalEList)getEAnnotations()).basicRemove(otherEnd, msgs);
				case NotationPackage.EDGE__SOURCE_EDGES:
					return ((InternalEList)getSourceEdges()).basicRemove(otherEnd, msgs);
				case NotationPackage.EDGE__TARGET_EDGES:
					return ((InternalEList)getTargetEdges()).basicRemove(otherEnd, msgs);
				case NotationPackage.EDGE__PERSISTED_CHILDREN:
					return ((InternalEList)getPersistedChildren()).basicRemove(otherEnd, msgs);
				case NotationPackage.EDGE__STYLES:
					return ((InternalEList)getStyles()).basicRemove(otherEnd, msgs);
				case NotationPackage.EDGE__TRANSIENT_CHILDREN:
					return ((InternalEList)getTransientChildren()).basicRemove(otherEnd, msgs);
				case NotationPackage.EDGE__SOURCE:
					return basicSetSource(null, msgs);
				case NotationPackage.EDGE__TARGET:
					return basicSetTarget(null, msgs);
				case NotationPackage.EDGE__BENDPOINTS:
					return basicSetBendpoints(null, msgs);
				case NotationPackage.EDGE__SOURCE_ANCHOR:
					return basicSetSourceAnchor(null, msgs);
				case NotationPackage.EDGE__TARGET_ANCHOR:
					return basicSetTargetAnchor(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
		}
		return eBasicSetContainer(null, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.EDGE__EANNOTATIONS:
				return getEAnnotations();
			case NotationPackage.EDGE__VISIBLE:
				return isVisible() ? Boolean.TRUE : Boolean.FALSE;
			case NotationPackage.EDGE__TYPE:
				return getType();
			case NotationPackage.EDGE__MUTABLE:
				return isMutable() ? Boolean.TRUE : Boolean.FALSE;
			case NotationPackage.EDGE__SOURCE_EDGES:
				return getSourceEdges();
			case NotationPackage.EDGE__TARGET_EDGES:
				return getTargetEdges();
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				return getPersistedChildren();
			case NotationPackage.EDGE__STYLES:
				return getStyles();
			case NotationPackage.EDGE__ELEMENT:
				if (resolve) return getElement();
				return basicGetElement();
			case NotationPackage.EDGE__DIAGRAM:
				if (resolve) return getDiagram();
				return basicGetDiagram();
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				return getTransientChildren();
			case NotationPackage.EDGE__SOURCE:
				return getSource();
			case NotationPackage.EDGE__TARGET:
				return getTarget();
			case NotationPackage.EDGE__BENDPOINTS:
				return getBendpoints();
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				return getSourceAnchor();
			case NotationPackage.EDGE__TARGET_ANCHOR:
				return getTargetAnchor();
		}
		return eDynamicGet(eFeature, resolve);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.EDGE__EANNOTATIONS:
				getEAnnotations().clear();
				getEAnnotations().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__VISIBLE:
				setVisible(((Boolean)newValue).booleanValue());
				return;
			case NotationPackage.EDGE__TYPE:
				setType((String)newValue);
				return;
			case NotationPackage.EDGE__MUTABLE:
				setMutable(((Boolean)newValue).booleanValue());
				return;
			case NotationPackage.EDGE__SOURCE_EDGES:
				getSourceEdges().clear();
				getSourceEdges().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__TARGET_EDGES:
				getTargetEdges().clear();
				getTargetEdges().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				getPersistedChildren().clear();
				getPersistedChildren().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__STYLES:
				getStyles().clear();
				getStyles().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__ELEMENT:
				setElement((EObject)newValue);
				return;
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				getTransientChildren().clear();
				getTransientChildren().addAll((Collection)newValue);
				return;
			case NotationPackage.EDGE__SOURCE:
				setSource((View)newValue);
				return;
			case NotationPackage.EDGE__TARGET:
				setTarget((View)newValue);
				return;
			case NotationPackage.EDGE__BENDPOINTS:
				setBendpoints((Bendpoints)newValue);
				return;
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				setSourceAnchor((Anchor)newValue);
				return;
			case NotationPackage.EDGE__TARGET_ANCHOR:
				setTargetAnchor((Anchor)newValue);
				return;
		}
		eDynamicSet(eFeature, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.EDGE__EANNOTATIONS:
				getEAnnotations().clear();
				return;
			case NotationPackage.EDGE__VISIBLE:
				setVisible(VISIBLE_EDEFAULT);
				return;
			case NotationPackage.EDGE__TYPE:
				setType(TYPE_EDEFAULT);
				return;
			case NotationPackage.EDGE__MUTABLE:
				setMutable(MUTABLE_EDEFAULT);
				return;
			case NotationPackage.EDGE__SOURCE_EDGES:
				getSourceEdges().clear();
				return;
			case NotationPackage.EDGE__TARGET_EDGES:
				getTargetEdges().clear();
				return;
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				getPersistedChildren().clear();
				return;
			case NotationPackage.EDGE__STYLES:
				getStyles().clear();
				return;
			case NotationPackage.EDGE__ELEMENT:
				unsetElement();
				return;
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				getTransientChildren().clear();
				return;
			case NotationPackage.EDGE__SOURCE:
				setSource((View)null);
				return;
			case NotationPackage.EDGE__TARGET:
				setTarget((View)null);
				return;
			case NotationPackage.EDGE__BENDPOINTS:
				setBendpoints((Bendpoints)null);
				return;
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				setSourceAnchor((Anchor)null);
				return;
			case NotationPackage.EDGE__TARGET_ANCHOR:
				setTargetAnchor((Anchor)null);
				return;
		}
		eDynamicUnset(eFeature);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.EDGE__EANNOTATIONS:
				return eAnnotations != null && !eAnnotations.isEmpty();
			case NotationPackage.EDGE__VISIBLE:
				return ((eFlags & VISIBLE_EFLAG) != 0) != VISIBLE_EDEFAULT;
			case NotationPackage.EDGE__TYPE:
				return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
			case NotationPackage.EDGE__MUTABLE:
				return ((eFlags & MUTABLE_EFLAG) != 0) != MUTABLE_EDEFAULT;
			case NotationPackage.EDGE__SOURCE_EDGES:
				return sourceEdges != null && !sourceEdges.isEmpty();
			case NotationPackage.EDGE__TARGET_EDGES:
				return targetEdges != null && !targetEdges.isEmpty();
			case NotationPackage.EDGE__PERSISTED_CHILDREN:
				return persistedChildren != null && !persistedChildren.isEmpty();
			case NotationPackage.EDGE__STYLES:
				return styles != null && !styles.isEmpty();
			case NotationPackage.EDGE__ELEMENT:
				return isSetElement();
			case NotationPackage.EDGE__DIAGRAM:
				return basicGetDiagram() != null;
			case NotationPackage.EDGE__TRANSIENT_CHILDREN:
				return transientChildren != null && !transientChildren.isEmpty();
			case NotationPackage.EDGE__SOURCE:
				return source != null;
			case NotationPackage.EDGE__TARGET:
				return target != null;
			case NotationPackage.EDGE__BENDPOINTS:
				return bendpoints != null;
			case NotationPackage.EDGE__SOURCE_ANCHOR:
				return sourceAnchor != null;
			case NotationPackage.EDGE__TARGET_ANCHOR:
				return targetAnchor != null;
		}
		return eDynamicIsSet(eFeature);
	}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

