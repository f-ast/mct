head	1.7;
access;
symbols
	v20081020-0700:1.7
	v20080722-1827:1.7
	v20080716-1600:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080503-1740:1.6
	v20080425-1959:1.5
	v20080407-2250:1.5
	v20080407-1545:1.5
	v20080331-1625:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080114-2222:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070518-1300:1.5
	v20070403-1500:1.4
	v20070330-1300:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.3.2.2
	M1_20:1.3
	v20060728-0500:1.3.2.1
	v20060721-1130:1.3.2.1
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060531-1730:1.3
	v20060519-0800:1.3
	I20060505-1400:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.00.14.41;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	3e924820f4604567;

1.6
date	2008.05.03.18.33.02;	author ahunter;	state Exp;
branches;
next	1.5;
commitid	1c13481cafcc4567;

1.5
date	2007.05.17.16.26.49;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	71d9464c82444567;

1.4
date	2006.10.03.15.07.26;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.07.15.22.13;	author mmostafa;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.09.12.21.29.43;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.18.19.26;	author sshaw;	state Exp;
branches;
next	;

1.3.2.1
date	2006.07.17.20.27.55;	author ahunter;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2006.09.13.16.48.16;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[230078] gmf-head ahunter 080506 Notational Metamodel performance improvements
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.runtime.notation.NotationPackage;
import org.eclipse.gmf.runtime.notation.Size;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Size</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.SizeImpl#getWidth <em>Width</em>}</li>
 *   <li>{@@link org.eclipse.gmf.runtime.notation.impl.SizeImpl#getHeight <em>Height</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
/*
 * @@canBeSeenBy %partners
 */
public class SizeImpl extends NotationEObjectImpl implements Size {
    /**
	 * The default value of the '{@@link #getWidth() <em>Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWidth()
	 * @@generated
	 * @@ordered
	 */
	protected static final int WIDTH_EDEFAULT = -1;

    /**
	 * The cached value of the '{@@link #getWidth() <em>Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWidth()
	 * @@generated
	 * @@ordered
	 */
	protected int width = WIDTH_EDEFAULT;

    /**
	 * The default value of the '{@@link #getHeight() <em>Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getHeight()
	 * @@generated
	 * @@ordered
	 */
	protected static final int HEIGHT_EDEFAULT = -1;

    /**
	 * The cached value of the '{@@link #getHeight() <em>Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getHeight()
	 * @@generated
	 * @@ordered
	 */
	protected int height = HEIGHT_EDEFAULT;

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected SizeImpl() {
		super();
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return NotationPackage.Literals.SIZE;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getWidth() {
		return width;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setWidth(int newWidth) {
		int oldWidth = width;
		width = newWidth;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.SIZE__WIDTH, oldWidth, width));
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getHeight() {
		return height;
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setHeight(int newHeight) {
		int oldHeight = height;
		height = newHeight;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.SIZE__HEIGHT, oldHeight, height));
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case NotationPackage.SIZE__WIDTH:
				return new Integer(getWidth());
			case NotationPackage.SIZE__HEIGHT:
				return new Integer(getHeight());
		}
		return eDynamicGet(featureID, resolve, coreType);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case NotationPackage.SIZE__WIDTH:
				setWidth(((Integer)newValue).intValue());
				return;
			case NotationPackage.SIZE__HEIGHT:
				setHeight(((Integer)newValue).intValue());
				return;
		}
		eDynamicSet(featureID, newValue);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public void eUnset(int featureID) {
		switch (featureID) {
			case NotationPackage.SIZE__WIDTH:
				setWidth(WIDTH_EDEFAULT);
				return;
			case NotationPackage.SIZE__HEIGHT:
				setHeight(HEIGHT_EDEFAULT);
				return;
		}
		eDynamicUnset(featureID);
	}

    /**
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @@generated
	 */
    public boolean eIsSet(int featureID) {
		switch (featureID) {
			case NotationPackage.SIZE__WIDTH:
				return width != WIDTH_EDEFAULT;
			case NotationPackage.SIZE__HEIGHT:
				return height != HEIGHT_EDEFAULT;
		}
		return eDynamicIsSet(featureID);
	}

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (width: "); //$NON-NLS-1$
		result.append(width);
		result.append(", height: "); //$NON-NLS-1$
		result.append(height);
		result.append(')');
		return result.toString();
	}

} //SizeImpl
@


1.6
log
@[230078] gmf-head ahunter 080503 Notational Metamodel performance improvements
@
text
@d37 1
a37 1
public class SizeImpl extends NotationObjectImpl implements Size {
a144 2
			case NotationPackage.SIZE__UUID:
				return getUUID();
a159 3
			case NotationPackage.SIZE__UUID:
				setUUID((byte[])newValue);
				return;
a176 3
			case NotationPackage.SIZE__UUID:
				setUUID(UUID_EDEFAULT);
				return;
a193 2
			case NotationPackage.SIZE__UUID:
				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
@


1.5
log
@gmf_head aboyko 070517 New styles for Notational Meta-Model + example of usage of a map style in Logic example + new junit
@
text
@a16 1
import org.eclipse.emf.ecore.impl.FlatEObjectImpl;
d37 1
a37 1
public class SizeImpl extends FlatEObjectImpl implements Size {
d145 2
d162 3
d182 3
d202 2
@


1.4
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d40 2
a41 2
     * The default value of the '{@@link #getWidth() <em>Width</em>}' attribute.
     * <!-- begin-user-doc -->
d43 4
a46 4
     * @@see #getWidth()
     * @@generated
     * @@ordered
     */
d50 2
a51 2
     * The cached value of the '{@@link #getWidth() <em>Width</em>}' attribute.
     * <!-- begin-user-doc -->
d53 4
a56 4
     * @@see #getWidth()
     * @@generated
     * @@ordered
     */
d60 2
a61 2
     * The default value of the '{@@link #getHeight() <em>Height</em>}' attribute.
     * <!-- begin-user-doc -->
d63 4
a66 4
     * @@see #getHeight()
     * @@generated
     * @@ordered
     */
d70 2
a71 2
     * The cached value of the '{@@link #getHeight() <em>Height</em>}' attribute.
     * <!-- begin-user-doc -->
d73 4
a76 4
     * @@see #getHeight()
     * @@generated
     * @@ordered
     */
d80 1
a80 1
     * <!-- begin-user-doc -->
d82 2
a83 2
     * @@generated
     */
d85 2
a86 2
        super();
    }
d89 1
a89 1
     * <!-- begin-user-doc -->
d91 2
a92 2
     * @@generated
     */
d94 2
a95 2
        return NotationPackage.Literals.SIZE;
    }
d98 1
a98 1
     * <!-- begin-user-doc -->
d100 2
a101 2
     * @@generated
     */
d103 2
a104 2
        return width;
    }
d107 1
a107 1
     * <!-- begin-user-doc -->
d109 2
a110 2
     * @@generated
     */
d112 5
a116 5
        int oldWidth = width;
        width = newWidth;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.SIZE__WIDTH, oldWidth, width));
    }
d119 1
a119 1
     * <!-- begin-user-doc -->
d121 2
a122 2
     * @@generated
     */
d124 2
a125 2
        return height;
    }
d128 1
a128 1
     * <!-- begin-user-doc -->
d130 2
a131 2
     * @@generated
     */
d133 5
a137 5
        int oldHeight = height;
        height = newHeight;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.SIZE__HEIGHT, oldHeight, height));
    }
d140 1
a140 1
     * <!-- begin-user-doc -->
d142 2
a143 2
     * @@generated
     */
d145 8
a152 8
        switch (featureID) {
            case NotationPackage.SIZE__WIDTH:
                return new Integer(getWidth());
            case NotationPackage.SIZE__HEIGHT:
                return new Integer(getHeight());
        }
        return eDynamicGet(featureID, resolve, coreType);
    }
d155 1
a155 1
     * <!-- begin-user-doc -->
d157 2
a158 2
     * @@generated
     */
d160 10
a169 10
        switch (featureID) {
            case NotationPackage.SIZE__WIDTH:
                setWidth(((Integer)newValue).intValue());
                return;
            case NotationPackage.SIZE__HEIGHT:
                setHeight(((Integer)newValue).intValue());
                return;
        }
        eDynamicSet(featureID, newValue);
    }
d172 1
a172 1
     * <!-- begin-user-doc -->
d174 2
a175 2
     * @@generated
     */
d177 10
a186 10
        switch (featureID) {
            case NotationPackage.SIZE__WIDTH:
                setWidth(WIDTH_EDEFAULT);
                return;
            case NotationPackage.SIZE__HEIGHT:
                setHeight(HEIGHT_EDEFAULT);
                return;
        }
        eDynamicUnset(featureID);
    }
d189 1
a189 1
     * <!-- begin-user-doc -->
d191 2
a192 2
     * @@generated
     */
d194 8
a201 8
        switch (featureID) {
            case NotationPackage.SIZE__WIDTH:
                return width != WIDTH_EDEFAULT;
            case NotationPackage.SIZE__HEIGHT:
                return height != HEIGHT_EDEFAULT;
        }
        return eDynamicIsSet(featureID);
    }
d204 1
a204 1
     * <!-- begin-user-doc -->
d206 2
a207 2
     * @@generated
     */
d209 1
a209 1
        if (eIsProxy()) return super.toString();
d211 8
a218 8
        StringBuffer result = new StringBuffer(super.toString());
        result.append(" (width: "); //$NON-NLS-1$
        result.append(width);
        result.append(", height: "); //$NON-NLS-1$
        result.append(height);
        result.append(')');
        return result.toString();
    }
@


1.3
log
@bugzilla 110718 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
d17 1
a17 1
import org.eclipse.emf.ecore.impl.EObjectImpl;
d38 1
a38 1
public class SizeImpl extends EObjectImpl implements Size {
d151 1
a151 1
        return super.eGet(featureID, resolve, coreType);
d168 1
a168 1
        super.eSet(featureID, newValue);
d185 1
a185 1
        super.eUnset(featureID);
d200 1
a200 1
        return super.eIsSet(featureID);
@


1.3.2.1
log
@[141061] gmf_r1_0_maintenance ylulu 060717 Performance: Notation metamodel can reduce its memory usage
@
text
@d17 1
a17 1
import org.eclipse.emf.ecore.impl.FlatEObjectImpl;
d38 1
a38 1
public class SizeImpl extends FlatEObjectImpl implements Size {
d151 1
a151 1
        return eDynamicGet(featureID, resolve, coreType);
d168 1
a168 1
        eDynamicSet(featureID, newValue);
d185 1
a185 1
        eDynamicUnset(featureID);
d200 1
a200 1
        return eDynamicIsSet(featureID);
@


1.3.2.2
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a15 1
import org.eclipse.emf.ecore.EStructuralFeature;
a17 1

d39 8
a46 8
	/**
	 * The default value of the '{@@link #getWidth() <em>Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWidth()
	 * @@generated
	 * @@ordered
	 */
d49 8
a56 8
	/**
	 * The cached value of the '{@@link #getWidth() <em>Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getWidth()
	 * @@generated
	 * @@ordered
	 */
d59 8
a66 8
	/**
	 * The default value of the '{@@link #getHeight() <em>Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getHeight()
	 * @@generated
	 * @@ordered
	 */
d69 8
a76 8
	/**
	 * The cached value of the '{@@link #getHeight() <em>Height</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getHeight()
	 * @@generated
	 * @@ordered
	 */
d79 2
a80 2
	/**
	 * <!-- begin-user-doc -->
d82 2
a83 2
	 * @@generated
	 */
d85 2
a86 2
		super();
	}
d88 2
a89 2
	/**
	 * <!-- begin-user-doc -->
d91 2
a92 2
	 * @@generated
	 */
d94 2
a95 2
		return NotationPackage.eINSTANCE.getSize();
	}
d97 2
a98 2
	/**
	 * <!-- begin-user-doc -->
d100 2
a101 2
	 * @@generated
	 */
d103 2
a104 2
		return width;
	}
d106 2
a107 2
	/**
	 * <!-- begin-user-doc -->
d109 2
a110 2
	 * @@generated
	 */
d112 5
a116 5
		int oldWidth = width;
		width = newWidth;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.SIZE__WIDTH, oldWidth, width));
	}
d118 2
a119 2
	/**
	 * <!-- begin-user-doc -->
d121 2
a122 2
	 * @@generated
	 */
d124 2
a125 2
		return height;
	}
d127 2
a128 2
	/**
	 * <!-- begin-user-doc -->
d130 2
a131 2
	 * @@generated
	 */
d133 69
a201 69
		int oldHeight = height;
		height = newHeight;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.SIZE__HEIGHT, oldHeight, height));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.SIZE__WIDTH:
				return new Integer(getWidth());
			case NotationPackage.SIZE__HEIGHT:
				return new Integer(getHeight());
		}
		return eDynamicGet(eFeature, resolve);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.SIZE__WIDTH:
				setWidth(((Integer)newValue).intValue());
				return;
			case NotationPackage.SIZE__HEIGHT:
				setHeight(((Integer)newValue).intValue());
				return;
		}
		eDynamicSet(eFeature, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.SIZE__WIDTH:
				setWidth(WIDTH_EDEFAULT);
				return;
			case NotationPackage.SIZE__HEIGHT:
				setHeight(HEIGHT_EDEFAULT);
				return;
		}
		eDynamicUnset(eFeature);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case NotationPackage.SIZE__WIDTH:
				return width != WIDTH_EDEFAULT;
			case NotationPackage.SIZE__HEIGHT:
				return height != HEIGHT_EDEFAULT;
		}
		return eDynamicIsSet(eFeature);
	}
d203 2
a204 2
	/**
	 * <!-- begin-user-doc -->
d206 2
a207 2
	 * @@generated
	 */
d209 1
a209 1
		if (eIsProxy()) return super.toString();
d211 8
a218 8
		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (width: "); //$NON-NLS-1$
		result.append(width);
		result.append(", height: "); //$NON-NLS-1$
		result.append(height);
		result.append(')');
		return result.toString();
	}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

