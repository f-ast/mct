head	1.3;
access;
symbols
	v20081020-0700:1.3
	v20080903-1520:1.3
	v20080903-1510:1.3
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.2
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080603-1553:1.3
	v20080527-1255:1.3
	v20080507-2230:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20071003-0000:1.2
	v20070928-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070614-1400:1.2
	v20070608-1300:1.2
	v20070601-1400:1.2
	v20070504-1000:1.2
	v20070330-1300:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070105-1200:1.2
	M4_20:1.2
	v20061218-1500:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	v20060907-1100:1.2
	M1_20:1.2
	v20060803-1200:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	I20060505-1400:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.1
	I20060210-1715:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.05.23.03.17.37;	author aboyko;	state Exp;
branches;
next	1.2;
commitid	49a6483637514567;

1.2
date	2006.02.23.20.30.25;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.10.15.42.04;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[233585] gmf_head aboyko 080522 [ImageSupport] Diagram Image Export API additions to enable BIRT integration
@
text
@/******************************************************************************
 * Copyright (c) 2006, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;

import org.apache.batik.dom.svg.SAXSVGDocumentFactory;
import org.apache.batik.util.XMLResourceDescriptor;
import org.eclipse.gmf.runtime.draw2d.ui.render.RenderedImage;
import org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.metafile.EMFTranscoder;
import org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.metafile.WMFTranscoder;
import org.eclipse.gmf.runtime.draw2d.ui.render.factory.RenderedImageType;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.factory.RenderedImageKey;


public class SVGImageType
	implements RenderedImageType {

	public RenderedImage autoDetect(byte[] buffer, RenderedImageKey key) {
		RenderedImage image = null;

		if (isSVG(buffer))
			image = new SVGImage(buffer, key);
		else {
			// not a recognizable image format so assume it's an EMF file
			try {
				WMFTranscoder imageTransformer = new WMFTranscoder();
				ByteArrayInputStream input = new ByteArrayInputStream(buffer);
				ByteArrayOutputStream output = new ByteArrayOutputStream();
				imageTransformer.transcode(input, output, key.getURLString());
				image = new SVGImage(output.toByteArray(), key);
			} catch (Exception e2) {
				try {
					EMFTranscoder imageTransformer = new EMFTranscoder();
					ByteArrayInputStream input = new ByteArrayInputStream(
						buffer);
					ByteArrayOutputStream output = new ByteArrayOutputStream();
					imageTransformer.transcode(input, output, key.getURLString());
					image = new SVGImage(output.toByteArray(), key);
				} catch (Exception e3) {
					return null;
				}
			}
		}
		
		return image;
	}
	
	private static boolean isSVG(byte[] buffer) {
		ByteArrayInputStream bIS = new ByteArrayInputStream(buffer);
		String parserName = XMLResourceDescriptor.getXMLParserClassName();
		SAXSVGDocumentFactory svgFactory = new SAXSVGDocumentFactory(parserName);
		
		try {
			svgFactory.createDocument(null,bIS);
		} catch (Exception e) {
			return false;
		}
        
		return true;
	}

}
@


1.2
log
@bugzilla 129172 gmf-head sshaw 060223 RenderedImageFactory logging exception when rendering non-SVG image data
@
text
@d2 1
a2 1
 * Copyright (c) 2006 IBM Corporation and others.
d40 1
a40 1
				imageTransformer.transcode(input, output);
d48 1
a48 1
					imageTransformer.transcode(input, output);
@


1.1
log
@bugzilla 119319 gmf-head sshaw 060210 Support extensibility for RenderedImageFactory
@
text
@a15 1
import java.io.IOException;
a18 2
import org.eclipse.core.runtime.IStatus;
import org.eclipse.gmf.runtime.common.core.util.Log;
a22 1
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.Draw2dRenderPlugin;
d66 2
a67 3
			return true;
		} catch (IOException e) {
			Log.error(Draw2dRenderPlugin.getInstance(), IStatus.ERROR, e.getMessage(), e);
d69 2
a70 1
		return false;
@

