head	1.6;
access;
symbols
	v20081020-0700:1.6
	v20080903-1520:1.6
	v20080903-1510:1.6
	v20080722-1827:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080603-1553:1.6
	v20080527-1255:1.6
	v20080507-2230:1.5
	v20080425-1959:1.5
	v20080328-1605:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070504-1000:1.4
	v20070330-1300:1.4
	v20070221-1500:1.4
	v20070208-1800:1.3
	v20070105-1200:1.1.2.2
	M4_20:1.3
	v20061218-1500:1.1.2.2
	v20061214-0000:1.3
	M3_20:1.2
	v20061013-1330:1.2
	v20060919-0800:1.1.2.2
	v20060907-1100:1.1
	M1_20:1.1
	v20060803-1200:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	I20060505-1400:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1;
locks; strict;
comment	@# @;


1.6
date	2008.05.23.03.17.38;	author aboyko;	state Exp;
branches;
next	1.5;
commitid	49a6483637514567;

1.5
date	2007.06.11.17.45.17;	author aboyko;	state Exp;
branches;
next	1.4;
commitid	5a00466d8a2d4567;

1.4
date	2007.02.09.20.53.15;	author crevells;	state Exp;
branches;
next	1.3;
commitid	6cf945ccdf3b4567;

1.3
date	2006.12.06.14.39.56;	author crevells;	state Exp;
branches;
next	1.2;
commitid	2cda4576d63c4567;

1.2
date	2006.10.03.15.05.27;	author ahunter;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.10.15.42.04;	author sshaw;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.09.13.16.09.55;	author sshaw;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.09.13.16.44.42;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.6
log
@[233585] gmf_head aboyko 080522 [ImageSupport] Diagram Image Export API additions to enable BIRT integration
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/


package org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;

import org.apache.batik.dom.svg.SAXSVGDocumentFactory;
import org.apache.batik.util.XMLResourceDescriptor;
import org.eclipse.gmf.runtime.common.core.util.Log;
import org.eclipse.gmf.runtime.common.core.util.Trace;
import org.eclipse.gmf.runtime.draw2d.ui.graphics.GCUtilities;
import org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.Draw2dRenderPlugin;
import org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.image.ImageConverter;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.AbstractRenderedImage;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.Draw2dRenderDebugOptions;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.Draw2dRenderStatusCodes;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.factory.RenderedImageKey;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Display;
import org.w3c.dom.Document;

/**
 * Class that represents a SVG image. This is a useful abstraction so that it
 * can be used similar to an SWT Image object.
 *  
 * @@author sshaw
 */
public final class SVGImage extends AbstractRenderedImage {

	/**
	 * Constructor for SVGImage
	 * 
	 * @@param buffer
	 *            byte[] array containing an cached SVG image file.
	 * @@param key
	 *            ImageKey instance which is unique for the byte array.
	 */
	public SVGImage(byte[] buff, RenderedImageKey key) { 
		super(buff, key);
		
		if (key.getExtraData() == null)
			key.setExtraData(getDocument());
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.AbstractRenderedImage#renderImage()
	 */
	protected Image renderImage() {
		// otherwise render the image.
		try {
			if (GCUtilities.supportsAdvancedGraphics()) {
				SVGImageConverter converter = new SVGImageConverter();
				return converter.renderSVGtoSWTImage(getDocument(), getRenderInfo());
			}
			else {
				SVGImageConverter converter = new SVGImageConverter();
				BufferedImage img = converter.renderSVGToAWTImage(getDocument(), getRenderInfo());
				return ImageConverter.convert(img);
			}
		} catch (Exception e) {
			try {
				// try rendering to awt since the SWT renderered may not support the SVG image capabilities
				SVGImageConverter converter = new SVGImageConverter();
				BufferedImage img = converter.renderSVGToAWTImage(getDocument(), getRenderInfo());
				return ImageConverter.convert(img);
			} catch (Exception e1) {
				Trace.catching(Draw2dRenderPlugin.getInstance(), Draw2dRenderDebugOptions.EXCEPTIONS_THROWING, getClass(), "getSWTImage()", //$NON-NLS-1$
					e1);

				// handle failure gracefully - we can't predict all the failures
				// that
				// may occur in the 3rd party library.
				return new Image(Display.getDefault(), 8, 8);
			}
		}
	}

	/**
	 * getDocument
	 * Accessor for retrieving the SVG document for this Image
	 * 
	 * @@return SVG Document that represents the image
	 */
	public Document getDocument() {

		Document document = null;
		
		// IF the document has already been created...
		if (getKey().getExtraData() != null) {
			// Return it
			return (Document)getKey().getExtraData();
		}

		// Otherwise Parse the buffer can create the document
		String parser = XMLResourceDescriptor.getXMLParserClassName();
		SAXSVGDocumentFactory f = new SAXSVGDocumentFactory(parser);
		InputStream in = new ByteArrayInputStream(getBuffer());

		try {
			document =
				f.createDocument(getKey().getURLString(), in);

		} catch (IOException e) {
			// Log the exception to the Error Log
			Log.error(
				Draw2dRenderPlugin.getInstance(),
				Draw2dRenderStatusCodes.SVG_GENERATION_FAILURE,
				e.getMessage());
		}

		return document;
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.core.runtime.IAdaptable#getAdapter(java.lang.Class)
	 */
	public Object getAdapter(Class adapter) {
		if (adapter.equals(BufferedImage.class)) {
			BufferedImage buffImg = null;
			
			// otherwise render the image.
			try {
				SVGImageConverter converter = new SVGImageConverter();
				buffImg = converter.renderSVGToAWTImage(getDocument(), getRenderInfo());
			} catch (Exception e) {
				Trace.catching(Draw2dRenderPlugin.getInstance(), Draw2dRenderDebugOptions.EXCEPTIONS_THROWING, getClass(), "getSWTImage()", //$NON-NLS-1$
				e);

				// handle failure gracefully - we can't predict all the failures
				// that
				// may occur in the 3rd party library.
				buffImg = new BufferedImage(8, 8, BufferedImage.TYPE_INT_ARGB);
			}

			return buffImg;
		}
		
		return super.getAdapter(adapter);
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderedImage#getBufferedImage()
	 */
	public BufferedImage getBufferedImage() {
		return (BufferedImage)getAdapter(BufferedImage.class);
	}
}
@


1.5
log
@[191573] gmf_head aboyko 070611 Revert fix from Bug # 163001
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2007 IBM Corporation and others.
a20 1
import org.apache.batik.dom.svg.SVGDOMImplementation;
d114 1
a114 1
				f.createDocument(SVGDOMImplementation.SVG_NAMESPACE_URI, in);
@


1.4
log
@[173686] gmf_head crevells 070209 Clients of ScaledGraphics have issues when using setAlpha() and the advanced graphics library isn't present
@
text
@a22 1
import org.eclipse.core.runtime.IStatus;
d81 3
a83 2
                Log.error(Draw2dRenderPlugin.getInstance(),
                    IStatus.ERROR, e.toString(), e);
@


1.3
log
@[163001] gmf_head crevells 061206 Not enough feedback provided when image fails to render
Contributed by: Alex Boyko
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d26 1
a26 1
import org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.GCUtilities;
@


1.2
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d23 1
d82 2
a83 3
				Trace.catching(Draw2dRenderPlugin.getInstance(), Draw2dRenderDebugOptions.EXCEPTIONS_THROWING, getClass(), "getSWTImage()", //$NON-NLS-1$
					e1);

@


1.1
log
@bugzilla 119319 gmf-head sshaw 060210 Support extensibility for RenderedImageFactory
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d25 1
d65 9
a73 2
			SVGImageConverter converter = new SVGImageConverter();
			return converter.renderSVGtoSWTImage(getDocument(), getRenderInfo());
@


1.1.2.1
log
@Bugzilla#154982 gmf_R1_0_maintenance sshaw 060913 Cairo is not available on Sun Solaris
@
text
@a24 1
import org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.GCUtilities;
d64 2
a65 9
			if (GCUtilities.supportsAdvancedGraphics()) {
				SVGImageConverter converter = new SVGImageConverter();
				return converter.renderSVGtoSWTImage(getDocument(), getRenderInfo());
			}
			else {
				SVGImageConverter converter = new SVGImageConverter();
				BufferedImage img = converter.renderSVGToAWTImage(getDocument(), getRenderInfo());
				return ImageConverter.convert(img);
			}
@


1.1.2.2
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


