262,262c262,262
< 					fTextHeight.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(PageSetupPageType.pages[index].getWidth())));
---
> 					fTextWidth.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(PageSetupPageType.pages[index].getWidth())));
300a301,320
>     
>     /**
>      * Converts a given string into double format 
>      * @param strNum the string containing the number (should contain only numbers)
>      * @return double value
>      */
>     private double getDblFromString(String strNum) {
>         try {
>             Number num = null;
>             num = fNumberFormat.parse(strNum);
>             return num.doubleValue();
>             
>         }
>         catch (ParseException e) {
>             e.printStackTrace();
>         }
>         return -1;
>     }
> 
> 	
315a336,358
>         boolean marginsValid = false;
>         
>         if (allValid) {
>             
>             //check to see if the right and left margins together are not greater than the page width
>             //(same goes for top and bottom margins as compared to the page height).
>             //Note: since width and height are swapped when in landscape, we check the other way around 
>             //when landscape is selected.
>             
>             if (fButtonPortrait.getSelection())
>                 marginsValid = 
>                     ((getDblFromString(fTextMarginTop.getText()) + getDblFromString(fTextMarginBottom.getText())) 
>                             < getDblFromString(fTextHeight.getText())) && 
>                     ((getDblFromString(fTextMarginLeft.getText()) + getDblFromString(fTextMarginRight.getText())) 
>                             < getDblFromString(fTextWidth.getText()));
>             else
>                 marginsValid = 
>                     ((getDblFromString(fTextMarginTop.getText()) + getDblFromString(fTextMarginBottom.getText())) 
>                             < getDblFromString(fTextWidth.getText())) && 
>                     ((getDblFromString(fTextMarginLeft.getText()) + getDblFromString(fTextMarginRight.getText())) 
>                             < getDblFromString(fTextHeight.getText()));
>         }
> 		
318,318c361,361
< 			if (allValid) {
---
> 			if (allValid && marginsValid) {
329,329c372,372
< 			if (allValid) {
---
> 			if (allValid && marginsValid) {
547,549d589
< 			String value = fStore.getString(key);
< 			try {
< 				Number num = fNumberFormat.parse(value);
550a590,590
> 			double value = fStore.getDouble(key);
551,551d589
< 				//text.setText(numberFormatter.format(Double.parseDouble(fStore.getString(key))));
552,552c591,591
< 				text.setText(fNumberFormat.format(num.doubleValue()));
---
> 			text.setText(fNumberFormat.format(value));
553,555d591
< 			} catch (ParseException e) {
< 				e.printStackTrace();
< 			}
557a595,609
>                 //get the values directly from the hardcoded values if the option is not user defined (more accurate)
>                 
>                 if (fBlockPrint.fComboSize.getSelectionIndex() != PageSetupPageType.USER_DEFINED.getIndex()) {
>                     
>                     if (text == fBlockPrint.fTextHeight) 
>                         fBlockPrint.fTextHeight.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(
>                             PageSetupPageType.pages[fBlockPrint.fComboSize.getSelectionIndex()].getHeight())));
>                     
>                     else if (text == fBlockPrint.fTextWidth)
>                         fBlockPrint.fTextWidth.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(
>                             PageSetupPageType.pages[fBlockPrint.fComboSize.getSelectionIndex()].getWidth())));                
>                     else
>                         text.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(value)));
>                 }
>                 else
557,557c594,594
< 			if (isConversionNeeded()) 
---
>             if (isConversionNeeded()) {
558a611,611
>             }
558,558c610,610
< 				text.setText(fNumberFormat.format(fConvertor.convertToMillimetres(controlType)));
---
>                     text.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(value)));
620,620c673,673
< 				fStore.setValue(key, text.getText());
---
> 				fStore.setValue(key, getDblFromString(text.getText()));
683,683c736,736
< 			return inches / 0.0394; 
---
> 			return inches * 25.4d; 
686,686c739,739
< 		private double convertMilimToInches(double milim) {
---
> 		public double convertMilimToInches(double milim) {
687,687c740,740
< 			return milim * 0.0394;
---
> 			return milim / 25.4d;
779a833,835
>             //get the values directly from the hardcoded values if the option is not user defined (more accurate)
>             
>             if (fComboSize.getSelectionIndex() == PageSetupPageType.USER_DEFINED.getIndex()) {
781a838,844
>             }
>             else {
>                 fTextWidth.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(
>                     PageSetupPageType.pages[fComboSize.getSelectionIndex()].getWidth())));
>                 fTextHeight.setText(fNumberFormat.format(fConvertor.convertInchesToMilim(
>                     PageSetupPageType.pages[fComboSize.getSelectionIndex()].getHeight())));
>             }
