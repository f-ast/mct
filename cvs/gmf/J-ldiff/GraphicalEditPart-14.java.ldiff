113,121d112
< 	//	protected Command getPropertyChangeCommand(
< 	//		Object property,
< 	//		Object oldValue,
< 	//		Object newValue) {
< 	//		// by default return null, which means there is no special command to
< 	// change the property
< 	//		return null;
< 	//	}
< 
155,178d145
< 	 * @param notifier
< 	 *            An element notifer to add the listener to
< 	 * @deprecated use {@link GraphicalEditPart#addListenerFilter(String, PropertyChangeListener, EObject)} or
< 	 * {@link GraphicalEditPart#addListenerFilter(String, PropertyChangeListener, EObject,EStructuralFeature )}
< 	 */
< 	/*protected void addListenerFilter(String filterId,
< 			PropertyChangeListener listener, PropertyChangeNotifier notifier) {
< 		if (notifier == null)
< 			return;
< 		Assert.isNotNull(filterId);
< 		Assert.isNotNull(listener);
< 		if (listenerFilters == null)
< 			listenerFilters = new HashMap();
< 		notifier.addPropertyChangeListener(listener);
< 		listenerFilters.put(filterId, new Object[] {notifier, listener});
< 	}*/
< 	
< 	/**
< 	 * Adds a listener filter by adding the given listener to a passed notifier
< 	 * 
< 	 * @param filterId
< 	 *            A unique filter id (within the same editpart instance)
< 	 * @param listener
< 	 *            A listener instance
215,215c182,182
< 		PresentationListener.getInstance().addNotificationListener(element,listener);
---
> 		PresentationListener.getInstance().addNotificationListener(element,feature,listener);
