15,21d14
< import java.util.Arrays;
< import java.util.Collections;
< import java.util.Enumeration;
< import java.util.HashSet;
< import java.util.IdentityHashMap;
< import java.util.Iterator;
< import java.util.Map;
28,28d20
< import org.eclipse.gmf.gmfgraph.FigureGallery;
36,36d27
< 	private final FigureGallery[] myInput;
41a33,33
> 	private Processor myProcessor;
42,48d32
< 	private final GenerationInfoImpl myGenerationInfo;
< 	
< 	public interface GenerationInfo {
< 		public Config getConfig(); 
< 		public Enumeration/*<Figure>*/ getProcessedFigures();
< 		public String getGeneratedClassFQN(Figure figure);
< 	}
119a105,110
> 	public static abstract class Processor {
> 		public abstract void go(ProcessorCallback callback) throws InterruptedException ;
> 
> 		public String[] getRequiredBundles(FigureQualifiedNameSwitch fqnSwitch) {
> 			return new String[0];
> 		}
120,121d104
< 	public StandaloneGenerator(FigureGallery input, Config config, FigureQualifiedNameSwitch fqnSwitch) {
< 		this(new FigureGallery[] {input}, config, fqnSwitch);
123a113,117
> 	public interface ProcessorCallback {
> 		public String visitFigure(Figure f) throws InterruptedException;
> 	}
> 
> 
124,124c118,118
< 	public StandaloneGenerator(FigureGallery[] input, Config config, FigureQualifiedNameSwitch fqnSwitch) {
---
> 	public StandaloneGenerator(Processor p, Config config, FigureQualifiedNameSwitch fqnSwitch) {
125,125c119,119
< 		assert input != null && config != null && fqnSwitch != null && !Arrays.asList(input).contains(null);
---
> 		assert p != null && config != null && fqnSwitch != null;
126a121,121
> 		myProcessor = p;
127,127d120
< 		myInput = input;
140,144d133
< 		myGenerationInfo = new GenerationInfoImpl(myArgs);
< 	}
< 	
< 	public GenerationInfo getGenerationInfo() {
< 		return myGenerationInfo;
184,184c173,173
< 		doGenerateFile(myAuxiliaryGenerators.getManifestMFEmitter(), new Path("META-INF/MANIFEST.MF"), new Object[] { new Object[] { myArgs, getRequiredBundles() } });
---
> 		doGenerateFile(myAuxiliaryGenerators.getManifestMFEmitter(), new Path("META-INF/MANIFEST.MF"), new Object[] { new Object[] { myArgs, myProcessor.getRequiredBundles(myFigureNameSwitch) } });
188,199d176
< 	private String[] getRequiredBundles() {
< 		HashSet rv = new HashSet();
< 		for (int i = 0; i < myInput.length; i++) {
< 			if (myInput[i].getImplementationBundle() != null && myInput[i].getImplementationBundle().trim().length() > 0) {
< 				rv.add(myInput[i].getImplementationBundle());
< 				}
< 			String[] additional = myFigureNameSwitch.getDependencies(myInput[i]);
< 			rv.addAll(Arrays.asList(additional));
< 		}
< 		return (String[]) rv.toArray(new String[rv.size()]);
< 	}
< 
200a178,180
> 		myProcessor.go(new ProcessorCallback() {
> 			public String visitFigure(Figure f) throws InterruptedException {
> 				return StandaloneGenerator.this.visitFigure(f);
201,205d177
< 		for (int i = 0; i < myInput.length; i++) {
< 			for (Iterator it = myInput[i].getFigures().iterator(); it.hasNext();){
< 				Figure next = (Figure) it.next();
< 				visitFigure(next);
< 			}
206a182,182
> 		});
209,209c185,185
< 	private void visitFigure(Figure figure) throws InterruptedException {
---
> 	private String visitFigure(Figure figure) throws InterruptedException {
216,216c192,192
< 		myGenerationInfo.registerFQN(figure, composeFQN(getPackageName(), importAssistant.getCompilationUnitName()));
---
> 		return composeFQN(getPackageName(), importAssistant.getCompilationUnitName());
232,258d207
< 	
< 	private static class GenerationInfoImpl implements GenerationInfo {
< 		private final Map myFigure2FQN = new IdentityHashMap();
< 		private final Config myConfig;
< 		
< 		public GenerationInfoImpl(Config config){
< 			myConfig = config;
< 		}
< 		
< 		public Config getConfig() {
< 			return myConfig;
< 		}
< 		
< 		public void registerFQN(Figure figure, String fqn){
< 			myFigure2FQN.put(figure, fqn);
< 		}
< 		
< 		public String getGeneratedClassFQN(Figure figure) {
< 			return (String)myFigure2FQN.get(figure);
< 		}
< 		
< 		public Enumeration getProcessedFigures() {
< 			return Collections.enumeration(myFigure2FQN.keySet());
< 		}
< 		
< 	}
< 	
