20a21,21
> import org.eclipse.gmf.runtime.notation.*;
215a217,282
> 			public Object casePropertiesSetStyle(PropertiesSetStyle object) {
> 				return createPropertiesSetStyleAdapter();
> 			}
> 			public Object caseStringToPropertyValueMapEntry(Map.Entry object) {
> 				return createStringToPropertyValueMapEntryAdapter();
> 			}
> 			public Object casePropertyValue(PropertyValue object) {
> 				return createPropertyValueAdapter();
> 			}
> 			public Object caseSingleValueStyle(SingleValueStyle object) {
> 				return createSingleValueStyleAdapter();
> 			}
> 			public Object caseListValueStyle(ListValueStyle object) {
> 				return createListValueStyleAdapter();
> 			}
> 			public Object caseNamedStyle(NamedStyle object) {
> 				return createNamedStyleAdapter();
> 			}
> 			public Object caseStringObjectConverter(StringObjectConverter object) {
> 				return createStringObjectConverterAdapter();
> 			}
> 			public Object caseDataTypeStyle(DataTypeStyle object) {
> 				return createDataTypeStyleAdapter();
> 			}
> 			public Object caseIntValueStyle(IntValueStyle object) {
> 				return createIntValueStyleAdapter();
> 			}
> 			public Object caseIntListValueStyle(IntListValueStyle object) {
> 				return createIntListValueStyleAdapter();
> 			}
> 			public Object caseBooleanValueStyle(BooleanValueStyle object) {
> 				return createBooleanValueStyleAdapter();
> 			}
> 			public Object caseDoubleValueStyle(DoubleValueStyle object) {
> 				return createDoubleValueStyleAdapter();
> 			}
> 			public Object caseDoubleListValueStyle(DoubleListValueStyle object) {
> 				return createDoubleListValueStyleAdapter();
> 			}
> 			public Object caseStringValueStyle(StringValueStyle object) {
> 				return createStringValueStyleAdapter();
> 			}
> 			public Object caseStringListValueStyle(StringListValueStyle object) {
> 				return createStringListValueStyleAdapter();
> 			}
> 			public Object caseEObjectValueStyle(EObjectValueStyle object) {
> 				return createEObjectValueStyleAdapter();
> 			}
> 			public Object caseEObjectListValueStyle(EObjectListValueStyle object) {
> 				return createEObjectListValueStyleAdapter();
> 			}
> 			public Object caseByteArrayValueStyle(ByteArrayValueStyle object) {
> 				return createByteArrayValueStyleAdapter();
> 			}
> 			public Object caseBooleanListValueStyle(BooleanListValueStyle object) {
> 				return createBooleanListValueStyleAdapter();
> 			}
> 			public Object caseHintedDiagramLinkStyle(HintedDiagramLinkStyle object) {
> 				return createHintedDiagramLinkStyleAdapter();
> 			}
> 			public Object caseDiagramLinkStyle(DiagramLinkStyle object) {
> 				return createDiagramLinkStyleAdapter();
> 			}
> 			public Object caseMultiDiagramLinkStyle(MultiDiagramLinkStyle object) {
> 				return createMultiDiagramLinkStyleAdapter();
> 			}
713a781,1088
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.PropertiesSetStyle <em>Properties Set Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.PropertiesSetStyle
> 	 * @generated
> 	 */
> 	public Adapter createPropertiesSetStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link java.util.Map.Entry <em>String To Property Value Map Entry</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see java.util.Map.Entry
> 	 * @generated
> 	 */
> 	public Adapter createStringToPropertyValueMapEntryAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.PropertyValue <em>Property Value</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.PropertyValue
> 	 * @generated
> 	 */
> 	public Adapter createPropertyValueAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.SingleValueStyle <em>Single Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.SingleValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createSingleValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.ListValueStyle <em>List Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.ListValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createListValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.NamedStyle <em>Named Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.NamedStyle
> 	 * @generated
> 	 */
> 	public Adapter createNamedStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.StringObjectConverter <em>String Object Converter</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.StringObjectConverter
> 	 * @generated
> 	 */
> 	public Adapter createStringObjectConverterAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.DataTypeStyle <em>Data Type Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.DataTypeStyle
> 	 * @generated
> 	 */
> 	public Adapter createDataTypeStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.IntValueStyle <em>Int Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.IntValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createIntValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.IntListValueStyle <em>Int List Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.IntListValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createIntListValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.BooleanValueStyle <em>Boolean Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.BooleanValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createBooleanValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.DoubleValueStyle <em>Double Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.DoubleValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createDoubleValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.DoubleListValueStyle <em>Double List Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.DoubleListValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createDoubleListValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.StringValueStyle <em>String Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.StringValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createStringValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.StringListValueStyle <em>String List Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.StringListValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createStringListValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.EObjectValueStyle <em>EObject Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.EObjectValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createEObjectValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.EObjectListValueStyle <em>EObject List Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.EObjectListValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createEObjectListValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.ByteArrayValueStyle <em>Byte Array Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.ByteArrayValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createByteArrayValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.BooleanListValueStyle <em>Boolean List Value Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.BooleanListValueStyle
> 	 * @generated
> 	 */
> 	public Adapter createBooleanListValueStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.HintedDiagramLinkStyle <em>Hinted Diagram Link Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.HintedDiagramLinkStyle
> 	 * @generated
> 	 */
> 	public Adapter createHintedDiagramLinkStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.DiagramLinkStyle <em>Diagram Link Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.DiagramLinkStyle
> 	 * @generated
> 	 */
> 	public Adapter createDiagramLinkStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.runtime.notation.MultiDiagramLinkStyle <em>Multi Diagram Link Style</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.runtime.notation.MultiDiagramLinkStyle
> 	 * @generated
> 	 */
> 	public Adapter createMultiDiagramLinkStyleAdapter() {
> 		return null;
> 	}
> 
> 				/**
