2,2c2,2
<  * Copyright (c) 2006 Borland Software Corporation and others.
---
>  *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
16,16d15
< 
22,22d20
< 
27a26,27
> import org.eclipse.draw2d.geometry.Point;
> import org.eclipse.draw2d.geometry.Rectangle;
28,28d25
< 
30,30d28
< 
32,32d29
< 
34,34d30
< 
37,37d32
< 
39,39d33
< 
45,45c423,423
< import org.eclipse.gmf.gmfgraph.Point;
---
> 								org.eclipse.gmf.gmfgraph.Point topLeft;
46a257,257
> 		final org.eclipse.gmf.gmfgraph.Rectangle modelElement = (org.eclipse.gmf.gmfgraph.Rectangle) view.getElement();
47,47d256
< import org.eclipse.gmf.gmfgraph.Rectangle;
50,50d41
< 
52,52d42
< import org.eclipse.gmf.graphdef.editor.edit.policies.RectangleGraphicalNodeEditPolicy;
54,54d43
< 
56,56d44
< 
58,58d45
< 
60,60d46
< 
66,66d51
< 
69,69d53
< 
94,94d77
< 	private RectangleFigure myFigure;
96,96d79
< 	// TODO: use myFigure?
100,100d82
< 	protected Figure myNodeFigure;
104a90,98
> 	protected void createDefaultEditPolicies() {
> 		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
> 
> 		super.createDefaultEditPolicies();
> 		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new RectangleItemSemanticEditPolicy());
> 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
> 		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new RectangleCanonicalEditPolicy());
> 		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
> 	}
105,105c78,78
< 	protected IFigure primaryShape;
---
> 	protected IFigure primaryShape;
110,110c83,83
< 	public RectangleEditPart(View view) {
---
> 	public RectangleEditPart(View view) {
111a85,85
> 	}
111,111c84,84
< 		super(view);
---
> 		super(view);
127,127d256
< 		final Rectangle modelElement = (Rectangle) view.getElement();
259,259c389,389
< 							Point location = modelElement.getLocation();
---
> 							org.eclipse.gmf.gmfgraph.Point location = modelElement.getLocation();
279,279c409,409
< 							myNodeFigure.setLocation(new org.eclipse.draw2d.geometry.Point(bounds.getX(), bounds.getY()));
---
> 							myNodeFigure.setLocation(new Point(bounds.getX(), bounds.getY()));
293,293d422
< 								Point topLeft;
453a103,104
> 	protected LayoutEditPolicy createLayoutEditPolicy() {
> 		XYLayoutEditPolicy lep = new XYLayoutEditPolicy() {
453a584,585
> 	protected LayoutManager getFigureLayoutManager() {
> 		return myFigure.getLayoutManager();
454,462d102
< 	protected void createDefaultEditPolicies() {
< 		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
< 		super.createDefaultEditPolicies();
< 		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new RectangleItemSemanticEditPolicy());
< 		installEditPolicy(EditPolicy.GRAPHICAL_NODE_ROLE, new RectangleGraphicalNodeEditPolicy());
< 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
< 		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new RectangleCanonicalEditPolicy());
< 		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
< 	}
463,463c105,105
< 
---
> 
464,469d105
< 	/**
< 	 * @generated
< 	 */
< 	protected LayoutEditPolicy createLayoutEditPolicy() {
< 		XYLayoutEditPolicy lep = new XYLayoutEditPolicy() {
< 
470,470c106,106
< 			protected EditPolicy createChildEditPolicy(EditPart child) {
---
> 			protected EditPolicy createChildEditPolicy(EditPart child) {
471,471c107,107
< 				EditPolicy result = super.createChildEditPolicy(child);
---
> 				EditPolicy result = super.createChildEditPolicy(child);
472,472c108,108
< 				if (result == null) {
---
> 				if (result == null) {
473,473c109,109
< 					return new ResizableShapeEditPolicy();
---
> 					return new ResizableShapeEditPolicy();
474,474c110,110
< 				}
---
> 				}
475,475c111,111
< 				return result;
---
> 				return result;
476,476c112,112
< 			}
---
> 			}
477,477c113,113
< 
---
> 
477a114,114
> 			protected Point getLayoutOrigin() {
478,478d113
< 			protected org.eclipse.draw2d.geometry.Point getLayoutOrigin() {
479,479c115,115
< 				return ((GraphicalEditPart) getHost()).getContentPane().getClientArea().getLocation();
---
> 				return ((GraphicalEditPart) getHost()).getContentPane().getClientArea().getLocation();
480,480c116,116
< 			}
---
> 			}
481,481c117,117
< 
---
> 
481a118,119
> 			protected Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
> 				Rectangle result = super.getCurrentConstraintFor(child);
482,483d117
< 			protected org.eclipse.draw2d.geometry.Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
< 				org.eclipse.draw2d.geometry.Rectangle result = super.getCurrentConstraintFor(child);
484,484c120,120
< 				if (result == null) {
---
> 				if (result == null) {
485,485c121,121
< 					IFigure fig = child.getFigure();
---
> 					IFigure fig = child.getFigure();
486,486c122,122
< 					result = fig.getBounds().getCopy();
---
> 					result = fig.getBounds().getCopy();
487,487c123,123
< 				}
---
> 				}
488,488c124,124
< 				return result;
---
> 				return result;
489,489c125,125
< 			}
---
> 			}
490,490c126,126
< 
---
> 
491,491c127,127
< 		};
---
> 		};
492,492c128,128
< 		return lep;
---
> 		return lep;
493,493c129,129
< 	}
---
> 	}
494,494c130,130
< 
---
> 
495,495c131,131
< 	/**
---
> 	/**
496,496c132,132
< 	 * @generated
---
> 	 * @generated
497,497c133,133
< 	 */
---
> 	 */
498,498c134,134
< 	protected IFigure createNodeShape() {
---
> 	protected IFigure createNodeShape() {
499,499c135,135
< 		RectangleFigure figure = new RectangleFigure();
---
> 		RectangleFigure figure = new RectangleFigure();
500,500c136,136
< 		figure.setUseLocalCoordinates(true);
---
> 		figure.setUseLocalCoordinates(true);
501a138,138
> 		org.eclipse.gmf.gmfgraph.Rectangle modelElement = (org.eclipse.gmf.gmfgraph.Rectangle) ((View) getModel()).getElement();
501,501c137,137
< 		myFigure = figure;
---
> 		myFigure = figure;
502,502d137
< 		Rectangle modelElement = (Rectangle) ((View) getModel()).getElement();
503,503c139,139
< 		if (modelElement != null) {
---
> 		if (modelElement != null) {
504,504c140,140
< 			{
---
> 			{
505,505c141,141
< 				layoutDataChanged(modelElement.getLayoutData());
---
> 				layoutDataChanged(modelElement.getLayoutData());
506,506c142,142
< 			}
---
> 			}
507,507c143,143
< 			{
---
> 			{
508,508c144,144
< 				layoutChanged(modelElement.getLayout());
---
> 				layoutChanged(modelElement.getLayout());
509,509c145,145
< 			}
---
> 			}
510,510c146,146
< 			{
---
> 			{
511,511c147,147
< 				myFigure.setOutline(modelElement.isOutline());
---
> 				myFigure.setOutline(modelElement.isOutline());
512,512c148,148
< 			}
---
> 			}
513,513c149,149
< 			{
---
> 			{
514,514c150,150
< 				myFigure.setFill(modelElement.isFill());
---
> 				myFigure.setFill(modelElement.isFill());
515,515c151,151
< 			}
---
> 			}
516,516c152,152
< 			{
---
> 			{
517,517c153,153
< 				myFigure.setLineWidth(modelElement.getLineWidth());
---
> 				myFigure.setLineWidth(modelElement.getLineWidth());
518,561d153
< 			}
< 			{
< 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
< 			}
< 			{
< 				myFigure.setFillXOR(modelElement.isXorFill());
< 			}
< 			{
< 				myFigure.setOutlineXOR(modelElement.isXorOutline());
< 			}
< 		}
< 		return primaryShape = figure;
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	public RectangleFigure getPrimaryShape() {
< 		return (RectangleFigure) primaryShape;
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected NodeFigure createNodePlate() {
< 		return new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
< 	}
< 
< 	/**
< 	 * Creates figure for this edit part.
< 	 * 
< 	 * Body of this method does not depend on settings in generation model
< 	 * so you may safely remove <i>generated</i> tag and modify it.
< 	 * 
< 	 * @generated
< 	 */
< 	protected NodeFigure createNodeFigure() {
< 		NodeFigure figure = createNodePlate();
< 		myNodeFigure = figure;
< 		figure.setLayoutManager(new StackLayout());
< 		IFigure shape = createNodeShape();
< 		figure.add(shape);
< 		contentPane = setupContentPane(shape);
< 		return figure;
565,567d588
< 	 * Default implementation treats passed figure as content pane.
< 	 * Respects layout one may have set for generated figure.
< 	 * @param nodeShape instance of generated figure class
569a155,166
> 			{
> 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			}
> 			{
> 				myFigure.setFillXOR(modelElement.isXorFill());
> 			}
> 			{
> 				myFigure.setOutlineXOR(modelElement.isXorOutline());
> 			}
> 		}
> 		return primaryShape = figure;
> 	}
569a591,592
> 	protected void setFigureLayoutManager(LayoutManager layoutManager) {
> 		myFigure.setLayoutManager(layoutManager);
570,572d154
< 	protected IFigure setupContentPane(IFigure nodeShape) {
< 		if (nodeShape.getLayoutManager() == null) {
< 			nodeShape.setLayoutManager(new FreeformLayout() {
573,573c167,167
< 
---
> 
573a168,210
> 	/**
> 	 * @generated
> 	 */
> 	public RectangleFigure getPrimaryShape() {
> 		return (RectangleFigure) primaryShape;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	protected NodeFigure createNodePlate() {
> 		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
> 		myNodeFigure = result;
> 		return result;
> 	}
> 
> 	/**
> 	 * Creates figure for this edit part.
> 	 * 
> 	 * Body of this method does not depend on settings in generation model
> 	 * so you may safely remove <i>generated</i> tag and modify it.
> 	 * 
> 	 * @generated
> 	 */
> 	protected NodeFigure createNodeFigure() {
> 		NodeFigure figure = createNodePlate();
> 		figure.setLayoutManager(new StackLayout());
> 		IFigure shape = createNodeShape();
> 		figure.add(shape);
> 		contentPane = setupContentPane(shape);
> 		return figure;
> 	}
> 
> 	/**
> 	 * Default implementation treats passed figure as content pane.
> 	 * Respects layout one may have set for generated figure.
> 	 * @param nodeShape instance of generated figure class
> 	 * @generated
> 	 */
> 	protected IFigure setupContentPane(IFigure nodeShape) {
> 		if (nodeShape.getLayoutManager() == null) {
> 			nodeShape.setLayoutManager(new FreeformLayout() {
> 
574,574c211,211
< 				public Object getConstraint(IFigure figure) {
---
> 				public Object getConstraint(IFigure figure) {
575,575c212,212
< 					Object result = constraints.get(figure);
---
> 					Object result = constraints.get(figure);
576a214,214
> 						result = new Rectangle(0, 0, -1, -1);
576,576c213,213
< 					if (result == null) {
---
> 					if (result == null) {
577,577d213
< 						result = new org.eclipse.draw2d.geometry.Rectangle(0, 0, -1, -1);
578,578c215,215
< 					}
---
> 					}
579,579c216,216
< 					return result;
---
> 					return result;
580,580c217,217
< 				}
---
> 				}
581,581c218,218
< 			});
---
> 			});
582,582c219,219
< 		}
---
> 		}
583a221,242
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public IFigure getContentPane() {
> 		if (contentPane != null) {
> 			return contentPane;
> 		}
> 		return super.getContentPane();
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	private RectangleFigure myFigure;
> 
> 	// TODO: use myFigure?
> 	/**
> 	 * @generated
> 	 */
> 	protected Figure myNodeFigure;
583,583c220,220
< 		return nodeShape; // use nodeShape itself as contentPane
---
> 		return nodeShape; // use nodeShape itself as contentPane
589,591d597
< 	public IFigure getContentPane() {
< 		if (contentPane != null) {
< 			return contentPane;
593,593d605
< 		return super.getContentPane();
640,656d597
< 	/**
< 	 * @generated
< 	 */
< 	protected LayoutManager getFigureLayoutManager() {
< 		return myFigure.getLayoutManager();
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void setFigureLayoutManager(LayoutManager layoutManager) {
< 		myFigure.setLayoutManager(layoutManager);
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
657,657c598,598
< 	protected void refreshBounds() {
---
> 	protected void refreshBounds() {
658,658c599,599
< 		if (((View) getParent().getModel()).getElement() instanceof FigureMarker) {
---
> 		if (((View) getParent().getModel()).getElement() instanceof FigureMarker) {
659,659c600,600
< 			int width = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Width())).intValue();
---
> 			int width = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Width())).intValue();
660,660c601,601
< 			int height = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Height())).intValue();
---
> 			int height = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Height())).intValue();
661,661c602,602
< 			myNodeFigure.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(width, height));
---
> 			myNodeFigure.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(width, height));
662,662c603,603
< 		} else {
---
> 		} else {
663,663c604,604
< 			super.refreshBounds();
---
> 			super.refreshBounds();
664,665d604
< 		}
< 	}
