11a12,13
> import org.eclipse.emf.common.notify.NotificationChain;
> 
17a20,21
> import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;
> import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;
29a34,35
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.TypeModelFacetImpl#getModelElementSelector <em>Model Element Selector</em>}</li>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.TypeModelFacetImpl#getModelElementInitializer <em>Model Element Initializer</em>}</li>
66a73,92
> 	 * The cached value of the '{@link #getModelElementSelector() <em>Model Element Selector</em>}' containment reference.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getModelElementSelector()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected ModelElementSelector modelElementSelector = null;
> 
> 	/**
> 	 * The cached value of the '{@link #getModelElementInitializer() <em>Model Element Initializer</em>}' containment reference.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getModelElementInitializer()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected GenElementInitializer modelElementInitializer = null;
> 
> 	/**
210a237,362
> 	public ModelElementSelector getModelElementSelector() {
> 		return modelElementSelector;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public NotificationChain basicSetModelElementSelector(ModelElementSelector newModelElementSelector, NotificationChain msgs) {
> 		ModelElementSelector oldModelElementSelector = modelElementSelector;
> 		modelElementSelector = newModelElementSelector;
> 		if (eNotificationRequired()) {
> 			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR, oldModelElementSelector, newModelElementSelector);
> 			if (msgs == null) msgs = notification; else msgs.add(notification);
> 		}
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setModelElementSelector(ModelElementSelector newModelElementSelector) {
> 		if (newModelElementSelector != modelElementSelector) {
> 			NotificationChain msgs = null;
> 			if (modelElementSelector != null)
> 				msgs = ((InternalEObject)modelElementSelector).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR, null, msgs);
> 			if (newModelElementSelector != null)
> 				msgs = ((InternalEObject)newModelElementSelector).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR, null, msgs);
> 			msgs = basicSetModelElementSelector(newModelElementSelector, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR, newModelElementSelector, newModelElementSelector));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public GenElementInitializer getModelElementInitializer() {
> 		return modelElementInitializer;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public NotificationChain basicSetModelElementInitializer(GenElementInitializer newModelElementInitializer, NotificationChain msgs) {
> 		GenElementInitializer oldModelElementInitializer = modelElementInitializer;
> 		modelElementInitializer = newModelElementInitializer;
> 		if (eNotificationRequired()) {
> 			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, oldModelElementInitializer, newModelElementInitializer);
> 			if (msgs == null) msgs = notification; else msgs.add(notification);
> 		}
> 		return msgs;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setModelElementInitializer(GenElementInitializer newModelElementInitializer) {
> 		if (newModelElementInitializer != modelElementInitializer) {
> 			NotificationChain msgs = null;
> 			if (modelElementInitializer != null)
> 				msgs = ((InternalEObject)modelElementInitializer).eInverseRemove(this, GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET, GenElementInitializer.class, msgs);
> 			if (newModelElementInitializer != null)
> 				msgs = ((InternalEObject)newModelElementInitializer).eInverseAdd(this, GMFGenPackage.GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET, GenElementInitializer.class, msgs);
> 			msgs = basicSetModelElementInitializer(newModelElementInitializer, msgs);
> 			if (msgs != null) msgs.dispatch();
> 		}
> 		else if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, newModelElementInitializer, newModelElementInitializer));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
> 		if (featureID >= 0) {
> 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
> 				case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
> 					if (modelElementInitializer != null)
> 						msgs = ((InternalEObject)modelElementInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, null, msgs);
> 					return basicSetModelElementInitializer((GenElementInitializer)otherEnd, msgs);
> 				default:
> 					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
> 			}
> 		}
> 		if (eContainer != null)
> 			msgs = eBasicRemoveFromContainer(msgs);
> 		return eBasicSetContainer(otherEnd, featureID, msgs);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
> 		if (featureID >= 0) {
> 			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
> 				case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
> 					return basicSetModelElementSelector(null, msgs);
> 				case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
> 					return basicSetModelElementInitializer(null, msgs);
> 				default:
> 					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
> 			}
> 		}
> 		return eBasicSetContainer(null, featureID, msgs);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
221a374,377
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
> 				return getModelElementSelector();
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
> 				return getModelElementInitializer();
241a398,403
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
> 				setModelElementSelector((ModelElementSelector)newValue);
> 				return;
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
> 				setModelElementInitializer((GenElementInitializer)newValue);
> 				return;
261a424,429
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
> 				setModelElementSelector((ModelElementSelector)null);
> 				return;
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
> 				setModelElementInitializer((GenElementInitializer)null);
> 				return;
278a447,450
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR:
> 				return modelElementSelector != null;
> 			case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER:
> 				return modelElementInitializer != null;
