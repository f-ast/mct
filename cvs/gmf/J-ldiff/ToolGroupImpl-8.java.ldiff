9a10,10
> import java.util.Iterator;
11a13,13
> import org.eclipse.emf.common.notify.Notification;
15a18,18
> import org.eclipse.emf.ecore.impl.ENotificationImpl;
16,16c19,19
< import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
---
> import org.eclipse.emf.ecore.util.EObjectContainmentEList;
19,20d22
< import org.eclipse.gmf.codegen.gmfgen.LinkEntry;
< import org.eclipse.gmf.codegen.gmfgen.NodeEntry;
21,21c23,23
< import org.eclipse.gmf.codegen.gmfgen.Palette;
---
> import org.eclipse.gmf.codegen.gmfgen.ToolGroupItem;
30a32,32
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#isStack <em>Stack</em>}</li>
31,32d31
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#getNodeTools <em>Node Tools</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#getLinkTools <em>Link Tools</em>}</li>
33,33c33,33
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#getPalette <em>Palette</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#isCollapse <em>Collapse</em>}</li>
33a34,35
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#getEntries <em>Entries</em>}</li>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolGroupImpl#isToolsOnly <em>Tools Only</em>}</li>
41,41c53,53
< 	 * The cached value of the '{@link #getNodeTools() <em>Node Tools</em>}' containment reference list.
---
> 	 * The cached value of the '{@link #isStack() <em>Stack</em>}' attribute.
43a46,46
> 	 * @see #isStack()
44,44d45
< 	 * @see #getNodeTools()
47a50,50
> 	protected static final boolean STACK_EDEFAULT = false;
48,48d49
< 	protected EList nodeTools = null;
51,51c43,43
< 	 * The cached value of the '{@link #getLinkTools() <em>Link Tools</em>}' containment reference list.
---
> 	 * The default value of the '{@link #isStack() <em>Stack</em>}' attribute.
53a56,56
> 	 * @see #isStack()
54,54d55
< 	 * @see #getLinkTools()
57a60,100
> 	protected boolean stack = STACK_EDEFAULT;
> 
> 	/**
> 	 * The default value of the '{@link #isCollapse() <em>Collapse</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isCollapse()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean COLLAPSE_EDEFAULT = false;
> 
> 	/**
> 	 * The cached value of the '{@link #isCollapse() <em>Collapse</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isCollapse()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean collapse = COLLAPSE_EDEFAULT;
> 
> 	/**
> 	 * The cached value of the '{@link #getEntries() <em>Entries</em>}' containment reference list.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getEntries()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected EList entries = null;
> 
> 	/**
> 	 * The default value of the '{@link #isToolsOnly() <em>Tools Only</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isToolsOnly()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean TOOLS_ONLY_EDEFAULT = false;
58,58d59
< 	protected EList linkTools = null;
83,83c125,125
< 	public EList getNodeTools() {
---
> 	public EList getEntries() {
84,84c126,126
< 		if (nodeTools == null) {
---
> 		if (entries == null) {
85,85c127,127
< 			nodeTools = new EObjectContainmentWithInverseEList(NodeEntry.class, this, GMFGenPackage.TOOL_GROUP__NODE_TOOLS, GMFGenPackage.NODE_ENTRY__GROUP);
---
> 			entries = new EObjectContainmentEList(ToolGroupItem.class, this, GMFGenPackage.TOOL_GROUP__ENTRIES);
86a129,129
> 		return entries;
87,87d128
< 		return nodeTools;
93,93c135,135
< 	 * @generated
---
> 	 * @generated NOT
94a137,141
> 	public boolean isToolsOnly() {
> 		for (Iterator it = getEntries().iterator(); it.hasNext(); ) {
> 			if (it.next() instanceof ToolGroup) {
> 				return false;
> 			}
95,97d136
< 	public EList getLinkTools() {
< 		if (linkTools == null) {
< 			linkTools = new EObjectContainmentWithInverseEList(LinkEntry.class, this, GMFGenPackage.TOOL_GROUP__LINK_TOOLS, GMFGenPackage.LINK_ENTRY__GROUP);
98a143,143
> 		return true;
99,99d142
< 		return linkTools;
106a151,152
> 	public boolean isStack() {
> 		return stack;
107,109d150
< 	public Palette getPalette() {
< 		if (eContainerFeatureID != GMFGenPackage.TOOL_GROUP__PALETTE) return null;
< 		return (Palette)eContainer();
116a160,164
> 	public void setStack(boolean newStack) {
> 		boolean oldStack = stack;
> 		stack = newStack;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TOOL_GROUP__STACK, oldStack, stack));
117,128d159
< 	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
< 		switch (featureID) {
< 			case GMFGenPackage.TOOL_GROUP__NODE_TOOLS:
< 				return ((InternalEList)getNodeTools()).basicAdd(otherEnd, msgs);
< 			case GMFGenPackage.TOOL_GROUP__LINK_TOOLS:
< 				return ((InternalEList)getLinkTools()).basicAdd(otherEnd, msgs);
< 			case GMFGenPackage.TOOL_GROUP__PALETTE:
< 				if (eInternalContainer() != null)
< 					msgs = eBasicRemoveFromContainer(msgs);
< 				return eBasicSetContainer(otherEnd, GMFGenPackage.TOOL_GROUP__PALETTE, msgs);
< 		}
< 		return super.eInverseAdd(otherEnd, featureID, msgs);
135a172,173
> 	public boolean isCollapse() {
> 		return collapse;
136,136c193,193
< 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
---
> 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
137,137c194,194
< 		switch (featureID) {
---
> 		switch (featureID) {
137a195,195
> 			case GMFGenPackage.TOOL_GROUP__ENTRIES:
138,140d194
< 			case GMFGenPackage.TOOL_GROUP__NODE_TOOLS:
< 				return ((InternalEList)getNodeTools()).basicRemove(otherEnd, msgs);
< 			case GMFGenPackage.TOOL_GROUP__LINK_TOOLS:
141,141c196,196
< 				return ((InternalEList)getLinkTools()).basicRemove(otherEnd, msgs);
---
> 				return ((InternalEList)getEntries()).basicRemove(otherEnd, msgs);
142,143d196
< 			case GMFGenPackage.TOOL_GROUP__PALETTE:
< 				return eBasicSetContainer(null, GMFGenPackage.TOOL_GROUP__PALETTE, msgs);
144a175,185
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setCollapse(boolean newCollapse) {
> 		boolean oldCollapse = collapse;
> 		collapse = newCollapse;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TOOL_GROUP__COLLAPSE, oldCollapse, collapse));
145,145c198,198
< 		return super.eInverseRemove(otherEnd, featureID, msgs);
---
> 		return super.eInverseRemove(otherEnd, featureID, msgs);
153,156d192
< 	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
< 		switch (eContainerFeatureID) {
< 			case GMFGenPackage.TOOL_GROUP__PALETTE:
< 				return eInternalContainer().eInverseRemove(this, GMFGenPackage.PALETTE__GROUPS, Palette.class, msgs);
158,158d197
< 		return super.eBasicRemoveFromContainerFeature(msgs);
167a268,269
> 			case GMFGenPackage.TOOL_GROUP__STACK:
> 				return stack != STACK_EDEFAULT;
167a208,215
> 			case GMFGenPackage.TOOL_GROUP__STACK:
> 				return isStack() ? Boolean.TRUE : Boolean.FALSE;
> 			case GMFGenPackage.TOOL_GROUP__COLLAPSE:
> 				return isCollapse() ? Boolean.TRUE : Boolean.FALSE;
> 			case GMFGenPackage.TOOL_GROUP__ENTRIES:
> 				return getEntries();
> 			case GMFGenPackage.TOOL_GROUP__TOOLS_ONLY:
> 				return isToolsOnly() ? Boolean.TRUE : Boolean.FALSE;
168,171d267
< 			case GMFGenPackage.TOOL_GROUP__NODE_TOOLS:
< 				return getNodeTools();
< 			case GMFGenPackage.TOOL_GROUP__LINK_TOOLS:
< 				return getLinkTools();
172a271,272
> 				return collapse != COLLAPSE_EDEFAULT;
> 			case GMFGenPackage.TOOL_GROUP__ENTRIES:
172,172c270,270
< 			case GMFGenPackage.TOOL_GROUP__PALETTE:
---
> 			case GMFGenPackage.TOOL_GROUP__COLLAPSE:
173,173c273,273
< 				return getPalette();
---
> 				return entries != null && !entries.isEmpty();
173a274,275
> 			case GMFGenPackage.TOOL_GROUP__TOOLS_ONLY:
> 				return isToolsOnly() != TOOLS_ONLY_EDEFAULT;
184a227,228
> 			case GMFGenPackage.TOOL_GROUP__STACK:
> 				setStack(((Boolean)newValue).booleanValue());
185,187d226
< 			case GMFGenPackage.TOOL_GROUP__NODE_TOOLS:
< 				getNodeTools().clear();
< 				getNodeTools().addAll((Collection)newValue);
188,188c229,229
< 				return;
---
> 				return;
188a230,234
> 			case GMFGenPackage.TOOL_GROUP__COLLAPSE:
> 				setCollapse(((Boolean)newValue).booleanValue());
> 				return;
> 			case GMFGenPackage.TOOL_GROUP__ENTRIES:
> 				getEntries().clear();
189,190d229
< 			case GMFGenPackage.TOOL_GROUP__LINK_TOOLS:
< 				getLinkTools().clear();
191,191c235,235
< 				getLinkTools().addAll((Collection)newValue);
---
> 				getEntries().addAll((Collection)newValue);
203a251,253
> 			case GMFGenPackage.TOOL_GROUP__COLLAPSE:
> 				setCollapse(COLLAPSE_EDEFAULT);
> 				return;
203a248,249
> 			case GMFGenPackage.TOOL_GROUP__STACK:
> 				setStack(STACK_EDEFAULT);
204,204c254,254
< 			case GMFGenPackage.TOOL_GROUP__NODE_TOOLS:
---
> 			case GMFGenPackage.TOOL_GROUP__ENTRIES:
205,205c255,255
< 				getNodeTools().clear();
---
> 				getEntries().clear();
207,208d250
< 			case GMFGenPackage.TOOL_GROUP__LINK_TOOLS:
< 				getLinkTools().clear();
221,226d267
< 			case GMFGenPackage.TOOL_GROUP__NODE_TOOLS:
< 				return nodeTools != null && !nodeTools.isEmpty();
< 			case GMFGenPackage.TOOL_GROUP__LINK_TOOLS:
< 				return linkTools != null && !linkTools.isEmpty();
< 			case GMFGenPackage.TOOL_GROUP__PALETTE:
< 				return getPalette() != null;
230a280,296
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String toString() {
> 		if (eIsProxy()) return super.toString();
> 
> 		StringBuffer result = new StringBuffer(super.toString());
> 		result.append(" (stack: ");
> 		result.append(stack);
> 		result.append(", collapse: ");
> 		result.append(collapse);
> 		result.append(')');
> 		return result.toString();
> 	}
> 
235,235c301,301
< 		return CodeGenUtil.validJavaIdentifier("create" + getTitleKey() + getEntryID() + "Group");
---
> 		return CodeGenUtil.validJavaIdentifier("create" + getTitle() + getEntryID() + "Group");
