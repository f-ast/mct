9a10,10
> import java.util.Arrays;
10a12,14
> import java.util.HashSet;
> import java.util.Iterator;
> import java.util.Set;
25a30,30
> import org.eclipse.gmf.codegen.gmfgen.GenChildNode;
1353a1359,1360
> 		
> 		requiredPlugins.addAll(getExpressionsRequiredPluginIDs());
1428a1436,1453
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public String getElementInitializersClassName() {
> 		return "ElementInitializers"; //$NON-NLS-1$
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public String getElementInitializersPackageName() {
> 		return getProvidersPackageName();
> 	}
> 	
1923a1949,1982
> 	
> 	private Set getExpressionsRequiredPluginIDs() {
> 		Set requiredIDs = new HashSet();
> 		for (Iterator it = getNodes().iterator(); it.hasNext();) {
> 			GenNode nextNode = (GenNode) it.next();
> 			if(nextNode.getModelElementInitializer() != null) {
> 				requiredIDs.addAll(Arrays.asList(nextNode.getModelElementInitializer().getRequiredPluginIDs()));
> 			}
> 			if(nextNode.getModelElementSelector() != null) {
> 				requiredIDs.addAll(Arrays.asList(nextNode.getModelElementSelector().getRequiredPluginIDs()));				
> 			}
> 			
> 			for (Iterator childIt = nextNode.getChildNodes().iterator(); childIt.hasNext();) {
> 				GenChildNode nextChild = (GenChildNode) childIt.next();			
> 				if(nextChild.getModelElementInitializer() != null) {
> 					requiredIDs.addAll(Arrays.asList(nextChild.getModelElementInitializer().getRequiredPluginIDs()));
> 				}
> 				if(nextChild.getModelElementSelector() != null) {
> 					requiredIDs.addAll(Arrays.asList(nextChild.getModelElementSelector().getRequiredPluginIDs()));				
> 				}				
> 			}
> 		}
> 		
> 		for (Iterator it = getLinks().iterator(); it.hasNext();) {
> 			GenLink nextLink = (GenLink) it.next();
> 			if(nextLink.getModelElementInitializer() != null) {
> 				requiredIDs.addAll(Arrays.asList(nextLink.getModelElementInitializer().getRequiredPluginIDs()));
> 			}
> 			if(nextLink.getModelElementSelector() != null) {
> 				requiredIDs.addAll(Arrays.asList(nextLink.getModelElementSelector().getRequiredPluginIDs()));
> 			}			
> 		}		
> 		return requiredIDs;
> 	}
