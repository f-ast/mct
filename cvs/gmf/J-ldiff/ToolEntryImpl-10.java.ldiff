12,13d11
< import org.eclipse.emf.common.notify.Notification;
< import org.eclipse.emf.common.notify.NotificationChain;
15,15d12
< import org.eclipse.emf.common.util.EMap;
17,21d13
< import org.eclipse.emf.ecore.EStructuralFeature;
< import org.eclipse.emf.ecore.EcorePackage;
< import org.eclipse.emf.ecore.InternalEObject;
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
< import org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl;
23,24d14
< import org.eclipse.emf.ecore.util.EcoreEMap;
< import org.eclipse.emf.ecore.util.InternalEList;
37,37d26
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolEntryImpl#isDefault <em>Default</em>}</li>
41,42d29
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolEntryImpl#getQualifiedToolName <em>Qualified Tool Name</em>}</li>
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.ToolEntryImpl#getProperties <em>Properties</em>}</li>
47a35,35
> public class ToolEntryImpl extends AbstractToolEntryImpl implements ToolEntry {
48,68d34
< public class ToolEntryImpl extends EntryBaseImpl implements ToolEntry {
< 	/**
< 	 * The default value of the '{@link #isDefault() <em>Default</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isDefault()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final boolean DEFAULT_EDEFAULT = false;
< 
< 	/**
< 	 * The cached value of the '{@link #isDefault() <em>Default</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isDefault()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected boolean default_ = DEFAULT_EDEFAULT;
< 
90,119d56
< 	 * The default value of the '{@link #getQualifiedToolName() <em>Qualified Tool Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getQualifiedToolName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final String QUALIFIED_TOOL_NAME_EDEFAULT = null;
< 
< 	/**
< 	 * The cached value of the '{@link #getQualifiedToolName() <em>Qualified Tool Name</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getQualifiedToolName()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected String qualifiedToolName = QUALIFIED_TOOL_NAME_EDEFAULT;
< 
< 	/**
< 	 * The cached value of the '{@link #getProperties() <em>Properties</em>}' map.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getProperties()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected EMap properties = null;
< 
< 	/**
142,162d78
< 	public boolean isDefault() {
< 		return default_;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setDefault(boolean newDefault) {
< 		boolean oldDefault = default_;
< 		default_ = newDefault;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TOOL_ENTRY__DEFAULT, oldDefault, default_));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
199,244d114
< 	public String getQualifiedToolName() {
< 		return qualifiedToolName;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setQualifiedToolName(String newQualifiedToolName) {
< 		String oldQualifiedToolName = qualifiedToolName;
< 		qualifiedToolName = newQualifiedToolName;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME, oldQualifiedToolName, qualifiedToolName));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public EMap getProperties() {
< 		if (properties == null) {
< 			properties = new EcoreEMap(EcorePackage.Literals.ESTRING_TO_STRING_MAP_ENTRY, EStringToStringMapEntryImpl.class, this, GMFGenPackage.TOOL_ENTRY__PROPERTIES);
< 		}
< 		return properties;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
< 		switch (featureID) {
< 			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
< 				return ((InternalEList)getProperties()).basicRemove(otherEnd, msgs);
< 		}
< 		return super.eInverseRemove(otherEnd, featureID, msgs);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
247,248d116
< 			case GMFGenPackage.TOOL_ENTRY__DEFAULT:
< 				return isDefault() ? Boolean.TRUE : Boolean.FALSE;
255,259d122
< 			case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME:
< 				return getQualifiedToolName();
< 			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
< 				if (coreType) return getProperties();
< 				else return getProperties().map();
271,273d133
< 			case GMFGenPackage.TOOL_ENTRY__DEFAULT:
< 				setDefault(((Boolean)newValue).booleanValue());
< 				return;
282,287d141
< 			case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME:
< 				setQualifiedToolName((String)newValue);
< 				return;
< 			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
< 				((EStructuralFeature.Setting)getProperties()).set(newValue);
< 				return;
299,301d152
< 			case GMFGenPackage.TOOL_ENTRY__DEFAULT:
< 				setDefault(DEFAULT_EDEFAULT);
< 				return;
308,313d158
< 			case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME:
< 				setQualifiedToolName(QUALIFIED_TOOL_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
< 				getProperties().clear();
< 				return;
325,326d169
< 			case GMFGenPackage.TOOL_ENTRY__DEFAULT:
< 				return default_ != DEFAULT_EDEFAULT;
333,336d175
< 			case GMFGenPackage.TOOL_ENTRY__QUALIFIED_TOOL_NAME:
< 				return QUALIFIED_TOOL_NAME_EDEFAULT == null ? qualifiedToolName != null : !QUALIFIED_TOOL_NAME_EDEFAULT.equals(qualifiedToolName);
< 			case GMFGenPackage.TOOL_ENTRY__PROPERTIES:
< 				return properties != null && !properties.isEmpty();
341,357d179
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String toString() {
< 		if (eIsProxy()) return super.toString();
< 
< 		StringBuffer result = new StringBuffer(super.toString());
< 		result.append(" (default: ");
< 		result.append(default_);
< 		result.append(", qualifiedToolName: ");
< 		result.append(qualifiedToolName);
< 		result.append(')');
< 		return result.toString();
< 	}
< 
