15,15d14
< import java.util.ArrayList;
32,36d30
< 	/**
< 	 * Expected depth of the reconciled tree 
< 	 */
< 	private static final int STORAGE_POOL_SIZE = 10;
< 	
39,39d32
< 	private final StoragePool myStoragePool;
44,44d36
< 		myStoragePool = new StoragePool(STORAGE_POOL_SIZE);
79a72,72
> 		final List<Pair> storage = new LinkedList<Pair>();
80,80d71
< 		List storage = myStoragePool.acquireList();
83,83d74
< 		for (Iterator pairs = storage.iterator(); pairs.hasNext();){
84,84c75,75
< 			Pair next = (Pair)pairs.next();
---
> 		for (Pair next : storage){
103,103d93
< 		myStoragePool.release(storage);
128,128c118,118
< 		public void match(Collection currents, Collection olds, Collection output){
---
> 		public void match(Collection currents, Collection olds, Collection<Pair> output){
211,230d200
< 	
< 	private static class StoragePool extends AbstractPool {
< 		public StoragePool(int capacity){
< 			super(capacity);
< 		}
< 		
< 		public List acquireList(){
< 			return (List)internalAcquire();
< 		}
< 		
< 		public void release(List list){
< 			list.clear();
< 			internalRelease(list);
< 		}
< 		
< 		protected Object createNew() {
< 			return new ArrayList();
< 		}
< 	}
< 
