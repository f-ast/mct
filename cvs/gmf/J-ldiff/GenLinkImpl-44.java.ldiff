53a54,55
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isTargetReorientingAllowed <em>Target Reorienting Allowed</em>}</li>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenLinkImpl#isSourceReorientingAllowed <em>Source Reorienting Allowed</em>}</li>
155a158,197
> 	 * The default value of the '{@link #isTargetReorientingAllowed() <em>Target Reorienting Allowed</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isTargetReorientingAllowed()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean TARGET_REORIENTING_ALLOWED_EDEFAULT = true;
> 
> 	/**
> 	 * The cached value of the '{@link #isTargetReorientingAllowed() <em>Target Reorienting Allowed</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isTargetReorientingAllowed()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean targetReorientingAllowed = TARGET_REORIENTING_ALLOWED_EDEFAULT;
> 
> 	/**
> 	 * The default value of the '{@link #isSourceReorientingAllowed() <em>Source Reorienting Allowed</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isSourceReorientingAllowed()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean SOURCE_REORIENTING_ALLOWED_EDEFAULT = true;
> 
> 	/**
> 	 * The cached value of the '{@link #isSourceReorientingAllowed() <em>Source Reorienting Allowed</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isSourceReorientingAllowed()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean sourceReorientingAllowed = SOURCE_REORIENTING_ALLOWED_EDEFAULT;
> 
> 	/**
427a470,511
> 	public boolean isTargetReorientingAllowed() {
> 		return targetReorientingAllowed;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setTargetReorientingAllowed(boolean newTargetReorientingAllowed) {
> 		boolean oldTargetReorientingAllowed = targetReorientingAllowed;
> 		targetReorientingAllowed = newTargetReorientingAllowed;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED, oldTargetReorientingAllowed, targetReorientingAllowed));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public boolean isSourceReorientingAllowed() {
> 		return sourceReorientingAllowed;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setSourceReorientingAllowed(boolean newSourceReorientingAllowed) {
> 		boolean oldSourceReorientingAllowed = sourceReorientingAllowed;
> 		sourceReorientingAllowed = newSourceReorientingAllowed;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED, oldSourceReorientingAllowed, sourceReorientingAllowed));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
693a778,781
> 			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
> 				return isTargetReorientingAllowed() ? Boolean.TRUE : Boolean.FALSE;
> 			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
> 				return isSourceReorientingAllowed() ? Boolean.TRUE : Boolean.FALSE;
735a824,829
> 			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
> 				setTargetReorientingAllowed(((Boolean)newValue).booleanValue());
> 				return;
> 			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
> 				setSourceReorientingAllowed(((Boolean)newValue).booleanValue());
> 				return;
774a869,874
> 			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
> 				setTargetReorientingAllowed(TARGET_REORIENTING_ALLOWED_EDEFAULT);
> 				return;
> 			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
> 				setSourceReorientingAllowed(SOURCE_REORIENTING_ALLOWED_EDEFAULT);
> 				return;
813a914,917
> 			case GMFGenPackage.GEN_LINK__TARGET_REORIENTING_ALLOWED:
> 				return targetReorientingAllowed != TARGET_REORIENTING_ALLOWED_EDEFAULT;
> 			case GMFGenPackage.GEN_LINK__SOURCE_REORIENTING_ALLOWED:
> 				return sourceReorientingAllowed != SOURCE_REORIENTING_ALLOWED_EDEFAULT;
877a982,985
> 		result.append(", targetReorientingAllowed: ");
> 		result.append(targetReorientingAllowed);
> 		result.append(", sourceReorientingAllowed: ");
> 		result.append(sourceReorientingAllowed);
