34a35,35
> import org.eclipse.osgi.util.NLS;
130,130c131,131
< 							ConstraintAdapter constraint = new ConstraintAdapter(expression);																				
---
> 							ConstraintAdapter constraint = new ConstraintAdapter(expression, 
130a132,133
> 									getDiagnosticSeverity(annotation, diagnostics), 
> 									getDescriptionDetail(annotation));																				
133,133c136,136
< 								isValid &= handleConstrainedElement(constraint, contextInstance, 
---
> 								isValid &= handleConstrainedElement(constraint, contextInstance, diagnostics);
134,134d136
< 												getDescriptionDetail(annotation), diagnostics);
150a153,180
> 		/**
> 		 * Gets Diagnostic.severity level from the given annotation
> 		 * 
> 		 * @param constraintAnnotation annotation defining a constraint
> 		 * @param diagnostics container for possible problems on the severity definition
> 		 * @return Diagnostic.ERROR|WARN|INFO integer
> 		 * 
> 		 * @see Diagnostic
> 		 */
> 		private static int getDiagnosticSeverity(EAnnotation constraintAnnotation, DiagnosticChain diagnostics) {
> 			int severity = IStatus.ERROR; // default and also fall-back value
> 			Object val = constraintAnnotation.getDetails().get(Annotations.SEVERITY);
> 			String strVal = (val instanceof String) ? ((String)val).trim() : null;
> 			if(Annotations.SEVERITY_INFO.equals(strVal)) {
> 				severity = Diagnostic.INFO;
> 			} else if(Annotations.SEVERITY_WARN.equals(strVal)) {
> 				severity = Diagnostic.WARNING;
> 			} else if(Annotations.SEVERITY_ERROR.equals(strVal)) {
> 				severity = Diagnostic.ERROR;
> 			} else if(strVal != null) {
> 				diagnostics.add(new BasicDiagnostic(Diagnostic.ERROR, DIAGNOSTIC_SOURCE, 
> 						StatusCodes.INVALID_CONSTRAINT_SEVERITY,
> 						NLS.bind(Messages.invalidConstraintSeverity, new Object[] { 
> 								strVal, Annotations.SEVERITY_ERROR, Annotations.SEVERITY_WARN, Annotations.SEVERITY_INFO})
> 						, new Object[] { val }));
> 			}
> 			return severity;
> 		}
235,235c265,265
< 		protected boolean handleConstrainedElement(ConstraintAdapter constraint, EObject constrainedElement, String description, DiagnosticChain diagnostics) {
---
> 		protected boolean handleConstrainedElement(ConstraintAdapter constraint, EObject constrainedElement, DiagnosticChain diagnostics) {
238,238c268,268
< 				if(description == null) {
---
> 				if(constraint.getDescription() == null) {
243a274,274
> 					message = constraint.getDescription(); 
244,244d273
< 					message = description; 
246,246c276,276
< 				diagnostics.add(new BasicDiagnostic(Diagnostic.ERROR, DIAGNOSTIC_SOURCE, 
---
> 				diagnostics.add(new BasicDiagnostic(constraint.getSeverity(), DIAGNOSTIC_SOURCE, 
