14a15,15
> import java.net.MalformedURLException;
20a22,22
> import org.eclipse.core.runtime.IStatus;
21a24,24
> import org.eclipse.core.runtime.Status;
25a29,29
> import org.eclipse.emf.common.CommonPlugin;
157a162,162
> 		final URL dynamicURL = usePrecompiled ? null : getDynamicTemplatesURL(templateDirectory);
158,161d161
< 		myTemplatePath = new String[] {
< 				usePrecompiled ? null : templateDirectory != null && templateDirectory.indexOf(":") == -1 ? //$NON-NLS-1$
< 						URI.createPlatformResourceURI(templateDirectory, true).toString() : templateDirectory,
< 				baseURL.toString()
162a164,164
> 		myTemplatePath = new String[] { dynamicURL != null ? dynamicURL.toString() : null, baseURL.toString() };
162,162c163,163
< 		};
---
> 		
165a168,168
> 		if (dynamicURL == null) {
166a170,172
> 		} else {
> 			myResourceManager = new BundleResourceManager(dynamicURL, baseURL);
> 		}
299a306,318
> 	private static URL getDynamicTemplatesURL(String templateDirectory) {
> 		if (templateDirectory != null) {
> 			URI templatesURI = templateDirectory.indexOf(":") == -1 ? URI.createPlatformResourceURI(templateDirectory, true) : URI.createURI(templateDirectory); //$NON-NLS-1$
> 			try {
> 				return new URL(CommonPlugin.resolve(templatesURI).toString());
> 			} catch (MalformedURLException e) {
> 				String pluginID = "org.eclipse.gmf.codegen"; //$NON-NLS-1$
> 				Platform.getLog(Platform.getBundle(pluginID)).log(new Status(IStatus.ERROR, pluginID, 0, "Incorrecct dynamic templates location", e)); //$NON-NLS-1$
> 			}
> 		}
> 		return null;
> 	}
> 
