2,2c2,2
<  * Copyright (c) 2005 Borland Software Corporation
---
>  * Copyright (c) 2005, 2007 Borland Software Corporation
10a11,11
>  *    Artem Tikhomirov (Borland) - static-less
25,25c26,26
< 	private static final Class[][] integralsToFloatsArray = new Class[][] { 
---
> 	private final Class<?>[][] integralsToFloatsArray = new Class[][] { 
33,34d33
< 	private static final List<Class> integrals = new ArrayList<Class>();	
< 	static {
39a34,37
> 	private final List<Class<?>> integrals = new ArrayList<Class<?>>();	
> 
> 	private final List<Class<?>> floats = Arrays.asList(new Class<?>[] { 	
> 			Float.class, Double.class, BigDecimal.class,
40,41d33
< 	private static final List floats = Arrays.asList(new Class[] { 	
< 		Float.class, Double.class, BigDecimal.class,
42,42c38,38
< 	});		
---
> 	});		
42a39,40
> 
> 	public EDataTypeConversion() {
45,45c48,48
< 	public static boolean isConvertable(EDataType leftDataType, EDataType rightDataType) {
---
> 	public boolean isConvertable(EDataType leftDataType, EDataType rightDataType) {
51a55,55
> 		Class<?> leftClass = EcoreUtil.wrapperClassFor(leftDataType.getInstanceClass());
52,52d54
< 		Class leftClass = EcoreUtil.wrapperClassFor(leftDataType.getInstanceClass());
53,53c56,56
< 		Class rightClass = EcoreUtil.wrapperClassFor(rightDataType.getInstanceClass());
---
> 		Class<?> rightClass = EcoreUtil.wrapperClassFor(rightDataType.getInstanceClass());
60,60c63,63
< 	private static boolean isConvertable(Class<?> left, Class<?> right) {
---
> 	private boolean isConvertable(Class<?> left, Class<?> right) {
