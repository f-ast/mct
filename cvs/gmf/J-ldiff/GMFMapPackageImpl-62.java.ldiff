822a823,831
> 	public EReference getFeatureLabelMapping_EditableFeatures() {
> 		return (EReference)featureLabelMappingEClass.getEStructuralFeatures().get(1);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
824,824c869,869
< 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(1);
---
> 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(6);
833,833c833,833
< 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(2);
---
> 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(2);
842,842c860,860
< 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(4);
---
> 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(4);
851,851c842,842
< 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(3);
---
> 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(3);
860,860c851,851
< 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(5);
---
> 		return (EAttribute)featureLabelMappingEClass.getEStructuralFeatures().get(5);
1663a1673,1673
> 		createEReference(featureLabelMappingEClass, FEATURE_LABEL_MAPPING__EDITABLE_FEATURES);
1894a1905,1905
> 		initEReference(getFeatureLabelMapping_EditableFeatures(), ecorePackage.getEAttribute(), null, "editableFeatures", null, 0, -1, FeatureLabelMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
2323a2335,2341
> 		  (getFeatureLabelMapping_EditableFeatures(), 
> 		   source, 
> 		   new String[] {
> 			 "ocl", "editableFeatures->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))",
> 			 "description", "Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry"
> 		   });									
> 		addAnnotation
