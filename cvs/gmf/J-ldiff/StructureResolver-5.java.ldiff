74,74c74,74
< 	public TypePattern resolve(EClass type, EPackage domainPackage) {
---
> 	public TypePattern resolve(EClass type, EPackage domainPackage, EClass diagramClass) {
88a89,91
> 			if (diagramClass != null && !ContainmentClosure.contains(diagramClass, type, domainPackage)) {
> 				return null; // type can't be contained within the diagram class
> 			}
108a112,119
> 		if (diagramClass != null) {
> 			if (source != null && !ContainmentClosure.contains(diagramClass, source.getEReferenceType(), domainPackage)) {
> 				return null; // source type can't be contained within the diagram class
> 			}
> 			if (target != null && !ContainmentClosure.contains(diagramClass, target.getEReferenceType(), domainPackage)) {
> 				return null; // target type can't be contained within the diagram class
> 			}
> 		}
122a134,135
> 	 * derived and have type from the same package as the host type; thus they may
> 	 * connect types as links on diagram surface.
122,122c133,133
< 	 * Finds all potential references. Such references are not containers, containments, derived and have type from the same package as the host type; thus they may connect types as links on diagram
---
> 	 * Finds all potential references. Such references are not containers, containments,
123,123d133
< 	 * surface.
