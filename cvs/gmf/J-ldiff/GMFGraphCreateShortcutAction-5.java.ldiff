2,2c2,2
<  * Copyright (c) 2006 Borland Software Corporation and others.
---
>  * Copyright (c) 2006, 2007 Borland Software Corporation and others.
17,18d16
< import org.eclipse.core.runtime.IAdaptable;
< import org.eclipse.core.runtime.IProgressMonitor;
24,24d21
< import org.eclipse.emf.ecore.EAnnotation;
25a23,24
> 
> import org.eclipse.gmf.graphdef.editor.edit.commands.GMFGraphCreateShortcutDecorationsCommand;
26,26d22
< import org.eclipse.emf.ecore.EcoreFactory;
30,30c28,28
< import org.eclipse.gmf.runtime.common.core.command.CommandResult;
---
> import org.eclipse.gmf.runtime.common.core.command.ICommand;
98a97,98
> 		ICommand command = new CreateCommand(mySelectedElement.getEditingDomain(), viewDescriptor, view);
> 		command = command.compose(new GMFGraphCreateShortcutDecorationsCommand(mySelectedElement.getEditingDomain(), view, viewDescriptor));
99,113d96
< 		CreateCommand command = new CreateCommand(mySelectedElement.getEditingDomain(), viewDescriptor, view) {
< 
< 			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
< 				CommandResult result = super.doExecuteWithResult(monitor, info);
< 				View view = (View) ((IAdaptable) result.getReturnValue()).getAdapter(View.class);
< 				if (view != null && view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
< 					EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation();
< 					shortcutAnnotation.setSource("Shortcut"); //$NON-NLS-1$
< 					shortcutAnnotation.getDetails().put("modelID", CanvasEditPart.MODEL_ID); //$NON-NLS-1$
< 					view.getEAnnotations().add(shortcutAnnotation);
< 				}
< 				return result;
< 			}
< 
< 		};
