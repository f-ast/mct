12a13,14
> import org.eclipse.gmf.mappings.*;
> 
154a157,159
> 			public Object caseRuleBase(RuleBase object) {
> 				return createRuleBaseAdapter();
> 			}
157a163,174
> 			public Object caseRuleTarget(RuleTarget object) {
> 				return createRuleTargetAdapter();
> 			}
> 			public Object caseDomainElementTarget(DomainElementTarget object) {
> 				return createDomainElementTargetAdapter();
> 			}
> 			public Object caseDiagramElementTarget(DiagramElementTarget object) {
> 				return createDiagramElementTargetAdapter();
> 			}
> 			public Object caseNotationElementTarget(NotationElementTarget object) {
> 				return createNotationElementTargetAdapter();
> 			}
484a502,571
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.mappings.RuleBase <em>Rule Base</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.mappings.RuleBase
> 	 * @generated
> 	 */
> 	public Adapter createRuleBaseAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.mappings.RuleTarget <em>Rule Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.mappings.RuleTarget
> 	 * @generated
> 	 */
> 	public Adapter createRuleTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.mappings.DomainElementTarget <em>Domain Element Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.mappings.DomainElementTarget
> 	 * @generated
> 	 */
> 	public Adapter createDomainElementTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.mappings.DiagramElementTarget <em>Diagram Element Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.mappings.DiagramElementTarget
> 	 * @generated
> 	 */
> 	public Adapter createDiagramElementTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.mappings.NotationElementTarget <em>Notation Element Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.mappings.NotationElementTarget
> 	 * @generated
> 	 */
> 	public Adapter createNotationElementTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
