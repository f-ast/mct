28a29,29
> import org.eclipse.emf.ecore.util.EContentsEList;
194a196,197
> 	private EContentsEList allChildren = null;
> 
318a322,326
> 		if (allChildren == null){
> 			allChildren =  new EContentsEList(this, 
> 				new EStructuralFeature[] {
> 					NotationPackage.eINSTANCE.getView_PersistedChildren(),
> 					NotationPackage.eINSTANCE.getView_TransientChildren()});
318a786,792
> 	
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 */
> 	public EList getVisibleChildren() {
> 		List _children = new ArrayList();	
319,319d785
< 		List children = new ArrayList();	
320,320c793,793
< 		if (persistedChildren!=null &&
---
> 		if (persistedChildren!=null &&
321a795,799
> 			for (Iterator iter = getPersistedChildren().iterator(); iter.hasNext();) {
> 				View view = (View) iter.next();
> 				if (view.isVisible())
> 					_children.add(view);
> 				}
321,321c794,794
< 			persistedChildren.size()>0){
---
> 			persistedChildren.size()>0){
322,322d794
< 			children.addAll(getPersistedChildren());
323,323c800,800
< 		}
---
> 		}
324,324c801,801
< 		
---
> 		
325,325c802,802
< 		if (transientChildren!=null&&
---
> 		if (transientChildren!=null&&
326a804,806
> 			for (Iterator iter = getTransientChildren().iterator(); iter.hasNext();) {
> 				View view = (View) iter.next();
> 				if (view.isVisible())
326,326c803,803
< 			transientChildren.size()>0){
---
> 			transientChildren.size()>0){
327,327c807,807
< 			children.addAll(getTransientChildren());
---
> 					_children.add(view);
327a808,812
> 				}
> 		}
> 		return new BasicEList.UnmodifiableEList(_children.size(), _children.toArray());
> 	}
> 
328a328,328
> 		return allChildren;
329,330d327
< 		
< 		return new BasicEList.UnmodifiableEList(children.size(), children.toArray());
