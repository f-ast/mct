46a47,47
> import org.eclipse.gmf.codegen.gmfgen.GenParserImplementation;
51a53,53
> import org.eclipse.gmf.codegen.gmfgen.PredefinedParser;
107a110,110
> 		generateParsers();
108,112d109
< 		generateCompositeParser();
< 		generateMessageFormatParser();
< 		generateNativeParser();
< 		generatePrintfParser();
< 		generateRegexpParser();
531a530,530
> 	// FIXME remove together with GenDiagram#requiresParser() method
539a539,542
> 	private void generateParsers() throws UnexpectedBehaviourException, InterruptedException {
> 		for (GenParserImplementation pi : myEditorGen.getLabelParsers().getImplementations()) {
> 			if (pi instanceof PredefinedParser) {
> 				doGenerateJavaClass(myEmitters.getPredefinedParserEmitter(), myEmitters.getPredefinedParserName(pi), pi);
540,541d538
< 	private void generateCompositeParser() throws UnexpectedBehaviourException, InterruptedException {
< 		doGenerateJavaClass(myEmitters.getCompositeParserEmitter(), myEmitters.getCompositeParserName(myDiagram), myDiagram);
543,564d543
< 
< 	private void generateMessageFormatParser() throws UnexpectedBehaviourException, InterruptedException {
< 		if (shouldGenerateParser(LabelTextAccessMethod.MESSAGE_FORMAT)) {
< 			doGenerateJavaClass(myEmitters.getMessageFormatParserEmitter(), myEmitters.getMessageFormatParserName(myDiagram), myDiagram);
< 		}
< 	}
< 
< 	private void generateNativeParser() throws UnexpectedBehaviourException, InterruptedException {
< 		if (shouldGenerateParser(LabelTextAccessMethod.NATIVE)) {
< 			doGenerateJavaClass(myEmitters.getNativeParserEmitter(), myEmitters.getNativeParserName(myDiagram), myDiagram);
< 		}
< 	}
< 
< 	private void generatePrintfParser() throws UnexpectedBehaviourException, InterruptedException {
< 		if (shouldGenerateParser(LabelTextAccessMethod.PRINTF)) {
< 			doGenerateJavaClass(myEmitters.getPrintfParserEmitter(), myEmitters.getPrintfParserName(myDiagram), myDiagram);
< 		}
< 	}
< 
< 	private void generateRegexpParser() throws UnexpectedBehaviourException, InterruptedException {
< 		if (shouldGenerateParser(LabelTextAccessMethod.REGEXP)) {
< 			doGenerateJavaClass(myEmitters.getRegexpParserEmitter(), myEmitters.getRegexpParserName(myDiagram), myDiagram);
