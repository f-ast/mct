16a17,17
> import org.eclipse.gmf.codegen.gmfgen.GenLink;
27a29,29
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.TypeLinkModelFacetImpl#getCreateCommandClassName <em>Create Command Class Name</em>}</li>
54a57,76
> 	 * The default value of the '{@link #getCreateCommandClassName() <em>Create Command Class Name</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getCreateCommandClassName()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final String CREATE_COMMAND_CLASS_NAME_EDEFAULT = null;
> 
> 	/**
> 	 * The cached value of the '{@link #getCreateCommandClassName() <em>Create Command Class Name</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getCreateCommandClassName()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected String createCommandClassName = CREATE_COMMAND_CLASS_NAME_EDEFAULT;
> 
> 	/**
150a173,206
> 	 * @generated
> 	 */
> 	public String getCreateCommandClassNameGen() {
> 		return createCommandClassName;
> 	}
> 
> 	public String getCreateCommandClassName() {
> 		return GenCommonBaseImpl.getValidClassName(getCreateCommandClassNameGen(), getLink(), CREATE_COMMAND_SUFFIX);
> 	}
> 	
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setCreateCommandClassName(String newCreateCommandClassName) {
> 		String oldCreateCommandClassName = createCommandClassName;
> 		createCommandClassName = newCreateCommandClassName;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME, oldCreateCommandClassName, createCommandClassName));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated NOT
> 	 */
> 	public String getCreateCommandQualifiedClassName() {
> 		return getDiagramImpl().getEditCommandsPackageName() + '.' + getCreateCommandClassName();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
188a245,246
> 			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
> 				return getCreateCommandClassName();
205a264,266
> 			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
> 				setCreateCommandClassName((String)newValue);
> 				return;
222a284,286
> 			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
> 				setCreateCommandClassName(CREATE_COMMAND_CLASS_NAME_EDEFAULT);
> 				return;
237a302,303
> 			case GMFGenPackage.TYPE_LINK_MODEL_FACET__CREATE_COMMAND_CLASS_NAME:
> 				return CREATE_COMMAND_CLASS_NAME_EDEFAULT == null ? createCommandClassName != null : !CREATE_COMMAND_CLASS_NAME_EDEFAULT.equals(createCommandClassName);
241a308,330
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String toString() {
> 		if (eIsProxy()) return super.toString();
> 
> 		StringBuffer result = new StringBuffer(super.toString());
> 		result.append(" (createCommandClassName: ");
> 		result.append(createCommandClassName);
> 		result.append(')');
> 		return result.toString();
> 	}
> 
> 	private GenLink getLink() {
> 		return (GenLink) eContainer();
> 	}
> 
> 	private GenDiagramImpl getDiagramImpl() {
> 		return ((GenDiagramImpl) getLink().getDiagram());
> 	}
> 	
