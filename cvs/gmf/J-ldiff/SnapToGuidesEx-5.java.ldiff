2,2c2,2
<  * Copyright (c) 2004 IBM Corporation and others.
---
>  * Copyright (c) 2004, 2008 IBM Corporation and others.
12,12c117,117
< 
---
> 
16a16,16
> import org.eclipse.draw2d.PositionConstants;
22,22d21
< 
23a23,26
>  * Overridden to:
>  * <li> support various mapmode units</li>
>  * <li> support snapping to geometry in a restricted direction. See
>  * {@link SnapToHelperUtil#RESTRICTED_DIRECTIONS}.</li>
24,24d22
<  * Override to support HiMetrics
26,26c28,28
<  * @author jschofie
---
>  * @author jschofie, crevells
30a33,42
>     /**
>      * The vertical guides in logical mapmode units.
>      */
>     private int[] verticalGuidesMM;
> 
>     /**
>      * The horizontal guides in logical mapmode units.
>      */
>     private int[] horizontalGuidesMM;
> 
34a47,50
>     protected double getThreshold() {
>         IMapMode mm = MapModeUtil.getMapMode(container.getFigure());
>         return mm.DPtoLP((int) super.getThreshold());
>     }
35,37d77
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gef.SnapToGuides#getCorrectionFor(int[], double, java.util.Map, boolean, int)
< 	 */
38,38c78,78
< 	protected double getCorrectionFor(int[] guides, double value,
---
>     protected double getCorrectionFor(int[] guides, double value,
39,39c79,79
< 			Map extendedData, boolean vert, int side) {
---
>             Map extendedData, boolean vert, int side) {
39a80,86
> 
>         Integer restrictedDirections = (Integer) extendedData
>             .get(SnapToHelperUtil.RESTRICTED_DIRECTIONS);
>         if (restrictedDirections == null
>             || restrictedDirections == PositionConstants.NONE) {
>             return super.getCorrectionFor(guides, value, extendedData, vert,
>                 side);
40a52,54
>     protected int[] getHorizontalGuides() {
>         if (horizontalGuidesMM == null) {
>             int guides[] = super.getHorizontalGuides();
41a56,63
>             horizontalGuidesMM = new int[guides.length];
>             for (int i = 0; i < guides.length; i++) {
>                 int guide = guides[i];
>                 horizontalGuidesMM[i] = mm.DPtoLP(guide);
>             }
>         }
>         return horizontalGuidesMM;
>     }
42,43d55
< 		double resultMag = mm.DPtoLP((int)THRESHOLD);
< 		double result = THRESHOLD;
44a65,69
>     protected int[] getVerticalGuides() {
>         if (verticalGuidesMM == null) {
>             int guides[] = super.getVerticalGuides();
>             IMapMode mm = MapModeUtil.getMapMode(container.getFigure());
>             verticalGuidesMM = new int[guides.length];
45a71,76
>                 int guide = guides[i];
>                 verticalGuidesMM[i] = mm.DPtoLP(guide);
>             }
>         }
>         return verticalGuidesMM;
>     }
46,47d70
< 			int offset = mm.DPtoLP(guides[i]);
< 			double magnitude;
49,56d77
< 			magnitude = Math.abs(value - offset);
< 			if (magnitude < resultMag) {
< 				extendedData.put(vert ? KEY_VERTICAL_GUIDE
< 					: KEY_HORIZONTAL_GUIDE, new Integer(mm.DPtoLP(guides[i])));
< 				extendedData.put(vert ? KEY_VERTICAL_ANCHOR
< 					: KEY_HORIZONTAL_ANCHOR, new Integer(side));
< 				resultMag = magnitude;
< 				result = offset - value;
57a88,91
> 
>         if (restrictedDirections == NONE) {
>             return super.getCorrectionFor(guides, value, extendedData, vert,
>                 side);
58a93,115
> 
>         boolean increaseOK = vert ? (restrictedDirections & EAST) != 0
>             : (restrictedDirections & SOUTH) != 0;
>         boolean decreaseOK = vert ? (restrictedDirections & WEST) != 0
>             : (restrictedDirections & NORTH) != 0;
> 
>         int filteredGuides[] = new int[guides.length];
>         int count = 0;
>         for (int i = 0; i < guides.length; i++) {
>             if ((increaseOK && guides[i] > value)
>                 || (decreaseOK && guides[i] < value)) {
>                 filteredGuides[count++] = guides[i];
>             }
>         }
> 
>         // remove empty entries
>         int[] filteredGuides2 = new int[count];
>         for (int i = 0; i < count; i++) {
>             filteredGuides2[i] = filteredGuides[i];
>         }
> 
>         return super.getCorrectionFor(filteredGuides2, value, extendedData,
>             vert, side);
59,59d92
< 		return result;
