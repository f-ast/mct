15a16,16
> import java.util.Map;
29a31,31
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
31a34,36
> import org.eclipse.gmf.graphdef.editor.expressions.GMFGraphAbstractExpression;
> import org.eclipse.gmf.graphdef.editor.expressions.GMFGraphOCLFactory;
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramEditorPlugin;
346a352,356
> 		private static GMFGraphAbstractExpression NodeContentPane_4006_SourceExpression;
> 
> 		/**
> 		 * @generated
> 		 */
403,403d412
< 
411,411d419
< 
419,419d426
< 
426a434,435
> 			try {
> 				if (source == null) {
427,427d433
< 
429a438,451
> 				if (NodeContentPane_4006_SourceExpression == null) {
> 					Map env = Collections.singletonMap(OPPOSITE_END_VAR, GMFGraphPackage.eINSTANCE.getChildAccess());
> 					NodeContentPane_4006_SourceExpression = GMFGraphOCLFactory.getExpression("not self.oclIsKindOf(gmfgraph::DiagramLabel)", GMFGraphPackage.eINSTANCE.getNode(), env); //$NON-NLS-1$
> 				}
> 				Object sourceVal = NodeContentPane_4006_SourceExpression.evaluate(source, Collections.singletonMap(OPPOSITE_END_VAR, target));
> 				if (false == sourceVal instanceof Boolean || !((Boolean) sourceVal).booleanValue()) {
> 					return false;
> 				} // else fall-through
> 				return true;
> 			} catch (Exception e) {
> 				GMFGraphDiagramEditorPlugin.getInstance().logError("Link constraint evaluation error", e); //$NON-NLS-1$
> 				return false;
> 			}
> 		}
435,435d456
< 
