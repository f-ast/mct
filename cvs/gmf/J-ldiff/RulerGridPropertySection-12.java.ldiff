29a30,30
> import org.eclipse.jface.resource.CompositeImageDescriptor;
39a41,43
> import org.eclipse.swt.graphics.Image;
> import org.eclipse.swt.graphics.ImageData;
> import org.eclipse.swt.graphics.PaletteData;
58,58c519,519
< 
---
> 
134a138,188
>     private static class ColorOverlayImageDescriptor
> 	extends CompositeImageDescriptor {
> 
> 	/** default color icon width */
> 	private static final Point ICON_SIZE = new Point(16, 16);
> 
> 	/** the basic icon */
> 	private ImageData basicImgData;
> 
> 	/** the color of the thin color bar */
> 	private RGB rgb;
> 
> 	/**
> 	 * Creates a new color menu image descriptor
> 	 * 
> 	 * @param basicIcon
> 	 *            The basic Image data
> 	 * @param rgb
> 	 *            The color bar RGB value
> 	 */
> 	public ColorOverlayImageDescriptor(ImageData basicImgData, RGB rgb) {
> 		this.basicImgData = basicImgData;
> 		this.rgb = rgb;
> 	}
> 
> 	/**
> 	 * @see org.eclipse.jface.resource.CompositeImageDescriptor#drawCompositeImage(int,
> 	 *      int)
> 	 */
> 	protected void drawCompositeImage(int width, int height) {
> 
> 		// draw the thin color bar underneath
> 		if (rgb != null) {
> 			ImageData colorBar = new ImageData(width, height / 5, 1,
> 			
> 				new PaletteData(new RGB[] {rgb}));
> 			drawImage(colorBar, 0, height - height / 5);
> 			
> 		}
> 		// draw the base image
> 		drawImage(basicImgData, 0, 0);
> 	}
> 
> 	/**
> 	 * @see org.eclipse.jface.resource.CompositeImageDescriptor#getSize()
> 	 */
> 	protected Point getSize() {
> 		return ICON_SIZE;
> 	}
> }  
> 		
254a309,313
> 				lineColor = changeColor(
> 						event,
> 						lineColorButton,
> 						DiagramUIPropertiesImages.DESC_LINE_COLOR,
> 						getWorkspacePropertyInt(WorkspaceViewerProperties.GRIDLINECOLOR));
255,255d308
<                 lineColor = changeColor(event, lineColorButton, DiagramUIPropertiesImages.DESC_LINE_COLOR);
260,260d317
< 
295,295c352,352
<             ImageDescriptor imageDescriptor) {
---
> 			ImageDescriptor imageDescriptor, int previousColor) {
299a357,357
> 		popup.setPreviousColor(previousColor);
304a363,367
> 			Image overlyedImage = new ColorOverlayImageDescriptor(
> 					imageDescriptor.getImageData(), FigureUtilities.integerToRGB(new Integer(LIGHT_GRAY_RGB)))
> 					.createImage();
> 			disposeImage(button.getImage());
> 			button.setImage(overlyedImage);
306a370,378
> 
> 		if (popup.getSelectedColor() != null) {
> 			Image overlyedImage = new ColorOverlayImageDescriptor(
> 					imageDescriptor.getImageData(), popup.getSelectedColor())
> 					.createImage();
> 			disposeImage(button.getImage());
> 			button.setImage(overlyedImage);
> 		}
> 
310a383,397
> 	private void disposeImage(Image image) {
> 		if (image == null) {
> 			return;
> 		}
> 
> 		if (image.equals(DiagramUIPropertiesImages
> 				.get(DiagramUIPropertiesImages.IMG_LINE_COLOR))) {
> 			return;
> 		}
> 
> 		if (!image.isDisposed()) {
> 			image.dispose();
> 		}
> 	}
> 
374,374d460
< 
382,382d467
<     
502,502d587
<     
526a612,618
> 		Image overlyedImage = new ColorOverlayImageDescriptor(
> 				(DiagramUIPropertiesImages.DESC_LINE_COLOR).getImageData(),
> 				FigureUtilities
> 						.integerToRGB(getWorkspacePropertyInt(WorkspaceViewerProperties.GRIDLINECOLOR)))
> 				.createImage();
> 		disposeImage(lineColorButton.getImage());
> 		lineColorButton.setImage(overlyedImage);
648,648d739
<     
681,681d771
<     
697,697c787,787
<      * Handles workspace preoperty changes
---
> 	 * Handles workspace property changes	  
742,742d831
<     
