9,9d8
< import org.eclipse.emf.common.notify.Notification;
11,11d9
< 
13,13d10
< 
15,16d11
< 
< import org.eclipse.emf.ecore.impl.ENotificationImpl;
18,19d12
< 
< import org.eclipse.emf.ecore.util.EcoreUtil;
22,22d14
< 
73,103d64
< 	public NotificationChain basicSetGroup(ToolGroup newGroup, NotificationChain msgs) {
< 		msgs = eBasicSetContainer((InternalEObject)newGroup, GMFGenPackage.SEPARATOR__GROUP, msgs);
< 		return msgs;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setGroup(ToolGroup newGroup) {
< 		if (newGroup != eInternalContainer() || (eContainerFeatureID != GMFGenPackage.SEPARATOR__GROUP && newGroup != null)) {
< 			if (EcoreUtil.isAncestor(this, newGroup))
< 				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
< 			NotificationChain msgs = null;
< 			if (eInternalContainer() != null)
< 				msgs = eBasicRemoveFromContainer(msgs);
< 			if (newGroup != null)
< 				msgs = ((InternalEObject)newGroup).eInverseAdd(this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
< 			msgs = basicSetGroup(newGroup, msgs);
< 			if (msgs != null) msgs.dispatch();
< 		}
< 		else if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.SEPARATOR__GROUP, newGroup, newGroup));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
110,110c71,71
< 				return basicSetGroup((ToolGroup)otherEnd, msgs);
---
> 				return eBasicSetContainer(otherEnd, GMFGenPackage.SEPARATOR__GROUP, msgs);
124,124c85,85
< 				return basicSetGroup(null, msgs);
---
> 				return eBasicSetContainer(null, GMFGenPackage.SEPARATOR__GROUP, msgs);
163,192d123
< 	public void eSet(int featureID, Object newValue) {
< 		switch (featureID) {
< 			case GMFGenPackage.SEPARATOR__GROUP:
< 				setGroup((ToolGroup)newValue);
< 				return;
< 		}
< 		super.eSet(featureID, newValue);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	@Override
< 	public void eUnset(int featureID) {
< 		switch (featureID) {
< 			case GMFGenPackage.SEPARATOR__GROUP:
< 				setGroup((ToolGroup)null);
< 				return;
< 		}
< 		super.eUnset(featureID);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	@Override
