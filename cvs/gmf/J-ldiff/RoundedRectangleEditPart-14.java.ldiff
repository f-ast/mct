2,2c2,2
<  * Copyright (c) 2006 Borland Software Corporation and others.
---
>  *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
16,16d15
< 
22,22d20
< 
27a26,27
> import org.eclipse.draw2d.geometry.Dimension;
> import org.eclipse.draw2d.geometry.Point;
28,28d25
< 
30,30d28
< 
32,32d29
< 
34,34d30
< 
36,36d31
< 
39,39d33
< 
41,41d34
< 
43,43c456,456
< import org.eclipse.gmf.gmfgraph.Dimension;
---
> 								org.eclipse.gmf.gmfgraph.Dimension size;
47,47c444,444
< import org.eclipse.gmf.gmfgraph.Point;
---
> 								org.eclipse.gmf.gmfgraph.Point topLeft;
52,52d42
< 
54,54d43
< import org.eclipse.gmf.graphdef.editor.edit.policies.RoundedRectangleGraphicalNodeEditPolicy;
56,56d44
< 
58,58d45
< 
60,60d46
< 
62,62d47
< 
68,68d52
< 
71,71d54
< 
96,96d78
< 	private RoundedRectangleFigure myFigure;
98,98d80
< 	// TODO: use myFigure?
102,102d83
< 	protected Figure myNodeFigure;
106a91,99
> 	protected void createDefaultEditPolicies() {
> 		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
> 
> 		super.createDefaultEditPolicies();
> 		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new RoundedRectangleItemSemanticEditPolicy());
> 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
> 		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new RoundedRectangleCanonicalEditPolicy());
> 		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
> 	}
107,107c79,79
< 	protected IFigure primaryShape;
---
> 	protected IFigure primaryShape;
112,112c84,84
< 	public RoundedRectangleEditPart(View view) {
---
> 	public RoundedRectangleEditPart(View view) {
113,113c85,85
< 		super(view);
---
> 		super(view);
113a86,86
> 	}
216,216c351,351
< 				myFigure.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
---
> 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
223,223c358,358
< 				myFigure.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
---
> 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
270,270c405,405
< 							Dimension dim = modelElement.getPreferredSize();
---
> 							org.eclipse.gmf.gmfgraph.Dimension dim = modelElement.getPreferredSize();
275,275c410,410
< 							Point location = modelElement.getLocation();
---
> 							org.eclipse.gmf.gmfgraph.Point location = modelElement.getLocation();
295,295c430,430
< 							myNodeFigure.setLocation(new org.eclipse.draw2d.geometry.Point(bounds.getX(), bounds.getY()));
---
> 							myNodeFigure.setLocation(new Point(bounds.getX(), bounds.getY()));
309,309d443
< 								Point topLeft;
321,321d455
< 								Dimension size;
469a605,606
> 	protected LayoutManager getFigureLayoutManager() {
> 		return myFigure.getLayoutManager();
469a104,105
> 	protected LayoutEditPolicy createLayoutEditPolicy() {
> 		XYLayoutEditPolicy lep = new XYLayoutEditPolicy() {
470,478d103
< 	protected void createDefaultEditPolicies() {
< 		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
< 		super.createDefaultEditPolicies();
< 		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new RoundedRectangleItemSemanticEditPolicy());
< 		installEditPolicy(EditPolicy.GRAPHICAL_NODE_ROLE, new RoundedRectangleGraphicalNodeEditPolicy());
< 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
< 		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new RoundedRectangleCanonicalEditPolicy());
< 		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
< 	}
479,479c106,106
< 
---
> 
480,485d106
< 	/**
< 	 * @generated
< 	 */
< 	protected LayoutEditPolicy createLayoutEditPolicy() {
< 		XYLayoutEditPolicy lep = new XYLayoutEditPolicy() {
< 
486,486c107,107
< 			protected EditPolicy createChildEditPolicy(EditPart child) {
---
> 			protected EditPolicy createChildEditPolicy(EditPart child) {
487,487c108,108
< 				EditPolicy result = super.createChildEditPolicy(child);
---
> 				EditPolicy result = super.createChildEditPolicy(child);
488,488c109,109
< 				if (result == null) {
---
> 				if (result == null) {
489,489c110,110
< 					return new ResizableShapeEditPolicy();
---
> 					return new ResizableShapeEditPolicy();
490,490c111,111
< 				}
---
> 				}
491,491c112,112
< 				return result;
---
> 				return result;
492,492c113,113
< 			}
---
> 			}
493a115,115
> 			protected Point getLayoutOrigin() {
493,493c114,114
< 
---
> 
494,494d114
< 			protected org.eclipse.draw2d.geometry.Point getLayoutOrigin() {
495,495c116,116
< 				return ((GraphicalEditPart) getHost()).getContentPane().getClientArea().getLocation();
---
> 				return ((GraphicalEditPart) getHost()).getContentPane().getClientArea().getLocation();
496,496c117,117
< 			}
---
> 			}
497,497c118,118
< 
---
> 
498,498c119,119
< 			protected Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
---
> 			protected Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
499,499c120,120
< 				Rectangle result = super.getCurrentConstraintFor(child);
---
> 				Rectangle result = super.getCurrentConstraintFor(child);
500,500c121,121
< 				if (result == null) {
---
> 				if (result == null) {
501,501c122,122
< 					IFigure fig = child.getFigure();
---
> 					IFigure fig = child.getFigure();
502,502c123,123
< 					result = fig.getBounds().getCopy();
---
> 					result = fig.getBounds().getCopy();
503,503c124,124
< 				}
---
> 				}
504,504c125,125
< 				return result;
---
> 				return result;
505,505c126,126
< 			}
---
> 			}
506,506c127,127
< 
---
> 
507,507c128,128
< 		};
---
> 		};
508,508c129,129
< 		return lep;
---
> 		return lep;
509,509c130,130
< 	}
---
> 	}
510,510c131,131
< 
---
> 
511,511c132,132
< 	/**
---
> 	/**
512,512c133,133
< 	 * @generated
---
> 	 * @generated
513,513c134,134
< 	 */
---
> 	 */
514,514c135,135
< 	protected IFigure createNodeShape() {
---
> 	protected IFigure createNodeShape() {
515,515c136,136
< 		RoundedRectangleFigure figure = new RoundedRectangleFigure();
---
> 		RoundedRectangleFigure figure = new RoundedRectangleFigure();
516,516c137,137
< 		figure.setUseLocalCoordinates(true);
---
> 		figure.setUseLocalCoordinates(true);
517,517c138,138
< 		myFigure = figure;
---
> 		myFigure = figure;
518,518c139,139
< 		RoundedRectangle modelElement = (RoundedRectangle) ((View) getModel()).getElement();
---
> 		RoundedRectangle modelElement = (RoundedRectangle) ((View) getModel()).getElement();
519,519c140,140
< 		if (modelElement != null) {
---
> 		if (modelElement != null) {
520,520c141,141
< 			{
---
> 			{
521,521c142,142
< 				layoutDataChanged(modelElement.getLayoutData());
---
> 				layoutDataChanged(modelElement.getLayoutData());
522,522c143,143
< 			}
---
> 			}
523,523c144,144
< 			{
---
> 			{
524,524c145,145
< 				layoutChanged(modelElement.getLayout());
---
> 				layoutChanged(modelElement.getLayout());
525,525c146,146
< 			}
---
> 			}
526,526c147,147
< 			{
---
> 			{
527,527c148,148
< 				myFigure.setOutline(modelElement.isOutline());
---
> 				myFigure.setOutline(modelElement.isOutline());
528,528c149,149
< 			}
---
> 			}
529,529c150,150
< 			{
---
> 			{
530,530c151,151
< 				myFigure.setFill(modelElement.isFill());
---
> 				myFigure.setFill(modelElement.isFill());
531,531c152,152
< 			}
---
> 			}
532,532c153,153
< 			{
---
> 			{
533,533c154,154
< 				myFigure.setLineWidth(modelElement.getLineWidth());
---
> 				myFigure.setLineWidth(modelElement.getLineWidth());
534,534c155,155
< 			}
---
> 			}
535,535c156,156
< 			{
---
> 			{
536,536c157,157
< 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
---
> 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
537,537c158,158
< 			}
---
> 			}
538,538c159,159
< 			{
---
> 			{
539,539c160,160
< 				myFigure.setFillXOR(modelElement.isXorFill());
---
> 				myFigure.setFillXOR(modelElement.isXorFill());
540,540c161,161
< 			}
---
> 			}
541,541c162,162
< 			{
---
> 			{
542,542c163,163
< 				myFigure.setOutlineXOR(modelElement.isXorOutline());
---
> 				myFigure.setOutlineXOR(modelElement.isXorOutline());
543,543c164,164
< 			}
---
> 			}
544a166,166
> 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
544,544c165,165
< 			{
---
> 			{
545,545d165
< 				myFigure.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
546,546c167,167
< 			}
---
> 			}
547a169,169
> 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
547,547c168,168
< 			{
---
> 			{
548,548d168
< 				myFigure.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
549,549c170,170
< 			}
---
> 			}
550,550c171,171
< 		}
---
> 		}
551,551c172,172
< 		return primaryShape = figure;
---
> 		return primaryShape = figure;
552,583d172
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	public RoundedRectangleFigure getPrimaryShape() {
< 		return (RoundedRectangleFigure) primaryShape;
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected NodeFigure createNodePlate() {
< 		return new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
< 	}
< 
< 	/**
< 	 * Creates figure for this edit part.
< 	 * 
< 	 * Body of this method does not depend on settings in generation model
< 	 * so you may safely remove <i>generated</i> tag and modify it.
< 	 * 
< 	 * @generated
< 	 */
< 	protected NodeFigure createNodeFigure() {
< 		NodeFigure figure = createNodePlate();
< 		myNodeFigure = figure;
< 		figure.setLayoutManager(new StackLayout());
< 		IFigure shape = createNodeShape();
< 		figure.add(shape);
< 		contentPane = setupContentPane(shape);
< 		return figure;
587,589d609
< 	 * Default implementation treats passed figure as content pane.
< 	 * Respects layout one may have set for generated figure.
< 	 * @param nodeShape instance of generated figure class
591a612,613
> 	protected void setFigureLayoutManager(LayoutManager layoutManager) {
> 		myFigure.setLayoutManager(layoutManager);
591a178,180
> 	public RoundedRectangleFigure getPrimaryShape() {
> 		return (RoundedRectangleFigure) primaryShape;
> 	}
592,594d177
< 	protected IFigure setupContentPane(IFigure nodeShape) {
< 		if (nodeShape.getLayoutManager() == null) {
< 			nodeShape.setLayoutManager(new FreeformLayout() {
595,595c181,181
< 
---
> 
595a182,217
> 	/**
> 	 * @generated
> 	 */
> 	protected NodeFigure createNodePlate() {
> 		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
> 		myNodeFigure = result;
> 		return result;
> 	}
> 
> 	/**
> 	 * Creates figure for this edit part.
> 	 * 
> 	 * Body of this method does not depend on settings in generation model
> 	 * so you may safely remove <i>generated</i> tag and modify it.
> 	 * 
> 	 * @generated
> 	 */
> 	protected NodeFigure createNodeFigure() {
> 		NodeFigure figure = createNodePlate();
> 		figure.setLayoutManager(new StackLayout());
> 		IFigure shape = createNodeShape();
> 		figure.add(shape);
> 		contentPane = setupContentPane(shape);
> 		return figure;
> 	}
> 
> 	/**
> 	 * Default implementation treats passed figure as content pane.
> 	 * Respects layout one may have set for generated figure.
> 	 * @param nodeShape instance of generated figure class
> 	 * @generated
> 	 */
> 	protected IFigure setupContentPane(IFigure nodeShape) {
> 		if (nodeShape.getLayoutManager() == null) {
> 			nodeShape.setLayoutManager(new FreeformLayout() {
> 
596,596c218,218
< 				public Object getConstraint(IFigure figure) {
---
> 				public Object getConstraint(IFigure figure) {
597,597c219,219
< 					Object result = constraints.get(figure);
---
> 					Object result = constraints.get(figure);
598,598c220,220
< 					if (result == null) {
---
> 					if (result == null) {
599,599c221,221
< 						result = new Rectangle(0, 0, -1, -1);
---
> 						result = new Rectangle(0, 0, -1, -1);
600,600c222,222
< 					}
---
> 					}
601,601c223,223
< 					return result;
---
> 					return result;
602,602c224,224
< 				}
---
> 				}
603,603c225,225
< 			});
---
> 			});
604,604c226,226
< 		}
---
> 		}
605a228,253
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public IFigure getContentPane() {
> 		if (contentPane != null) {
> 			return contentPane;
> 		}
> 		return super.getContentPane();
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	private RoundedRectangleFigure myFigure;
> 
> 	// TODO: use myFigure?
> 	/**
> 	 * @generated
> 	 */
> 	protected Figure myNodeFigure;
> 
> 	/**
> 	 * @generated
> 	 */
605,605c227,227
< 		return nodeShape; // use nodeShape itself as contentPane
---
> 		return nodeShape; // use nodeShape itself as contentPane
611,613d618
< 	public IFigure getContentPane() {
< 		if (contentPane != null) {
< 			return contentPane;
615,615d626
< 		return super.getContentPane();
632,632c643,643
< 			this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8), getMapMode().DPtoLP(8)));
---
> 			this.setCornerDimensions(new Dimension(getMapMode().DPtoLP(8), getMapMode().DPtoLP(8)));
664,680d618
< 	/**
< 	 * @generated
< 	 */
< 	protected LayoutManager getFigureLayoutManager() {
< 		return myFigure.getLayoutManager();
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void setFigureLayoutManager(LayoutManager layoutManager) {
< 		myFigure.setLayoutManager(layoutManager);
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
681,681c619,619
< 	protected void refreshBounds() {
---
> 	protected void refreshBounds() {
682,682c620,620
< 		if (((View) getParent().getModel()).getElement() instanceof FigureMarker) {
---
> 		if (((View) getParent().getModel()).getElement() instanceof FigureMarker) {
683,683c621,621
< 			int width = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Width())).intValue();
---
> 			int width = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Width())).intValue();
684,684c622,622
< 			int height = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Height())).intValue();
---
> 			int height = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Height())).intValue();
684a623,623
> 			myNodeFigure.setPreferredSize(new Dimension(width, height));
685,685d622
< 			myNodeFigure.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(width, height));
686,686c624,624
< 		} else {
---
> 		} else {
687,687c625,625
< 			super.refreshBounds();
---
> 			super.refreshBounds();
688,689d625
< 		}
< 	}
