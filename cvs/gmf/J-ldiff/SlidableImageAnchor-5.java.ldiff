2,2c2,2
<  * Copyright (c) 2004 IBM Corporation and others.
---
>  * Copyright (c) 2004, 2007 IBM Corporation and others.
26,26c28,28
< import org.eclipse.swt.graphics.Image;
---
> import org.eclipse.swt.graphics.Image;
27,27c29,29
< import org.eclipse.swt.graphics.ImageData;
---
> import org.eclipse.swt.graphics.ImageData;
28,28d29
< 
32a32,34
>  * Implements sliding connection anchor functionality for Image figures
>  * 
>  * @author aboyko
33,33d31
<  * @author oboyko
35,35d35
<  * Window - Preferences - Java - Code Style - Code Templates
42,42c42,42
< 		static private Map imageAnchorLocationMap = new WeakHashMap();
---
> 		static private Map<Image, ImageAnchorLocation> imageAnchorLocationMap = new WeakHashMap<Image, ImageAnchorLocation>();
54,54c54,54
< 			ImageAnchorLocation imgAnchorLoc = (ImageAnchorLocation) imageAnchorLocationMap
---
> 			ImageAnchorLocation imgAnchorLoc = imageAnchorLocationMap
64,64c64,64
< 		private Map locationMap = new HashMap();
---
> 		private Map<Integer, Point> locationMap = new HashMap<Integer, Point>();
163,163c163,163
< 				ptIntersect = (Point) locationMap.get(new Integer(angle));
---
> 				ptIntersect = locationMap.get(new Integer(angle));
300,300d299
< 	/* 
301,301c300,300
< 	 * (non-Javadoc)
---
> 	/* (non-Javadoc)
302,302c301,301
< 	 * @see org.eclipse.gmf.runtime.gef.ui.figures.SlidableAnchor#getLocation(org.eclipse.draw2d.geometry.Point, org.eclipse.draw2d.geometry.Point)
---
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.figures.BaseSlidableAnchor#getLocation(org.eclipse.draw2d.geometry.Point, org.eclipse.draw2d.geometry.Point)
307a307,307
> 		Rectangle ownerRect = getBox();
308,308d306
< 		Rectangle ownerRect = new Rectangle(getBox());
309,309c308,308
< 		PointList intersections = getIntersectionPoints(ownReference, foreignReference);
---
> 		PointList intersections = getIntersectionPoints(ownReference,
309a309,309
> 				foreignReference);
310a311,318
> 			Point ptRef = PointListUtilities.pickFarestPoint(intersections,
> 					foreignReference);
> 			Point ptEdge = PointListUtilities.pickClosestPoint(intersections,
> 					foreignReference);
> 			Point location = ImageAnchorLocation.getInstance(getImage())
> 					.getLocation(ptRef, ptEdge, ownerRect,
> 							getReferencePoint().equals(ownReference) && isDefaultAnchor());
> 			if (location != null) {
311,314d310
< 			Point ptRef = PointListUtilities.pickFarestPoint(intersections, foreignReference);
< 			Point ptEdge = PointListUtilities.pickClosestPoint(intersections,foreignReference);
< 			Point loc = ImageAnchorLocation.getInstance(getImage()).getLocation(ptRef, ptEdge, ownerRect, isDefaultAnchor());
< 			if (loc != null)
315,315c319,319
< 				loc = normalizeToStraightlineTolerance(foreignReference, loc, 3);
---
> 				location = normalizeToStraightlineTolerance(foreignReference,
315a320,321
> 						location, 3);
> 			}
316,316c322,322
< 			return loc;
---
> 			return location;
319a326,326
> 
