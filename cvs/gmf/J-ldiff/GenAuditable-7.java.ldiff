20a21,26
>  * <p>
>  * The following features are supported:
>  * <ul>
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditable#getContextSelector <em>Context Selector</em>}</li>
>  * </ul>
>  * </p>
27a34,35
> 	 * Returns the value of the '<em><b>Context Selector</b></em>' reference.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContext#getRuleTargets <em>Rule Targets</em>}'.
30a39,39
> 	 * To apply audit to this target, we need to select appropriate input, and here's selector that helps with that
31,31d38
< 	 * Gets identifier of the validation client context for this target. It's guaranteed as a valid java identifier.
32a41,45
> 	 * @return the value of the '<em>Context Selector</em>' reference.
> 	 * @see #setContextSelector(GenAuditContext)
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditable_ContextSelector()
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditContext#getRuleTargets
> 	 * @model opposite="ruleTargets"
33,33d40
< 	 * @model kind="operation" required="true"
35a48,58
> 	GenAuditContext getContextSelector();
> 
> 	/**
> 	 * Sets the value of the '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditable#getContextSelector <em>Context Selector</em>}' reference.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @param value the new value of the '<em>Context Selector</em>' reference.
> 	 * @see #getContextSelector()
> 	 * @generated
> 	 */
> 	void setContextSelector(GenAuditContext value);
36,36d47
< 	String getClientContextID();
