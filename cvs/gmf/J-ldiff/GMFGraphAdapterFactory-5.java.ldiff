14a15,16
> import org.eclipse.gmf.gmfgraph.BorderLayout;
> import org.eclipse.gmf.gmfgraph.BorderLayoutData;
22a25,25
> import org.eclipse.gmf.gmfgraph.CustomAttribute;
27a31,32
> import org.eclipse.gmf.gmfgraph.CustomLayout;
> import org.eclipse.gmf.gmfgraph.CustomLayoutData;
39a45,46
> import org.eclipse.gmf.gmfgraph.GridLayout;
> import org.eclipse.gmf.gmfgraph.GridLayoutData;
43a51,53
> import org.eclipse.gmf.gmfgraph.Layout;
> import org.eclipse.gmf.gmfgraph.LayoutData;
> import org.eclipse.gmf.gmfgraph.Layoutable;
245a256,285
> 			public Object caseLayoutData(LayoutData object) {
> 				return createLayoutDataAdapter();
> 			}
> 			public Object caseCustomLayoutData(CustomLayoutData object) {
> 				return createCustomLayoutDataAdapter();
> 			}
> 			public Object caseGridLayoutData(GridLayoutData object) {
> 				return createGridLayoutDataAdapter();
> 			}
> 			public Object caseBorderLayoutData(BorderLayoutData object) {
> 				return createBorderLayoutDataAdapter();
> 			}
> 			public Object caseLayoutable(Layoutable object) {
> 				return createLayoutableAdapter();
> 			}
> 			public Object caseLayout(Layout object) {
> 				return createLayoutAdapter();
> 			}
> 			public Object caseCustomLayout(CustomLayout object) {
> 				return createCustomLayoutAdapter();
> 			}
> 			public Object caseGridLayout(GridLayout object) {
> 				return createGridLayoutAdapter();
> 			}
> 			public Object caseBorderLayout(BorderLayout object) {
> 				return createBorderLayoutAdapter();
> 			}
> 			public Object caseCustomAttribute(CustomAttribute object) {
> 				return createCustomAttributeAdapter();
> 			}
880a921,1060
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.LayoutData <em>Layout Data</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.LayoutData
> 	 * @generated
> 	 */
> 	public Adapter createLayoutDataAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.CustomLayoutData <em>Custom Layout Data</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.CustomLayoutData
> 	 * @generated
> 	 */
> 	public Adapter createCustomLayoutDataAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.GridLayoutData <em>Grid Layout Data</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.GridLayoutData
> 	 * @generated
> 	 */
> 	public Adapter createGridLayoutDataAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.BorderLayoutData <em>Border Layout Data</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.BorderLayoutData
> 	 * @generated
> 	 */
> 	public Adapter createBorderLayoutDataAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.Layoutable <em>Layoutable</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.Layoutable
> 	 * @generated
> 	 */
> 	public Adapter createLayoutableAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.Layout <em>Layout</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.Layout
> 	 * @generated
> 	 */
> 	public Adapter createLayoutAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.CustomLayout <em>Custom Layout</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.CustomLayout
> 	 * @generated
> 	 */
> 	public Adapter createCustomLayoutAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.GridLayout <em>Grid Layout</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.GridLayout
> 	 * @generated
> 	 */
> 	public Adapter createGridLayoutAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.BorderLayout <em>Border Layout</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.BorderLayout
> 	 * @generated
> 	 */
> 	public Adapter createBorderLayoutAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.gmfgraph.CustomAttribute <em>Custom Attribute</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.gmfgraph.CustomAttribute
> 	 * @generated
> 	 */
> 	public Adapter createCustomAttributeAdapter() {
> 		return null;
> 	}
> 
> 	/**
