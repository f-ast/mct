12a13,14
> import org.eclipse.gmf.codegen.gmfgen.*;
> 
174,176d175
< 			public Object caseElementType(ElementType object) {
< 				return createElementTypeAdapter();
< 			}
212a212,223
> 			public Object caseElementType(ElementType object) {
> 				return createElementTypeAdapter();
> 			}
> 			public Object caseMetamodelType(MetamodelType object) {
> 				return createMetamodelTypeAdapter();
> 			}
> 			public Object caseSpecializationType(SpecializationType object) {
> 				return createSpecializationTypeAdapter();
> 			}
> 			public Object caseNotationType(NotationType object) {
> 				return createNotationTypeAdapter();
> 			}
542a554,595
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.MetamodelType <em>Metamodel Type</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.MetamodelType
> 	 * @generated
> 	 */
> 	public Adapter createMetamodelTypeAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.SpecializationType <em>Specialization Type</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.SpecializationType
> 	 * @generated
> 	 */
> 	public Adapter createSpecializationTypeAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.NotationType <em>Notation Type</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.NotationType
> 	 * @generated
> 	 */
> 	public Adapter createNotationTypeAdapter() {
> 		return null;
> 	}
> 
> 	/**
