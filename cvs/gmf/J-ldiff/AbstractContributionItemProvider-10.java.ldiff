267,267c267,267
< 						getAction(item.getId(), partDescriptor));
---
> 						getAction(item.getId(), partDescriptor, item));
829,829c875,875
< 				IAction action = getAction(actionId, partDescriptor);
---
> 				IAction action = getAction(actionId, partDescriptor, partSelector);
830a877,877
> 					return new PluginActionContributionItem(action);
831,836d876
< 					PluginActionContributionItem item = new PluginActionContributionItem(action);
< 					// set the part selector to minimize action refresh on parts that are not relevant
< 					if (partSelector != null) {
< 						item.setPartSelector(partSelector);
< 					}
< 					return item;
896,896c937,937
< 				return new PluginMenuManager(createMenuManager(menuId, partDescriptor));
---
>                 IMenuManager manager = createMenuManager(menuId, partDescriptor);
896a938,940
>                 if (manager != null) {
>                     return new PluginMenuManager(manager);
>                 }
1273a483,525
> 
> 	/**
> 	 * Returns the action with the given id that is created for the given part
> 	 * id. An action is created once and cached for each unique part's id.
> 	 * <P>
> 	 * The part selector is used is when the new action is an
> 	 * <code>AbstractActionHandler</code> to determine whether or not the
> 	 * action is applicable to a given selected part. If the part is not
> 	 * applicable, the action will not be refreshed when selection changes in
> 	 * the part.
> 	 * 
> 	 * @param actionId
> 	 *            The request action id
> 	 * @param partDescriptor
> 	 *            The workbench part descriptor
> 	 * @param partSelector
> 	 *            The part selector
> 	 * @return The action with the given id
> 	 */
> 	protected final IAction getAction(String actionId,
> 			IWorkbenchPartDescriptor partDescriptor, IPartSelector partSelector) {
> 
>         boolean actionExistsAlready = false;
>         ActionRegistry registry = (ActionRegistry) actionCache.get(partDescriptor);
>         if (registry != null) {
>             if (getActionFromRegistry(actionId, partDescriptor, registry) != null) {
>                 actionExistsAlready = true;
>             }
>         }
>         
> 		IAction result = getAction(actionId, partDescriptor);
>         
>         // If the action already existed in the registry and this is a popup
>         // menu contribution, we do not want to override the part selector
>         // already set as we could override the part selector for a toolbar
>         // action.  See bugzilla#157471.
>         if (actionExistsAlready
>             && partSelector instanceof ProviderContributionDescriptor.AbstractPopupContributionItemDescriptor) {
>             return result;
>         }
> 		
> 		if (result instanceof AbstractActionHandler && partSelector != null) {
> 			((AbstractActionHandler) result).setPartSelector(partSelector);
1274,1289d482
< 		/**
< 		 * Sets the part selector for this action. The part selector is used by
< 		 * the <code>AbstractActionHandler</code> to determine whether or not
< 		 * the action is applicable to a given selected part. If the part is not
< 		 * applicable, the action will not be refreshed when selection changes
< 		 * in the part.
< 		 * 
< 		 * @param partSelector
< 		 *            the part selector
< 		 */
< 		public void setPartSelector(IPartSelector partSelector) {
< 			IAction action = getAction();
< 			
< 			if (action instanceof AbstractActionHandler) {
< 				((AbstractActionHandler) action).setPartSelector(partSelector);
< 			}
1290a527,528
> 		return result;
> 	}
1290,1290c526,526
< 		}
---
> 		}
