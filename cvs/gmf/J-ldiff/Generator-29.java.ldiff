13a14,14
> import java.lang.reflect.InvocationTargetException;
18a20,20
> import org.eclipse.core.runtime.NullProgressMonitor;
40a43,43
> import org.eclipse.gmf.codegen.gmfgen.GenPlugin;
111a115,124
> 		if (myDiagram.isValidationEnabled() || myEditorGen.hasAudits()) {
> 			generateValidationProvider();
> 			if (myDiagram.getEditorGen().getApplication() == null) {
> 				//Strictly non-RCP stuff
> 				generateMarkerNavigationProvider();
> 			}
> 		}
> 		if (myDiagram.getEditorGen().getMetrics() != null) {
> 			generateMetricProvider();
> 		}
241a255,278
> 	private void generateValidationProvider() throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getValidationProviderGenerator(),
> 			myDiagram.getProvidersPackageName(),
> 			myDiagram.getValidationProviderClassName(),
> 			myDiagram);
> 	}
> 
> 	private void generateMarkerNavigationProvider() throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getMarkerNavigationProviderEmitter(), 
> 			myDiagram.getProvidersPackageName(), 
> 			myDiagram.getMarkerNavigationProviderClassName(), 
> 			myDiagram);
> 	}
> 
> 	private void generateMetricProvider() throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getMetricProviderEmitter(),
> 			myDiagram.getProvidersPackageName(),
> 			myDiagram.getMetricProviderClassName(),
> 			myDiagram);
> 	}	
> 
432a470,475
> 	public static String getConstraintProviders(Object plugin) throws UnexpectedBehaviourException, InvocationTargetException, InterruptedException {
> 		GenEditorGenerator gen = ((GenPlugin) plugin).getEditorGen();
> 		org.eclipse.gmf.codegen.util.CodegenEmitters emitters = new org.eclipse.gmf.codegen.util.CodegenEmitters(!gen.isDynamicTemplates(), gen.getTemplateDirectory());
> 		return emitters.retrieve(org.eclipse.gmf.codegen.templates.editor.PluginXML.class).generate(new NullProgressMonitor(), new Object[] { plugin });
> 	}
> 
