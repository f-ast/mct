19,20d18
< import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;
< import org.eclipse.gmf.codegen.gmfgen.GenNode;
24,24d21
< import org.eclipse.gmf.internal.common.reconcile.Matcher;
65,65d66
< 		preserveIfSet(GMFGEN.getGenDiagram(), GMFGEN.getGenDiagram_Synchronized());
74a58,58
> 		restore(GMFGEN.getGenDiagram(), GMFGEN.getGenCommonBase_NotationViewFactoryClassName());
75,75c59,59
< 		restore(GMFGEN.getGenDiagram(), GMFGEN.getGenCommonBase_EditPartClassName());
---
> 		restore(GMFGEN.getGenDiagram(), GMFGEN.getGenCommonBase_EditPartClassName());
75a60,62
> 		restore(GMFGEN.getGenDiagram(), GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName());
> 		restore(GMFGEN.getGenDiagram(), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName());
> 		preserveIfSet(GMFGEN.getGenDiagram(), GMFGEN.getGenDiagram_Synchronized());
76a77,86
> 		for (EClass node : new EClass[] { GMFGEN.getGenTopLevelNode(), GMFGEN.getGenChildNode(), GMFGEN.getGenChildLabelNode(), GMFGEN.getGenChildSideAffixedNode() }) {
> 			setMatcher(node, new VisualIDMatcher());
> 			restore(node, GMFGEN.getGenCommonBase_NotationViewFactoryClassName());
> 			restore(node, GMFGEN.getGenCommonBase_EditPartClassName());
> 			restore(node, GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName());
> 			restore(node, GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName());
> 			restore(node, GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName());
> 			restore(node, GMFGEN.getGenNode_GraphicalNodeEditPolicyClassName());
> 			restore(node, GMFGEN.getGenNode_CreateCommandClassName());
> 		}
77,93d76
< 		setMatcher(GMFGEN.getGenTopLevelNode(), getGenNodeMatcher());
< 		preserveIfNotByPattern(GMFGEN.getGenTopLevelNode(), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName(), ".*" + GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX); //$NON-NLS-1$
< 		preserveIfNotByPattern(GMFGEN.getGenTopLevelNode(), GMFGEN.getGenNode_GraphicalNodeEditPolicyClassName(), ".*" + GenNode.GRAPHICAL_NODE_EDIT_POLICY_SUFFIX); //$NON-NLS-1$
< 		restore(GMFGEN.getGenTopLevelNode(), GMFGEN.getGenCommonBase_EditPartClassName());
< 		preserveIfSet(GMFGEN.getGenTopLevelNode(), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName());
< 
< 		setMatcher(GMFGEN.getGenChildNode(), getGenNodeMatcher());
< 		preserveIfNotByPattern(GMFGEN.getGenChildNode(), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName(), ".*" + GenChildContainer.CANONICAL_EDIT_POLICY_SUFFIX); //$NON-NLS-1$
< 		preserveIfNotByPattern(GMFGEN.getGenChildNode(), GMFGEN.getGenNode_GraphicalNodeEditPolicyClassName(), ".*" + GenNode.GRAPHICAL_NODE_EDIT_POLICY_SUFFIX); //$NON-NLS-1$
< 		restore(GMFGEN.getGenChildNode(), GMFGEN.getGenCommonBase_EditPartClassName());
< 		preserveIfSet(GMFGEN.getGenChildNode(), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName());
< 
< 		setMatcher(GMFGEN.getGenChildLabelNode(), getGenNodeMatcher());
< 		preserveIfSet(GMFGEN.getGenChildLabelNode(), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName());
< 
< 		setMatcher(GMFGEN.getGenChildSideAffixedNode(), getGenNodeMatcher());
< 		preserveIfSet(GMFGEN.getGenChildSideAffixedNode(), GMFGEN.getGenNode_PrimaryDragEditPolicyQualifiedClassName());
95,95d87
< 		setMatcher(GMFGEN.getGenCompartment(), new ReflectiveMatcher(GMFGEN.getGenCompartment_Title()));
99a88,89
> 		setMatcher(GMFGEN.getGenCompartment(), new VisualIDMatcher());
> 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenCommonBase_NotationViewFactoryClassName());
100a91,92
> 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName());
> 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenContainerBase_CanonicalEditPolicyClassName());
100,100c90,90
< 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenCommonBase_EditPartClassName());
---
> 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenCommonBase_EditPartClassName());
105a102,109
> 		restore(GMFGEN.getGenLink(), GMFGEN.getGenLink_ReorientCommandClassName());
> 
> 		for (EClass label : new EClass[] { GMFGEN.getGenLinkLabel(), GMFGEN.getGenNodeLabel(), GMFGEN.getGenExternalNodeLabel() }) {
> 			setMatcher(label, new VisualIDMatcher());
> 			restore(label, GMFGEN.getGenCommonBase_NotationViewFactoryClassName());
> 			restore(label, GMFGEN.getGenCommonBase_EditPartClassName());
> 			restore(label, GMFGEN.getGenCommonBase_ItemSemanticEditPolicyClassName());
> 		}
151a156,156
> 		restore(GMFGEN.getMetamodelType(), GMFGEN.getMetamodelType_EditHelperClassName());
155a161,161
> 		restore(GMFGEN.getSpecializationType(), GMFGEN.getSpecializationType_EditHelperAdviceClassName());
198,198d203
< 	}
199a205,206
> 		setMatcher(GMFGEN.getGenDiagramPreferences(), ALWAYS_MATCH);
> 		setCopier(GMFGEN.getGenDiagramPreferences(), Copier.COMPLETE_COPY);
200,208d204
< 	private Matcher getGenNodeMatcher() {
< 		//FIXME: use new AttributeMatcher("domainMetaClass")
< 		return new ReflectiveMatcher(GMFGEN.getGenNode(), new ReflectiveMatcher.Reflector() {
< 
< 			public Object reflect(EObject target) {
< 				GenNode genNode = (GenNode) target;
< 				return genNode.getDomainMetaClass();
< 			}
< 		});
223,226d220
< 
< 	private void preserveIfNotByPattern(EClass eClass, EAttribute feature, String pattern) {
< 		addDecision(eClass, new StringPatternDecision(pattern, feature));
< 	}
