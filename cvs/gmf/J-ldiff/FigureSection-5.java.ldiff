34,37d33
< /**
<  * This class is fully generated except for the methods marked as <code>generated NOT</code>
<  * @generated
<  */
301,303d296
< 	/**
< 	 * @generated NOT
< 	 */
305,315d297
< 		final java.util.List<org.eclipse.core.resources.IFile> files = java.util.Collections.singletonList(org.eclipse.emf.workspace.util.WorkspaceSynchronizer.getFile(getInput().eResource()));
< 		org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand cmd = new org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand(
< 				org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(getInput()), "", files) {
< 
< 			@Override
< 			protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
< 					throws org.eclipse.core.commands.ExecutionException {
< 				commit();
< 				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult();
< 			}
< 		};
317a300,300
> 			commit();
318,320d299
< 			org.eclipse.core.commands.operations.OperationHistoryFactory.getOperationHistory().execute(cmd, new org.eclipse.core.runtime.NullProgressMonitor(), null);
< 		} catch (org.eclipse.core.commands.ExecutionException ex) {
< 			ex.printStackTrace();
329a310,313
> 	protected Object unwrap(Object element) {
> 		// TODO may need to adapt selected element to smth else,
> 		// do it here
> 		return element;
330,338d309
< 	/**
< 	 * @generated NOT
< 	 */
< 	private Object unwrap(Object element) {
< 		Object rv = org.eclipse.gmf.graphdef.editor.part.PropertySectionFilters.transformSelection(element);
< 		if (rv instanceof org.eclipse.gmf.gmfgraph.Shape) {
< 			return rv;
< 		}
< 		return null;
357,357c332,332
< 	private Shape getInput() {
---
> 	protected Shape getInput() {
