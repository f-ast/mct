31a32,32
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenLabelImpl#isReadOnly <em>Read Only</em>}</li>
40a42,61
> 	 * The default value of the '{@link #isReadOnly() <em>Read Only</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isReadOnly()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean READ_ONLY_EDEFAULT = false;
> 
> 	/**
> 	 * The cached value of the '{@link #isReadOnly() <em>Read Only</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isReadOnly()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean readOnly = READ_ONLY_EDEFAULT;
> 
> 	/**
92a114,134
> 	public boolean isReadOnly() {
> 		return readOnly;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setReadOnly(boolean newReadOnly) {
> 		boolean oldReadOnly = readOnly;
> 		readOnly = newReadOnly;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LABEL__READ_ONLY, oldReadOnly, readOnly));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
193a236,237
> 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
> 				return isReadOnly() ? Boolean.TRUE : Boolean.FALSE;
208a253,255
> 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
> 				setReadOnly(((Boolean)newValue).booleanValue());
> 				return;
225a273,275
> 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
> 				setReadOnly(READ_ONLY_EDEFAULT);
> 				return;
242a293,294
> 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
> 				return readOnly != READ_ONLY_EDEFAULT;
259a312,313
> 		result.append(" (readOnly: ");
> 		result.append(readOnly);
260,260c314,314
< 		result.append(" (elementIcon: ");
---
> 		result.append(", elementIcon: ");
