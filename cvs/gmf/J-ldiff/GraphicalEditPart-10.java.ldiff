14,15d13
< import java.beans.PropertyChangeEvent;
< import java.beans.PropertyChangeListener;
31a30,30
> import org.eclipse.emf.common.notify.Notification;
53,53c52,52
< import org.eclipse.gmf.runtime.diagram.core.listener.NotificationEvent;
---
> import org.eclipse.gmf.runtime.diagram.core.listener.NotificationListener;
55,55d53
< import org.eclipse.gmf.runtime.diagram.core.listener.PropertyChangeNotifier;
70,70c64,64
< import org.eclipse.gmf.runtime.diagram.ui.properties.Properties;
---
> import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
92,92c90,90
<  * @author melaasar
---
>  * @author melaasar,mmostafa
98,98c96,96
< 	implements IGraphicalEditPart, PropertyChangeListener, IAdaptableSelection {
---
> 	implements IGraphicalEditPart, IAdaptableSelection, NotificationListener {
159,159c157,157
< 	protected void addListenerFilter(String filterId,
---
> 	/*protected void addListenerFilter(String filterId,
169,169c167,167
< 	}
---
> 	}*/
182,182c180,180
< 			PropertyChangeListener listener,
---
> 			NotificationListener listener,
190,190c188,188
< 		PresentationListener.getInstance().addPropertyChangeListener(element,listener);
---
> 		PresentationListener.getInstance().addNotificationListener(element,listener);
205,205c203,203
< 			PropertyChangeListener listener,
---
> 			NotificationListener listener,
214,214c212,212
< 		PresentationListener.getInstance().addPropertyChangeListener(element,listener);
---
> 		PresentationListener.getInstance().addNotificationListener(element,listener);
260,260c258,258
< 						removePropertyChangeListener((EObject)obj[0],(EStructuralFeature) obj[1],(PropertyChangeListener) obj[2]);
---
> 						removeNotificationListener((EObject)obj[0],(EStructuralFeature) obj[1],(NotificationListener) obj[2]);
262,264d259
< 					if (obj[0] instanceof PropertyChangeNotifier)
< 						((PropertyChangeNotifier) obj[0]).removePropertyChangeListener((PropertyChangeListener) obj[1]);
< 					else
265,265c260,260
< 						PresentationListener.getInstance().removePropertyChangeListener((EObject) obj[0],(PropertyChangeListener) obj[1]);
---
> 					PresentationListener.getInstance().removeNotificationListener((EObject) obj[0],(NotificationListener) obj[1]);
588a1144,1147
> 	public void notifyChanged(Notification notification) {
> 		if (isActive()){
> 			handleNotificationEvent(notification);
> 		}
589,594d1143
< 	 * Handles the passed property changed event only if the editpart's view is
< 	 * not deleted.
< 	 */
< 	public final void propertyChange(PropertyChangeEvent event) {
< 		if (isActive())
< 			handlePropertyChangeEvent(event);
595,595c1148,1148
< 	}
---
> 	}
596,596c1149,1149
< 
---
> 
597,597c1150,1150
< 	/**
---
> 	/**
598,598c1151,1151
< 	 * Handles the property changed event
---
> 	 * Handles the property changed event
599,599c1152,1152
< 	 * 
---
> 	 * 
600,600c1153,1153
< 	 * @param event
---
> 	 * @param event
601,601c1154,1154
< 	 *            the property changed event
---
> 	 *            the property changed event
602,602c1155,1155
< 	 */
---
> 	 */
602a1156,1158
> 	protected void handleNotificationEvent(Notification event) {
> 		if (NotationPackage.eINSTANCE.getView_PersistedChildren().equals(event.getFeature())||
> 				NotationPackage.eINSTANCE.getView_TransientChildren().equals(event.getFeature())) {
603,605d1155
< 	protected void handlePropertyChangeEvent(PropertyChangeEvent event) {
< 		if (Properties.ID_PERSISTED_CHILDREN.equals(event.getPropertyName())||
< 			Properties.ID_TRANSIENT_CHILDREN.equals(event.getPropertyName())) {
606,606c1159,1159
< 			refreshChildren();
---
> 			refreshChildren();
607a1161,1161
> 		else if (NotationPackage.eINSTANCE.getView_Visible().equals(event.getFeature())) {
607,607c1160,1160
< 		}
---
> 		}
608,608d1160
< 		else if (Properties.ID_ISVISIBLE.equals(event.getPropertyName())) {
609,609c1162,1162
< 			refreshVisibility();
---
> 			refreshVisibility();
610a1164,1164
> 		else if (NotationPackage.eINSTANCE.getView_Element().equals(event.getFeature())) {
610,610c1163,1163
< 		}
---
> 		}
611,611d1163
< 		else if (Properties.ID_SEMANTICREF.equals(event.getPropertyName())) {
612,612c1165,1165
< 			handleMajorSemanticChange();
---
> 			handleMajorSemanticChange();
612a1166,1166
> 		} 
613,615d1165
< 		} else if (event instanceof NotificationEvent) {
< 			handleNotificationEvent((NotificationEvent) event);
< 		}
616,616c1167,1167
< 	}
---
> 	}
617,617c1168,1168
< 
---
> 
618,627d1168
< 	/**
< 	 * Handles the supplied notification event.
< 	 * 
< 	 * @param e event to handle
< 	 */
< 	protected void handleNotificationEvent(NotificationEvent e) {
< 		// for children to override
< 	}
< 
< 	/**
758,758c714,714
< 				removePropertyChangeListener((EObject) objects[0],
---
> 				removeNotificationListener((EObject) objects[0],
760,760c716,716
< 											 (PropertyChangeListener) objects[2]);
---
> 											 (NotificationListener) objects[2]);
762,765d717
< 			if (objects[0] instanceof PropertyChangeNotifier){
< 				((PropertyChangeNotifier) objects[0])
< 				  .removePropertyChangeListener((PropertyChangeListener) objects[1]);
< 			} else {
766,766c718,718
< 				PresentationListener.getInstance().removePropertyChangeListener((EObject) objects[0],(PropertyChangeListener) objects[1]);
---
> 			PresentationListener.getInstance().removeNotificationListener((EObject) objects[0],(NotificationListener) objects[1]);
767,767d718
< 			}
