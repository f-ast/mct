22a23,24
> import org.eclipse.gmf.mappings.DiagramElementTarget;
> import org.eclipse.gmf.mappings.DomainElementTarget;
36a39,41
> import org.eclipse.gmf.mappings.NotationElementTarget;
> import org.eclipse.gmf.mappings.RuleBase;
> import org.eclipse.gmf.mappings.RuleTarget;
208a214,248
> 	private EClass ruleBaseEClass = null;
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	private EClass ruleTargetEClass = null;
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	private EClass domainElementTargetEClass = null;
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	private EClass diagramElementTargetEClass = null;
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	private EClass notationElementTargetEClass = null;
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
1026,1027d1065
< 	public EReference getAuditRule_Target() {
< 		return (EReference)auditRuleEClass.getEStructuralFeatures().get(2);
1035,1035c1102,1102
< 	public EAttribute getAuditRule_Name() {
---
> 	public EAttribute getAuditRule_Description() {
1044,1044c1075,1075
< 	public EAttribute getAuditRule_Severity() {
---
> 	public EAttribute getAuditRule_Severity() {
1053,1053c1084,1084
< 	public EAttribute getAuditRule_UseInLiveMode() {
---
> 	public EAttribute getAuditRule_UseInLiveMode() {
1062,1062c1093,1093
< 	public EAttribute getAuditRule_Message() {
---
> 	public EAttribute getAuditRule_Message() {
1070a1066,1066
> 	public EAttribute getAuditRule_Name() {
1071,1071d1065
< 	public EAttribute getAuditRule_Description() {
1072,1072c1067,1067
< 		return (EAttribute)auditRuleEClass.getEStructuralFeatures().get(7);
---
> 		return (EAttribute)auditRuleEClass.getEStructuralFeatures().get(2);
1079a1120,1202
> 	public EClass getRuleBase() {
> 		return ruleBaseEClass;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EReference getRuleBase_Target() {
> 		return (EReference)ruleBaseEClass.getEStructuralFeatures().get(0);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EClass getRuleTarget() {
> 		return ruleTargetEClass;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EReference getRuleTarget_Rule() {
> 		return (EReference)ruleTargetEClass.getEStructuralFeatures().get(0);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EClass getDomainElementTarget() {
> 		return domainElementTargetEClass;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EReference getDomainElementTarget_Element() {
> 		return (EReference)domainElementTargetEClass.getEStructuralFeatures().get(0);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EClass getDiagramElementTarget() {
> 		return diagramElementTargetEClass;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EReference getDiagramElementTarget_Element() {
> 		return (EReference)diagramElementTargetEClass.getEStructuralFeatures().get(0);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EClass getNotationElementTarget() {
> 		return notationElementTargetEClass;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EReference getNotationElementTarget_Element() {
> 		return (EReference)notationElementTargetEClass.getEStructuralFeatures().get(0);
1080,1080c1111,1111
< 	public EReference getAuditRule_Container() {
---
> 	public EReference getAuditRule_Container() {
1081,1081c1112,1112
< 		return (EReference)auditRuleEClass.getEStructuralFeatures().get(8);
---
> 		return (EReference)auditRuleEClass.getEStructuralFeatures().get(7);
1220a1342,1344
> 		ruleBaseEClass = createEClass(RULE_BASE);
> 		createEReference(ruleBaseEClass, RULE_BASE__TARGET);
> 
1224,1224d1347
< 		createEReference(auditRuleEClass, AUDIT_RULE__TARGET);
1231a1355,1366
> 		ruleTargetEClass = createEClass(RULE_TARGET);
> 		createEReference(ruleTargetEClass, RULE_TARGET__RULE);
> 
> 		domainElementTargetEClass = createEClass(DOMAIN_ELEMENT_TARGET);
> 		createEReference(domainElementTargetEClass, DOMAIN_ELEMENT_TARGET__ELEMENT);
> 
> 		diagramElementTargetEClass = createEClass(DIAGRAM_ELEMENT_TARGET);
> 		createEReference(diagramElementTargetEClass, DIAGRAM_ELEMENT_TARGET__ELEMENT);
> 
> 		notationElementTargetEClass = createEClass(NOTATION_ELEMENT_TARGET);
> 		createEReference(notationElementTargetEClass, NOTATION_ELEMENT_TARGET__ELEMENT);
> 
1278a1414,1417
> 		auditRuleEClass.getESuperTypes().add(this.getRuleBase());
> 		domainElementTargetEClass.getESuperTypes().add(this.getRuleTarget());
> 		diagramElementTargetEClass.getESuperTypes().add(this.getRuleTarget());
> 		notationElementTargetEClass.getESuperTypes().add(this.getRuleTarget());
1384a1524,1526
> 		initEClass(ruleBaseEClass, RuleBase.class, "RuleBase", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
> 		initEReference(getRuleBase_Target(), this.getRuleTarget(), this.getRuleTarget_Rule(), "target", null, 1, 1, RuleBase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
> 
1387a1537,1540
> 		initEClass(ruleTargetEClass, RuleTarget.class, "RuleTarget", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
> 		initEReference(getRuleTarget_Rule(), this.getRuleBase(), this.getRuleBase_Target(), "rule", null, 1, 1, RuleTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
> 
> 		initEClass(domainElementTargetEClass, DomainElementTarget.class, "DomainElementTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
1388,1388c1541,1541
< 		initEReference(getAuditRule_Target(), ecorePackage.getEClass(), null, "target", null, 1, 1, AuditRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
---
> 		initEReference(getDomainElementTarget_Element(), ecorePackage.getEClass(), null, "element", null, 1, 1, DomainElementTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
1388a1542,1548
> 
> 		initEClass(diagramElementTargetEClass, DiagramElementTarget.class, "DiagramElementTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
> 		initEReference(getDiagramElementTarget_Element(), this.getMappingEntry(), null, "element", null, 1, 1, DiagramElementTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
> 
> 		initEClass(notationElementTargetEClass, NotationElementTarget.class, "NotationElementTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
> 		initEReference(getNotationElementTarget_Element(), ecorePackage.getEClass(), null, "element", null, 1, 1, NotationElementTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
> 
