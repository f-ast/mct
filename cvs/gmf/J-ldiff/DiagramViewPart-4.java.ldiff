14a15,15
> import org.eclipse.core.runtime.NullProgressMonitor;
26,26c28,28
< import org.eclipse.gef.commands.Command;
---
> import org.eclipse.gef.commands.CommandStackEvent;
26a29,29
> import org.eclipse.gef.commands.CommandStackEventListener;
68,68c84,84
< 			myDiagramDisplayer.dispose();
---
> 			disposeDisplayer(myDiagramDisplayer);
119a136,136
> 			initDisplayer(myDiagramDisplayer);
129a147,147
> 					disposeDisplayer(myDiagramDisplayer);
130,131d146
< 					myDiagramDisplayer.getTopLevelControl().dispose();
< 					myDiagramDisplayer.dispose();
138a155,155
> 			disposeDisplayer(oldDiagramDisplayer);
139,140d154
< 			oldDiagramDisplayer.getTopLevelControl().dispose();
< 			oldDiagramDisplayer.dispose();
145a161,172
> 	protected void initDisplayer(DiagramDisplayer diagramDisplayer) {
> 		diagramDisplayer.getCommandStack().addCommandStackEventListener(mySaveListener);
> 	}
> 
> 	protected void disposeDisplayer(DiagramDisplayer diagramDisplayer) {
> 		if (diagramDisplayer.getTopLevelControl() != null) {
> 			diagramDisplayer.getTopLevelControl().dispose();
> 		}
> 		diagramDisplayer.getCommandStack().removeCommandStackEventListener(mySaveListener);
> 		diagramDisplayer.dispose();
> 	}
> 
165a62,71
> 	private CommandStackEventListener mySaveListener = new CommandStackEventListener() {
> 		public void stackChanged(CommandStackEvent event) {
> 			assert event.getSource() == myDiagramDisplayer.getCommandStack();
> 			if (event.isPostChangeEvent()) {
> 				try {
> 					myDiagramDisplayer.save(new NullProgressMonitor());
> 					myDiagramDisplayer.getCommandStack().markSaveLocation();
> 				} catch (CoreException e) {
> 					Activator.getDefault().getLog().log(e.getStatus());
> 				}
166,170d61
< 		domain.setCommandStack(new CommandStack() {
< 			@Override
< 			public void execute(Command command) {
< 				super.execute(command);
< 				save();
171,171c72,72
< 			}
---
> 			}
172,175d72
< 			@Override
< 			public void undo() {
< 				super.undo();
< 				save();
176,176c73,73
< 			}
---
> 		}
177,188d73
< 			@Override
< 			public void redo() {
< 				super.redo();
< 				save();
< 			}
< 			private void save() {
< 				try {
< 					myDiagramDisplayer.save(null);
< 				} catch (CoreException e) {
< 					Activator.getDefault().getLog().log(e.getStatus());
< 				}
< 			}
189,189c74,74
< 		});
---
> 	};
189a75,75
> 
