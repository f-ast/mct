107a108,113
> 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
> 				return createCompartmentPlacementKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
> 				return createCompartmentLayoutKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.LINK_LABEL_ALIGNMENT:
> 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
107a416,417
> 	public CompartmentPlacementKind createCompartmentPlacementKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
108,109d415
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND: {
< 				CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
110a419,437
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertCompartmentPlacementKindToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public CompartmentLayoutKind createCompartmentLayoutKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
110,110c418,418
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
---
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
111,114d418
< 				return result;
< 			}
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND: {
< 				CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
115a439,457
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertCompartmentLayoutKindToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
> 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
115,115c438,438
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
---
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
116,119d438
< 				return result;
< 			}
< 			case GMFGenPackage.LINK_LABEL_ALIGNMENT: {
< 				LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
120,120c458,458
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
---
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
121,121c459,459
< 				return result;
---
> 		return result;
122,122c460,460
< 			}
---
> 	}
122a461,475
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
137a129,129
> 				return convertCompartmentPlacementKindToString(eDataType, instanceValue);
138,138d128
< 				return instanceValue == null ? null : instanceValue.toString();
139a131,131
> 				return convertCompartmentLayoutKindToString(eDataType, instanceValue);
140,140d130
< 				return instanceValue == null ? null : instanceValue.toString();
141a133,133
> 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
142,142d132
< 				return instanceValue == null ? null : instanceValue.toString();
