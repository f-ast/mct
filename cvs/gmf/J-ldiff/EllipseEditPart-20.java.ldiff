23,23c23,23
< import org.eclipse.draw2d.Figure;
---
> import org.eclipse.draw2d.Ellipse;
26,26d25
< import org.eclipse.draw2d.LayoutManager;
29,29d27
< import org.eclipse.draw2d.geometry.Point;
33,33d30
< import org.eclipse.emf.common.notify.impl.AdapterImpl;
36,36d32
< import org.eclipse.gef.EditPart;
38a253,254
> 		org.eclipse.gmf.gmfgraph.Ellipse modelElement = (org.eclipse.gmf.gmfgraph.Ellipse) getModelFigureElement();
> 		if (modelElement != null) {
39,39d252
< import org.eclipse.gmf.gmfgraph.AbstractFigure;
42,42d39
< import org.eclipse.gmf.gmfgraph.Dimension;
43,43c40,40
< import org.eclipse.gmf.gmfgraph.Ellipse;
---
> import org.eclipse.gmf.gmfgraph.Shape;
45a240,241
> 	private org.eclipse.gmf.gmfgraph.Ellipse getModelFigureElement() {
> 		Shape shape = getShape();
46a243,247
> 			org.eclipse.gmf.gmfgraph.Ellipse modelFigureElement = (org.eclipse.gmf.gmfgraph.Ellipse) shape;
> 			return modelFigureElement;
> 		}
> 		return null;
> 	}
46,46c242,242
< import org.eclipse.gmf.gmfgraph.Layoutable;
---
> 		if (shape instanceof org.eclipse.gmf.gmfgraph.Ellipse) {
47a287,288
> 		final org.eclipse.gmf.gmfgraph.Ellipse modelElement = (org.eclipse.gmf.gmfgraph.Ellipse) getModelFigureElement();
> 		if (modelElement == null) {
48,48d286
< import org.eclipse.gmf.gmfgraph.XYLayoutData;
56,56d48
< import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
60,61d51
< import org.eclipse.gmf.runtime.diagram.ui.editpolicies.ResizableShapeEditPolicy;
< import org.eclipse.gmf.runtime.diagram.ui.editpolicies.XYLayoutEditPolicy;
64,64c43,43
< import org.eclipse.gmf.runtime.notation.Bounds;
---
> import org.eclipse.gmf.graphdef.editor.edit.polocies.DomainBasedXYLayoutEditPolicy;
67,67d55
< import org.eclipse.gmf.runtime.notation.Node;
115a104,104
> 		return new DomainBasedXYLayoutEditPolicy(getMapMode());
116,140d103
< 		XYLayoutEditPolicy lep = new XYLayoutEditPolicy() {
< 
< 			protected EditPolicy createChildEditPolicy(EditPart child) {
< 				EditPolicy result = super.createChildEditPolicy(child);
< 				if (result == null) {
< 					return new ResizableShapeEditPolicy();
< 				}
< 				return result;
< 			}
< 
< 			protected Point getLayoutOrigin() {
< 				return ((GraphicalEditPart) getHost()).getContentPane().getClientArea().getLocation();
< 			}
< 
< 			protected Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
< 				Rectangle result = super.getCurrentConstraintFor(child);
< 				if (result == null) {
< 					IFigure fig = child.getFigure();
< 					result = fig.getBounds().getCopy();
< 				}
< 				return result;
< 			}
< 
< 		};
< 		return lep;
149a264,266
> 	protected void setFigure(IFigure figure) {
> 		super.setFigure(figure);
> 		org.eclipse.gmf.gmfgraph.Ellipse modelElement = (org.eclipse.gmf.gmfgraph.Ellipse) getModelFigureElement();
150,150d263
< 		Ellipse modelElement = (Ellipse) ((View) getModel()).getElement();
151a268,276
> 			refreshBounds();
> 			refreshLayoutData();
> 			myFigure.setOutline(modelElement.isOutline());
> 			myFigure.setFill(modelElement.isFill());
> 			myFigure.setLineWidth(modelElement.getLineWidth());
> 			myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			myFigure.setFillXOR(modelElement.isXorFill());
> 			myFigure.setOutlineXOR(modelElement.isXorOutline());
> 			myFigure.setLayoutManager(getLayoutManager(modelElement.getLayout()));
151,151c267,267
< 		if (modelElement != null) {
---
> 		if (modelElement != null) {
152,175d267
< 			{
< 				layoutDataChanged(modelElement.getLayoutData());
< 			}
< 			{
< 				layoutChanged(modelElement.getLayout());
< 			}
< 			{
< 				myFigure.setOutline(modelElement.isOutline());
< 			}
< 			{
< 				myFigure.setFill(modelElement.isFill());
< 			}
< 			{
< 				myFigure.setLineWidth(modelElement.getLineWidth());
< 			}
< 			{
< 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
< 			}
< 			{
< 				myFigure.setFillXOR(modelElement.isXorFill());
< 			}
< 			{
< 				myFigure.setOutlineXOR(modelElement.isXorOutline());
< 			}
176a278,282
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
176,176c277,277
< 		}
---
> 		}
192,192d128
< 		myNodeFigure = result;
247a184,196
> 	protected void handleNotificationEvent(Notification notification) {
> 		Object feature = notification.getFeature();
> 		if (NotationPackage.eINSTANCE.getSize_Width().equals(feature) || NotationPackage.eINSTANCE.getSize_Height().equals(feature) || NotationPackage.eINSTANCE.getLocation_X().equals(feature)
> 				|| NotationPackage.eINSTANCE.getLocation_Y().equals(feature)) {
> 			return;
> 		}
> 		super.handleNotificationEvent(notification);
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public class EllipseFigure extends Ellipse {
248,248d183
< 	public class EllipseFigure extends org.eclipse.draw2d.Ellipse {
284,284d231
< 	// TODO: use myFigure?
288,288d234
< 	protected Figure myNodeFigure;
293,293c235,235
< 	private Collection<Adapter> myDomainElementAdapters = new ArrayList<Adapter>();
---
> 	private Collection<Adapter> myDomainElementAdapters = new ArrayList<Adapter>();
299,301d252
< 		View view = (View) getModel();
< 		if (view.getElement() != null) {
< 			Ellipse modelElement = (Ellipse) view.getElement();
315,315c390,390
< 		View view = (View) getModel();
---
> 		View view = getNotationView();
316,316d390
< 		if (view.getElement() == null) {
320a293,293
> 		ChangeTracker refreshBoundsTracker = new ChangeTracker() {
321,322d292
< 		final Ellipse modelElement = (Ellipse) view.getElement();
< 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(), new AdapterImpl() {
324,324c295,295
< 			public void notifyChanged(Notification msg) {
---
> 			public void modelChanged(Notification msg) {
325,325d295
< 				if (msg.isTouch()) {
326,326c296,296
< 					return;
---
> 				refreshBounds();
327,328d296
< 				}
< 				layoutDataChanged(modelElement.getLayoutData());
330,330c298,298
< 		}));
---
> 		};
331,331c299,299
< 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(), new AdapterImpl() {
---
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getFigure_Location(), refreshBoundsTracker, new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE
331a300,302
> 				.getPoint_X()), new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE.getPoint_Y())));
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize(), refreshBoundsTracker, new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE
> 				.getDimension_Dx()), new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy())));
332a304,307
> 		ChangeTracker refreshLayoutDataTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				refreshLayoutData();
333,333c373,373
< 			public void notifyChanged(Notification msg) {
---
> 			public void modelChanged(Notification msg) {
334,336d373
< 				if (msg.isTouch()) {
< 					return;
< 				}
337,337c374,374
< 				layoutChanged(modelElement.getLayout());
---
> 				myFigure.setLayoutManager(getLayoutManager(modelElement.getLayout()));
338a309,323
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(), refreshLayoutDataTracker, new AttachAdapter(GMFGraphPackage.eINSTANCE
> 				.getXYLayoutData_TopLeft(), refreshLayoutDataTracker, new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getPoint_X()), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getPoint_Y())), new AttachAdapter(GMFGraphPackage.eINSTANCE.getXYLayoutData_Size(), refreshLayoutDataTracker, new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy())), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getBorderLayoutData_Alignment()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE
> 				.getBorderLayoutData_Vertical()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_GrabExcessHorizontalSpace()), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_GrabExcessVerticalSpace()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE
> 				.getGridLayoutData_VerticalAlignment()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_HorizontalAlignment()), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_VerticalSpan()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE
> 				.getGridLayoutData_HorizontalSpan()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_HorizontalIndent()), new AttachAdapter(
> 				GMFGraphPackage.eINSTANCE.getGridLayoutData_SizeHint(), refreshLayoutDataTracker, new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()),
> 				new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy()))));
> 
> 		ChangeTracker outlineTracker = new ChangeTracker() {
339,339c368,368
< 		}));
---
> 		};
340,340c369,369
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(outlineXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorOutline()));
344a328,328
> 		};
345,345d327
< 		}, GMFGraphPackage.eINSTANCE.getShape_Outline()));
346a330,331
> 
> 		ChangeTracker fillTracker = new ChangeTracker() {
346,346c329,329
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(outlineTracker, GMFGraphPackage.eINSTANCE.getShape_Outline()));
350a336,336
> 		};
351,351d335
< 		}, GMFGraphPackage.eINSTANCE.getShape_Fill()));
352a338,339
> 
> 		ChangeTracker lineWidthTracker = new ChangeTracker() {
352,352c337,337
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(fillTracker, GMFGraphPackage.eINSTANCE.getShape_Fill()));
356a344,346
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(lineWidthTracker, GMFGraphPackage.eINSTANCE.getShape_LineWidth()));
> 
357,357d343
< 		}, GMFGraphPackage.eINSTANCE.getShape_LineWidth()));
358,358c347,347
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		ChangeTracker lineStyleTracker = new ChangeTracker() {
362a352,352
> 		};
363,363d351
< 		}, GMFGraphPackage.eINSTANCE.getShape_LineKind()));
364a354,355
> 
> 		ChangeTracker fillXORTracker = new ChangeTracker() {
364,364c353,353
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(lineStyleTracker, GMFGraphPackage.eINSTANCE.getShape_LineKind()));
368a360,360
> 		};
369,369d359
< 		}, GMFGraphPackage.eINSTANCE.getShape_XorFill()));
370,370c361,361
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(fillXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorFill()));
370a362,363
> 
> 		ChangeTracker outlineXORTracker = new ChangeTracker() {
375,413d367
< 		}, GMFGraphPackage.eINSTANCE.getShape_XorOutline()));
< 		modelElement.eAdapters().addAll(myDomainElementAdapters);
< 
< 		final Bounds bounds = (Bounds) ((Node) view).getLayoutConstraint();
< 		final int sizeX;
< 		final int sizeY;
< 		if (modelElement.getPreferredSize() != null) {
< 			sizeX = getMapMode().DPtoLP(modelElement.getPreferredSize().getDx());
< 			sizeY = getMapMode().DPtoLP(modelElement.getPreferredSize().getDy());
< 		} else {
< 			sizeX = getMapMode().DPtoLP(20);
< 			sizeY = getMapMode().DPtoLP(20);
< 		}
< 		final int locationX;
< 		final int locationY;
< 		if (modelElement.getLocation() != null) {
< 			locationX = getMapMode().DPtoLP(modelElement.getLocation().getX());
< 			locationY = getMapMode().DPtoLP(modelElement.getLocation().getY());
< 		} else {
< 			locationX = bounds.getX();
< 			locationY = bounds.getY();
< 		}
< 		if (sizeX != bounds.getWidth() || sizeY != bounds.getHeight() || locationX != bounds.getX() || locationY != bounds.getY()) {
< 			try {
< 				new AbstractEMFOperation(getEditingDomain(), "Synchronizing view size with the model", Collections.singletonMap(Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) { //$NON-NLS-1$
< 
< 					protected IStatus doExecute(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
< 						bounds.setX(locationX);
< 						bounds.setY(locationY);
< 						bounds.setWidth(sizeX);
< 						bounds.setHeight(sizeY);
< 						return Status.OK_STATUS;
< 					}
< 				}.execute(new NullProgressMonitor(), null);
< 			} catch (ExecutionException e) {
< 				GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to synchronize view size with the model", e); //$NON-NLS-1$			
< 			}
< 		}
< 		addListenerFilter("BoundsListener", new NotificationListener() {
414a371,371
> 		ChangeTracker layoutManagerTracker = new ChangeTracker() {
415,417d370
< 			public void notifyChanged(final Notification notification) {
< 				try {
< 					new AbstractEMFOperation(getEditingDomain(), "Synchronizing model size with the view", Collections.singletonMap(Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) { //$NON-NLS-1$
419,493d372
< 						protected IStatus doExecute(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
< 							Bounds bounds = (Bounds) notification.getNotifier();
< 							Dimension dim = modelElement.getPreferredSize();
< 							if (dim == null) {
< 								dim = GMFGraphFactory.eINSTANCE.createDimension();
< 								modelElement.setPreferredSize(dim);
< 							}
< 							org.eclipse.gmf.gmfgraph.Point location = modelElement.getLocation();
< 							if (location == null) {
< 								location = GMFGraphFactory.eINSTANCE.createPoint();
< 								modelElement.setLocation(location);
< 							}
< 
< 							int x = getMapMode().LPtoDP(bounds.getX());
< 							int y = getMapMode().LPtoDP(bounds.getY());
< 							int width = getMapMode().LPtoDP(bounds.getWidth());
< 							int height = getMapMode().LPtoDP(bounds.getHeight());
< 							if (location.getX() != x || location.getY() != y) {
< 								location.setX(x);
< 								location.setY(y);
< 							}
< 							if (dim.getDx() != width || dim.getDy() != height) {
< 								dim.setDx(width);
< 								dim.setDy(height);
< 							}
< 
< 							myNodeFigure.setPreferredSize(bounds.getWidth(), bounds.getHeight());
< 							myNodeFigure.setLocation(new Point(bounds.getX(), bounds.getY()));
< 
< 							if (modelElement.getLayoutData() instanceof XYLayoutData
< 									|| (modelElement.eContainer() instanceof Layoutable && ((Layoutable) modelElement.eContainer()).getLayout() instanceof org.eclipse.gmf.gmfgraph.XYLayout)) {
< 								XYLayoutData xyLayoutData = (XYLayoutData) modelElement.getLayoutData();
< 								if (xyLayoutData == null) {
< 									xyLayoutData = GMFGraphFactory.eINSTANCE.createXYLayoutData();
< 									modelElement.setLayoutData(xyLayoutData);
< 									xyLayoutData.setTopLeft(GMFGraphFactory.eINSTANCE.createPoint());
< 									xyLayoutData.getTopLeft().setX(0);
< 									xyLayoutData.getTopLeft().setY(0);
< 									xyLayoutData.setSize(GMFGraphFactory.eINSTANCE.createDimension());
< 									xyLayoutData.getSize().setDx(40);
< 									xyLayoutData.getSize().setDy(40);
< 								}
< 								org.eclipse.gmf.gmfgraph.Point topLeft;
< 								if (xyLayoutData.getTopLeft() != null) {
< 									topLeft = xyLayoutData.getTopLeft();
< 								} else {
< 									topLeft = GMFGraphFactory.eINSTANCE.createPoint();
< 									xyLayoutData.setTopLeft(topLeft);
< 								}
< 								if (topLeft.getX() != location.getX() || topLeft.getY() != location.getY()) {
< 									topLeft.setX(location.getX());
< 									topLeft.setY(location.getY());
< 								}
< 
< 								Dimension size;
< 								if (xyLayoutData.getSize() != null) {
< 									size = xyLayoutData.getSize();
< 								} else {
< 									size = GMFGraphFactory.eINSTANCE.createDimension();
< 									xyLayoutData.setSize(size);
< 								}
< 								if (size.getDx() != dim.getDx() || size.getDy() != dim.getDy()) {
< 									size.setDx(dim.getDx());
< 									size.setDy(dim.getDy());
< 								}
< 							}
< 							return Status.OK_STATUS;
< 						}
< 					}.execute(new NullProgressMonitor(), null);
< 				} catch (ExecutionException e) {
< 					GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to synchronize model size with the view", e); //$NON-NLS-1$			
< 				}
< 				if (getRoot() != null) {
< 					handleMajorSemanticChange();
< 				}
494a376,388
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(), layoutManagerTracker, new AttachAdapter(GMFGraphPackage.eINSTANCE.getBorderLayout_Spacing(),
> 				layoutManagerTracker, new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE
> 						.getDimension_Dy())), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_Vertical()), new FeatureTracker(layoutManagerTracker,
> 				GMFGraphPackage.eINSTANCE.getFlowLayout_MatchMinorSize()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_ForceSingleLine()), new FeatureTracker(
> 				layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_MajorAlignment()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_MinorAlignment()),
> 				new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_MajorSpacing()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE
> 						.getFlowLayout_MinorSpacing()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getGridLayout_NumColumns()), new FeatureTracker(layoutManagerTracker,
> 						GMFGraphPackage.eINSTANCE.getGridLayout_EqualWidth()), new AttachAdapter(GMFGraphPackage.eINSTANCE.getGridLayout_Margins(), layoutManagerTracker, new FeatureTracker(
> 						layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy())), new AttachAdapter(
> 						GMFGraphPackage.eINSTANCE.getGridLayout_Spacing(), layoutManagerTracker, new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()),
> 						new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy()))));
> 		modelElement.eAdapters().addAll(myDomainElementAdapters);
495,495d375
< 		}, bounds);
620a515,518
> 	protected void refreshBounds() {
> 		org.eclipse.gmf.gmfgraph.Ellipse modelElement = (org.eclipse.gmf.gmfgraph.Ellipse) getModelFigureElement();
> 		if (modelElement == null) {
> 			return;
621,622d514
< 	protected LayoutManager getFigureLayoutManager() {
< 		return myFigure.getLayoutManager();
623a520,521
> 		if (modelElement.getPreferredSize() != null) {
> 			getFigure().setPreferredSize(getDraw2dDimension(modelElement.getPreferredSize()));
624,629d519
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void setFigureLayoutManager(LayoutManager layoutManager) {
< 		myFigure.setLayoutManager(layoutManager);
630a523,524
> 		if (modelElement.getLocation() != null) {
> 			getFigure().setLocation(getDraw2DPoint(modelElement.getLocation()));
631,641d522
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void refreshBounds() {
< 		if (((View) getParent().getModel()).getElement() instanceof AbstractFigure) {
< 			int width = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Width())).intValue();
< 			int height = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Height())).intValue();
< 			myNodeFigure.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(width, height));
< 		} else {
< 			super.refreshBounds();
