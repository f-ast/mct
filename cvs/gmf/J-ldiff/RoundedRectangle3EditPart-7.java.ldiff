24,24c28,28
< import org.eclipse.draw2d.Figure;
---
> import org.eclipse.draw2d.RoundedRectangle;
27,27d25
< import org.eclipse.draw2d.LayoutManager;
33,33d31
< import org.eclipse.draw2d.geometry.Point;
37,37d34
< import org.eclipse.emf.common.notify.impl.AdapterImpl;
40,40d36
< import org.eclipse.gef.EditPart;
42a252,253
> 		org.eclipse.gmf.gmfgraph.RoundedRectangle modelElement = (org.eclipse.gmf.gmfgraph.RoundedRectangle) getModelFigureElement();
> 		if (modelElement != null) {
43,43d251
< import org.eclipse.gmf.gmfgraph.AbstractFigure;
47a285,286
> 		final org.eclipse.gmf.gmfgraph.RoundedRectangle modelElement = (org.eclipse.gmf.gmfgraph.RoundedRectangle) getModelFigureElement();
> 		if (modelElement == null) {
48,48d284
< import org.eclipse.gmf.gmfgraph.Layoutable;
50,50d43
< import org.eclipse.gmf.gmfgraph.RoundedRectangle;
51,51c44,44
< import org.eclipse.gmf.gmfgraph.XYLayoutData;
---
> import org.eclipse.gmf.gmfgraph.Shape;
59,59d52
< import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
63,64d55
< import org.eclipse.gmf.runtime.diagram.ui.editpolicies.ResizableShapeEditPolicy;
< import org.eclipse.gmf.runtime.diagram.ui.editpolicies.XYLayoutEditPolicy;
67,67c47,47
< import org.eclipse.gmf.runtime.notation.Bounds;
---
> import org.eclipse.gmf.graphdef.editor.edit.polocies.DomainBasedXYLayoutEditPolicy;
70,70d59
< import org.eclipse.gmf.runtime.notation.Node;
120a110,110
> 		return new DomainBasedXYLayoutEditPolicy(getMapMode());
121,145d109
< 		XYLayoutEditPolicy lep = new XYLayoutEditPolicy() {
< 
< 			protected EditPolicy createChildEditPolicy(EditPart child) {
< 				EditPolicy result = super.createChildEditPolicy(child);
< 				if (result == null) {
< 					return new ResizableShapeEditPolicy();
< 				}
< 				return result;
< 			}
< 
< 			protected Point getLayoutOrigin() {
< 				return ((GraphicalEditPart) getHost()).getContentPane().getClientArea().getLocation();
< 			}
< 
< 			protected Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
< 				Rectangle result = super.getCurrentConstraintFor(child);
< 				if (result == null) {
< 					IFigure fig = child.getFigure();
< 					result = fig.getBounds().getCopy();
< 				}
< 				return result;
< 			}
< 
< 		};
< 		return lep;
154a263,265
> 	protected void setFigure(IFigure figure) {
> 		super.setFigure(figure);
> 		org.eclipse.gmf.gmfgraph.RoundedRectangle modelElement = (org.eclipse.gmf.gmfgraph.RoundedRectangle) getModelFigureElement();
155,155d262
< 		RoundedRectangle modelElement = (RoundedRectangle) ((View) getModel()).getElement();
156a267,274
> 			myFigure.setOutline(modelElement.isOutline());
> 			myFigure.setFill(modelElement.isFill());
> 			myFigure.setLineWidth(modelElement.getLineWidth());
> 			myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			myFigure.setFillXOR(modelElement.isXorFill());
> 			myFigure.setOutlineXOR(modelElement.isXorOutline());
> 			myFigure.setCornerDimensions(getCornerDimensions(modelElement.getCornerWidth(), modelElement.getCornerHeight()));
> 			myFigure.setLayoutManager(getLayoutManager(modelElement.getLayout()));
156,156c266,266
< 		if (modelElement != null) {
---
> 		if (modelElement != null) {
157,186d266
< 			{
< 				layoutDataChanged(modelElement.getLayoutData());
< 			}
< 			{
< 				layoutChanged(modelElement.getLayout());
< 			}
< 			{
< 				myFigure.setOutline(modelElement.isOutline());
< 			}
< 			{
< 				myFigure.setFill(modelElement.isFill());
< 			}
< 			{
< 				myFigure.setLineWidth(modelElement.getLineWidth());
< 			}
< 			{
< 				myFigure.setLineStyle(getLineStyle(modelElement.getLineKind()));
< 			}
< 			{
< 				myFigure.setFillXOR(modelElement.isXorFill());
< 			}
< 			{
< 				myFigure.setOutlineXOR(modelElement.isXorOutline());
< 			}
< 			{
< 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
< 			}
< 			{
< 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
< 			}
187a276,280
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
187,187c275,275
< 		}
---
> 		}
207,207d138
< 		myNodeFigure = result;
263,263c194,194
< 	public class RoundedRectangleFigure extends org.eclipse.draw2d.RoundedRectangle {
---
> 	public class RoundedRectangleFigure extends RoundedRectangle {
300,300d230
< 	// TODO: use myFigure?
304,304d233
< 	protected Figure myNodeFigure;
308a239,246
> 	private org.eclipse.gmf.gmfgraph.RoundedRectangle getModelFigureElement() {
> 		Shape shape = getShape();
> 		if (shape instanceof org.eclipse.gmf.gmfgraph.RoundedRectangle) {
> 			org.eclipse.gmf.gmfgraph.RoundedRectangle modelFigureElement = (org.eclipse.gmf.gmfgraph.RoundedRectangle) shape;
> 			return modelFigureElement;
> 		}
> 		return null;
> 	}
309,309c234,234
< 	private Collection<Adapter> myDomainElementAdapters = new ArrayList<Adapter>();
---
> 	private Collection<Adapter> myDomainElementAdapters = new ArrayList<Adapter>();
315,317d251
< 		View view = (View) getModel();
< 		if (view.getElement() != null) {
< 			RoundedRectangle modelElement = (RoundedRectangle) view.getElement();
331,331c367,367
< 		View view = (View) getModel();
---
> 		View view = getNotationView();
332,332d367
< 		if (view.getElement() == null) {
336a291,291
> 		ChangeTracker outlineTracker = new ChangeTracker() {
337,356d290
< 		final RoundedRectangle modelElement = (RoundedRectangle) view.getElement();
< 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(), new AdapterImpl() {
< 
< 			public void notifyChanged(Notification msg) {
< 				if (msg.isTouch()) {
< 					return;
< 				}
< 				layoutDataChanged(modelElement.getLayoutData());
< 			}
< 		}));
< 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(), new AdapterImpl() {
< 
< 			public void notifyChanged(Notification msg) {
< 				if (msg.isTouch()) {
< 					return;
< 				}
< 				layoutChanged(modelElement.getLayout());
< 			}
< 		}));
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
360a296,296
> 		};
361,361d295
< 		}, GMFGraphPackage.eINSTANCE.getShape_Outline()));
362a298,299
> 
> 		ChangeTracker fillTracker = new ChangeTracker() {
362,362c297,297
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(outlineTracker, GMFGraphPackage.eINSTANCE.getShape_Outline()));
366a304,304
> 		};
367,367d303
< 		}, GMFGraphPackage.eINSTANCE.getShape_Fill()));
368,368c305,305
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(fillTracker, GMFGraphPackage.eINSTANCE.getShape_Fill()));
368a306,307
> 
> 		ChangeTracker lineWidthTracker = new ChangeTracker() {
372a312,314
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(lineWidthTracker, GMFGraphPackage.eINSTANCE.getShape_LineWidth()));
> 
373,373d311
< 		}, GMFGraphPackage.eINSTANCE.getShape_LineWidth()));
374,374c315,315
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		ChangeTracker lineStyleTracker = new ChangeTracker() {
378a320,320
> 		};
379,379d319
< 		}, GMFGraphPackage.eINSTANCE.getShape_LineKind()));
380,380c321,321
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(lineStyleTracker, GMFGraphPackage.eINSTANCE.getShape_LineKind()));
380a322,323
> 
> 		ChangeTracker fillXORTracker = new ChangeTracker() {
384a328,328
> 		};
385,385d327
< 		}, GMFGraphPackage.eINSTANCE.getShape_XorFill()));
386,386c329,329
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(fillXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorFill()));
386a330,331
> 
> 		ChangeTracker outlineXORTracker = new ChangeTracker() {
390a336,336
> 		};
391,391d335
< 		}, GMFGraphPackage.eINSTANCE.getShape_XorOutline()));
392,392c337,337
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
---
> 		myDomainElementAdapters.add(new FeatureTracker(outlineXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorOutline()));
393a339,339
> 		ChangeTracker cornerDimensionsTracker = new ChangeTracker() {
394,399d338
< 			public void modelChanged(Notification msg) {
< 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
< 				myFigure.repaint();
< 			}
< 		}, GMFGraphPackage.eINSTANCE.getRoundedRectangle_CornerWidth()));
< 		myDomainElementAdapters.add(new FeatureTracker(new ChangeTracker() {
401a342,342
> 				myFigure.setCornerDimensions(getCornerDimensions(modelElement.getCornerWidth(), modelElement.getCornerHeight()));
402,425d341
< 				myFigure.setCornerDimensions(new Dimension(getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())));
< 				myFigure.repaint();
< 			}
< 		}, GMFGraphPackage.eINSTANCE.getRoundedRectangle_CornerHeight()));
< 		modelElement.eAdapters().addAll(myDomainElementAdapters);
< 
< 		final Bounds bounds = (Bounds) ((Node) view).getLayoutConstraint();
< 		final int sizeX;
< 		final int sizeY;
< 		if (modelElement.getPreferredSize() != null) {
< 			sizeX = getMapMode().DPtoLP(modelElement.getPreferredSize().getDx());
< 			sizeY = getMapMode().DPtoLP(modelElement.getPreferredSize().getDy());
< 		} else {
< 			sizeX = getMapMode().DPtoLP(20);
< 			sizeY = getMapMode().DPtoLP(20);
< 		}
< 		final int locationX;
< 		final int locationY;
< 		if (modelElement.getLocation() != null) {
< 			locationX = getMapMode().DPtoLP(modelElement.getLocation().getX());
< 			locationY = getMapMode().DPtoLP(modelElement.getLocation().getY());
< 		} else {
< 			locationX = bounds.getX();
< 			locationY = bounds.getY();
426a344,346
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(cornerDimensionsTracker, GMFGraphPackage.eINSTANCE.getRoundedRectangle_CornerWidth()));
> 		myDomainElementAdapters.add(new FeatureTracker(cornerDimensionsTracker, GMFGraphPackage.eINSTANCE.getRoundedRectangle_CornerHeight()));
427,447d343
< 		if (sizeX != bounds.getWidth() || sizeY != bounds.getHeight() || locationX != bounds.getX() || locationY != bounds.getY()) {
< 			try {
< 				new AbstractEMFOperation(getEditingDomain(), "Synchronizing view size with the model", Collections.singletonMap(Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) { //$NON-NLS-1$
< 
< 					protected IStatus doExecute(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
< 						bounds.setX(locationX);
< 						bounds.setY(locationY);
< 						bounds.setWidth(sizeX);
< 						bounds.setHeight(sizeY);
< 						return Status.OK_STATUS;
< 					}
< 				}.execute(new NullProgressMonitor(), null);
< 			} catch (ExecutionException e) {
< 				GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to synchronize view size with the model", e); //$NON-NLS-1$			
< 			}
< 		}
< 		addListenerFilter("BoundsListener", new NotificationListener() {
< 
< 			public void notifyChanged(final Notification notification) {
< 				try {
< 					new AbstractEMFOperation(getEditingDomain(), "Synchronizing model size with the view", Collections.singletonMap(Transaction.OPTION_UNPROTECTED, Boolean.TRUE)) { //$NON-NLS-1$
448a348,348
> 		ChangeTracker layoutManagerTracker = new ChangeTracker() {
449,501d347
< 						protected IStatus doExecute(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
< 							Bounds bounds = (Bounds) notification.getNotifier();
< 							org.eclipse.gmf.gmfgraph.Dimension dim = modelElement.getPreferredSize();
< 							if (dim == null) {
< 								dim = GMFGraphFactory.eINSTANCE.createDimension();
< 								modelElement.setPreferredSize(dim);
< 							}
< 							org.eclipse.gmf.gmfgraph.Point location = modelElement.getLocation();
< 							if (location == null) {
< 								location = GMFGraphFactory.eINSTANCE.createPoint();
< 								modelElement.setLocation(location);
< 							}
< 
< 							int x = getMapMode().LPtoDP(bounds.getX());
< 							int y = getMapMode().LPtoDP(bounds.getY());
< 							int width = getMapMode().LPtoDP(bounds.getWidth());
< 							int height = getMapMode().LPtoDP(bounds.getHeight());
< 							if (location.getX() != x || location.getY() != y) {
< 								location.setX(x);
< 								location.setY(y);
< 							}
< 							if (dim.getDx() != width || dim.getDy() != height) {
< 								dim.setDx(width);
< 								dim.setDy(height);
< 							}
< 
< 							myNodeFigure.setPreferredSize(bounds.getWidth(), bounds.getHeight());
< 							myNodeFigure.setLocation(new Point(bounds.getX(), bounds.getY()));
< 
< 							if (modelElement.getLayoutData() instanceof XYLayoutData
< 									|| (modelElement.eContainer() instanceof Layoutable && ((Layoutable) modelElement.eContainer()).getLayout() instanceof org.eclipse.gmf.gmfgraph.XYLayout)) {
< 								XYLayoutData xyLayoutData = (XYLayoutData) modelElement.getLayoutData();
< 								if (xyLayoutData == null) {
< 									xyLayoutData = GMFGraphFactory.eINSTANCE.createXYLayoutData();
< 									modelElement.setLayoutData(xyLayoutData);
< 									xyLayoutData.setTopLeft(GMFGraphFactory.eINSTANCE.createPoint());
< 									xyLayoutData.getTopLeft().setX(0);
< 									xyLayoutData.getTopLeft().setY(0);
< 									xyLayoutData.setSize(GMFGraphFactory.eINSTANCE.createDimension());
< 									xyLayoutData.getSize().setDx(40);
< 									xyLayoutData.getSize().setDy(40);
< 								}
< 								org.eclipse.gmf.gmfgraph.Point topLeft;
< 								if (xyLayoutData.getTopLeft() != null) {
< 									topLeft = xyLayoutData.getTopLeft();
< 								} else {
< 									topLeft = GMFGraphFactory.eINSTANCE.createPoint();
< 									xyLayoutData.setTopLeft(topLeft);
< 								}
< 								if (topLeft.getX() != location.getX() || topLeft.getY() != location.getY()) {
< 									topLeft.setX(location.getX());
< 									topLeft.setY(location.getY());
< 								}
502a350,351
> 			public void modelChanged(Notification msg) {
> 				myFigure.setLayoutManager(getLayoutManager(modelElement.getLayout()));
503,523d349
< 								org.eclipse.gmf.gmfgraph.Dimension size;
< 								if (xyLayoutData.getSize() != null) {
< 									size = xyLayoutData.getSize();
< 								} else {
< 									size = GMFGraphFactory.eINSTANCE.createDimension();
< 									xyLayoutData.setSize(size);
< 								}
< 								if (size.getDx() != dim.getDx() || size.getDy() != dim.getDy()) {
< 									size.setDx(dim.getDx());
< 									size.setDy(dim.getDy());
< 								}
< 							}
< 							return Status.OK_STATUS;
< 						}
< 					}.execute(new NullProgressMonitor(), null);
< 				} catch (ExecutionException e) {
< 					GMFGraphDiagramEditorPlugin.getInstance().logError("Unable to synchronize model size with the view", e); //$NON-NLS-1$			
< 				}
< 				if (getRoot() != null) {
< 					handleMajorSemanticChange();
< 				}
524a353,365
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_Layout(), layoutManagerTracker, new AttachAdapter(GMFGraphPackage.eINSTANCE.getBorderLayout_Spacing(),
> 				layoutManagerTracker, new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE
> 						.getDimension_Dy())), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_Vertical()), new FeatureTracker(layoutManagerTracker,
> 				GMFGraphPackage.eINSTANCE.getFlowLayout_MatchMinorSize()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_ForceSingleLine()), new FeatureTracker(
> 				layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_MajorAlignment()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_MinorAlignment()),
> 				new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getFlowLayout_MajorSpacing()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE
> 						.getFlowLayout_MinorSpacing()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getGridLayout_NumColumns()), new FeatureTracker(layoutManagerTracker,
> 						GMFGraphPackage.eINSTANCE.getGridLayout_EqualWidth()), new AttachAdapter(GMFGraphPackage.eINSTANCE.getGridLayout_Margins(), layoutManagerTracker, new FeatureTracker(
> 						layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()), new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy())), new AttachAdapter(
> 						GMFGraphPackage.eINSTANCE.getGridLayout_Spacing(), layoutManagerTracker, new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()),
> 						new FeatureTracker(layoutManagerTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy()))));
> 		modelElement.eAdapters().addAll(myDomainElementAdapters);
525,525d352
< 		}, bounds);
651,677d491
< 	protected LayoutManager getFigureLayoutManager() {
< 		return myFigure.getLayoutManager();
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void setFigureLayoutManager(LayoutManager layoutManager) {
< 		myFigure.setLayoutManager(layoutManager);
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void refreshBounds() {
< 		if (((View) getParent().getModel()).getElement() instanceof AbstractFigure) {
< 			int width = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Width())).intValue();
< 			int height = ((Integer) getStructuralFeatureValue(NotationPackage.eINSTANCE.getSize_Height())).intValue();
< 			myNodeFigure.setPreferredSize(new Dimension(width, height));
< 		} else {
< 			super.refreshBounds();
< 		}
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
