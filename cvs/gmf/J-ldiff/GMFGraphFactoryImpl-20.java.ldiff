112a113,114
> 			case GMFGraphPackage.SVG_FIGURE: return createSVGFigure();
> 			case GMFGraphPackage.SVG_PROPERTY: return createSVGProperty();
135a138,139
> 			case GMFGraphPackage.SVG_PROPERTY_TYPE:
> 				return createSVGPropertyTypeFromString(eDataType, initialValue);
158a163,164
> 			case GMFGraphPackage.SVG_PROPERTY_TYPE:
> 				return convertSVGPropertyTypeToString(eDataType, instanceValue);
688a695,714
> 	public SVGFigure createSVGFigure() {
> 		SVGFigureImpl svgFigure = new SVGFigureImpl();
> 		return svgFigure;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public SVGProperty createSVGProperty() {
> 		SVGPropertyImpl svgProperty = new SVGPropertyImpl();
> 		return svgProperty;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
788a815,834
> 	public SVGPropertyType createSVGPropertyTypeFromString(EDataType eDataType, String initialValue) {
> 		SVGPropertyType result = SVGPropertyType.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertSVGPropertyTypeToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
