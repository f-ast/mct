2,2c2,2
<  * Copyright (c) 2002, 2007 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2008 IBM Corporation and others.
17a18,18
> import org.eclipse.draw2d.PositionConstants;
18a20,20
> import org.eclipse.draw2d.geometry.Dimension;
30a33,33
> import org.eclipse.gmf.runtime.diagram.ui.internal.ruler.SnapToHelperUtil;
33a37,37
> import org.eclipse.swt.events.KeyEvent;
252a257,303
>     /**
>      * Overridden to add extended data to the request to restrict snapping to
>      * specific directions based on the move delta.
>      */
>     protected void snapPoint(ChangeBoundsRequest request) {
>         Point moveDelta = request.getMoveDelta();
>         if (getState() == STATE_ACCESSIBLE_DRAG_IN_PROGRESS) {
>             int restrictedDirection = 0;
> 
>             if (moveDelta.x > 0) {
>                 restrictedDirection = restrictedDirection
>                     | PositionConstants.EAST;
>             } else if (moveDelta.x < 0) {
>                 restrictedDirection = restrictedDirection
>                     | PositionConstants.WEST;
>             }
> 
>             if (moveDelta.y > 0) {
>                 restrictedDirection = restrictedDirection
>                     | PositionConstants.SOUTH;
>             } else if (moveDelta.y < 0) {
>                 restrictedDirection = restrictedDirection
>                     | PositionConstants.NORTH;
>             }
> 
>             request.getExtendedData().put(SnapToHelperUtil.RESTRICTED_DIRECTIONS,
>                 restrictedDirection);
>         }
> 
>         super.snapPoint(request);
>     }
>     
>     protected boolean handleKeyDown(KeyEvent e) {
>         if (acceptArrowKey(e)) {
>             if (isInState(STATE_INITIAL)) {
>                 IGraphicalEditPart ep = (IGraphicalEditPart) getSourceEditPart();
>                 if (ep != null) {
>                     Point location = ep.getFigure().getBounds().getCenter();
>                     ep.getFigure().translateToAbsolute(location);
>                     placeMouseInViewer(location);       
>                     getCurrentInput().setMouseLocation(location.x, location.y);
>                 }
>             }
>         }
>         return super.handleKeyDown(e);
>     }
> 
