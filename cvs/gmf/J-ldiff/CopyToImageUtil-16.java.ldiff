2,2c2,2
<  * Copyright (c) 2005, 2007 IBM Corporation and others.
---
>  * Copyright (c) 2005, 2008 IBM Corporation and others.
47a48,49
> import org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.SVGImage;
> import org.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.SVGImageConverter;
199,199c201,201
<         if (format.equals(ImageFileFormat.SVG)) {
---
>         if (format.equals(ImageFileFormat.SVG) || format.equals(ImageFileFormat.PDF)) {
230a233,233
> 				|| format.equals(ImageFileFormat.PDF)) {
230,230c232,232
< 		if (format.equals(ImageFileFormat.SVG)) {
---
> 		if (format.equals(ImageFileFormat.SVG)
233,233c236,236
< 			saveSVGToFile(destination, (DiagramSVGGenerator) gen, monitor);
---
> 			saveToFile(destination, (DiagramSVGGenerator) gen, format, monitor);
321a326,346
> 		saveToFile(destination, generator, ImageFileFormat.SVG, monitor);
> 	}
>         
>     
>     /**
> 	 * Saves an SVG or PDF files.
> 	 * 
> 	 * @param destination
> 	 *            the destination file, including path and file name
> 	 * @param generator
> 	 *            the svg generator for a diagram, used to write
> 	 * @param format
> 	 *            currently supports SVG or PDF
> 	 * @param monitor
> 	 *            the progress monitor
> 	 * @exception CoreException
> 	 *                if this method fails
> 	 */
>     protected void saveToFile(IPath destination,
>             DiagramSVGGenerator generator, ImageFileFormat format, IProgressMonitor monitor)
>         throws CoreException {
328,328c310,310
<         
---
>     
331a382,383
>   
>     
332,332c384,384
< 
---
> 
335a359,361
> 			if (format == ImageFileFormat.PDF) {
> 				SVGImageConverter.exportToPDF((SVGImage) generator.getRenderedImage(), os);
> 			} else if (format == ImageFileFormat.SVG) {
336a363,366
> 			} else {
> 				throw new IllegalArgumentException(
> 						"Unexpected format: " + format.getName()); //$NON-NLS-1$
> 			}
344a375,375
> 			IStatus status = new Status(IStatus.ERROR,
345,345d374
<             IStatus status =
346,346c376,376
<                 new Status(IStatus.ERROR, "exportToFile", IStatus.OK, //$NON-NLS-1$
---
> 					"exportToFile", IStatus.OK, //$NON-NLS-1$
