14a15,17
> import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
> import org.eclipse.gmf.runtime.notation.View;
> import org.eclipse.jface.util.Assert;
25a29,46
> 	/** cached view. */
> 	private final View view;
> 	
> 	/** a dummy caching key */
> 	private static final String dummyHiny = "dummy";  //$NON-NLS-1$
> 
> 	/**
> 	 * Constructor. Caches the supplied view.
> 	 * 
> 	 * @param view
> 	 *            the view element to be <i>controlled </i> by the created
> 	 *            editpart.
> 	 */
> 	protected EditPartOperation(View view) {
> 		Assert.isNotNull(view);
> 		this.view = view;
> 	}
> 	
40a62,63
> 	 * gets the cached view.
> 	 * @return the notation View
41,43d61
< 	 * Determines the caching key for this operation.
< 	 * 
< 	 * @return a string to be used as the caching key
44a65,82
> 	public final View getView() {
> 		return view;
> 	}
> 
> 	/* (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.EditPartOperation#determineCachingKey()
> 	 */
> 	protected String determineCachingKey() {
> 		String type = getView().getType();
> 		if (type != null && type.length() > 0)
> 			return type;
> 	
> 		String classId = ViewUtil.getSemanticElementClassId(getView());
> 		if (classId != null)
> 			return classId;
> 	
> 		return dummyHiny;
> 	}
45,45d64
< 	protected abstract String determineCachingKey();
