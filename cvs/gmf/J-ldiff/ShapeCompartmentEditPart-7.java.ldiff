47,47c52,52
< import org.eclipse.gmf.runtime.diagram.ui.editpolicies.ActionBarEditPolicy;
---
> import org.eclipse.gmf.runtime.diagram.ui.editpolicies.PopupBarEditPolicy;
63a66,67
>  * A generic (sub) shape container that holds instances of
>  * <code>ShapeNodeEditPart</code>s and manages the display of
64,64d65
<  * A generic (sub) shape container that holds instances of <code>ShapeNodeEditPart</code>s and
65,65c68,68
<  * manages the display of <code>ConnectionNodeEditPart</code>s anchored to these shape editpart 
---
>  * <code>ConnectionNodeEditPart</code>s anchored to these shape editpart
69a73,75
> public abstract class ShapeCompartmentEditPart
> 	extends ResizableCompartmentEditPart
> 	implements ISurfaceEditPart, PropertyChangeListener {
70,70d72
< public abstract class ShapeCompartmentEditPart extends ResizableCompartmentEditPart implements ISurfaceEditPart, PropertyChangeListener {
72,72c77,77
< 	/** private connector refresh manager. */
---
> 	/** private connection refresh manager. */
73,73c78,78
< 	private ConnectorRefreshMgr _crMgr;
---
> 	private ConnectionRefreshMgr _crMgr;
80a86,86
> 	 * compartment's children. This implementation will hide all connections
80,80c85,85
< 	 * Class used to refresh the connectors associated to the shape compartment's
---
> 	 * Class used to refresh the connections associated to the shape
81,81d85
< 	 * children.  This implementation will hide all connectors whose endpoints are
82,82c87,87
< 	 * not visible inside the shape compartment.
---
> 	 * whose endpoints are not visible inside the shape compartment.
84,84c89,89
< 	public static class ConnectorRefreshMgr {
---
> 	public static class ConnectionRefreshMgr {
84a90,90
> 
86,86c92,92
< 		 * Cycles through all the connectors associated to the editparts contained within
---
> 		 * Cycles through all the connections associated to the editparts
87,87c93,93
< 		 * the passed shape compartment and sets their visibility. 
---
> 		 * contained within the passed shape compartment and sets their
87a94,95
> 		 * visibility.
> 		 * 
89a98,98
> 		 * @param scep
90,90c99,99
< 		 * @param scep edit part to consider
---
> 		 *            edit part to consider
92,92c101,101
< 		protected void refreshConnectors(ShapeCompartmentEditPart scep) {
---
> 		protected void refreshConnections(ShapeCompartmentEditPart scep) {
96,96c105,105
< 				ConnectionNodeEditPart cep = (ConnectionNodeEditPart)connectionNodes.next();
---
> 				ConnectionNodeEditPart cep = (ConnectionNodeEditPart) connectionNodes
96a106,107
> 					.next();
> 				Connection connection = (Connection) cep.getFigure();
97,99d105
< 				Connection connector =
< 					(Connection)cep.getFigure();
< 				IGraphicalEditPart source =
100,100c108,108
< 					(IGraphicalEditPart)getSourceEditPart(cep);
---
> 				IGraphicalEditPart source = (IGraphicalEditPart) getSourceEditPart(cep);
101,101d108
< 				IGraphicalEditPart target =
102,102c109,109
< 					(IGraphicalEditPart)getTargetEditPart(cep);
---
> 				IGraphicalEditPart target = (IGraphicalEditPart) getTargetEditPart(cep);
114,114c121,121
< 				// get the connector locations
---
> 				// get the connection locations
118,118c13,13
< 
---
> 
121a128,128
> 					.get(diagram);
121,121c127,127
< 				IGraphicalEditPart dep = (IGraphicalEditPart)registry.get(diagram);
---
> 				IGraphicalEditPart dep = (IGraphicalEditPart) registry
122,122c129,129
< 				IFigure stopFigure = dep == null ? null : dep.getContentPane();
---
> 				IFigure stopFigure = dep == null ? null
122a130,130
> 					: dep.getContentPane();
125,125c133,133
< 				// if sContainer is null, then the source connector is a child of the diagram and not
---
> 				// if sContainer is null, then the source connection is a child
125a134,134
> 				// of the diagram and not
128a138,138
> 						.getShapeCompartmentFigure();
128,128c137,137
< 					ShapeCompartmentFigure fig = sContainer.getShapeCompartmentFigure();
---
> 					ShapeCompartmentFigure fig = sContainer
135,135c145,145
< 				// if tContainer is null, then the source connector is a child of the diagram and not
---
> 				// if tContainer is null, then the source connection is a child
135a146,146
> 				// of the diagram and not
138a150,150
> 						.getShapeCompartmentFigure();
138,138c149,149
< 					ShapeCompartmentFigure fig = tContainer.getShapeCompartmentFigure();
---
> 					ShapeCompartmentFigure fig = tContainer
143a156,157
> 				// set connection visibility true iff both anchor points are
> 				// visible
144,144d155
< 				// set connector visibility true iff both anchor points are visible
145,145c158,158
< 				connector.setVisible(sfVisible && tfVisible);
---
> 				connection.setVisible(sfVisible && tfVisible);
149a164,166
> 		 * supplied shape compartment.
> 		 * 
> 		 * @param scep
149,149c163,163
< 		 * Return the set of {@link ConnectionNodeEditPart}s
---
> 		 * Return the set of {@link ConnectionNodeEditPart}s contained in the
150,150d163
< 		 * contained in the supplied shape compartment.
151,151c167,167
< 		 * @param scep a shape compartment.
---
> 		 *            a shape compartment.
157a174,174
> 			if (scep.getViewer() == null || modelObject == null
158,159d173
< 			if (scep.getViewer() == null ||
< 				modelObject  == null || 
160,160c175,175
< 				!(modelObject instanceof View)) {
---
> 				|| !(modelObject instanceof View)) {
167,167c182,182
< 			Iterator connectors = edges.iterator();
---
> 			Iterator edgesIterator = edges.iterator();
168a184,185
> 			while (edgesIterator.hasNext()) {
> 				Edge edge = (Edge) edgesIterator.next();
169,170d183
< 			while( connectors.hasNext() ) {
< 				Edge connector = (Edge)connectors.next();
171,171c186,186
< 				EditPart endPoint = (EditPart)registry.get(connector.getSource() );
---
> 				EditPart endPoint = (EditPart) registry.get(edge.getSource());
173,173c188,188
< 					Object cep = registry.get(connector);
---
> 					Object cep = registry.get(edge);
179,179c194,194
< 				endPoint = (EditPart)registry.get(connector.getTarget());
---
> 				endPoint = (EditPart) registry.get(edge.getTarget());
181,181c196,196
< 					Object cep = registry.get(connector);
---
> 					Object cep = registry.get(edge);
189a64,64
> 
190,190d63
< 		
192a207,211
> 		 * otherwise <tt>false</tt>
> 		 * 
> 		 * @param parent
> 		 *            parent to consider
> 		 * @param child
192,192c206,206
< 		 * Return <tt>true</tt> if <tt>parent</tt> child's ancestor; otherwise <tt>false</tt>
---
> 		 * Return <tt>true</tt> if <tt>parent</tt> child's ancestor;
193,193d206
< 		 * @param parent parent to consider
194,194c212,212
< 		 * @param child child to consider
---
> 		 *            child to consider
206a225,226
> 		 * 
> 		 * @param ep
207,207c227,227
< 		 * @param ep edit part 
---
> 		 *            edit part
211a232,232
> 			while (walker != null
212,212c233,233
< 			while ( walker != null && !(walker instanceof ShapeCompartmentEditPart) ) {
---
> 				&& !(walker instanceof ShapeCompartmentEditPart)) {
219,219c240,240
< 		 * This method can be overridden to allow connections between border items to be
---
> 		 * This method can be overridden to allow connections between border
220,220c241,241
< 		 * drawn to items within the interior of the compartment.  
---
> 		 * items to be drawn to items within the interior of the compartment.
224a246,246
> 		 *         items.
224,224c245,245
< 		 * @return false by default.  Override to allow connections to border items.
---
> 		 * @return false by default. Override to allow connections to border
226,226c248,248
< 		protected boolean isBorderItem( ShapeCompartmentEditPart scep, IGraphicalEditPart itemEditPart ) {
---
> 		protected boolean isBorderItem(ShapeCompartmentEditPart scep,
226a249,249
> 				IGraphicalEditPart itemEditPart) {
234a259,259
> 		protected EditPart getSourceEditPart(
235,235c260,260
< 		protected EditPart getSourceEditPart(ConnectionEditPart connectionEditPart) {
---
> 				ConnectionEditPart connectionEditPart) {
237a263,263
> 
239a266,266
> 		 * 
242a270,270
> 		protected EditPart getTargetEditPart(
243,243c271,271
< 		protected EditPart getTargetEditPart(ConnectionEditPart connectionEditPart) {
---
> 				ConnectionEditPart connectionEditPart) {
248a277,278
> 		 * 
> 		 * @param editPart
249,249c279,279
< 		 * @param editPart edit part to consider
---
> 		 *            edit part to consider
254a285,285
> 
256a288,289
> 		 * 
> 		 * @param editPart
257,257c290,290
< 		 * @param editPart edit part to consider
---
> 		 *            edit part to consider
267a301,304
> 		 * 
> 		 * @param figure
> 		 *            The figure under test.
> 		 * @param loc
268,268d300
< 		 * @param figure The figure under test.
269,269c305,305
< 		 * @param loc the child's location in absolute coordinates.
---
> 		 *            the child's location in absolute coordinates.
278a315,318
> 		 * 
> 		 * @param figure
> 		 *            The figure under test.
> 		 * @param loc
279,279d314
< 		 * @param figure The figure under test.
280,280c319,319
< 		 * @param loc the child's location in absolute coordinates.
---
> 		 *            the child's location in absolute coordinates.
280a320,320
> 		 * @param stopFigure
281,281c321,321
< 		 * @param stopFigure root figure in the figure hierarchy being tested.
---
> 		 *            root figure in the figure hierarchy being tested.
284a325,325
> 				final Point loc, final IFigure stopFigure) {
284,284c324,324
< 		protected boolean isFigureVisible(final IFigure figure, final Point loc, final IFigure stopFigure) {
---
> 		protected boolean isFigureVisible(final IFigure figure,
287,287d327
< 			}
288,288c328,328
< 			else {
---
> 			} else {
304,304c161,161
< 	
---
> 
306a346,347
> 	 * 
> 	 * @param view
307,307c348,348
< 	 * @param view the view <code>controlled</code> by this editpart.
---
> 	 *            the view <code>controlled</code> by this editpart.
314,314c355,355
< 	 * Returns the connector refresh manager.
---
> 	 * Returns the connection refresh manager.
314a356,356
> 	 * 
315,315c357,357
< 	 * @return <code>ConnectorRefreshMgr</code> 
---
> 	 * @return <code>ConnectionRefreshMgr</code>
317,317c359,359
< 	protected final ConnectorRefreshMgr getConnectorRefreshMgr() {
---
> 	protected final ConnectionRefreshMgr getConnectionRefreshMgr() {
319,319c361,361
< 			_crMgr = createConnectorRefreshMgr();
---
> 			_crMgr = createConnectionRefreshMgr();
324a367,369
> 	 * Factory method to create a refresh connection. This implementation
> 	 * returns a {@link ShapeCompartmentEditPart.ConnectionRefreshMgr} instance.
> 	 * 
325,326d366
< 	 * Factory method to create a refresh connector.  This implementation returns
< 	 * a {@link ShapeCompartmentEditPart.ConnectorRefreshMgr} instance.
327,327c370,370
< 	 * @return <code>ConnectorRefreshMgr</code>
---
> 	 * @return <code>ConnectionRefreshMgr</code>
328a372,373
> 	protected ConnectionRefreshMgr createConnectionRefreshMgr() {
> 		return new ConnectionRefreshMgr();
329,330d371
< 	protected ConnectorRefreshMgr createConnectorRefreshMgr() {
< 		return new ConnectorRefreshMgr();
334,334c377,377
< 	 * Returns the layout manager to be used by this shape compartment.
---
> 	 * Returns the layout manager to be used by this shape compartment. This
335,335c378,378
< 	 * This implemantion returns a {@link FreeformLayout} instance.
---
> 	 * implemantion returns a {@link FreeformLayout} instance.
335a379,379
> 	 * 
340a385,385
> 
342,342c387,387
< 	 * Creates a scrollpane (with auto scrollbars) in which the children are drawn.
---
> 	 * Creates a scrollpane (with auto scrollbars) in which the children are
343,343c388,388
< 	 * The factory hint property is used to set this compartments label.
---
> 	 * drawn. The factory hint property is used to set this compartments label.
351a397,397
> 	 * Convenience method to retrieve the shape compartment figure. Same as
352,352d396
< 	 * Convenience method to retrieve the shape compartment figure.
353a399,399
> 	 * 
353,353c398,398
< 	 * Same as calling <code>(ShapeCompartmentFigure)getCompartmentFigure()</code>.
---
> 	 * calling <code>(ShapeCompartmentFigure)getCompartmentFigure()</code>.
370a417,418
> 	 * <LI> {@link EditPolicyRoles#DRAG_DROP_ROLE} ::
> 	 * {@link DiagramLinkDragDropEditPolicy}
371,371d416
< 	 * <LI> {@link EditPolicyRoles#DRAG_DROP_ROLE} :: {@link DiagramLinkDragDropEditPolicy}
372a420,420
> 	 * {@link ContainerNodeEditPolicy}
372,372c419,419
< 	 * <LI> {@link EditPolicy#GRAPHICAL_NODE_ROLE} :: {@link ContainerNodeEditPolicy}
---
> 	 * <LI> {@link EditPolicy#GRAPHICAL_NODE_ROLE} ::
373a422,425
> 	 * <LI> {@link EditPolicyRoles#SNAP_FEEDBACK_ROLE} ::
> 	 * {@link SnapFeedbackPolicy}
> 	 * <LI> {@link EditPolicyRoles#DRAG_DROP_ROLE} ::
> 	 * {@link ShapeCompartmentDropEditPolicy}
374,375d421
< 	 * <LI> {@link EditPolicyRoles#SNAP_FEEDBACK_ROLE} :: {@link SnapFeedbackPolicy}
< 	 * <LI> {@link EditPolicyRoles#DRAG_DROP_ROLE} :: {@link ShapeCompartmentDropEditPolicy}
376,376c426,426
< 	 * <LI> {@link EditPolicyRoles#ACTIONBAR_ROLE} :: {@link ActionBarEditPolicy}
---
> 	 * <LI> {@link EditPolicyRoles#POPUPBAR_ROLE} :: {@link PopupBarEditPolicy}
381a432,432
> 			new CreationEditPolicy());
381,381c431,431
< 		installEditPolicy(EditPolicyRoles.CREATION_ROLE,new CreationEditPolicy());
---
> 		installEditPolicy(EditPolicyRoles.CREATION_ROLE,
384a436,436
> 		// function
384,384c435,435
< 		// TODO: this edit policy get overriden by code at the end of this function 
---
> 		// TODO: this edit policy get overriden by code at the end of this
385a438,439
> 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE,
> 			new DiagramLinkDragDropEditPolicy());
386,387d437
< 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DiagramLinkDragDropEditPolicy());
< 		installEditPolicy(
388,388c440,440
< 			EditPolicy.GRAPHICAL_NODE_ROLE,
---
> 		installEditPolicy(EditPolicy.GRAPHICAL_NODE_ROLE,
391,391c443,443
< 		installEditPolicy(EditPolicyRoles.SNAP_FEEDBACK_ROLE, new SnapFeedbackPolicy());
---
> 		installEditPolicy(EditPolicyRoles.SNAP_FEEDBACK_ROLE,
391a444,446
> 			new SnapFeedbackPolicy());
> 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE,
> 			new ShapeCompartmentDropEditPolicy());
392,392d443
< 		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new ShapeCompartmentDropEditPolicy());
393a448,448
> 			new PopupBarEditPolicy());
393,393c447,447
< 		installEditPolicy(EditPolicyRoles.ACTIONBAR_ROLE, new ActionBarEditPolicy());
---
> 		installEditPolicy(EditPolicyRoles.POPUPBAR_ROLE,
398a454,455
> 	 * 
> 	 * @param event
399,399c456,456
< 	 * @param event a property change event.
---
> 	 *            a property change event.
404a462,462
> 			refreshConnections();
405,405d461
< 			refreshConnectors();
409a467,469
> 	 * Refreshes the connections inside the shape compartment if the supplied
> 	 * event is for an element inserted or removed from the editpart.
> 	 * 
410,412d466
< 	 * Refreshes the connectors inside the shape compartment 
< 	 * if the supplied event is for an element inserted or
< 	 * removed from the editpart.
413,413c470,470
< 	 * @see #refreshConnectors()
---
> 	 * @see #refreshConnections()
413a471,471
> 	 * @param event
414,414c472,472
< 	 * @param event a model server event.
---
> 	 *            a model server event.
419a478,478
> 			refreshConnections();
420,420d477
< 			refreshConnectors();
424,424c482,482
< 		if (NotificationUtil.isElementAddedToSlot(event) ||
---
> 		if (NotificationUtil.isElementAddedToSlot(event)
425,425c483,483
< 			NotificationUtil.isElementRemovedFromSlot(event) ) {
---
> 			|| NotificationUtil.isElementRemovedFromSlot(event)) {
426,426c484,484
< 			refreshConnectors();
---
> 			refreshConnections();
429a488,491
> 	/**
> 	 * Refresh the connections associated the the children of this shape
> 	 * compartment.
> 	 */
430,431d487
< 	
< 	/** Refresh the connectors associated the the children of this shape compartment. */
432,432c492,492
< 	protected void refreshConnectors() {
---
> 	protected void refreshConnections() {
435a496,496
> 
439a501,501
> 						// deleted
439,439c500,500
< 						// test if active since the editpartg may have been deleted
---
> 						// test if active since the editpartg may have been
442,442c504,504
< 							getConnectorRefreshMgr().refreshConnectors(ShapeCompartmentEditPart.this);
---
> 							getConnectionRefreshMgr().refreshConnections(
442a505,505
> 								ShapeCompartmentEditPart.this);
443,443d504
< 						}
445,445c507,507
< 					finally {
---
> 					} finally {
459a522,523
> 			figureCanvas.getViewport().getVerticalRangeModel()
> 				.removePropertyChangeListener(this);
460,460d521
< 			figureCanvas.getViewport().getVerticalRangeModel().removePropertyChangeListener(this);
461a525,525
> 				.removePropertyChangeListener(this);
461,461c524,524
< 			figureCanvas.getViewport().getHorizontalRangeModel().removePropertyChangeListener(this);
---
> 			figureCanvas.getViewport().getHorizontalRangeModel()
472a537,538
> 			figureCanvas.getViewport().getVerticalRangeModel()
> 				.addPropertyChangeListener(this);
473,473d536
< 			figureCanvas.getViewport().getVerticalRangeModel().addPropertyChangeListener(this);
474a540,540
> 				.addPropertyChangeListener(this);
474,474c539,539
< 			figureCanvas.getViewport().getHorizontalRangeModel().addPropertyChangeListener(this);
---
> 			figureCanvas.getViewport().getHorizontalRangeModel()
478a545,546
> 	 * Determines if the shape compartment supports drag selection of it's
> 	 * children. Otherwise, it will default to the core behavior of selecting
479,479d544
< 	 * Determines if the shape compartment supports drag selection of it's children.  Otherwise, it will default
480,480c547,547
< 	 * to the core behavior of selecting the compartment itself on click on the compartment background surface.
---
> 	 * the compartment itself on click on the compartment background surface.
482a550,550
> 	 *         supports drag selection of it's children, <code>false</code>
482,482c549,549
< 	 * @return <code>boolean</code> <code>true</code> if shape compartment supports drag selection of it's children,
---
> 	 * @return <code>boolean</code> <code>true</code> if shape compartment
483,483c551,551
< 	 * <code>false</code> otherwise.
---
> 	 *         otherwise.
498a567,567
> 
504a574,574
> 
524,524c594,594
< 			Boolean val = (Boolean)getViewer().getProperty(RulerProvider.PROPERTY_RULER_VISIBILITY);
---
> 			Boolean val = (Boolean) getViewer().getProperty(
524a595,595
> 				RulerProvider.PROPERTY_RULER_VISIBILITY);
528a600,600
> 				SnapToGeometry.PROPERTY_SNAP_ENABLED);
528,528c599,599
< 			val = (Boolean)getViewer().getProperty(SnapToGeometry.PROPERTY_SNAP_ENABLED);
---
> 			val = (Boolean) getViewer().getProperty(
530a603,603
> 					.getParent()));
530,530c602,602
< 				snapStrategies.add(new SnapToGrid((GraphicalEditPart)this.getParent()));
---
> 				snapStrategies.add(new SnapToGrid((GraphicalEditPart) this
547,547c620,620
< 	/** Also calls {@link #refreshConnectors()}. */
---
> 	/** Also calls {@link #refreshConnections()}. */
549a623,623
> 		refreshConnections();
550,550d622
< 		refreshConnectors();
552a626,626
> 	/*
553,553d625
< 	
554,554c627,627
< 	/* (non-Javadoc)
---
> 	 * (non-Javadoc)
559a633,633
> 	/*
560,560c634,634
< 	/* (non-Javadoc)
---
> 	 * (non-Javadoc)
560a635,635
> 	 * 
575a255,255
> 		 * 
576,576d254
< 
