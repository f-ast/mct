33a34,34
> import org.eclipse.gmf.gmfgraph.Point;
52a54,54
> import org.eclipse.gmf.graphdef.editor.edit.parts.PointEditPart;
91a94,95
> 		case PolylineEditPart.VISUAL_ID:
> 			return getPolyline_3014SemanticChildren(view);
95a100,101
> 		case Polyline2EditPart.VISUAL_ID:
> 			return getPolyline_3017SemanticChildren(view);
101a108,109
> 		case Polyline3EditPart.VISUAL_ID:
> 			return getPolyline_3021SemanticChildren(view);
268a277,296
> 	public static List getPolyline_3014SemanticChildren(View view) {
> 		if (!view.isSetElement()) {
> 			return Collections.EMPTY_LIST;
> 		}
> 		Polyline modelElement = (Polyline) view.getElement();
> 		List result = new LinkedList();
> 		for (Iterator it = modelElement.getTemplate().iterator(); it.hasNext();) {
> 			Point childElement = (Point) it.next();
> 			int visualID = GMFGraphVisualIDRegistry.getNodeVisualID(view, childElement);
> 			if (visualID == PointEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
> 		}
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
332a361,380
> 	public static List getPolyline_3017SemanticChildren(View view) {
> 		if (!view.isSetElement()) {
> 			return Collections.EMPTY_LIST;
> 		}
> 		Polyline modelElement = (Polyline) view.getElement();
> 		List result = new LinkedList();
> 		for (Iterator it = modelElement.getTemplate().iterator(); it.hasNext();) {
> 			Point childElement = (Point) it.next();
> 			int visualID = GMFGraphVisualIDRegistry.getNodeVisualID(view, childElement);
> 			if (visualID == PointEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
> 		}
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
428a477,496
> 	public static List getPolyline_3021SemanticChildren(View view) {
> 		if (!view.isSetElement()) {
> 			return Collections.EMPTY_LIST;
> 		}
> 		Polyline modelElement = (Polyline) view.getElement();
> 		List result = new LinkedList();
> 		for (Iterator it = modelElement.getTemplate().iterator(); it.hasNext();) {
> 			Point childElement = (Point) it.next();
> 			int visualID = GMFGraphVisualIDRegistry.getNodeVisualID(view, childElement);
> 			if (visualID == PointEditPart.VISUAL_ID) {
> 				result.add(new GMFGraphNodeDescriptor(childElement, visualID));
> 				continue;
> 			}
> 		}
> 		return result;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
540a609,610
> 		case PointEditPart.VISUAL_ID:
> 			return getPoint_3022ContainedLinks(view);
585a656,657
> 		case PointEditPart.VISUAL_ID:
> 			return getPoint_3022IncomingLinks(view);
630a703,704
> 		case PointEditPart.VISUAL_ID:
> 			return getPoint_3022OutgoingLinks(view);
744a819,825
> 	public static List getPoint_3022ContainedLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
894a976,982
> 	public static List getPoint_3022IncomingLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
1068a1157,1163
> 	public static List getPoint_3022OutgoingLinks(View view) {
> 		return Collections.EMPTY_LIST;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
