90a91,91
> 		EClass targetMetaClass = null;
98a100,119
> 		if (nodeReference.isSetChild()) {
> 			targetMetaClass = nodeReference.getChild().getDomainMetaElement();
> 		}
> 		// XXX hmm, outcome from getEStructuralFeaturesOf passed to getEReferences - 
> 		// neither implementation filters out elements of other types. just assumes and casts 
> 		List fromHierarchy = sort(getEReferences(getEStructuralFeaturesOf(eReferences, containerMetaClass), containmentOnly));
> 		if (targetMetaClass == null) {
> 			// no child known, thus can take references from metaelement's hierarchy only
> 			return fromHierarchy;
> 		}
> 		List targetsToChild = sort(getEReferences(getEReferencesOfType(eReferences, targetMetaClass), containmentOnly));
> 		for (Iterator it = targetsToChild.iterator(); it.hasNext();) {
> 			if (fromHierarchy.contains(it.next())) {
> 				it.remove();
> 			}
> 		}
> 		ArrayList rv = new ArrayList(fromHierarchy.size() + targetsToChild.size());
> 		rv.addAll(fromHierarchy);
> 		rv.addAll(targetsToChild);
> 		return rv;
99,99d99
< 		return sort(getEReferences(getEStructuralFeaturesOf(eReferences, containerMetaClass), containmentOnly));
