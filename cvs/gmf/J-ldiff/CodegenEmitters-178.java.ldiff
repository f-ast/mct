2,2c2,2
<  * Copyright (c) 2005, 2007 Borland Software Corporation
---
>  * Copyright (c) 2005, 2008 Borland Software Corporation
16a17,17
> import java.util.ArrayList;
29,33d29
< import org.eclipse.gmf.internal.codegen.dispatch.CachingEmitterFactory;
< import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactory;
< import org.eclipse.gmf.internal.codegen.dispatch.EmitterFactoryImpl;
< import org.eclipse.gmf.internal.codegen.dispatch.NoSuchTemplateException;
< import org.eclipse.gmf.internal.codegen.dispatch.StaticTemplateRegistry;
37,37d32
< import org.eclipse.gmf.internal.common.codegen.JETEmitterAdapter;
52a48,49
> 	private final ResourceManager myResourceManager;
> 	private final URL[] myLocations;
53,56d47
< 	private static final String TEMPLATES_PLUGIN_ID = "org.eclipse.gmf.codegen"; //$NON-NLS-1$
< 	private final EmitterFactory myFactory;
< 	private final String[] myTemplatePath;
< 	private ResourceManager myResourceManager;
57a51,56
> 	public CodegenEmitters(boolean useBaseTemplatesOnly, String templateDirectory, boolean includeDynamicModelTemplates) {
> 		ArrayList<URL> urls = new ArrayList<URL>(5);
> 		if (!useBaseTemplatesOnly) {
> 			urls.add(getDynamicTemplatesURL(templateDirectory));
> 		}
> 		if (includeDynamicModelTemplates) {
57,57c50,50
< 
---
> 
58,63d50
< 	public CodegenEmitters(boolean usePrecompiled, String templateDirectory) {
< 		this(usePrecompiled, templateDirectory, getDefaultVariables(), new StaticTemplateRegistry(CodegenEmitters.class.getClassLoader()));
< 	}
< 	
< 	public CodegenEmitters(boolean usePrecompiled, String templateDirectory, String[] variables, StaticTemplateRegistry registry) {
< 		final URL baseURL = getTemplatesBundle().getEntry("/templates/"); //$NON-NLS-1$
64,64c57,57
< 		final URL dynModelBase = getTemplatesBundle().getEntry("/templates-dynmodel/"); //$NON-NLS-1$
---
> 			urls.add(getTemplatesBundle().getEntry("/templates-dynmodel/")); //$NON-NLS-1$
65,74d57
< 		final URL dynamicURL = usePrecompiled ? null : getDynamicTemplatesURL(templateDirectory);
< 		
< 		myTemplatePath = new String[] { dynamicURL != null ? dynamicURL.toString() : null, baseURL.toString() };
< 		// actually, that's new JETEmitterFactory with JETTemplateRegistry
< 		myFactory = new CachingEmitterFactory(new EmitterFactoryImpl(getTemplatePath(), registry, usePrecompiled, variables));
< 		
< 		if (dynamicURL == null) {
< 			myResourceManager = new BundleResourceManager(baseURL, dynModelBase);	
< 		} else {
< 			myResourceManager = new BundleResourceManager(dynamicURL, baseURL, dynModelBase);
75a59,62
> 		urls.add(getTemplatesBundle().getEntry("/templates/")); //$NON-NLS-1$
> 	
> 		myLocations = urls.toArray(new URL[urls.size()]);
> 		myResourceManager = new BundleResourceManager(myLocations);
94,109d80
< 	/**
< 	 * depends on {@link #put(StaticTemplateRegistry, String, Class) } impl - class object of
< 	 * precompiled template serves as a key
< 	 */
< 	public TextEmitter retrieve(Class<?> key) throws UnexpectedBehaviourException {
< 		try {
< 			return new JETEmitterAdapter(myFactory.acquireEmitter(key));
< 		} catch (NoSuchTemplateException ex) {
< 			throw new UnexpectedBehaviourException(ex.getMessage(), ex);
< 		}
< 	}
< 
< 	private String[] getTemplatePath() {
< 		return myTemplatePath;
< 	}
< 
111,111d81
< 		return Platform.getBundle(TEMPLATES_PLUGIN_ID);
120,120d90
< 				String pluginID = "org.eclipse.gmf.codegen"; //$NON-NLS-1$
121,121c91,91
< 				Platform.getLog(Platform.getBundle(pluginID)).log(new Status(IStatus.ERROR, pluginID, 0, "Incorrecct dynamic templates location", e)); //$NON-NLS-1$
---
> 				Platform.getLog(getTemplatesBundle()).log(new Status(IStatus.ERROR, getTemplatesBundle().getSymbolicName(), 0, "Incorrecct dynamic templates location", e)); //$NON-NLS-1$
781a752,756
> 		String[] templatesPath = new String[myLocations.length];
> 		for (int i = 0; i < myLocations.length; i++) {
> 			templatesPath[i] = myLocations[i].toString();
> 		}
> 		String templateLocation = JETCompiler.find(templatesPath, relativePath);
782,782d751
< 		String templateLocation = JETCompiler.find(getTemplatePath(), relativePath);
792,794d81
< 
< 	protected static String[] getDefaultVariables(){
< 		return new String[] {
795,795c82,82
< 		        "org.eclipse.emf.codegen", //$NON-NLS-1$
---
> 		return Platform.getBundle("org.eclipse.gmf.codegen"); //$NON-NLS-1$
796,803d82
< 				"org.eclipse.emf.codegen.ecore", //$NON-NLS-1$
< 				"org.eclipse.emf.common", //$NON-NLS-1$
< 				"org.eclipse.emf.ecore", //$NON-NLS-1$
< 				"org.eclipse.gmf.common", //$NON-NLS-1$
< 				"org.eclipse.gmf.codegen", //$NON-NLS-1$
< 		};
< 	}
< 
