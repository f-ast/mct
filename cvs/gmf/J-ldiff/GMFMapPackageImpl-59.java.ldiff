14,14c15,15
< import org.eclipse.emf.ecore.EcorePackage;
---
> import org.eclipse.emf.ecore.EcorePackage;
1069a1070,1078
> 	public EReference getFeatureValueSpec_Value() {
> 		return (EReference)featureValueSpecEClass.getEStructuralFeatures().get(0);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
1646a1656,1656
> 		createEReference(featureValueSpecEClass, FEATURE_VALUE_SPEC__VALUE);
1766,1766d1775
< 		featureValueSpecEClass.getESuperTypes().add(this.getValueExpression());
1873,1873c1882,1882
< 		initEClass(featureInitializerEClass, FeatureInitializer.class, "FeatureInitializer", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
---
> 		initEClass(featureInitializerEClass, FeatureInitializer.class, "FeatureInitializer", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
1877a1887,1887
> 		initEReference(getFeatureValueSpec_Value(), this.getValueExpression(), null, "value", null, 1, 1, FeatureValueSpec.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
2070,2075d2079
< 			 "def", "ValueSpec"
< 		   });		
< 		addAnnotation
< 		  (featureValueSpecEClass, 
< 		   source, 
< 		   new String[] {
