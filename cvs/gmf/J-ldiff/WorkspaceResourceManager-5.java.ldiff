24,24d23
< import org.eclipse.gmf.internal.xpand.ResourceMarker;
48,48c47,47
< 			return remember(file, super.loadXtendResource(r, toFullyQualifiedName(file)));
---
> 			return super.loadXtendResource(r, toFullyQualifiedName(file));
64,64c63,63
< 			return remember(file, super.loadXpandResource(r, toFullyQualifiedName(file)));
---
> 			return super.loadXpandResource(r, toFullyQualifiedName(file));
71a71,75
> 	@Override
> 	protected boolean shouldCache() {
> 		// we don't cache workspace resources for now (for the sake of reducing 
> 		// underemined problems that may arise), although may do this later
> 		return false;
72,76d70
< 	protected <T extends ResourceMarker> T remember(IFile resource, T loadedResource) {
< 		// TODO cache.
< 		// TODO move to superclass - odd if caching will happen to templates accessed via IFile only
< 		// XXX Do I need cache?
< 		return loadedResource;
80,80d78
< 		// TODO Auto-generated method stub
