2,2c2,2
<  * Copyright (c) 2005 IBM Corporation and others.
---
>  * Copyright (c) 2005, 2006 IBM Corporation and others.
13a15,15
> import java.util.ArrayList;
14,14c16,16
< import java.util.Collection;
---
> import java.util.Iterator;
14a17,19
> import java.util.List;
> 
> import org.eclipse.core.resources.IFile;
18a23,24
> import org.eclipse.emf.ecore.resource.Resource;
> import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
19,19d25
< 
20,20c26,26
< import org.eclipse.gmf.runtime.common.core.command.AbstractCommand;
---
> import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
30,30c35,35
< 	extends AbstractCommand {
---
> 	extends AbstractTransactionalCommand {
59a65,65
> 		super(request.getEditingDomain(), label, getAffectedFiles(request));
60,60d64
< 		super(label);
64a70,91
>     protected static List getAffectedFiles(IEditCommandRequest request) {
>         
>         List result = new ArrayList();
>         List elements = request.getElementsToEdit();
>         
>         if (elements != null) {
>             
>             for (Iterator i = elements.iterator(); i.hasNext();) {
>                 Resource resource = ((EObject) i.next()).eResource();
>                 
>                 if (resource != null) {
>                     IFile file = WorkspaceSynchronizer.getFile(resource);
>                     
>                     if (file != null) {
>                         result.add(file);
>                     }
>                 }
>             }
>         }
>         return result;
>     }
> 
69,69c96,96
< 	public boolean isExecutable() {
---
> 	public boolean canExecute() {
77,84d103
< 	public boolean isUndoable() {
< 		return true;
< 	}
< 	
< 	public boolean isRedoable() {
< 		return true;
< 	}
< 
146,153d164
< 	
< 	
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#getAffectedObjects()
< 	 */
< 	public Collection getAffectedObjects() {
< 		return request.getElementsToEdit();
< 	}
