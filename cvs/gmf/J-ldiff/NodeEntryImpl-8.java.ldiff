42,42c42,42
< public class NodeEntryImpl extends NotationObjectImpl implements BasicEMap.Entry {
---
> public class NodeEntryImpl extends NotationEObjectImpl implements BasicEMap.Entry {
53a54,80
> 	 * The offset of the flags representing the value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int VALUE_EFLAG_OFFSET = 8;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int VALUE_EFLAG_DEFAULT = Alignment.VALUES.indexOf(VALUE_EDEFAULT) << VALUE_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link Alignment Alignment}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final Alignment[] VALUE_EFLAG_VALUES = (Alignment[])Alignment.VALUES.toArray(new Alignment[Alignment.VALUES.size()]);
> 
> 				/**
54,54c81,81
< 	 * The cached value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getTypedValue() <em>Value</em>}' attribute.
60a88,88
> 	protected static final int VALUE_EFLAG = 0x7 << VALUE_EFLAG_OFFSET;
61,61d87
< 	protected Alignment value = VALUE_EDEFAULT;
79a107,107
> 		eFlags |= VALUE_EFLAG_DEFAULT;
96a125,125
> 		return VALUE_EFLAG_VALUES[(eFlags & VALUE_EFLAG) >>> VALUE_EFLAG_OFFSET];
97,97d124
< 		return value;
105a134,134
> 		Alignment oldValue = VALUE_EFLAG_VALUES[(eFlags & VALUE_EFLAG) >>> VALUE_EFLAG_OFFSET];
106,106d133
< 		Alignment oldValue = value;
107a136,136
> 		eFlags = eFlags & ~VALUE_EFLAG | Alignment.VALUES.indexOf(newValue) << VALUE_EFLAG_OFFSET;
107,107c135,135
< 		value = newValue == null ? VALUE_EDEFAULT : newValue;
---
> 		if (newValue == null) newValue = VALUE_EDEFAULT;
109,109c138,138
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.NODE_ENTRY__VALUE, oldValue, value));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.NODE_ENTRY__VALUE, oldValue, newValue));
158,159d186
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				return getUUID();
176,178d202
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				setUUID((byte[])newValue);
< 				return;
196,198d219
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				setUUID(UUID_EDEFAULT);
< 				return;
216,217d236
< 			case NotationPackage.NODE_ENTRY__UUID:
< 				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
218a238,238
> 				return (eFlags & VALUE_EFLAG) != VALUE_EFLAG_DEFAULT;
219,219d237
< 				return value != VALUE_EDEFAULT;
235a255,255
> 		result.append(VALUE_EFLAG_VALUES[(eFlags & VALUE_EFLAG) >>> VALUE_EFLAG_OFFSET]);
236,236d254
< 		result.append(value);
