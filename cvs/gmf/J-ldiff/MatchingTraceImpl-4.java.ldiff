10,10d9
< import org.eclipse.emf.common.notify.NotificationChain;
13,13d11
< import org.eclipse.emf.ecore.InternalEObject;
14a15,17
> import org.eclipse.ocl.ParserException;
> import org.eclipse.ocl.ecore.OCL;
> import org.eclipse.ocl.ecore.OCL.Helper;
15,15c18,18
< import org.eclipse.emf.ocl.query.Query;
---
> import org.eclipse.ocl.ecore.OCL.Query;
27,27d27
<  *   <li>{@link org.eclipse.gmf.internal.bridge.trace.impl.MatchingTraceImpl#getQuery <em>Query</em>}</li>
54,61d53
< 	/**
< 	 * The cached value of the '{@link #getQuery() <em>Query</em>}' containment reference.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #getQuery()
< 	 * @generated
< 	 * @ordered
< 	 */
108a101,102
> 	public abstract EClass getQueryContext();
> 
109,109c103,103
< 	public Query getQuery() {
---
> 	public Query getQuery() throws ParserException {
115a110,114
> 	private Query createQuery() throws ParserException {
> 		OCL ocl = OCL.newInstance();
> 		Helper oclHelper = ocl.createOCLHelper();
> 		oclHelper.setContext(getQueryContext());
> 		return ocl.createQuery(oclHelper.createQuery(getQueryText()));
116,128d109
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public NotificationChain basicSetQuery(Query newQuery, NotificationChain msgs) {
< 		Query oldQuery = query;
< 		query = newQuery;
< 		if (eNotificationRequired()) {
< 			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TracePackage.MATCHING_TRACE__QUERY, oldQuery, newQuery);
< 			if (msgs == null) msgs = notification; else msgs.add(notification);
< 		}
< 		return msgs;
136,142d121
< 	public abstract Query createQuery();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated NOT
< 	 */
181,194d159
< 	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
< 		switch (featureID) {
< 			case TracePackage.MATCHING_TRACE__QUERY:
< 				return basicSetQuery(null, msgs);
< 		}
< 		return super.eInverseRemove(otherEnd, featureID, msgs);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	@Override
199,200d163
< 			case TracePackage.MATCHING_TRACE__QUERY:
< 				return getQuery();
245,246d207
< 			case TracePackage.MATCHING_TRACE__QUERY:
< 				return query != null;
