221,221c221,221
< 			if (null != thePolicy)
---
> 			if (null != thePolicy) {
221a222,222
> 				try {
222a224,234
> 				}
> 				catch (Exception e) {
> 					Log.log(
> 						CommonCorePlugin.getDefault(),
> 						IStatus.ERROR,
> 						CommonCoreStatusCodes.SERVICE_FAILURE,
> 						"Ignoring provider since policy " + thePolicy + " threw an exception in the provides() method",  //$NON-NLS-1$ //$NON-NLS-2$
> 						e);
> 					return false;
> 				}
> 			}
225a238,239
> 			return (theProvider != null) ?
> 				safeProvides(theProvider, operation) : false;
226,226d237
< 			return null != theProvider && theProvider.provides(operation);
486,486c499,499
< 						if (!provider.provides(operation))
---
> 						if (!safeProvides(provider, operation))
638,638c651,651
< 				if (((IProvider)providerList.get(provider)).provides(operation))
---
> 				if (safeProvides(((IProvider)providerList.get(provider)), operation))
671,671c684,684
< 				if (((IProvider)providerList.get(provider)).provides(operation))
---
> 				if (safeProvides (((IProvider)providerList.get(provider)), operation))
770a784,818
> 	/**
> 	 * Safely calls a provider's provides() method.
> 	 * 
> 	 * The provider must not be null.
> 	 * 
> 	 * Returns true if there were no exceptions thrown and the provides() method
> 	 * returns true.  Returns false if an exception was thrown or the provides()
> 	 * method returns false.
> 	 * 
> 	 * An entry is added to the log if the provider threw an exception.  
> 	 * 
> 	 * @param provider to safely execute the provides() method
> 	 * @param operation passed into the provider's provides() method
> 	 * @return true if there were no exceptions thrown and the provides() method
> 	 * returns true.  Returns false if an exception was thrown or the provides()
> 	 * method returns false.
> 	 */
> 	private static boolean safeProvides(IProvider provider, IOperation operation) {
> 		assert provider != null;
> 		
> 		try {
> 			return provider.provides(operation);
> 		}
> 		catch (Exception e) {
> 			Log.log(
> 				CommonCorePlugin.getDefault(),
> 				IStatus.ERROR,
> 				CommonCoreStatusCodes.SERVICE_FAILURE,
> 				"Ignoring provider " + provider + " since it threw an exception in the provides() method", //$NON-NLS-1$ //$NON-NLS-2$
> 				e);
> 			return false;
> 		}
> 		
> 	}
> 
