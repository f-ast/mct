102,102c102,102
< 	protected void handlePostLoad(Exception exception) {
---
> 	protected void handlePostLoad(@SuppressWarnings("unused")Exception exception) { 
103,103d102
< 		assert exception == exception; // get rid of unused param warn 
142a142,142
> 	 * and reports migration diagnostic.
164,164c164,164
< 		final MigrationConfig config;
---
> 		MigrationConfig config;
165,165d164
< 		boolean oldVersionDetected = false;
168a175,182
> 			if(config == null) {
> 				// Remark: ensure that GMF meta-models generated packages are initialized before accessing 
> 				// 	MigrationConfig.Registry, as a migrated package initialization code performs the migration config 
> 				// 	registration.
> 				//	TODO - better to use extension point for migration config registry     
> 				EPackage.Registry.INSTANCE.getEPackage(uriString);
> 				
> 				String ext = xmlResource.getURI().fileExtension();
169,169d174
< 			String ext = xmiResource.getURI().fileExtension();
170,170c183,183
< 			config = (ext != null) ? MigrationConfig.Registry.INSTANCE.getConfig(ext) : null;
---
> 				config = (ext != null) ? MigrationConfig.Registry.INSTANCE.getConfig(ext) : null;
170a184,185
> 			}
> 			
175,175d171
< 		 * @see org.eclipse.emf.ecore.xmi.impl.XMLHandler#getPackageForURI(java.lang.String)
176a173,173
> 		@Override		
181,181d188
< 					this.oldVersionDetected = true;
200a208,208
> 		private FeatureKey processedFeatureKey;
203a212,212
> 			this.processedFeatureKey = new FeatureKey();
208a218,218
> 				notifyMigrationApplied(); // notify we had to migrate
216a227,228
> 				processedFeatureKey.setFeature(feature);
> 				
220,220d231
< 					EReference referenceFeature = ((EReference)feature);
221,221c232,232
< 					EClass oldDefaultRefType = (config != null) ? config.getAddedTypeInfo(referenceFeature) : null;
---
> 					EClass oldDefaultRefType = (config != null) ? config.getAddedTypeInfo(processedFeatureKey) : null;
226a238,238
> 						notifyMigrationApplied();
227,227d237
< 						resource().handleMigrationPatchApplied();
236a248,259
> 			return config != null && resource().oldVersionDetected;
> 		}
> 		
> 		/**
> 		 * To be called if a migration patch had to be applied to load model successfully.
> 		 * <p>
> 		 * Note: It's important in order to detect whether an old model version which 
> 		 * was loaded contained incompatible constructs. No diagnostics are produced
> 		 * for old version models with compatible contents.
> 		 */
> 		private void notifyMigrationApplied() {
> 			resource().handleMigrationPatchApplied();
237,237d247
< 			return config != null && oldVersionDetected;
