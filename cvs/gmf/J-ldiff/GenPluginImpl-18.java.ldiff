27a28,28
> import org.eclipse.emf.ecore.util.EDataTypeUniqueEList;
32a34,34
> import org.eclipse.gmf.codegen.gmfgen.GenLanguage;
48a51,51
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenPluginImpl#getRequiredPlugins <em>Required Plugins</em>}</li>
156a160,169
> 	 * The cached value of the '{@link #getRequiredPlugins() <em>Required Plugins</em>}' attribute list.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #getRequiredPlugins()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected EList<String> requiredPlugins;
> 
> 	/**
340a354,365
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EList<String> getRequiredPlugins() {
> 		if (requiredPlugins == null) {
> 			requiredPlugins = new EDataTypeUniqueEList<String>(String.class, this, GMFGenPackage.GEN_PLUGIN__REQUIRED_PLUGINS);
> 		}
> 		return requiredPlugins;
> 	}
> 
376,376c401,401
< 	public EList<String> getRequiredPluginIDs() {
---
> 	public EList<String> getAllRequiredPlugins() {
377,377c402,402
< 		Collection<String> requiredPlugins = new LinkedHashSet<String>();
---
> 		Collection<String> rv = new LinkedHashSet<String>(getRequiredPlugins());
381,381c406,406
< 				requiredPlugins.add(genModel.getModelPluginID());
---
> 				rv.add(genModel.getModelPluginID());
382,382c407,407
< 				requiredPlugins.add(genModel.getEditPluginID());
---
> 				rv.add(genModel.getEditPluginID());
386,386c411,411
< 						requiredPlugins.add(nextGenModel.getModelPluginID());
---
> 						rv.add(nextGenModel.getModelPluginID());
387,387c412,412
< 						requiredPlugins.add(nextGenModel.getEditPluginID());
---
> 						rv.add(nextGenModel.getEditPluginID());
390a416,419
> 			rv.addAll(getExpressionsRequiredPluginIDs());
> 			rv.addAll(getValidationRequiredPluginIDs());
> 			rv.addAll(getMetricsRequiredPluginIDs());
> 			rv.addAll(getViewmapRequiredPluginIDs());
392,395d420
< 		requiredPlugins.addAll(getExpressionsRequiredPluginIDs());
< 		requiredPlugins.addAll(getValidationRequiredPluginIDs());
< 		requiredPlugins.addAll(getMetricsRequiredPluginIDs());
< 		requiredPlugins.addAll(getViewmapRequiredPluginIDs());
396,396c421,421
< 		for (Iterator<String> it = requiredPlugins.iterator(); it.hasNext();) {
---
> 		for (Iterator<String> it = rv.iterator(); it.hasNext();) {
401,401c426,426
< 		return new BasicEList<String>(requiredPlugins);
---
> 		return new BasicEList<String>(rv);
414,414d438
< 		Set<String> requiredIDs = new HashSet<String>();
416a441,442
> 				if (nextProvider.getLanguage() == GenLanguage.OCL_LITERAL);
> 				return Collections.singleton("org.eclipse.ocl.ecore"); //$NON-NLS-1$
417,417d440
< 				requiredIDs.addAll(nextProvider.getRequiredPluginIDs());
419a445,445
> 		return Collections.emptySet();
420,420d444
< 		return requiredIDs;
423,425d447
< 	/**
< 	 * @generated NOT
< 	 */
535a558,559
> 			case GMFGenPackage.GEN_PLUGIN__REQUIRED_PLUGINS:
> 				return getRequiredPlugins();
546a571,571
> 	@SuppressWarnings("unchecked")
564a590,593
> 			case GMFGenPackage.GEN_PLUGIN__REQUIRED_PLUGINS:
> 				getRequiredPlugins().clear();
> 				getRequiredPlugins().addAll((Collection<? extends String>)newValue);
> 				return;
594a624,626
> 			case GMFGenPackage.GEN_PLUGIN__REQUIRED_PLUGINS:
> 				getRequiredPlugins().clear();
> 				return;
621a654,655
> 			case GMFGenPackage.GEN_PLUGIN__REQUIRED_PLUGINS:
> 				return requiredPlugins != null && !requiredPlugins.isEmpty();
647a682,683
> 		result.append(", requiredPlugins: ");
> 		result.append(requiredPlugins);
