22a23,23
> import org.eclipse.draw2d.geometry.Insets;
24,24c34,34
< import org.eclipse.swt.graphics.Color;
---
> import org.eclipse.swt.graphics.Color;
25,25c35,35
< import org.eclipse.swt.graphics.Font;
---
> import org.eclipse.swt.graphics.Font;
26,26d35
< 
33a32,32
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
33,33c31,31
< import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
---
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
49,49c54,54
< public class ResizableCompartmentFigure extends NodeFigure {
---
> public class ResizableCompartmentFigure extends NodeFigure {
50,55d54
< 
< 	/**
< 	 * The minimum client area height for the compartment
< 	 */
< 	public static final int MIN_CLIENT_SIZE = MapMode.DPtoLP(11);
< 
56a51,52
>  * @author Steve
>  *
57,57d50
< 	 * The minmum dimension for the compartment
59,59d53
< 	private static Dimension minClientDim = new Dimension(MIN_CLIENT_SIZE,MIN_CLIENT_SIZE);
70a66,71
> 	
> 	/**
> 	 * the minimum size the client area can occupy in logical coordinates
> 	 */
> 	private int minClientSize = 0;
> 	
85a87,93
> 	 * Specifies the default minimum client size of this figure in device coordinates.
> 	 * Clients should use their editors <code>IMapMode</code> to convert this to logical
> 	 * coordinates.
> 	 */
> 	public static final int MIN_CLIENT_DP = 11;
> 	
> 	/**
86,86d86
< 	 * A constructor for a top level resizable compartment figure
87a95,98
> 	 * @deprecated use @link(ResizableCompartment(String compartmentTitle, int minClientSize)} instead.
> 	 * Clients must specify the minClientSize in their own logical coordinate system instead of the
> 	 * figure assuming a default.  @link{ ResizableCompartmentFigure.MIN_CLIENT_DP } is provided as a default
> 	 * value for convenience in device coordinates.
89a101,110
> 		this(compartmentTitle, MapModeUtil.getMapMode().DPtoLP(MIN_CLIENT_DP));
> 	}
> 	/**
> 	 * A constructor for a top level resizable compartment figure
> 	 * @param compartmentTitle
> 	 * @param minClientSize <code>int</code> that is the minimum size the client area can occupy in 
> 	 * logical coordinates.
> 	 */
> 	public ResizableCompartmentFigure(String compartmentTitle, int minClientSize) {
> 		this.minClientSize = minClientSize;
112a134,141
> 		
> 		IMapMode mm = MapModeUtil.getMapMode(this);
> 		Insets insets = new Insets(mm.DPtoLP(1), mm.DPtoLP(2),
> 			mm.DPtoLP(1), mm.DPtoLP(0));
> 		Dimension size = new Dimension(mm.DPtoLP(15), mm.DPtoLP(15));
> 		
> 		scrollPane.setVerticalScrollBar(new ListScrollBar(Orientable.VERTICAL, insets, size, 
> 									mm.DPtoLP(10), mm.DPtoLP(50)));
113,113d133
< 		scrollPane.setVerticalScrollBar(new ListScrollBar(Orientable.VERTICAL));
118,118c146,146
< 				new MarginBorder(1, MIN_CLIENT_SIZE/2, 1, MIN_CLIENT_SIZE/2));			
---
> 				new MarginBorder(1, getMinClientSize()/2, 1, getMinClientSize()/2));			
120a149,157
> 	
> 	/**
> 	 * @return that is the minimum size the client area can occupy in 
> 	 * logical coordinates.
> 	 */
> 	final protected int getMinClientSize() {
> 		return minClientSize;
> 	}
> 	
279,279c316,316
< 			graphics.drawRectangle(getClientArea().shrink(MapMode.DPtoLP(1), MapMode.DPtoLP(1)));
---
> 			graphics.drawRectangle(getClientArea().shrink(MapModeUtil.getMapMode(this).DPtoLP(1), MapModeUtil.getMapMode(this).DPtoLP(1)));
378a416,416
> 		return new Dimension(getMinClientSize(), getMinClientSize());
379,379d415
< 		return minClientDim;
