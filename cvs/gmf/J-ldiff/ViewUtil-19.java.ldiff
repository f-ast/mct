16a17,17
> import java.util.HashSet;
18a20,20
> import java.util.Set;
765a768,802
> 
> 	/**
> 	 * Constructs a set of all source and target edges from a view and all its
> 	 * children down to the leaves of a view hierarchy
> 	 * 
> 	 * @param view
> 	 * @param allEdges
> 	 */
> 	static public void  getAllRelatedEdgesForView(View view, Set<Edge> allEdges) {
> 		allEdges.addAll(ViewUtil.getSourceConnections(view));
> 		allEdges.addAll(ViewUtil.getTargetConnections(view));
> 		for (Iterator itr = view.getChildren().iterator(); itr.hasNext();) {
> 			Object obj = itr.next();
> 			if (obj instanceof View) {
> 				getAllRelatedEdgesForView((View)obj, allEdges);
> 			}
> 		}
> 	}
> 	
> 	/**
> 	 * Constructs a set of all source and target edges from a list of view and all their
> 	 * children down to the leaves of a view hierarchy
> 	 * 
> 	 * @param views
> 	 * @param allEdges
> 	 */
> 	static public void getAllRelatedEdgesFromViews(List views, HashSet<Edge> allEdges) {
> 		for (Iterator itr = views.iterator(); itr.hasNext();) {
> 			Object obj = itr.next();
> 			if (obj instanceof View) {
> 				getAllRelatedEdgesForView((View)obj, allEdges);
> 			}
> 		}
> 	}
> 	
