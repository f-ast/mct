27,27c27,27
< import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramResourceManager;
---
> import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
37a38,40
>  * To instantiate this request, clients have to create a
>  * <code>ConnectionViewDescriptor</code> or a list of
>  * <code>ConnectionViewDescriptor</code> s filling it with view creation
38,39d37
<  * To instantiate this request, clients have to create a <code>ConnectionViewDescriptor</code>
<  * or a list of <code>ConnectionViewDescriptor</code> s filling it with view
40,40c41,41
<  * creation parameters. The <code>ConnectionViewDescriptor</code> is a inner
---
>  * parameters. The <code>ConnectionViewDescriptor</code> is a inner class to
41,41c42,42
<  * class to this request
---
>  * this request
51a53,53
> 	extends CreateConnectionRequest {
51,51c52,52
< public class CreateConnectionViewRequest extends CreateConnectionRequest {
---
> public class CreateConnectionViewRequest
56,56c58,58
< 	public static class ConnectionViewDescriptor extends ViewDescriptor {
---
> 	public static class ConnectionViewDescriptor
56a59,60
> 		extends ViewDescriptor {
> 
62,62c66,66
< 		 *            The preference hint that is to be used to find the appropriate
---
> 		 *            The preference hint that is to be used to find the
62a67,68
> 		 *            appropriate preference store from which to retrieve
> 		 *            diagram preference values. The preference hint is mapped
63,64d66
< 		 *            preference store from which to retrieve diagram preference
< 		 *            values. The preference hint is mapped to a preference store in
65,65c69,69
< 		 *            the preference registry <@link DiagramPreferencesRegistry>.
---
> 		 *            to a preference store in the preference registry <@link
65a70,70
> 		 *            DiagramPreferencesRegistry>.
67a73,73
> 				PreferencesHint preferencesHint) {
67,67c72,72
< 		public ConnectionViewDescriptor(IAdaptable elementAdapter, PreferencesHint preferencesHint) {
---
> 		public ConnectionViewDescriptor(IAdaptable elementAdapter,
76a83,87
> 		 *            The preference hint that is to be used to find the
> 		 *            appropriate preference store from which to retrieve
> 		 *            diagram preference values. The preference hint is mapped
> 		 *            to a preference store in the preference registry <@link
> 		 *            DiagramPreferencesRegistry>.
77,80d82
< 		 *            The preference hint that is to be used to find the appropriate
< 		 *            preference store from which to retrieve diagram preference
< 		 *            values. The preference hint is mapped to a preference store in
< 		 *            the preference registry <@link DiagramPreferencesRegistry>.
81,81c88,88
< 		 */
---
> 		 */
81a89,89
> 		public ConnectionViewDescriptor(IAdaptable elementAdapter,
82,84d88
< 		public ConnectionViewDescriptor(
< 			IAdaptable elementAdapter,
< 			String semanticHint, 
85,85c90,90
< 			PreferencesHint preferencesHint) {
---
> 				String semanticHint, PreferencesHint preferencesHint) {
95a101,102
> 		public ConnectionViewDescriptor(IAdaptable elementAdapter,
> 				String semanticHint, int index, PreferencesHint preferencesHint) {
96,100d100
< 		public ConnectionViewDescriptor(
< 			IAdaptable elementAdapter,
< 			String semanticHint,
< 			int index, 
< 			PreferencesHint preferencesHint) {
101a104,104
> 				preferencesHint);
101,101c103,103
< 			super(elementAdapter, Edge.class, semanticHint, index, preferencesHint);
---
> 			super(elementAdapter, Edge.class, semanticHint, index,
108a113,113
> 		 * @param persisted
109,109c114,114
< 		 * @param persisted flag to indicate if this view will be persisted or not
---
> 		 *            flag to indicate if this view will be persisted or not
111,111c116,116
< 		public ConnectionViewDescriptor(
---
> 		public ConnectionViewDescriptor(IAdaptable elementAdapter,
112,112d116
< 			IAdaptable elementAdapter,
113,113c117,117
< 			String semanticHint,
---
> 				String semanticHint, int index, boolean persisted,
114,115d117
< 			int index,
< 			boolean persisted, 
116a119,119
> 			super(elementAdapter, Edge.class, semanticHint, index, persisted,
117,122d118
< 			super(
< 				elementAdapter,
< 				Edge.class,
< 				semanticHint,
< 				index,
< 				persisted,
134a132,132
> 	 * @param element
135,135c133,133
< 	 * @param element a semantic element
---
> 	 *            a semantic element
136a135,136
> 	public CreateConnectionViewRequest(EObject element,
> 			PreferencesHint preferencesHint) {
137,137d134
< 	public CreateConnectionViewRequest(EObject element, PreferencesHint preferencesHint) {
138,138c137,137
< 		this(new ConnectionViewDescriptor(new EObjectAdapter(element), preferencesHint));
---
> 		this(new ConnectionViewDescriptor(new EObjectAdapter(element),
138a138,138
> 			preferencesHint));
140a109,109
> 		 * 
141,141d108
< 
145a145,145
> 	 *            a view descriptor
145,145c144,144
< 	 * @param ViewDescriptor a  view descriptor
---
> 	 * @param ViewDescriptor
172a173,173
> 	 * <code>IView</code> .class
172,172c172,172
< 	 * The type is a <code>IAdaptable</code> object that adapters to <code>IView</code>
---
> 	 * The type is a <code>IAdaptable</code> object that adapters to
173,173d172
< 	 * .class
185a187,187
> 		throw new UnsupportedOperationException(
186,186c188,188
< 		throw new UnsupportedOperationException("The Factory mechanism is not used"); //$NON-NLS-1$
---
> 			"The Factory mechanism is not used"); //$NON-NLS-1$
193a196,196
> 		throw new UnsupportedOperationException(
194,194c197,197
< 		throw new UnsupportedOperationException("The Factory mechanism is not used"); //$NON-NLS-1$
---
> 			"The Factory mechanism is not used"); //$NON-NLS-1$
205,205c208,208
< 	public static Command getCreateCommand(
---
> 	public static Command getCreateCommand(EObject element,
206,206d208
< 		EObject element,
207,207c209,209
< 		EditPart sourceEditPart,
---
> 			EditPart sourceEditPart, EditPart targetEditPart,
208,208d209
< 		EditPart targetEditPart,
215,215c216,216
< 		CreateConnectionViewRequest request =
---
> 		CreateConnectionViewRequest request = new CreateConnectionViewRequest(
216,216c217,217
< 			new CreateConnectionViewRequest(element, preferencesHint);
---
> 			element, preferencesHint);
226a228,228
> 	 * Method getCreateCommand Gets the command given a request, source and
227,228d227
< 	 * Method getCreateCommand
< 	 * Gets the command given a request, source and target
229,229c229,229
< 	 * edit parts.  (No semantic element required.)
---
> 	 * target edit parts. (No semantic element required.)
236,236c236,236
< 	public static Command getCreateCommand(
---
> 	public static Command getCreateCommand(CreateConnectionViewRequest request,
237,238d236
< 		CreateConnectionViewRequest request,
< 		EditPart sourceEditPart,
239,239c237,237
< 		EditPart targetEditPart) {
---
> 			EditPart sourceEditPart, EditPart targetEditPart) {
252a183,183
> 	 * 
253,253d182
< 
255a253,253
> 	 * 
262a261,261
> 			IAdaptable sourceViewAdapter, IAdaptable targetViewAdapter,
262,262c260,260
< 	public static Command getCreateCommand(
---
> 	public static Command getCreateCommand(IAdaptable elementAdapter,
263,266d260
< 		IAdaptable elementAdapter,
< 		IAdaptable sourceViewAdapter,
< 		IAdaptable targetViewAdapter,
< 		DiagramEditPart diagramEditPart,
267,267c262,262
< 		PreferencesHint preferencesHint) {
---
> 			DiagramEditPart diagramEditPart, PreferencesHint preferencesHint) {
269,269c264,264
< 		CreateCommand createCommand =
---
> 		CreateCommand createCommand = new CreateCommand(
270,270d264
< 			new CreateCommand(
274,274d267
< 		IAdaptable viewAdapter =
275,275c268,268
< 			(IAdaptable) createCommand.getCommandResult().getReturnValue();
---
> 		IAdaptable viewAdapter = (IAdaptable) createCommand.getCommandResult()
275a269,269
> 			.getReturnValue();
277,277c271,271
< 		SetConnectionEndsCommand sceCommand = new SetConnectionEndsCommand(DiagramResourceManager.getI18NString("Commands.SetConnectionEndsCommand.Source")); //$NON-NLS-1$
---
> 		SetConnectionEndsCommand sceCommand = new SetConnectionEndsCommand(
277a272,272
> 			DiagramUIMessages.Commands_SetConnectionEndsCommand_Source);
289a285,285
> 	 * 
296,296c292,292
< 	public static Command getCreateCommand(
---
> 	public static Command getCreateCommand(ViewDescriptor viewDescriptor,
297,297d292
< 		ViewDescriptor viewDescriptor,
298,298c293,293
< 		IAdaptable sourceViewAdapter,
---
> 			IAdaptable sourceViewAdapter, IAdaptable targetViewAdapter,
299,299d293
< 		IAdaptable targetViewAdapter,
302,302d295
< 		CreateCommand createCommand =
303,303c296,296
< 			new CreateCommand(viewDescriptor,
---
> 		CreateCommand createCommand = new CreateCommand(viewDescriptor,
306,306d298
< 		IAdaptable viewAdapter =
307a300,300
> 			.getReturnValue();
307,307c299,299
< 			(IAdaptable) createCommand.getCommandResult().getReturnValue();
---
> 		IAdaptable viewAdapter = (IAdaptable) createCommand.getCommandResult()
309a303,303
> 			DiagramUIMessages.Commands_SetConnectionEndsCommand_Source);
309,309c302,302
< 		SetConnectionEndsCommand sceCommand = new SetConnectionEndsCommand(DiagramResourceManager.getI18NString("Commands.SetConnectionEndsCommand.Source")); //$NON-NLS-1$
---
> 		SetConnectionEndsCommand sceCommand = new SetConnectionEndsCommand(
323,323c317,317
< //		sbbCommand.setNewPointList(pointList, new Point(0, 0), new Point(0, 0));
---
> 		// sbbCommand.setNewPointList(pointList, new Point(0, 0), new Point(0,
323a318,318
> 		// 0));
