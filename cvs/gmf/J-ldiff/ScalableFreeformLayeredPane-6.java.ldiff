20,20c18,18
< import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapMode;
---
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
21,21d18
< 
30,30c29,29
< 	extends org.eclipse.draw2d.ScalableFreeformLayeredPane {
---
> 	extends org.eclipse.draw2d.ScalableFreeformLayeredPane implements IMapMode {
32a32,45
> 	private IMapMode mm;
> 	
> 	/**
> 	 * @return <code>IMapMode</code> that is used to map coordinate coordinates
> 	 * from device to logical.
> 	 */
> 	protected IMapMode getMapMode() {
> 		return mm;
> 	}
> 
> 	public ScalableFreeformLayeredPane(IMapMode mm) {
> 		super();
> 		this.mm = mm;
> 	}
90,90c103,103
< 		MapModeGraphics gMM = new MapModeGraphics(graphics);
---
> 		MapModeGraphics gMM = new MapModeGraphics(graphics, getMapMode());
99a113,113
>     	getMapMode().DPtoLP(rect);
100,100d112
<     	MapMode.translateToLP(rect);
108a122,122
>     	getMapMode().LPtoDP(t);
109,109d121
<     	MapMode.translateToDP(t);
116a130,162
>     	getMapMode().DPtoLP(t);
>     }
> 
> 	/* 
> 	 * (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#DPtoLP(int)
> 	 */
> 	public int DPtoLP(int deviceUnit) {
> 		return getMapMode().DPtoLP(deviceUnit);
> 	}
> 
> 	/* 
> 	 * (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#DPtoLP(org.eclipse.draw2d.geometry.Translatable)
> 	 */
> 	public Translatable DPtoLP(Translatable t) {
> 		return getMapMode().DPtoLP(t);
> 	}
> 
> 	/* 
> 	 * (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#LPtoDP(int)
> 	 */
> 	public int LPtoDP(int logicalUnit) {
> 		return getMapMode().LPtoDP(logicalUnit);
> 	}
> 
> 	/* 
> 	 * (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode#LPtoDP(org.eclipse.draw2d.geometry.Translatable)
> 	 */
> 	public Translatable LPtoDP(Translatable t) {
> 		return getMapMode().LPtoDP(t);
117,117d129
<     	MapMode.translateToLP(t);
