2,2c2,2
<  * Copyright (c) 2006 Eclipse.org
---
>  * Copyright (c) 2006, 2007 Borland Software Corporation
9a10,10
> import java.io.BufferedReader;
11a13,13
> import java.io.InputStreamReader;
12a15,15
> import java.util.ArrayList;
33a37,38
> 	private long configStamp = IResource.NULL_STAMP;
> 	private IPath[] configuredRoots;
83a89,91
> 		IResource r = null;
> 		for (IPath p : getResolutions(fp)) {
> 			r = contextProject.findMember(p);
83,83c88,88
< 		IPath p = new Path(fqn.replaceAll(SyntaxConstants.NS_DELIM, "/")).addFileExtension(ext);
---
> 		IPath fp = new Path(fqn.replaceAll(SyntaxConstants.NS_DELIM, "/")).addFileExtension(ext);
84,84d88
< 		IResource r = contextProject.findMember(p);
85,85c92,92
< 		if (r == null) {
---
> 			if (r != null) {
85a93,94
> 				break;
> 			}
86,87d92
< 			// XXX confiugre manager with path defined as preference/resource variable
< 			r = contextProject.findMember(new Path("templates/").append(p));
90,90c97,97
< 			throw new FileNotFoundException(p.toString());
---
> 			throw new FileNotFoundException(fp.toString());
99a107,151
> 	private IPath[] getResolutions(IPath p) {
> 		IPath[] configured = getConfiguredRoots();
> 		IPath[] rv = new IPath[configured.length + 1];
> 		rv[0] = p;
> 		for (int i = 0; i < configured.length; i++) {
> 			rv[i+1] = configured[i].append(p);
> 		}
> 		return rv;
> 	}
> 	private IPath[] getConfiguredRoots() {
> 		IFile config = contextProject.getFile(".xpand-root");
> 		if (!config.exists()) {
> 			return new IPath[] { new Path("templates/") };
> 		}
> 		if (config.getModificationStamp() != configStamp) {
> 			configuredRoots = new IPath[0];
> 			final ArrayList<IPath> read = new ArrayList<IPath>();
> 			BufferedReader in = null;
> 			try {
> 				in = new BufferedReader(new InputStreamReader(config.getContents(), config.getCharset()));
> 				String line;
> 				while((line = in.readLine()) != null) {
> 					line = line.trim();
> 					if (line.length() > 0 && line.charAt(0) != '#') {
> 						read.add(new Path(line));
> 					}
> 				}
> 			} catch (CoreException ex) {
> 				// IGNORE
> 			} catch (IOException ex) {
> 				// IGNORE
> 			} finally {
> 				if (in != null) {
> 					try {
> 						in.close();
> 					} catch (IOException ex) {
> 						/* IGNORE */
> 					}
> 				}
> 			}
> 			configuredRoots = read.toArray(new IPath[read.size()]);
> 			configStamp = config.getModificationStamp();
> 		}
> 		return configuredRoots;
> 	}
