374,439d373
< 	 * @param imageName -
< 	 *            name of the image to draw overlay on the button after the new
< 	 *            color is set
< 	 * @return - new RGB color, or null if none selected
< 	 * @deprecated Use {@link #changeColor(SelectionEvent, ToolItem, String, String, String, ImageDescriptor) instead and pass in the image descriptor itself.  To be removed on: 05/12/26
< 	 */
< 	protected RGB changeColor(SelectionEvent event, ToolItem button,
< 			String preferenceId, final String propertyId, String commandName,
< 			String imageName) {
< 
< 		ColorPalettePopup popup = new ColorPalettePopup(button.getParent()
< 			.getShell(), preferenceId, IDialogConstants.BUTTON_BAR_HEIGHT);
< 
< 		Rectangle r = button.getBounds();
< 		Point location = button.getParent().toDisplay(r.x, r.y);
< 		popup.open(new Point(location.x, location.y + r.height));
< 		if (popup.getSelectedColor() != null) {
< 			final RGB color = popup.getSelectedColor();
< 
< 			// Update model in response to user
< 
< 			if (color != null) {
< 
< 				List commands = new ArrayList();
< 				Iterator it = getInputIterator();
< 
< 				while (it.hasNext()) {
< 					final IGraphicalEditPart ep = (IGraphicalEditPart) it
< 						.next();
< 					commands.add(createCommand(commandName, ((View) ep
< 						.getModel()).eResource(), new Runnable() {
< 
< 						public void run() {
< 							ENamedElement element = MetaModelUtil.getElement(propertyId);
< 							if (element instanceof EStructuralFeature)
< 								ep.setStructuralFeatureValue((EStructuralFeature)MetaModelUtil.getElement(propertyId), FigureUtilities
< 									.RGBToInteger(color));
< 						}
< 					}));
< 				}
< 
< 				executeAsCompositeCommand(commandName, commands);
< 				Image overlyedImage = new ColorOverlayImageDescriptor(
< 					DiagramUIPropertiesImages.get(imageName)
< 						.getImageData(), color).createImage();
< 				button.setImage(overlyedImage);
< 			}
< 
< 			return color;
< 		}
< 		return null;
< 
< 	}
< 
< 	/**
< 	 * @param event -
< 	 *            selection event
< 	 * @param button -
< 	 *            event source
< 	 * @param preferenceId -
< 	 *            id of the preference of the default color value for that
< 	 *            property
< 	 * @param propertyId -
< 	 *            id of the property
< 	 * @param commandName -
< 	 *            name of the command
