31a33,33
> 		
31,31c32,32
< 	private final GMFGenPackage GMFGEN = GMFGenPackage.eINSTANCE;
---
> 		final GMFGenPackage GMFGEN = GMFGenPackage.eINSTANCE;
32,32d32
< 
95,95c95,95
< 		preserveIfSet(GMFGEN.getGenCompartment(), GMFGEN.getGenCompartment_ListLayout());
---
> 		restore(GMFGEN.getGenCompartment(), GMFGEN.getGenCompartment_ListLayout());
109,117d108
< 		addDecision(GMFGEN.getGenLink(), new Decision(GMFGEN.getGenLink_TreeBranch()) {
< 
< 			@Override
< 			public void apply(EObject current, EObject old) {
< 				if (!((GenLink) old).isTreeBranch()) {
< 					((GenLink) current).setTreeBranch(false);
< 				}
< 			}
< 		});
188a181,181
> 		addDecision(GMFGEN.getGenCustomPropertyTab(), new KeepOldIfNewIsByPatternOrNotSet(GMFGEN.getGenPropertyTab_Label(), "^Core$")); //$NON-NLS-1$
189,189c109,109
< 		preserveIfSet(GMFGEN.getGenCustomPropertyTab(), GMFGEN.getGenPropertyTab_Label());
---
> 		preserveIfSet(GMFGEN.getGenLink(), GMFGEN.getGenLink_TreeBranch());
230a223,223
> 		// XXX ReflectiveMatcher(Kind) instead?
234,234c227,227
< 				if (false == current instanceof GenStandardPreferencePage) {
---
> 				assert current instanceof GenStandardPreferencePage;
235,236d227
< 					return false;
< 				}
237,237c228,228
< 				if (false == old instanceof GenStandardPreferencePage) {
---
> 				assert old instanceof GenStandardPreferencePage;
238,239d228
< 					return false;
< 				}
251a241,246
> 		//
> 		// preserve model access attributes, or completely copy old if none in the new model found.
> 		setMatcher(GMFGEN.getDynamicModelAccess(), ALWAYS_MATCH);
> 		preserveIfSet(GMFGEN.getDynamicModelAccess(), GMFGEN.getDynamicModelAccess_ClassName());
> 		preserveIfSet(GMFGEN.getDynamicModelAccess(), GMFGEN.getDynamicModelAccess_PackageName());
> 		setCopier(GMFGEN.getDynamicModelAccess(), Copier.COMPLETE_COPY);
253a249,249
> 	// XXX rename?: preserveOld
