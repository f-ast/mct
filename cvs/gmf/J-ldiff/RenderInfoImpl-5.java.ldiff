14,15d13
< import java.awt.Color;
< 
16a15,15
> import org.eclipse.swt.graphics.RGB;
17,17c28,28
< 
---
> 
25a24,24
> class RenderInfoImpl
26,26c25,25
< public final class RenderInfoImpl implements RenderInfo {
---
> 	implements RenderInfo {
29a30,30
> 
30a32,32
> 
31a34,36
> 
> 	private RGB fill = null;
> 
32,32d33
< 	private Color fill;
33,33c37,37
< 	private Color outline;
---
> 	private RGB outline = null;
36,36d39
< 	* getWidth
37,37c40,40
< 	* Accessor method to return the width of the rendered image.
---
> 	 * getWidth Accessor method to return the width of the rendered image.
46,46d48
< 	 * getHeight
47,47c49,49
< 	 * Accessor method to return the height of the rendered image.
---
> 	 * getHeight Accessor method to return the height of the rendered image.
55a58,58
> 	 * shouldMaintainAspectRatio Accessor method to return whether or not the
56,56d57
< 	 * shouldMaintainAspectRatio
57,57c59,59
< 	 * Accessor method to return whether or not the aspect ratio is maintained.
---
> 	 * aspect ratio is maintained.
59,59c61,61
< 	 * @return boolean true if aspect ratio of original vector file is maintained, false otherwise.
---
> 	 * @return boolean true if aspect ratio of original vector file is
59a62,62
> 	 *         maintained, false otherwise.
64a68,68
> 	/*
65,65c69,69
< 	/* (non-Javadoc)
---
> 	 * (non-Javadoc)
65a70,70
> 	 * 
71a77,115
> 	/*
> 	 * (non-Javadoc)
> 	 * 
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.render.RenderInfo#getBackgroundColor()
> 	 */
> 	public RGB getBackgroundColor() {
> 		if (fill == null)
> 			return null;
> 		return new RGB(fill.red, fill.green, fill.blue);
> 	}
> 
> 	/*
> 	 * (non-Javadoc)
> 	 * 
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.render.RenderInfo#getForegroundColor()
> 	 */
> 	public RGB getForegroundColor() {
> 		if (outline == null)
> 			return null;
> 		return new RGB(outline.red, outline.green, outline.blue);
> 	}
> 
> 	/* 
> 	 * (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.draw2d.ui.render.RenderInfo#setValues(int, int, boolean, boolean, org.eclipse.swt.graphics.RGB, org.eclipse.swt.graphics.RGB)
> 	 */
> 	public void setValues(int width, int height,
> 			boolean maintainAspectRatio, boolean antialias, RGB fill, RGB outline) {
> 		this.width = width;
> 		this.height = height;
> 		this.fill = fill == null ? null : new RGB(fill.red, fill.green, fill.blue);
> 		this.outline = outline == null ? null : new RGB(outline.red, outline.green, outline.blue);
> 		this.maintainAspectRatio = maintainAspectRatio;
> 		this.antialias = antialias;
> 	}
> 
> 	/*
> 	 * (non-Javadoc)
> 	 * 
71a124,124
> 	/*
72,72c125,125
< 	/* (non-Javadoc)
---
> 	 * (non-Javadoc)
72a126,126
> 	 * 
74a118,120
> 	public java.awt.Color getFillColor() {
> 		if (fill != null)
> 			return new java.awt.Color(fill.red, fill.green, fill.blue);
75,75d117
< 	public Color getFillColor() {
76,76c121,121
< 		return fill;
---
> 		return null;
79,79d123
< 	/* (non-Javadoc)
82,82c129,129
< 	public Color getOutlineColor() {
---
> 	public java.awt.Color getOutlineColor() {
82a130,131
> 		if (outline != null)
> 			return new java.awt.Color(outline.red, outline.green, outline.blue);
83,83c132,132
< 		return outline;
---
> 		return null;
85a135,135
> 	/*
86,86c136,136
< 	/* (non-Javadoc)
---
> 	 * (non-Javadoc)
86a137,137
> 	 * 
87,87c138,138
< 	 * @see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderInfo#setValues(int, int, boolean)
---
> 	 * @see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderInfo#setValues(int,
87a139,139
> 	 *      int, boolean)
88a141,141
> 	public void setValues(int width, int height, java.awt.Color fill,
89,92d140
< 	public void setValues(
< 		int width,
< 		int height,
< 		Color fill, Color outline,
93,93c142,142
< 		boolean maintainAspectRatio,
---
> 			java.awt.Color outline, boolean maintainAspectRatio,
96a146,147
> 		this.fill = fill == null ? null : new RGB(fill.getRed(), fill.getGreen(), fill.getBlue());
> 		this.outline = outline == null ? null : new RGB(outline.getRed(), outline.getGreen(), outline.getBlue());
97,98d145
< 		this.fill = fill;
< 		this.outline = outline;
124a174,174
> 		this.fill = info.getBackgroundColor();
125,125d173
< 		this.fill = info.getFillColor();
126,126c175,175
< 		this.outline = info.getOutlineColor();
---
> 		this.outline = info.getForegroundColor();
165,165c214,214
< 				&& shouldMaintainAspectRatio()
---
> 				&& shouldMaintainAspectRatio() == info
166,166d214
< 					== info.shouldMaintainAspectRatio()
167,167c215,215
< 				&& shouldAntiAlias() == info.shouldAntiAlias())) {
---
> 					.shouldMaintainAspectRatio() && shouldAntiAlias() == info
167a216,216
> 				.shouldAntiAlias())) {
168a218,218
> 			if (getBackgroundColor() == null) {
169,169d217
< 			if (getFillColor() == null)	{
170,170c219,219
< 				if (info.getFillColor() != null)
---
> 				if (info.getBackgroundColor() != null)
172,172d220
< 			}
173,173c221,221
< 			else if (!getFillColor().equals(info.getFillColor()))
---
> 			} else if (!getBackgroundColor().equals(info.getBackgroundColor()))
175a224,224
> 			if (getForegroundColor() == null) {
176,176d223
< 			if (getOutlineColor() == null) {
177,177c225,225
< 				if (info.getOutlineColor() != null)
---
> 				if (info.getForegroundColor() != null)
179,179d226
< 			}
180,180c227,227
< 			else if (!getOutlineColor().equals(info.getOutlineColor()))
---
> 			} else if (!getForegroundColor().equals(info.getForegroundColor()))
