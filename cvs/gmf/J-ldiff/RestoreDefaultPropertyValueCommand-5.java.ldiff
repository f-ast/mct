2,2c2,2
<  * Copyright (c) 2003, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2003, 2006 IBM Corporation and others.
14a20,20
> import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
14a17,18
> import org.eclipse.emf.ecore.EObject;
> import org.eclipse.emf.transaction.TransactionalEditingDomain;
15,15d19
< import org.eclipse.core.runtime.NullProgressMonitor;
16,16c21,21
< import org.eclipse.ui.views.properties.IPropertySource;
---
> import org.eclipse.ui.views.properties.IPropertySource;
17,17d21
< 
19a15,15
> import org.eclipse.core.runtime.IAdaptable;
19,19c14,14
< import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
---
> import org.eclipse.core.commands.ExecutionException;
30,30c32,32
< public class RestoreDefaultPropertyValueCommand extends AbstractModelCommand {
---
> public class RestoreDefaultPropertyValueCommand extends AbstractTransactionalCommand {
58a61,61
>      * @param editingDomain the editing domain in which to make the change
65,65c68,68
< 	public RestoreDefaultPropertyValueCommand(
---
> 	public RestoreDefaultPropertyValueCommand(TransactionalEditingDomain editingDomain,  
70a74,78
> 		super(
>             editingDomain,
>             label,
>             (affectedObjects instanceof EObject) ? getWorkspaceFiles((EObject) affectedObjects)
>                 : null);
71,71d73
< 		super(label, affectedObjects);
75a83,83
> 	public boolean canRedo() {
76,79d82
< 	/* (non-Javadoc)
< 		 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#isRedoable()
< 		 */
< 	public boolean isRedoable() {
82a87,87
> 	public boolean canUndo() {
83,86d86
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#isUndoable()
< 	 */
< 	public boolean isUndoable() {
89a91,93
> 	protected CommandResult doExecuteWithResult(
>             IProgressMonitor progressMonitor, IAdaptable info)
>         throws ExecutionException {
90,93d90
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doExecute(org.eclipse.core.runtime.IProgressMonitor)
< 	 */
< 	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
102,102c102,102
< 				newOKCommandResult(
---
> 				CommandResult.newOKCommandResult(
107,107c107,107
< 			result = newOKCommandResult();
---
> 			result = CommandResult.newOKCommandResult();
111a112,113
> 	protected CommandResult doRedoWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
> 		return doExecuteWithResult(progressMonitor, info);
112,116d111
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doRedo()
< 	 */
< 	protected CommandResult doRedo() {
< 		return doExecute(new NullProgressMonitor());
118a116,116
> 	protected CommandResult doUndoWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
119,122d115
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.common.core.command.AbstractCommand#doUndo()
< 	 */
< 	protected CommandResult doUndo() {
128,128c122,122
< 			result = newOKCommandResult(getUndoValue());
---
> 			result = CommandResult.newOKCommandResult(getUndoValue());
132,132c126,126
< 				newOKCommandResult(
---
>                 CommandResult.newOKCommandResult(
