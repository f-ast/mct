83,83c83,83
< 			case GMFMapPackage.NODE_LABEL_MAPPING: return createNodeLabelMapping();
---
> 			case GMFMapPackage.LABEL_MAPPING: return createLabelMapping();
84,84d83
< 			case GMFMapPackage.LINK_LABEL_MAPPING: return createLinkLabelMapping();
104,105d102
< 			case GMFMapPackage.LINK_LABEL_ALIGNMENT:
< 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
120,121d116
< 			case GMFMapPackage.LINK_LABEL_ALIGNMENT:
< 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
183a179,181
> 	public LabelMapping createLabelMapping() {
> 		LabelMappingImpl labelMapping = new LabelMappingImpl();
> 		return labelMapping;
184,196d178
< 	public NodeLabelMapping createNodeLabelMapping() {
< 		NodeLabelMappingImpl nodeLabelMapping = new NodeLabelMappingImpl();
< 		return nodeLabelMapping;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public LinkLabelMapping createLinkLabelMapping() {
< 		LinkLabelMappingImpl linkLabelMapping = new LinkLabelMappingImpl();
< 		return linkLabelMapping;
284,303d268
< 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
< 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
< 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 		return result;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
< 		return instanceValue == null ? null : instanceValue.toString();
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
