2,2c2,2
<  * Copyright (c) 2003, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2003, 2008 IBM Corporation and others.
16a17,17
> import org.eclipse.draw2d.geometry.PrecisionPoint;
17a19,19
> import org.eclipse.gmf.runtime.draw2d.ui.geometry.PrecisionPointList;
20a23,23
>  * @author aboyko
28a32,32
> 	 * @param height inital height of the bounding square
29,29d31
< 	 * @param base inital length of the squares base
32,32c35,35
< 	public GeoShapeTriangleFigure( int base, int spacing ) {
---
> 	public GeoShapeTriangleFigure(int height, int spacing) {
32a36,36
> 		super((int)Math.round(2 * height / Math.sqrt(3)), height, spacing);
33,33d35
< 		super(base, base, spacing);
44,44c47,47
< 		PointList points = new PointList();
---
> 		PointList points = new PrecisionPointList();
46,46c49,49
< 		Point p1 = new Point( rect.x + ( rect.width / 2 ), rect.y );
---
> 		Point p1 = new PrecisionPoint( rect.preciseX() + rect.preciseWidth() / 2, rect.y );
46a50,50
> 		Point p2 = new PrecisionPoint( rect.preciseX(), rect.preciseY() + rect.preciseHeight() - 1 );
47,47d49
< 		Point p2 = new Point( rect.x, rect.y + rect.height - 1 );
48,48c51,51
< 		Point p3 = new Point( rect.x + rect.width - 1, rect.y + rect.height - 1 );
---
> 		Point p3 = new PrecisionPoint( rect.preciseX() + rect.preciseWidth() - 1, rect.preciseY() + rect.preciseHeight() - 1 );
