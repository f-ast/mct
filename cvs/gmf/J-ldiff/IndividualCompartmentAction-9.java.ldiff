13a14,16
> import org.eclipse.emf.ecore.ENamedElement;
> import org.eclipse.emf.ecore.EStructuralFeature;
> import org.eclipse.gef.Request;
14,17d13
< import java.util.Collections;
< import java.util.List;
< 
< import org.eclipse.gef.EditPart;
18a18,18
> import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
20a21,21
> import org.eclipse.gmf.runtime.diagram.ui.requests.ChangeChildPropertyValueRequest;
20,20c20,20
< import org.eclipse.gmf.runtime.diagram.ui.editparts.TopGraphicEditPart;
---
> import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
56a58,62
> 	
> 	protected Request createTargetRequest() {
> 		return new ChangeChildPropertyValueRequest(
> 			getPropertyName(),
> 			getPropertyId(),
56a77,79
> 	
> 	/* (non-Javadoc)
> 	 * @see org.eclipse.gmf.runtime.diagram.ui.actions.internal.PropertyChangeAction#getPropertyValue(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart, java.lang.String)
57,58d76
< 	/**
< 	 * @see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#getTargetEdiParts(org.eclipse.gef.EditPart)
59a81,84
> 	protected Object getPropertyValue(
> 		final IGraphicalEditPart editPart,
> 		final String thePropertyId) {
> 		return MEditingDomainGetter.getMEditingDomain((View)editPart.getModel()).runAsRead( new MRunnable() {
59,59c80,80
< 	 */
---
> 	 */
60,64d80
< 	protected List getTargetEdiParts(EditPart editpart) {
< 		EditPart targetEP = null;
< 		if (editpart instanceof TopGraphicEditPart) {
< 			final TopGraphicEditPart topEP = (TopGraphicEditPart) editpart;
< 			targetEP = (EditPart) MEditingDomainGetter.getMEditingDomain((View)editpart.getModel()).runAsRead( new MRunnable() {
65,65c85,85
< 				public Object run() { 
---
> 			public Object run() {
65a86,99
> 				ENamedElement element = MetaModelUtil.getElement(thePropertyId);
> 				if (element instanceof EStructuralFeature){
> 					View view  = editPart.getNotationView();
> 					if (view !=null){
> 						View childView = ViewUtil.getChildBySemanticHint(view,getCompartmentSemanticHint());
> 						if (childView!=null){
> 							return ViewUtil.getStructuralFeatureValue(childView,(EStructuralFeature)element);
> 						}
> 					}
> 				}
> 				return null;
> 			}
> 		});
> 	}
66,66d85
< 					return topEP.getChildBySemanticHint(
67a64,64
> 		
68a66,66
> 
69,74d65
< 			});
< 		}
< 		return (targetEP == null)
< 			? Collections.EMPTY_LIST
< 			: Collections.singletonList(targetEP);
< 	}
