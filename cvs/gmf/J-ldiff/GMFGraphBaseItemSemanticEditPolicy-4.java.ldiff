24a25,25
> import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
52a54,59
> 		IElementType elementType = ElementTypeRegistry.getInstance().getElementType(completedRequest.getEditHelperContext());
> 		Command semanticHelperCommand = null;
> 		if (elementType != null) {
> 			ICommand semanticCommand = elementType.getEditCommand(completedRequest);
> 			if (semanticCommand != null) {
> 				semanticHelperCommand = new EtoolsProxyCommand(semanticCommand);
53,55d53
< 		Command semanticCommand = getSemanticCommandSwitch(completedRequest);
< 		if (semanticCommand == null) {
< 			return UnexecutableCommand.INSTANCE;
56a61,77
> 		}
> 		Command semanticPolicyCommand = getSemanticCommandSwitch(completedRequest);
> 
> 		// combine commands from edit policy and edit helper
> 		if (semanticPolicyCommand == null) {
> 			if (semanticHelperCommand == null) {
> 				return null;
> 			} else {
> 				semanticPolicyCommand = semanticHelperCommand;
> 			}
> 		} else {
> 			if (semanticHelperCommand != null) {
> 				semanticPolicyCommand = semanticPolicyCommand.chain(semanticHelperCommand);
> 			}
> 		}
> 
> 		// append command to delete view if necessary
62a84,84
> 				Command deleteViewCommand = new EtoolsProxyCommand(new DeleteCommand(((IGraphicalEditPart) getHost()).getEditingDomain(), (View) getHost().getModel()));
63,63d83
< 				ICommand deleteCommand = new DeleteCommand((View) getHost().getModel());
64,64c85,85
< 				semanticCommand = semanticCommand.chain(new EtoolsProxyCommand(deleteCommand));
---
> 				semanticPolicyCommand = semanticPolicyCommand.chain(deleteViewCommand);
66,66c87,87
< 			return semanticCommand;
---
> 			return semanticPolicyCommand;
67a89,89
> 		return null;
68,68d88
< 		return UnexecutableCommand.INSTANCE;
