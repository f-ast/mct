13a14,14
> import java.util.ArrayList;
28a30,30
> import org.eclipse.emf.ecore.InternalEObject;
807a810,839
> 
> 	public Collection getInverseReferences(EObject eObject) {
> 	    Collection result = new ArrayList();
> 	    
> 	    EObject eContainer = eObject.eContainer();
> 	    if (eContainer != null)
> 	    {
> 	      result.add(((InternalEObject)eContainer).eSetting(eObject.eContainmentFeature()));
> 	    }
> 	    
> 	    Collection nonNavigableInverseReferences = (Collection)inverseCrossReferencer.get(eObject);
> 	    if (nonNavigableInverseReferences != null)
> 	    {
> 	      result.addAll(nonNavigableInverseReferences);
> 	    }
> 	    
> 	    EContentsEList.FeatureIterator crossReferences =
> 	    	(EContentsEList.FeatureIterator) eObject.eCrossReferences().iterator();
> 		while (crossReferences.hasNext()) {
> 			InternalEObject referent = (InternalEObject) crossReferences.next();
> 			EReference eReference = (EReference) crossReferences.feature();
> 			EReference eOpposite = eReference.getEOpposite();
> 			
> 			if (referent != null && eOpposite != null) {
> 				result.add(referent.eSetting(eOpposite));
> 			}
> 		}
> 	    
> 	    return result;
> 	}
