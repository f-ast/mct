9,11d8
< import java.util.List;
< import java.util.Map;
< 
13a11,12
> import org.eclipse.emf.ecore.EObject;
> 
20,20c19,19
<  * Container for audit rules representing a hierarchical organization of audits in the constraint category hierarchy of emft.validation framework
---
>  * Represents constraint category of emft.validation framework
29,29c25,25
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getRoot <em>Root</em>}</li>
31,31c29,29
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers <em>Child Containers</em>}</li>
---
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getPath <em>Path</em>}</li>
39,39c38,38
< public interface GenAuditContainer extends GenRuleContainerBase {
---
> public interface GenAuditContainer extends EObject {
40a40,41
> 	 * Returns the value of the '<em><b>Root</b></em>' container reference.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getCategories <em>Categories</em>}'.
40a155,155
> 	 * Returns the value of the '<em><b>Audits</b></em>' reference list.
41,41d154
< 	 * Returns the value of the '<em><b>Audits</b></em>' containment reference list.
42,42c156,156
< 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
---
> 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule}.
43,43c157,157
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer <em>Container</em>}'.
---
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory <em>Category</em>}'.
46,46c44,44
< 	 * If the meaning of the '<em>Audits</em>' container reference list isn't clear,
---
> 	 * If the meaning of the '<em>Root</em>' container reference isn't clear,
49a164,164
> 	 * @return the value of the '<em>Audits</em>' reference list.
50,53d163
< 	 * <!-- begin-model-doc -->
< 	 * The audit rules organized in this container
< 	 * <!-- end-model-doc -->
< 	 * @return the value of the '<em>Audits</em>' containment reference list.
54,54c165,165
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Audits()
---
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Audits()
55,55c166,166
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getContainer
---
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditRule#getCategory
56,56c167,167
< 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule" opposite="container" containment="true"
---
> 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule" opposite="category"
58a54,54
> 	GenAuditRoot getRoot();
58a140,140
> 	 * Returns the value of the '<em><b>Path</b></em>' reference list.
59,62d139
< 	EList getAudits();
< 
< 	/**
< 	 * Returns the value of the '<em><b>Child Containers</b></em>' containment reference list.
63,63c141,141
< 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
---
> 	 * The list contents are of type {@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer}.
64,77d141
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}'.
< 	 * <!-- begin-user-doc -->
< 	 * <p>
< 	 * If the meaning of the '<em>Child Containers</em>' reference isn't clear,
< 	 * there really should be more of a description here...
< 	 * </p>
< 	 * <!-- end-user-doc -->
< 	 * @return the value of the '<em>Child Containers</em>' containment reference list.
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_ChildContainers()
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer
< 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" opposite="parentContainer" containment="true"
< 	 * @generated
< 	 */
< 	EList getChildContainers();
162a48,48
> 	 * @return the value of the '<em>Root</em>' container reference.
163,172d47
< 	 * Returns the value of the '<em><b>Parent Container</b></em>' container reference.
< 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers <em>Child Containers</em>}'.
< 	 * <!-- begin-user-doc -->
< 	 * <p>
< 	 * If the meaning of the '<em>Parent Container</em>' container reference isn't clear,
< 	 * there really should be more of a description here...
< 	 * </p>
< 	 * <!-- end-user-doc -->
< 	 * @return the value of the '<em>Parent Container</em>' container reference.
< 	 * @see #setParentContainer(GenAuditContainer)
173,173c49,49
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_ParentContainer()
---
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Root()
174,174c50,50
< 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getChildContainers
---
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenAuditRoot#getCategories
175,175c51,51
< 	 * @model opposite="childContainers"
---
> 	 * @model opposite="categories" required="true" changeable="false"
176,212d51
< 	 * @generated
< 	 */
< 	GenAuditContainer getParentContainer();
< 
< 	/**
< 	 * Sets the value of the '{@link org.eclipse.gmf.codegen.gmfgen.GenAuditContainer#getParentContainer <em>Parent Container</em>}' container reference.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @param value the new value of the '<em>Parent Container</em>' container reference.
< 	 * @see #getParentContainer()
< 	 * @generated
< 	 */
< 	void setParentContainer(GenAuditContainer value);
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Gets all audit rules from this audit container hierarchy recursively
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditRule"
< 	 * @generated
< 	 */
< 	EList getAllAuditRules();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Gets all audit containers from this audit container hierarchy recursively
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer"
< 	 * @generated
< 	 */
< 	EList getAllAuditContainers();
< 
< 	/**
216,216c145,145
< 	 * Gets hierarchical path of this audit container as ordered list of containers beginning with the root and ended with this container
---
> 	 * Hierarchical path of this audit container as ordered list of containers beginning with the root and ended with this container
217a147,148
> 	 * @return the value of the '<em>Path</em>' reference list.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GMFGenPackage#getGenAuditContainer_Path()
218,218c149,149
< 	 * @model kind="operation" type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" required="true"
---
> 	 * @model type="org.eclipse.gmf.codegen.gmfgen.GenAuditContainer" required="true"
224a159,162
> 	 * <p>
> 	 * If the meaning of the '<em>Audits</em>' reference list isn't clear,
> 	 * there really should be more of a description here...
> 	 * </p>
226,251d163
< 	 * <!-- begin-model-doc -->
< 	 * Maps all rules in the container hierarchy to client context IDs of their target contexts. key: (context ID of rule target) value: (EList<GenAuditRule>)
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" required="true"
< 	 * @generated
< 	 */
< 	Map getAllRulesToTargetContextMap();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Gets all model packages to which rules in this container hierarchy are targeted. Checks rules recursively.
< 	 * <!-- end-model-doc -->
< 	 * @model kind="operation" type="org.eclipse.emf.codegen.ecore.genmodel.GenPackage"
< 	 * @generated
< 	 */
< 	EList getAllTargetedModelPackages();
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Indicates whether this container hierarchy contains at least 1 rule targeted on notation elements. Checks recursively.
< 	 * <!-- end-model-doc -->
< 	 * @model
253a170,170
> 	EList getAudits();
254,254d169
< 	boolean hasDiagramElementRule();
256,258d171
< 	List/*String*/ getAllContextSelectorsLocalClassNames();
< 	List/*String*/ getAllRequiredConstraintAdaptersLocalClassNames();
< 	List/*GenAuditRule*/ getAllJavaLangAudits();
