26a27,27
> import org.eclipse.core.commands.ExecutionException;
27a29,29
> import org.eclipse.core.runtime.IProgressMonitor;
33a38,38
> import org.eclipse.emf.transaction.Transaction;
34a40,40
> import org.eclipse.emf.workspace.AbstractEMFOperation;
44a50,50
> import org.eclipse.gmf.runtime.common.core.util.Trace;
44,44c49,49
< import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;
---
> import org.eclipse.gmf.runtime.common.core.util.StringStatics;
52a60,60
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;
53a62,62
> import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;
56,56d30
< import org.eclipse.gmf.runtime.emf.core.edit.MObjectState;
57,57c31,31
< import org.eclipse.gmf.runtime.emf.core.edit.MRunOption;
---
> import org.eclipse.core.runtime.NullProgressMonitor;
58,58c32,32
< import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;
---
> import org.eclipse.core.runtime.Status;
60,60c65,65
< import org.eclipse.gmf.runtime.emf.core.util.EObjectUtil;
---
> import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
409,409c415,415
< 			views.addAll(EObjectUtil.getReferencers(element, features));
---
> 			views.addAll(EMFCoreUtil.getReferencers(element, features));
469a476,486
> 		Map options = Collections.singletonMap(Transaction.OPTION_UNPROTECTED,
> 			Boolean.TRUE);
> 
> 		AbstractEMFOperation operation = new AbstractEMFOperation(
> 			((IGraphicalEditPart) getHost()).getEditingDomain(),
> 			StringStatics.BLANK, options) {
> 
> 			protected IStatus doExecute(IProgressMonitor monitor,
> 					IAdaptable info)
> 				throws ExecutionException {
> 
470,473d475
< 		int options = MRunOption.UNCHECKED /*| MRunOption.SILENT*/;
< 		MEditingDomainGetter.getMEditingDomain((View)getHost().getModel()).runWithOptions(new MRunnable() {
< 		//MEditingDomainGetter.getMEditingDomain((View)getHost().getModel()).runAsUnchecked( new MRunnable() {
< 			public Object run() { 
474a488,500
> 
> 				return Status.OK_STATUS;
> 			}
> 		};
> 		try {
> 			operation.execute(new NullProgressMonitor(), null);
> 		} catch (ExecutionException e) {
> 			Trace.catching(DiagramUIPlugin.getInstance(),
> 				DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass(),
> 				"executeCommand", e); //$NON-NLS-1$
> 			Log.warning(DiagramUIPlugin.getInstance(),
> 				DiagramUIStatusCodes.IGNORED_EXCEPTION_WARNING,
> 				"executeCommand", e); //$NON-NLS-1$
475,475d487
< 				return null;
476a502,502
> 		
477,477d501
< 		},options);
730,730c755,755
< 				DiagramEventBroker.getInstance().addNotificationListener(element,listener);
---
> 				getDiagramEventBroker().addNotificationListener(element,listener);
763,763c788,788
< 				DiagramEventBroker.getInstance().addNotificationListener(element,feature,listener);
---
> 				getDiagramEventBroker().addNotificationListener(element,feature,listener);
782,782c807,807
< 			DiagramEventBroker.getInstance().removeNotificationListener(
---
> 			getDiagramEventBroker().removeNotificationListener(
783,783c808,808
< 				(EObject)objects[0],(EStructuralFeature)objects[1],(NotificationListener) objects[2]);
---
> 				(EObject) objects[0], (EStructuralFeature) objects[1],
783a809,809
> 				(NotificationListener) objects[2]);
784a811,811
> 			getDiagramEventBroker().removeNotificationListener(
785,785d810
< 			DiagramEventBroker.getInstance().removeNotificationListener(
810a837,847
> 		if (!host().isActive()) {
> 			return false;
> 		}
> 
> 		// is it detached?
> 		EObject eObject = (EObject) host().getModel();
> 		if (eObject != null && eObject.eResource() == null
> 			&& !eObject.eIsProxy()) {
> 			return false;
> 		}
> 		return true;
811,811d836
< 		return host().isActive() && !EObjectUtil.getState((EObject)host().getModel()).equals(MObjectState.DETACHED);
1142a1179,1192
> 	
>     /**
>      * Gets the diagram event broker from the editing domain.
>      * 
>      * @return the diagram event broker
>      */
>     private DiagramEventBroker getDiagramEventBroker() {
>         TransactionalEditingDomain theEditingDomain = ((IGraphicalEditPart) getHost())
>             .getEditingDomain();
>         if (theEditingDomain != null) {
>             return DiagramEventBroker.getInstance(theEditingDomain);
>         }
>         return null;
>     }
