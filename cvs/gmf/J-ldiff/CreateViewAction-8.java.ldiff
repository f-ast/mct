13a14,22
> import java.util.ArrayList;
> import java.util.Collection;
> import java.util.Iterator;
> import java.util.List;
> import java.util.Map;
> 
> import org.eclipse.core.runtime.IAdaptable;
> import org.eclipse.core.runtime.IProgressMonitor;
> import org.eclipse.gef.EditPart;
14a24,25
> import org.eclipse.gef.RequestConstants;
> import org.eclipse.gef.requests.CreateRequest;
20a33,33
> import org.eclipse.gmf.runtime.notation.View;
21a35,36
> import org.eclipse.jface.viewers.StructuredSelection;
> import org.eclipse.swt.widgets.Display;
94,94d28
< 	/* (non-Javadoc)
95,95c29,29
< 	 * @see org.eclipse.gmf.runtime.diagram.ui.actions.DiagramAction#updateTargetRequest()
---
> import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramGraphicalViewer;
96a124,160
>     protected void selectAddedObject() {
>         Object result = ((CreateRequest) getTargetRequest()).getNewObject();
>         if (!(result instanceof Collection)) {
>             return;
>         }
>         final List editparts = new ArrayList(1);
> 
>         IDiagramGraphicalViewer viewer = getDiagramGraphicalViewer();
>         if (viewer == null) {
>             return;
>         }
> 
>         Map editpartRegistry = viewer.getEditPartRegistry();
>         for (Iterator iter = ((Collection) result).iterator(); iter.hasNext();) {
>             Object viewAdaptable = iter.next();
>             if (viewAdaptable instanceof IAdaptable) {
>                 Object editPart = editpartRegistry
>                     .get(((IAdaptable) viewAdaptable).getAdapter(View.class));
>                 if (editPart != null)
>                     editparts.add(editPart);
>             }
>         }
> 
>         if (!editparts.isEmpty()) {
>             viewer.setSelection(new StructuredSelection(editparts));
> 
>             // automatically put the first shape into edit-mode
>             Display.getCurrent().asyncExec(new Runnable() {
> 
>                 public void run() {
>                     EditPart editPart = (EditPart) editparts.get(0);
>                     editPart.performRequest(new Request(
>                         RequestConstants.REQ_DIRECT_EDIT));
>                 }
>             });
>         }
>     }
96a109,111
> 	protected void updateTargetRequest() {
> 		super.updateTargetRequest();
> 
97,101d108
< //	protected void updateTargetRequest() {
< //		super.updateTargetRequest();
< //
< //		Point p = Point.SINGLETON.getCopy();
< //		MapMode.translateToDP(p);
102,102c112,112
< //		CreateViewRequest req = (CreateViewRequest)getTargetRequest();
---
> 		CreateViewRequest req = (CreateViewRequest) getTargetRequest();
102a113,113
> 		req.setLocation(getMouseLocation());
103,103d112
< //		req.setLocation(p);
104,104c114,114
< //	}
---
> 	}
104a115,122
>     
>     protected void doRun(IProgressMonitor progressMonitor) {
>         super.doRun(progressMonitor);
>         selectAddedObject();
>     }
>     
>     /**
>      * Selects the newly added shape view(s) by default.
