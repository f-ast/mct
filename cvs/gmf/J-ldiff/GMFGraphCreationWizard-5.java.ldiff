2,2c2,2
<  * Copyright (c) 2006 Borland Software Corporation and others.
---
>  * Copyright (c) 2006, 2007 Borland Software Corporation and others.
12a13,19
> import java.lang.reflect.InvocationTargetException;
> 
> import org.eclipse.core.runtime.CoreException;
> import org.eclipse.core.runtime.IProgressMonitor;
> import org.eclipse.emf.ecore.resource.Resource;
> import org.eclipse.jface.dialogs.ErrorDialog;
> import org.eclipse.jface.operation.IRunnableWithProgress;
13,13d12
< import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.wizards.EditorCreationWizard;
14a21,22
> import org.eclipse.jface.wizard.Wizard;
> import org.eclipse.ui.INewWizard;
15a24,25
> import org.eclipse.ui.PartInitException;
> import org.eclipse.ui.actions.WorkspaceModifyOperation;
20,20c30,30
< public class GMFGraphCreationWizard extends EditorCreationWizard {
---
> public class GMFGraphCreationWizard extends Wizard implements INewWizard {
24a35,66
> 	private IWorkbench workbench;
> 
> 	/**
> 	 * @generated
> 	 */
> 	protected IStructuredSelection selection;
> 
> 	/**
> 	 * @generated
> 	 */
> 	protected GMFGraphCreationWizardPage diagramModelFilePage;
> 
> 	/**
> 	 * @generated
> 	 */
> 	protected GMFGraphCreationWizardPage domainModelFilePage;
> 
> 	/**
> 	 * @generated
> 	 */
> 	protected Resource diagram;
> 
> 	/**
> 	 * @generated
> 	 */
> 	private boolean openNewlyCreatedDiagramEditor = true;
> 
> 	/**
> 	 * @generated
> 	 */
> 	public IWorkbench getWorkbench() {
> 		return workbench;
25,28d34
< 	public void addPages() {
< 		super.addPages();
< 		if (page == null) {
< 			page = new GMFGraphCreationWizardPage(getWorkbench(), getSelection());
29a68,94
> 
> 	/**
> 	 * @generated
> 	 */
> 	public IStructuredSelection getSelection() {
> 		return selection;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public final Resource getDiagram() {
> 		return diagram;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public final boolean isOpenNewlyCreatedDiagramEditor() {
> 		return openNewlyCreatedDiagramEditor;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public void setOpenNewlyCreatedDiagramEditor(boolean openNewlyCreatedDiagramEditor) {
> 		this.openNewlyCreatedDiagramEditor = openNewlyCreatedDiagramEditor;
30,30d67
< 		addPage(page);
36a101,102
> 		this.workbench = workbench;
> 		this.selection = selection;
37,37d100
< 		super.init(workbench, selection);
38,38c103,103
< 		setWindowTitle("New GMFGraph Diagram"); //$NON-NLS-1$
---
> 		setWindowTitle("New GMFGraph Diagram");
41a107,153
> 
> 	/**
> 	 * @generated
> 	 */
> 	public void addPages() {
> 		diagramModelFilePage = new GMFGraphCreationWizardPage("DiagramModelFile", getSelection(), "gmfgraph_diagram"); //$NON-NLS-1$ //$NON-NLS-2$
> 		diagramModelFilePage.setTitle("Create GMFGraph Diagram");
> 		diagramModelFilePage.setDescription("Select file that will contain diagram model.");
> 		addPage(diagramModelFilePage);
> 
> 		domainModelFilePage = new GMFGraphCreationWizardPage("DomainModelFile", getSelection(), "gmfgraph"); //$NON-NLS-1$ //$NON-NLS-2$
> 		domainModelFilePage.setTitle("Create GMFGraph Diagram");
> 		domainModelFilePage.setDescription("Select file that will contain domain model.");
> 		addPage(domainModelFilePage);
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	public boolean performFinish() {
> 		IRunnableWithProgress op = new WorkspaceModifyOperation(null) {
> 
> 			protected void execute(IProgressMonitor monitor) throws CoreException, InterruptedException {
> 				diagram = GMFGraphDiagramEditorUtil.createDiagram(diagramModelFilePage.getURI(), domainModelFilePage.getURI(), monitor);
> 				if (isOpenNewlyCreatedDiagramEditor() && diagram != null) {
> 					try {
> 						GMFGraphDiagramEditorUtil.openDiagram(diagram);
> 					} catch (PartInitException e) {
> 						ErrorDialog.openError(getContainer().getShell(), "Error opening diagram editor", null, e.getStatus());
> 					}
> 				}
> 			}
> 		};
> 		try {
> 			getContainer().run(false, true, op);
> 		} catch (InterruptedException e) {
> 			return false;
> 		} catch (InvocationTargetException e) {
> 			if (e.getTargetException() instanceof CoreException) {
> 				ErrorDialog.openError(getContainer().getShell(), "Creation Problems", null, ((CoreException) e.getTargetException()).getStatus());
> 			} else {
> 				GMFGraphDiagramEditorPlugin.getInstance().logError("Error creating diagram", e.getTargetException()); //$NON-NLS-1$
> 			}
> 			return false;
> 		}
> 		return diagram != null;
> 	}
