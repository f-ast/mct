11a12,12
> import org.eclipse.emf.common.util.BasicEList;
15a17,17
> import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;
44,44c46,46
< 	protected EList genNodes = null;
---
> 	protected EList<GenNode> genNodes = null;
54,54c56,56
< 	protected EList genLinks = null;
---
> 	protected EList<GenLink> genLinks = null;
69a72,72
> 	@Override
79,79c82,82
< 	public EList getGenNodes() {
---
> 	public EList<GenNode> getGenNodes() {
81,81c84,84
< 			genNodes = new EObjectResolvingEList(GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
---
> 			genNodes = new EObjectResolvingEList<GenNode>(GenNode.class, this, GMFGenPackage.TOOL_ENTRY__GEN_NODES);
91,91c94,94
< 	public EList getGenLinks() {
---
> 	public EList<GenLink> getGenLinks() {
93,93c96,96
< 			genLinks = new EObjectResolvingEList(GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
---
> 			genLinks = new EObjectResolvingEList<GenLink>(GenLink.class, this, GMFGenPackage.TOOL_ENTRY__GEN_LINKS);
103,103c106,106
< 	public EList getElements() {
---
> 	public EList<GenCommonBase> getElements() {
103a107,107
> 		EList<? extends GenCommonBase> picked;
104a109,111
> 			picked = getGenLinks();
> 		} else {
> 			picked = getGenNodes();
105,105d108
< 			return getGenLinks();
106a113,113
> 		return new BasicEList.UnmodifiableEList<GenCommonBase>(picked.size(), picked.toArray());
107,107d112
< 		return getGenNodes();
114a121,121
> 	@Override
131a139,140
> 	@SuppressWarnings("unchecked")
> 		@Override
136,136c145,145
< 				getGenNodes().addAll((Collection)newValue);
---
> 				getGenNodes().addAll((Collection<? extends GenNode>)newValue);
140,140c149,149
< 				getGenLinks().addAll((Collection)newValue);
---
> 				getGenLinks().addAll((Collection<? extends GenLink>)newValue);
150a160,160
> 	@Override
167a178,178
> 	@Override
