2,2c2,2
<  * Copyright (c) 2004 IBM Corporation and others.
---
>  * Copyright (c) 2004, 2006 IBM Corporation and others.
36a37,37
> import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
98a100,115
>      * Helper method to get the element of this view. 
>      * 
>      * @return
>      */
>     private EObject getElement() {
>         // This uses the primary view only because that is what
>         // {@link #resolveSemanticElement()} uses and I am
>         // assuming this was done for some reason.
>         View primary = getPrimaryView();
>         if (primary != null) {
>             return primary.getElement();
>         }
>         return null;
>     }
> 
>     /**
104,104c121,121
< 		EObject element = resolveSemanticElement();
---
>         EObject element = getElement();
106,106c123,123
< 			return IconService.getInstance().getIcon(new EObjectAdapter(element));
---
>             return IconService.getInstance().getIcon(
106a124,124
>                 new EObjectAdapter(element));
131,133d148
< 	/**
< 	 * @see org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart#setVisibilty(boolean)
< 	 */
135,135c150,150
< 		super.setVisibility(vis && resolveSemanticElement() != null);
---
>         super.setVisibility(vis && getElement() != null);
154a170,184
>     
>     /**
>      * Overridden so that the name of the diagram will still be displayed even
>      * if the element is unresolved.
>      */
>     protected String getLabelText() {
>         String label = super.getLabelText();
>         if (label == null) {
>             EObject element = getElement();
>             if (element != null) {
>                 return EMFCoreUtil.getName(element);
>             }
>         }
>         return label;
>     }
