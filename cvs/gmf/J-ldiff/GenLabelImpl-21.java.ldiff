32,32d31
<  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenLabelImpl#isReadOnly <em>Read Only</em>}</li>
42,61d40
< 	 * The default value of the '{@link #isReadOnly() <em>Read Only</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isReadOnly()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected static final boolean READ_ONLY_EDEFAULT = false;
< 
< 	/**
< 	 * The cached value of the '{@link #isReadOnly() <em>Read Only</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @see #isReadOnly()
< 	 * @generated
< 	 * @ordered
< 	 */
< 	protected boolean readOnly = READ_ONLY_EDEFAULT;
< 
< 	/**
114,134d92
< 	public boolean isReadOnly() {
< 		return readOnly;
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void setReadOnly(boolean newReadOnly) {
< 		boolean oldReadOnly = readOnly;
< 		readOnly = newReadOnly;
< 		if (eNotificationRequired())
< 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_LABEL__READ_ONLY, oldReadOnly, readOnly));
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
236,237d193
< 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
< 				return isReadOnly() ? Boolean.TRUE : Boolean.FALSE;
253,255d208
< 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
< 				setReadOnly(((Boolean)newValue).booleanValue());
< 				return;
273,275d225
< 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
< 				setReadOnly(READ_ONLY_EDEFAULT);
< 				return;
293,294d242
< 			case GMFGenPackage.GEN_LABEL__READ_ONLY:
< 				return readOnly != READ_ONLY_EDEFAULT;
312,313d259
< 		result.append(" (readOnly: ");
< 		result.append(readOnly);
314,314c260,260
< 		result.append(", elementIcon: ");
---
> 		result.append(" (elementIcon: ");
