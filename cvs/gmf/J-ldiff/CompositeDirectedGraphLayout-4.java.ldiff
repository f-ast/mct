68,69d67
< /*            if (size==1 && nodes.size()==1){
<                 nodes = ((VirtualNode)vituralNodes.get(0)).members;
70,70c68,68
<             }else*/ if (size > 0){
---
>             if (size > 0){
83,83d80
<                  
84a82,82
>             Node parent  = getParent(nodes.getNode(0));
89a88,93
>             if (parent instanceof AdvancedSubGraph)
>                 adjustAutoSizeNodeWidthAndHeight((AdvancedSubGraph)parent);
>         }else if (nodesSize==1){
>             Node parent  = getParent(nodes.getNode(0));
>             if (parent instanceof AdvancedSubGraph)
>                 adjustAutoSizeNodeWidthAndHeight((AdvancedSubGraph)parent);
241a246,281
>     private void adjustAutoSizeNodeWidthAndHeight(AdvancedSubGraph subGraph) {
>     	
>         NodeList nodes = subGraph.members;
>         if (nodes.isEmpty())
>             return;
>         int size = nodes.size();
>         Node node = nodes.getNode(0);
>         int top=node.y,left=node.x,bottom = top + node.height ,right = left+node.width;
>         Node topNode, leftNode;
>         topNode = leftNode = node;
>         for (int index = 1 ; index<size; index++) {
>             node = (Node)nodes.get(index);
>             if (top>node.y){
>                 top = node.y;
>                 topNode = node;
>             }
>             if (bottom < (node.y+node.height))
>                 bottom = node.y+node.height;
>             if (left>node.x){
>                 left = node.x;
>                 leftNode = node;
>             }
>             if (right<(node.x+node.width))
>                 right = node.x+node.width;
>         }
>         int xDiff = 0 ;
>         int yDiff = 0 ;
>         if (subGraph.isHasBufferedZone()){
>              xDiff = leftNode.x;
>              yDiff = topNode.y ;
>         }
>         subGraph.width = right - left + xDiff;
>         subGraph.width = right - left + yDiff;
>         
>     }
> 
