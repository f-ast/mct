14,15d13
< import org.eclipse.core.runtime.Platform;
< 
18,19d15
< import org.eclipse.gmf.runtime.common.ui.services.dnd.core.DragDropListenerService;
< import org.eclipse.gmf.runtime.common.ui.services.dnd.core.TransferAdapterService;
32,42d27
< 	 * Extension point name for drag and drop listener providers extension
< 	 * point.
< 	 */
< 	protected static final String DRAG_DROP_LISTENER_PROVIDERS_EXT_P_NAME = "dragDropListenerProviders"; //$NON-NLS-1$
< 
< 	/**
< 	 * Extension point name for the transfer adapter providers extension point.
< 	 */
< 	protected static final String TRANSFER_ADAPTER_PROVIDERS_EXT_P_NAME = "transferAdapterProviders"; //$NON-NLS-1$
< 
< 	/**
82,114d66
< 
< 	/**
< 	 * Starts up this plug-in.
< 	 */
< 	protected void doStartup() {
< 		configureDragDropListenerProviders();
< 		configureTransferAdapterProviders();
< 	}
< 
< 	/**
< 	 * Configures drag and drop listener providers based drag and drop listener
< 	 * providers extension configurations.
< 	 *  
< 	 */
< 	private void configureDragDropListenerProviders() {
< 		DragDropListenerService.getInstance().configureProviders(
< 			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
< 				DRAG_DROP_LISTENER_PROVIDERS_EXT_P_NAME)
< 				.getConfigurationElements());
< 
< 	}
< 
< 	/**
< 	 * Configures transfer adapter providers based on marker navigation provider
< 	 * extension configurations.
< 	 *  
< 	 */
< 	private void configureTransferAdapterProviders() {
< 		TransferAdapterService.getInstance().configureProviders(
< 			Platform.getExtensionRegistry().getExtensionPoint(getPluginId(),
< 				TRANSFER_ADAPTER_PROVIDERS_EXT_P_NAME)
< 				.getConfigurationElements());
< 	}
