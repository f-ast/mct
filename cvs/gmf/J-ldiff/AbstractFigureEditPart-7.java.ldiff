21a245,245
> 		if (layout instanceof StackLayout) {
22,22c246,246
< import org.eclipse.draw2d.StackLayout;
---
> 			return new org.eclipse.draw2d.StackLayout();
23a249,249
> 		if (layout instanceof XYLayout) {
24,24c250,250
< import org.eclipse.draw2d.XYLayout;
---
> 			return new org.eclipse.draw2d.XYLayout();
32a31,31
> import org.eclipse.gmf.gmfgraph.Dimension;
38a41,42
> import org.eclipse.gmf.gmfgraph.Shape;
> import org.eclipse.gmf.gmfgraph.StackLayout;
39,39c43,43
< import org.eclipse.gmf.gmfgraph.Layoutable;
---
> import org.eclipse.gmf.gmfgraph.XYLayout;
53a55,55
> 
59a62,64
> 	private Object getLayoutConstraint() {
> 		Shape shape = getShape();
> 		if (shape == null || shape.getLayoutData() == null) {
60,62d61
< 	public Object getLayoutConstraint() {
< 		Layoutable layoutable = (Layoutable) ((View) getModel()).getElement();
< 		if (layoutable == null || layoutable.getLayoutData() == null) {
65,65c67,67
< 		LayoutData layoutData = layoutable.getLayoutData();
---
> 		LayoutData layoutData = shape.getLayoutData();
117,117c119,119
< 			if (xyLayoutData.getTopLeft() != null) {
---
> 			if (xyLayoutData.getTopLeft() != null && xyLayoutData.getSize() != null) {
119,120d120
< 			}
< 			if (xyLayoutData.getSize() != null) {
147,147c147,147
< 		} else if (layoutManager instanceof XYLayout) {
---
> 		} else if (layoutManager instanceof org.eclipse.draw2d.XYLayout) {
158,164d157
< 	 * This method will be called then new LayoutData object was associated with
< 	 * this model element.
< 	 * 
< 	 * All the layout constraints (LayoutData objects) are actually stored in
< 	 * model, so just calling <code>handleMajorSemanticChange()</code> to
< 	 * re-create this EditPart and reload all the LayoutDatas from model
< 	 * 
165a160,161
> 	private boolean isFigureRefreshAllowed() {
> 		return figure != null && figure.getParent() != null;
166,168d159
< 	protected void layoutDataChanged(LayoutData layoutData) {
< 		if (isFigureRefreshAllowed()) {
< 			handleMajorSemanticChange();
172,182d174
< 	/**
< 	 * This method will be called then layout was changed in model. The same
< 	 * method will be called to initialize layout on creating figure.
< 	 * 
< 	 * The only one way to change layout is to change corresponding model
< 	 * element now.
< 	 */
< 	protected void layoutChanged(Layout layout) {
< 		if (layout == null) {
< 			setFigureLayoutManager(null);
< 			return;
184a189,190
> 	protected LayoutManager getLayoutManager(Layout layout) {
> 		if (layout instanceof BorderLayout) {
185,186d188
< 		switch (layout.eClass().getClassifierID()) {
< 		case GMFGraphPackage.BORDER_LAYOUT: {
188,191d191
< 			org.eclipse.draw2d.BorderLayout layoutManager;
< 			if (getFigureLayoutManager() instanceof org.eclipse.draw2d.BorderLayout) {
< 				layoutManager = (org.eclipse.draw2d.BorderLayout) getFigureLayoutManager();
< 			} else {
192,192c192,192
< 				layoutManager = new org.eclipse.draw2d.BorderLayout();
---
> 			org.eclipse.draw2d.BorderLayout layoutManager = new org.eclipse.draw2d.BorderLayout();
193,194d192
< 				setFigureLayoutManager(layoutManager);
< 			}
198a197,197
> 			return layoutManager;
199,203d196
< 			break;
< 		}
< 		case GMFGraphPackage.CUSTOM_LAYOUT: {
< 			// TODO: implement custom layout
< 			break;
204a199,200
> 		
> 		if (layout instanceof FlowLayout) {
205,205d198
< 		case GMFGraphPackage.FLOW_LAYOUT: {
208,211d202
< 				ToolbarLayout layoutManager;
< 				if (getFigureLayoutManager() instanceof ToolbarLayout) {
< 					layoutManager = (ToolbarLayout) getFigureLayoutManager();
< 				} else {
212,212c203,203
< 					layoutManager = new ToolbarLayout();
---
> 				ToolbarLayout layoutManager = new ToolbarLayout();
213,214d203
< 					setFigureLayoutManager(layoutManager);
< 				}
218a208,208
> 				return layoutManager;
220,223d209
< 				org.eclipse.draw2d.FlowLayout layoutManager;
< 				if (getFigureLayoutManager() instanceof org.eclipse.draw2d.FlowLayout) {
< 					layoutManager = (org.eclipse.draw2d.FlowLayout) getFigureLayoutManager();
< 				} else {
224,224c210,210
< 					layoutManager = new org.eclipse.draw2d.FlowLayout();
---
> 				org.eclipse.draw2d.FlowLayout layoutManager = new org.eclipse.draw2d.FlowLayout();
225,226d210
< 					setFigureLayoutManager(layoutManager);
< 				}
232a217,217
> 				return layoutManager;
234,234d218
< 			break;
235a220,221
> 		
> 		if (layout instanceof GridLayout) {
236,236d219
< 		case GMFGraphPackage.GRID_LAYOUT: {
238,241d222
< 			org.eclipse.draw2d.GridLayout layoutManager;
< 			if (getFigureLayoutManager() instanceof org.eclipse.draw2d.GridLayout) {
< 				layoutManager = (org.eclipse.draw2d.GridLayout) getFigureLayoutManager();
< 			} else {
242,242c223,223
< 				layoutManager = new org.eclipse.draw2d.GridLayout();
---
> 			org.eclipse.draw2d.GridLayout layoutManager = new org.eclipse.draw2d.GridLayout();
243,244d223
< 				setFigureLayoutManager(layoutManager);
< 			}
262a242,242
> 			return layoutManager;
263,280d241
< 			break;
< 		}
< 		case GMFGraphPackage.STACK_LAYOUT: {
< 			if (false == getFigureLayoutManager() instanceof StackLayout) {
< 				setFigureLayoutManager(new StackLayout());
< 			}
< 			break;
< 		}
< 		case GMFGraphPackage.XY_LAYOUT: {
< 			if (false == getFigureLayoutManager() instanceof XYLayout) {
< 				setFigureLayoutManager(new XYLayout());
< 			}
< 			break;
< 		}
< 		}
< 		if (isFigureRefreshAllowed()) {
< 			handleMajorSemanticChange();
< 		}
283,283d157
< 	/**
284,284c158,158
< 	 * Blocking refresh of figure if it was not finally created.
---
> 	 * Blocking refresh of figure if it was not finally created.
285,287d158
< 	 */
< 	private boolean isFigureRefreshAllowed() {
< 		return figure != null;
290,290d162
< 	protected abstract LayoutManager getFigureLayoutManager();
291,291c163,163
< 
---
> 
292,293d163
< 	protected abstract void setFigureLayoutManager(LayoutManager layoutManager);
< 
294,294c164,164
< 	// ModelData transformers
---
> 	// ModelData transformers
295,295c165,165
< 	private int getDraw2dAllignment(Alignment alignment, boolean isToolbar) {
---
> 	private int getDraw2dAllignment(Alignment alignment, boolean isToolbar) {
296,296c166,166
< 		switch (alignment.getValue()) {
---
> 		switch (alignment.getValue()) {
297,297c167,167
< 		case Alignment.BEGINNING:
---
> 		case Alignment.BEGINNING:
298,298c168,168
< 			return isToolbar ? ToolbarLayout.ALIGN_TOPLEFT : org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP;
---
> 			return isToolbar ? ToolbarLayout.ALIGN_TOPLEFT : org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP;
299,299c169,169
< 		case Alignment.END:
---
> 		case Alignment.END:
300,300c170,170
< 			return isToolbar ? ToolbarLayout.ALIGN_BOTTOMRIGHT : org.eclipse.draw2d.FlowLayout.ALIGN_RIGHTBOTTOM;
---
> 			return isToolbar ? ToolbarLayout.ALIGN_BOTTOMRIGHT : org.eclipse.draw2d.FlowLayout.ALIGN_RIGHTBOTTOM;
301,301c171,171
< 		}
---
> 		}
302,302c172,172
< 		return isToolbar ? ToolbarLayout.ALIGN_CENTER : org.eclipse.draw2d.FlowLayout.ALIGN_CENTER;
---
> 		return isToolbar ? ToolbarLayout.ALIGN_CENTER : org.eclipse.draw2d.FlowLayout.ALIGN_CENTER;
305,305c175,175
< 	private Integer getGridDataAlignment(Alignment alignment) {
---
> 	private Integer getGridDataAlignment(Alignment alignment) {
306,306c176,176
< 		switch (alignment.getValue()) {
---
> 		switch (alignment.getValue()) {
307,307c177,177
< 		case Alignment.BEGINNING:
---
> 		case Alignment.BEGINNING:
308,308c178,178
< 			return GridData.BEGINNING;
---
> 			return GridData.BEGINNING;
309,309c179,179
< 		case Alignment.END:
---
> 		case Alignment.END:
310,310c180,180
< 			return GridData.END;
---
> 			return GridData.END;
311,311c181,181
< 		case Alignment.CENTER:
---
> 		case Alignment.CENTER:
312,312c182,182
< 			return GridData.CENTER;
---
> 			return GridData.CENTER;
313,313c183,183
< 		case Alignment.FILL:
---
> 		case Alignment.FILL:
314,314c184,184
< 			return GridData.FILL;
---
> 			return GridData.FILL;
315a186,186
> 		return null;
315,315c185,185
< 		}
---
> 		}
319,319c256,256
< 	protected int getLineStyle(LineKind lineKind) {
---
> 	protected static int getLineStyle(LineKind lineKind) {
341a279,282
> 	protected org.eclipse.draw2d.geometry.Dimension getCornerDimensions(int width, int height) {
> 		return new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(width), getMapMode().DPtoLP(height));
> 	}
> 
354,354c295,295
< 		// override default connection handles behavior, that could be installed by parent
---
> 		// override default connection handles behavior, that could be installed
354a296,296
> 		// by parent
379a322,322
> 
392a336,336
> 
393a338,338
> 
410a356,381
> 
> 	protected org.eclipse.draw2d.geometry.Dimension getDraw2dDimension(Dimension dimension) {
> 		return new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(dimension.getDx()), getMapMode().DPtoLP(dimension.getDy()));
> 	}
> 
> 	protected org.eclipse.draw2d.geometry.Point getDraw2DPoint(Point point) {
> 		return new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(point.getX()), getMapMode().DPtoLP(point.getY()));
> 	}
> 
> 	protected void refreshLayoutData() {
> 		if (!isFigureRefreshAllowed()) {
> 			return;
> 		}
> 		Object layoutConstraint = getLayoutConstraint();
> 		if (layoutConstraint != null) {
> 			getFigure().getParent().setConstraint(getFigure(), layoutConstraint);
> 		}
> 	}
> 
> 	protected Shape getShape() {
> 		View view = getNotationView();
> 		if (view != null && view.getElement() instanceof Shape) {
> 			return (Shape) view.getElement();
> 		}
> 		return null;
> 	}
