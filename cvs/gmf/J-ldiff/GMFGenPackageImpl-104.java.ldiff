988a989,1006
> 	public EAttribute getBatchValidation_MetricProviderClassName() {
> 		return (EAttribute)batchValidationEClass.getEStructuralFeatures().get(5);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EAttribute getBatchValidation_MetricProviderPriority() {
> 		return (EAttribute)batchValidationEClass.getEStructuralFeatures().get(6);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
3033a3052,3069
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EAttribute getGenMetricRule_LowLimit() {
> 		return (EAttribute)genMetricRuleEClass.getEStructuralFeatures().get(3);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public EAttribute getGenMetricRule_HighLimit() {
> 		return (EAttribute)genMetricRuleEClass.getEStructuralFeatures().get(4);
3033,3033c3051,3051
< 		return (EReference)genMetricRuleEClass.getEStructuralFeatures().get(3);
---
> 		return (EReference)genMetricRuleEClass.getEStructuralFeatures().get(5);
3165a3202,3203
> 		createEAttribute(batchValidationEClass, BATCH_VALIDATION__METRIC_PROVIDER_CLASS_NAME);
> 		createEAttribute(batchValidationEClass, BATCH_VALIDATION__METRIC_PROVIDER_PRIORITY);
3452a3491,3492
> 		createEAttribute(genMetricRuleEClass, GEN_METRIC_RULE__LOW_LIMIT);
> 		createEAttribute(genMetricRuleEClass, GEN_METRIC_RULE__HIGH_LIMIT);
3611a3652,3653
> 		initEAttribute(getBatchValidation_MetricProviderClassName(), ecorePackage.getEString(), "metricProviderClassName", null, 0, 1, BatchValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
> 		initEAttribute(getBatchValidation_MetricProviderPriority(), this.getProviderPriority(), "metricProviderPriority", null, 0, 1, BatchValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
3618a3661,3664
> 		addEOperation(batchValidationEClass, ecorePackage.getEString(), "getMetricProviderQualifiedClassName", 0, 1);
> 
> 		addEOperation(batchValidationEClass, ecorePackage.getEString(), "getMetricViewID", 0, 1);
> 
4063a4110,4111
> 		initEAttribute(getGenMetricRule_LowLimit(), ecorePackage.getEDoubleObject(), "lowLimit", null, 0, 1, GenMetricRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
> 		initEAttribute(getGenMetricRule_HighLimit(), ecorePackage.getEDoubleObject(), "highLimit", null, 0, 1, GenMetricRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
4284a4333,4339
> 		  (genMetricRuleEClass, 
> 		   source, 
> 		   new String[] {
> 			 "ocl", "not lowLimit.oclIsUndefined() and not highLimit.oclIsUndefined()  implies lowLimit < highLimit",
> 			 "description", "Metric value \'lowLimit\' must be smaller then \'highLimit\'"
> 		   });			
> 		addAnnotation
