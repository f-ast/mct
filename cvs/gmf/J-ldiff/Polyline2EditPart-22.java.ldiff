100a101,105
> 
> 			protected boolean useLocalCoordinates() {
> 				return true;
> 			}
> 		};
100,100c100,100
< 		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
---
> 		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0)) {
147,149d151
< 		if (NotationPackage.eINSTANCE.getSize_Width().equals(feature) || NotationPackage.eINSTANCE.getSize_Height().equals(feature) || NotationPackage.eINSTANCE.getLocation_X().equals(feature)
< 				|| NotationPackage.eINSTANCE.getLocation_Y().equals(feature)) {
< 			return;
150,150c152,152
< 		} else if (NotationPackage.eINSTANCE.getFillStyle_FillColor().equals(feature)) {
---
> 		if (NotationPackage.eINSTANCE.getFillStyle_FillColor().equals(feature)) {
193a196,201
> 			getPrimaryShape().setOutline(modelElement.isOutline());
> 			getPrimaryShape().setFill(modelElement.isFill());
> 			getPrimaryShape().setLineWidth(modelElement.getLineWidth());
> 			getPrimaryShape().setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			getPrimaryShape().setFillXOR(modelElement.isXorFill());
> 			getPrimaryShape().setOutlineXOR(modelElement.isXorOutline());
198a207,207
> 			getPrimaryShape().setPoints(getPointList(modelElement.getTemplate()));
214a224,271
> 		ChangeTracker outlineTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setOutline(modelElement.isOutline());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(outlineTracker, GMFGraphPackage.eINSTANCE.getShape_Outline()));
> 
> 		ChangeTracker fillTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setFill(modelElement.isFill());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(fillTracker, GMFGraphPackage.eINSTANCE.getShape_Fill()));
> 
> 		ChangeTracker lineWidthTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setLineWidth(modelElement.getLineWidth());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(lineWidthTracker, GMFGraphPackage.eINSTANCE.getShape_LineWidth()));
> 
> 		ChangeTracker lineStyleTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(lineStyleTracker, GMFGraphPackage.eINSTANCE.getShape_LineKind()));
> 
> 		ChangeTracker fillXORTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setFillXOR(modelElement.isXorFill());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(fillXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorFill()));
> 
> 		ChangeTracker outlineXORTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setOutlineXOR(modelElement.isXorOutline());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(outlineXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorOutline()));
> 
262a326,328
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getPolyline_Template(), pointsTracker, new FeatureTracker(pointsTracker, GMFGraphPackage.eINSTANCE.getPoint_X()),
> 				new FeatureTracker(pointsTracker, GMFGraphPackage.eINSTANCE.getPoint_Y())));
263,263c329,329
< 		modelElement.eAdapters().addAll(myDomainElementAdapters);
---
> 		modelElement.eAdapters().addAll(myDomainElementAdapters);
264,264c330,330
< 		super.activate();
---
> 		super.activate();
265,265d330
< 	}
266a321,324
> 		ChangeTracker pointsTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setPoints(getPointList(modelElement.getTemplate()));
267,279d320
< 	/**
< 	 * @generated
< 	 */
< 	protected void refreshBounds() {
< 		org.eclipse.gmf.gmfgraph.Polyline modelElement = (org.eclipse.gmf.gmfgraph.Polyline) getModelFigureElement();
< 		if (modelElement == null) {
< 			return;
< 		}
< 		if (modelElement.getPreferredSize() != null) {
< 			getFigure().setPreferredSize(getDraw2dDimension(modelElement.getPreferredSize()));
< 		}
< 		if (modelElement.getLocation() != null) {
< 			getFigure().setLocation(getDraw2DPoint(modelElement.getLocation()));
