16a17,17
> import org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind;
20a22,22
> import org.eclipse.gmf.codegen.gmfgen.GenCompartment;
21a24,24
> import org.eclipse.gmf.codegen.gmfgen.GenNode;
69a73,87
> 	 * @generated NOT
> 	 */
> 	public boolean isListContainerEntry() {
> 		if (getContainer() instanceof GenNode) {
> 			return ((GenNode) getContainer()).getChildContainersPlacement() == CompartmentPlacementKind.TOOLBAR_LITERAL;
> 		}
> 		if (getContainer() instanceof GenCompartment) {
> 			return ((GenCompartment) getContainer()).getLayoutKind() == CompartmentLayoutKind.TOOLBAR_LITERAL;
> 		}
> 		return false;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
189,279d206
< 	public void eSet(EStructuralFeature eFeature, Object newValue) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				setDiagramRunTimeClass((GenClass)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VISUAL_ID:
< 				setVisualID(((Integer)newValue).intValue());
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__EDIT_PART_CLASS_NAME:
< 				setEditPartClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				setItemSemanticEditPolicyClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				setNotationViewFactoryClassName((String)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 				setViewmap((Viewmap)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 				getChildNodes().clear();
< 				getChildNodes().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 				setModelFacet((TypeModelFacet)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 				getLabels().clear();
< 				getLabels().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 				getCompartments().clear();
< 				getCompartments().addAll((Collection)newValue);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_CONTAINERS_PLACEMENT:
< 				setChildContainersPlacement((CompartmentPlacementKind)newValue);
< 				return;
< 		}
< 		eDynamicSet(eFeature, newValue);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	public void eUnset(EStructuralFeature eFeature) {
< 		switch (eDerivedStructuralFeatureID(eFeature)) {
< 			case GMFGenPackage.GEN_CHILD_NODE__DIAGRAM_RUN_TIME_CLASS:
< 				setDiagramRunTimeClass((GenClass)null);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VISUAL_ID:
< 				setVisualID(VISUAL_ID_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__EDIT_PART_CLASS_NAME:
< 				setEditPartClassName(EDIT_PART_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME:
< 				setItemSemanticEditPolicyClassName(ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__NOTATION_VIEW_FACTORY_CLASS_NAME:
< 				setNotationViewFactoryClassName(NOTATION_VIEW_FACTORY_CLASS_NAME_EDEFAULT);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__VIEWMAP:
< 				setViewmap((Viewmap)null);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_NODES:
< 				getChildNodes().clear();
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__MODEL_FACET:
< 				setModelFacet((TypeModelFacet)null);
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__LABELS:
< 				getLabels().clear();
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__COMPARTMENTS:
< 				getCompartments().clear();
< 				return;
< 			case GMFGenPackage.GEN_CHILD_NODE__CHILD_CONTAINERS_PLACEMENT:
< 				setChildContainersPlacement(CHILD_CONTAINERS_PLACEMENT_EDEFAULT);
< 				return;
< 		}
< 		eDynamicUnset(eFeature);
< 	}
< 
< 	/**
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
