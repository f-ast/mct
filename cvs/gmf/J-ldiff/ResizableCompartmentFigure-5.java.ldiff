94a95,95
> 	 * @deprecated use @link(ResizableCompartment(String compartmentTitle, IMapMode mm)} instead.
95,98d94
< 	 * @deprecated use @link(ResizableCompartment(String compartmentTitle, int minClientSize)} instead.
< 	 * Clients must specify the minClientSize in their own logical coordinate system instead of the
< 	 * figure assuming a default.  @link{ ResizableCompartmentFigure.MIN_CLIENT_DP } is provided as a default
< 	 * value for convenience in device coordinates.
102a100,100
>     
107a106,106
>      * @deprecated use @link(ResizableCompartment(String compartmentTitle, IMapMode mm)} instead.
123a123,149
>     
>     /**
>      * A constructor for a top level resizable compartment figure
>      * 
>      * @param compartmentTitle <code>String</code> that is the title that is
>      * displayed at the top of the compartment figure (optional).
>      * @param mm the <code>IMapMode</code> that is used to initialize the
>      * default values of of the scrollpane contained inside the figure.  This is
>      * necessary since the figure is not attached at construction time and consequently
>      * can't get access to the owned IMapMode in the parent containment hierarchy.
>      */
>     public ResizableCompartmentFigure(String compartmentTitle, IMapMode mm) {
>         this.minClientSize = mm.DPtoLP(MIN_CLIENT_DP);
>         setTextPane(new Figure() {
>             public Dimension getMaximumSize() {
>                 return getPreferredSize();
>             }
>         });
>         getTextPane().setLayoutManager(new ConstrainedToolbarLayout());
>         add(getTextPane());
>         add(scrollPane = createScrollpane(mm));
>         setLayoutManager(new ConstrainedToolbarLayout());
>         setTitle(compartmentTitle);
>         setToolTip(compartmentTitle);
>         setBorder(new OneLineBorder());
>     }
>     
127a154,154
>      * @deprecated use {@link ResizableCompartmentFigure#createScrollpane(IMapMode)} instead
129a157,169
> 		return createScrollpane(MapModeUtil.getMapMode(this));
> 	}
>     
>     /**
>      * Creates the animatable scroll pane
>      * 
>      * @param mm the <code>IMapMode</code> that is used to initialize the
>      * default values of of the scrollpane contained inside the figure.  This is
>      * necessary since the figure is not attached at construction time and consequently
>      * can't get access to the owned IMapMode in the parent containment hierarchy.
>      * @return <code>AnimatableScrollPane</code>
>      */
>     protected AnimatableScrollPane createScrollpane(IMapMode mm) {
135,135d174
< 		IMapMode mm = MapModeUtil.getMapMode(this);
