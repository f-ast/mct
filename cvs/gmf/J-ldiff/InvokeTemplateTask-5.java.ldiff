13a14,20
> import java.io.File;
> import java.io.FileOutputStream;
> import java.io.IOException;
> import java.net.MalformedURLException;
> import java.util.ArrayList;
> import java.util.StringTokenizer;
> 
29,29c36,36
< 	private String myTemplateRoot;
---
> 	private String[] myTemplateRoots;
29a37,37
> 	private String myOutFile;
38a47,52
> 	public void setInputURI(String uri) {
> 		myTemplateTarget = uri;
> 	}
> 
> 	public void setOutFile(String uri) {
> 		myOutFile = uri;
39,40d46
< 	public void setBareInput(int i) {
< 		myTemplateTarget = i;
41a54,54
> 
42a56,60
> 		ArrayList<String> roots = new ArrayList<String>();
> 		for (StringTokenizer st = new StringTokenizer(root, ";, "); st.hasMoreTokens(); ) {
> 			roots.add(st.nextToken().trim());
> 		}
> 		myTemplateRoots = roots.toArray(new String[roots.size()]);
43,43d55
< 		myTemplateRoot = root;
60a78,78
> 		if (myOutFile == null) {
61a80,89
> 		} else {
> 			try {
> 				File f = getProject().resolveFile(myOutFile);
> 				FileOutputStream os = new FileOutputStream(f);
> 				os.write(result.getBytes());
> 				os.close();
> 			} catch (IOException ex) {
> 				throw new BuildException("Can't write to " + myOutFile, ex, getLocation());
> 			}
> 		}
70a99,101
> 		if (myTemplateRoots == null || myTemplateRoots.length == 0) {
> 			throw new BuildException("No template root specified", getLocation());
> 		}
81,81c112,112
< 	protected XpandFacade createFacade() {
---
> 	protected XpandFacade createFacade() throws BuildException {
83a115,117
> 			for (String r : myTemplateRoots) {
> 				xf.addLocation(r);
> 			}
84,84d114
< 			xf.addLocation(myTemplateRoot);
85a119,120
> 		} catch (MalformedURLException ex) {
> 			throw new BuildException(ex, getLocation());
86,88d118
< 		} catch (Exception ex) {
< 			ex.printStackTrace();
< 			// FIXME
90,91d121
< 		assert false;
< 		return null;
