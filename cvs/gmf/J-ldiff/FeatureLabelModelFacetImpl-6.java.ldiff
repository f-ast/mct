14a15,16
> import org.eclipse.gmf.codegen.gmfgen.LabelModelFacet;
> 
21a24,24
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.FeatureLabelModelFacetImpl#isReadOnly <em>Read Only</em>}</li>
30a34,53
> 	 * The default value of the '{@link #isReadOnly() <em>Read Only</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isReadOnly()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean READ_ONLY_EDEFAULT = false;
> 
> 	/**
> 	 * The cached value of the '{@link #isReadOnly() <em>Read Only</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isReadOnly()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean readOnly = READ_ONLY_EDEFAULT;
> 
> 	/**
92a116,136
> 	public boolean isReadOnly() {
> 		return readOnly;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setReadOnly(boolean newReadOnly) {
> 		boolean oldReadOnly = readOnly;
> 		readOnly = newReadOnly;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY, oldReadOnly, readOnly));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
136a181,182
> 			case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY:
> 				return isReadOnly() ? Boolean.TRUE : Boolean.FALSE;
151a198,200
> 			case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY:
> 				setReadOnly(((Boolean)newValue).booleanValue());
> 				return;
168a218,220
> 			case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY:
> 				setReadOnly(READ_ONLY_EDEFAULT);
> 				return;
185a238,239
> 			case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY:
> 				return readOnly != READ_ONLY_EDEFAULT;
198a253,282
> 	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
> 		if (baseClass == LabelModelFacet.class) {
> 			switch (derivedFeatureID) {
> 				case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY: return GMFGenPackage.LABEL_MODEL_FACET__READ_ONLY;
> 				default: return -1;
> 			}
> 		}
> 		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
> 		if (baseClass == LabelModelFacet.class) {
> 			switch (baseFeatureID) {
> 				case GMFGenPackage.LABEL_MODEL_FACET__READ_ONLY: return GMFGenPackage.FEATURE_LABEL_MODEL_FACET__READ_ONLY;
> 				default: return -1;
> 			}
> 		}
> 		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
202a287,288
> 		result.append(" (readOnly: ");
> 		result.append(readOnly);
203,203c289,289
< 		result.append(" (viewPattern: ");
---
> 		result.append(", viewPattern: ");
