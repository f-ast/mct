17,17c17,17
< import org.eclipse.gmf.runtime.emf.core.edit.MFilter;
---
> import org.eclipse.emf.transaction.NotificationFilter;
18,18d17
< import org.eclipse.gmf.runtime.emf.core.exceptions.MSLActionAbandonedException;
20a20,20
> import org.eclipse.jface.viewers.IStructuredSelection;
68,68d67
<         
138a138,144
>         if (!selection.isEmpty() && selection instanceof IStructuredSelection) {
>             Object firstElement = ((IStructuredSelection) selection)
>                 .getFirstElement();
>             if (firstElement instanceof EObject) {
>                 setEObject((EObject) firstElement);
>             }
>         }
194,219d199
<     /**
< 	 * Overwrites the default behavior to perform update on the create event.
< 	 * That must be done because proeprties of the advanced tab might be
< 	 * affected by creation of new elements.
< 	 * 
< 	 * @see org.eclipse.gmf.runtime.emf.core.internal.events.IDemuxedMListener#handleElementCreatedEvent(org.eclipse.emf.common.notify.Notification,
< 	 *      org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
< 	 */
<     public void handleElementCreatedEvent(Notification notification,
<             EObject owner, EObject newElement) {
<         update(notification, owner);
<     }
< 
<     /**
<      * Overwrites the default behavior to perform update on the delete event.
<      * That must be done because proeprties of the advanced tab might be
<      * affected by deletion of elements.
<      * 
<      * @see org.eclipse.gmf.runtime.emf.core.internal.events.IDemuxedMListener#handleElementDeletedEvent(org.eclipse.emf.common.notify.Notification,
<      *      org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)
<      */
<     public void handleElementDeletedEvent(Notification notification,
<             EObject owner, EObject oldElement) {
<         update(notification, owner);
<     }
< 
222a203,211
>     public NotificationFilter getFilter() {
> 		return NotificationFilter.createEventTypeFilter(Notification.SET).or(
> 			NotificationFilter.createEventTypeFilter(Notification.ADD)).or(
> 			NotificationFilter.createEventTypeFilter(Notification.ADD_MANY))
> 			.or(NotificationFilter.createEventTypeFilter(Notification.REMOVE))
> 			.or(
> 				NotificationFilter
> 					.createEventTypeFilter(Notification.REMOVE_MANY)).and(
> 				NotificationFilter.createNotifierTypeFilter(EObject.class));
223,229d202
<     public MFilter getFilter() {
<         MFilter lifeCycleEventFilter = new MFilter.Or(
<                 MFilter.ELEMENT_CREATED_FILTER,
<                 MFilter.ELEMENT_DELETED_FILTER);
< 
<         return new MFilter.Or(lifeCycleEventFilter,
<                         MFilter.ELEMENT_MODIFIED_FILTER);
232a215,215
>     /*
233,233c216,216
<     /* (non-Javadoc)
---
> 	 * (non-Javadoc)
233a217,217
> 	 * 
241,247d224
<   
<     /* (non-Javadoc)
<      * @see org.eclipse.gmf.runtime.diagram.ui.properties.sections.AbstractModelerPropertySection#handleException(org.eclipse.gmf.runtime.emf.core.exceptions.MSLActionAbandonedException)
<      */
<     protected void handleException(MSLActionAbandonedException exception) {
<         /* not implemented */
<     }
