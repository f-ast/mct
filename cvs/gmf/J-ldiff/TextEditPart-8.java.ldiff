14,17d13
< import java.util.Dictionary;
< import java.util.Hashtable;
< import java.util.Map;
< 
21,22d16
< import org.eclipse.emf.ecore.ENamedElement;
< import org.eclipse.emf.ecore.EStructuralFeature;
24,24c22,22
< import org.eclipse.swt.graphics.Color;
---
> import org.eclipse.swt.graphics.Color;
25,25d22
< 
28,29d19
< import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;
< import org.eclipse.gmf.runtime.emf.core.util.MetaModelUtil;
41,53d31
< 
< 	/**
< 	* a static array of appearance property ids applicable to shapes
< 	*/
< 	private static final String[] appearanceProperties =
< 		new String[] {
< 			Properties.ID_ISVISIBLE,
< 			Properties.ID_FONTNAME,
< 			Properties.ID_FONTSIZE,
< 			Properties.ID_FONTBOLD,
< 			Properties.ID_FONTITALIC,
< 			Properties.ID_FONTCOLOR};
< 
83,115d60
< 	 * Returns an array of the appearance property ids applicable to the receiver.
< 	 * Fro this type it is  
< 	 *			Properties.ID_ISVISIBLE
< 	 * @return - an array of the appearance property ids applicable to the receiver
< 	 */
< 	private String[] getAppearancePropertyIDs() {
< 		return appearanceProperties;
< 	}
< 
< 	/**
< 	 * @see org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart#fillAppearancePropertiesMap(java.util.Map)
< 	 */
< 	public void fillAppearancePropertiesMap(Map properties) {
< 		if (getAppearancePropertyIDs().length > 0) {
< 			// only if there are any appearance properties
< 			final Dictionary local_properties = new Hashtable();
< 			for (int i = 0; i < getAppearancePropertyIDs().length; i++){
< 				ENamedElement element = MetaModelUtil.getElement(getAppearancePropertyIDs()[i]);
< 				if (element instanceof EStructuralFeature){
< 					local_properties.put(
< 						getAppearancePropertyIDs()[i],
< 						getStructuralFeatureValue((EStructuralFeature)element));
< 				}
< 			}
< 			String semanticType = ""; //$NON-NLS-1$
< 			View view = getNotationView();
< 			if (view!=null)
< 				semanticType = view.getType();
< 			properties.put(semanticType,local_properties);
< 		}
< 	}
< 	
< 	/**
