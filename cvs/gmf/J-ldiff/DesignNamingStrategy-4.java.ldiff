14,14d15
< import org.eclipse.emf.codegen.util.CodeGenUtil;
15,15c16,16
< import org.eclipse.gmf.common.IncrementalNamesDispenser;
---
> import org.eclipse.gmf.mappings.CompartmentMapping;
29,36d27
< 	private final String suffix;
< 
< 	private final NamesDispenser namesDispenser;
< 
< 	public DesignNamingStrategy(String suffix) {
< 		this(suffix, null, new IncrementalNamesDispenser());
< 	}
< 
37a29,29
> 		super(suffix, namesDispenser, chainedNamingStrategy, prefixNamingStrategy);
37,37c28,28
< 	public DesignNamingStrategy(String suffix, NamingStrategy chained, NamesDispenser namesDispenser) {
---
> 	public DesignNamingStrategy(String suffix, NamesDispenser namesDispenser, NamingStrategy chainedNamingStrategy, NamingStrategy prefixNamingStrategy) {
38,42d28
< 		super(chained);
< 		assert suffix != null;
< 		this.suffix = suffix;
< 		assert namesDispenser != null;
< 		this.namesDispenser = namesDispenser;
74a62,64
> 	public String get(CompartmentMapping mapping) {
> 		if (mapping.getCompartment() != null) {
> 			String name = mapping.getCompartment().getName();
75,75c74,74
< 	public String get(LabelMapping mapping) {
---
> 	public String get(LabelMapping mapping) {
76,76c75,75
< 		if (mapping.getDiagramLabel() != null) {
---
> 		if (mapping.getDiagramLabel() != null) {
77,77c76,76
< 			String name = mapping.getDiagramLabel().getName();
---
> 			String name = mapping.getDiagramLabel().getName();
77a77,77
> 			if (!isEmpty(name)) {
78a66,67
> 				name = Character.toUpperCase(name.charAt(0)) + name.substring(1);
> 				name = getCompartmentHostPrefix(mapping) + name;
85,87d73
< 	protected String createClassName(String name) {
< 		assert !isEmpty(name);
< 		name = CodeGenUtil.validJavaIdentifier(name);
88a79,86
> 				// Since names should be unique in gmfgraph model names of
> 				// labels most likely will contain their host names appended
> 				// as prefixes so we do not add them to make names smaller.
> 				//name = getLabelHostPrefix(mapping) + name;
> 				return createClassName(name);
> 			}
> 		}
> 		return super.get(mapping);
89,89d78
< 		return namesDispenser.get(name, suffix);
