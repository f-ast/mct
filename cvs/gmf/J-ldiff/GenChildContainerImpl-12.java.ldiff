17,17c17,17
< import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
---
> import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
29a30,30
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#getContainedNodes <em>Contained Nodes</em>}</li>
31a33,33
>  *   <li>{@link org.eclipse.gmf.codegen.gmfgen.impl.GenChildContainerImpl#isListLayout <em>List Layout</em>}</li>
39,39c41,41
< 	 * The cached value of the '{@link #getChildNodes() <em>Child Nodes</em>}' containment reference list.
---
> 	 * The cached value of the '{@link #getChildNodes() <em>Child Nodes</em>}' reference list.
68a71,90
> 	 * The default value of the '{@link #isListLayout() <em>List Layout</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isListLayout()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final boolean LIST_LAYOUT_EDEFAULT = true;
> 
> 	/**
> 	 * The cached value of the '{@link #isListLayout() <em>List Layout</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @see #isListLayout()
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected boolean listLayout = LIST_LAYOUT_EDEFAULT;
> 
> 	/**
88a111,119
> 	 * @generated NOT
> 	 */
> 	public EList getContainedNodes() {
> 		return getChildNodes();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
93,93c124,124
< 			childNodes = new EObjectContainmentWithInverseEList(GenChildNode.class, this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__CONTAINER);
---
> 			childNodes = new EObjectWithInverseResolvingEList.ManyInverse(GenChildNode.class, this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GMFGenPackage.GEN_CHILD_NODE__CONTAINERS);
129a161,181
> 	 * @generated
> 	 */
> 	public boolean isListLayout() {
> 		return listLayout;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public void setListLayout(boolean newListLayout) {
> 		boolean oldListLayout = listLayout;
> 		listLayout = newListLayout;
> 		if (eNotificationRequired())
> 			eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_CHILD_CONTAINER__LIST_LAYOUT, oldListLayout, listLayout));
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
168a221,222
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CONTAINED_NODES:
> 				return getContainedNodes();
172a227,228
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__LIST_LAYOUT:
> 				return isListLayout() ? Boolean.TRUE : Boolean.FALSE;
183a240,243
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CONTAINED_NODES:
> 				getContainedNodes().clear();
> 				getContainedNodes().addAll((Collection)newValue);
> 				return;
190a251,253
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__LIST_LAYOUT:
> 				setListLayout(((Boolean)newValue).booleanValue());
> 				return;
201a265,267
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CONTAINED_NODES:
> 				getContainedNodes().clear();
> 				return;
207a274,276
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__LIST_LAYOUT:
> 				setListLayout(LIST_LAYOUT_EDEFAULT);
> 				return;
218a288,289
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__CONTAINED_NODES:
> 				return !getContainedNodes().isEmpty();
222a294,295
> 			case GMFGenPackage.GEN_CHILD_CONTAINER__LIST_LAYOUT:
> 				return listLayout != LIST_LAYOUT_EDEFAULT;
237a311,312
> 		result.append(", listLayout: ");
> 		result.append(listLayout);
