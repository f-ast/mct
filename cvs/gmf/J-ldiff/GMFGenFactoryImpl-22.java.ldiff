113a114,115
> 			case GMFGenPackage.GEN_AUDIT_CONTAINER: return createGenAuditContainer();
> 			case GMFGenPackage.GEN_AUDIT_RULE: return createGenAuditRule();
131a134,135
> 			case GMFGenPackage.GEN_SEVERITY:
> 				return createGenSeverityFromString(eDataType, initialValue);
151a156,157
> 			case GMFGenPackage.GEN_SEVERITY:
> 				return convertGenSeverityToString(eDataType, instanceValue);
413a420,439
> 	public GenAuditContainer createGenAuditContainer() {
> 		GenAuditContainerImpl genAuditContainer = new GenAuditContainerImpl();
> 		return genAuditContainer;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public GenAuditRule createGenAuditRule() {
> 		GenAuditRuleImpl genAuditRule = new GenAuditRuleImpl();
> 		return genAuditRule;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
473a500,519
> 	public GenSeverity createGenSeverityFromString(EDataType eDataType, String initialValue) {
> 		GenSeverity result = GenSeverity.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertGenSeverityToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
