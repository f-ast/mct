18a20,20
> import java.util.LinkedHashMap;
19,19c21,21
< import java.util.HashSet;
---
> import java.util.LinkedHashSet;
36,36d36
< import org.eclipse.emf.transaction.util.TransactionUtil;
38,38c38,38
< import org.eclipse.gmf.runtime.diagram.core.internal.commands.PersistElementCommand;
---
> import org.eclipse.gmf.runtime.diagram.core.internal.commands.PersistViewsCommand;
60a63,64
>     private WeakReference editingDomainRef;
> 
91,91c95,95
<             Set listenersSet = (Set) keys.get(key);
---
>             Map listenersSet = (Map) keys.get(key);
93,93c97,97
<                 listenersSet = new HashSet(4);
---
>                 listenersSet = new LinkedHashMap(4);
96,96c100,100
<             listenersSet.add(listener);
---
>             listenersSet.put(listener,null);
120,120c124,124
<                 Set listenersSet = (Set) keys.get(key);
---
>                 Map listenersSet = (Map) keys.get(key);
142,142c146,146
<                 Set listenersSet = (Set) keys.get(key);
---
>                 Map listenersSet = (Map) keys.get(key);
144,144c148,148
<                     return listenersSet;
---
>                     return listenersSet.keySet();
161,161c165,165
<             Set listenersCollection = new HashSet();
---
>             Set listenersCollection = new LinkedHashSet();
165,165c169,169
<                 Set listenersSet = (Set) entry.getValue();
---
>                 Map listenersSet = (Map) entry.getValue();
167,167c171,171
<                     listenersCollection.addAll(listenersSet);
---
>                     listenersCollection.addAll(listenersSet.keySet());
170a175,178
>         
>         public boolean isEmpty() {
>             return listenersMap.isEmpty();
>         }
180a189,189
> 
209a219,222
>             if (diagramEventBroker.editingDomainRef == null) {
> 				diagramEventBroker.editingDomainRef = new WeakReference(
> 					editingDomain);
> 			}
232a246,248
>             DiagramEventBroker diagramEventBroker =  new DiagramEventBroker();
>             diagramEventBroker.editingDomainRef = new WeakReference(
>                 editingDomain);
233,233c249,249
<     		return new DiagramEventBroker();
---
>             return diagramEventBroker;
264,264c280,280
<         Set elementsInPersistQueue = new HashSet();
---
>         Set elementsInPersistQueue = new LinkedHashSet();
265a282,285
>         TransactionalEditingDomain editingDomain = (TransactionalEditingDomain) editingDomainRef
>             .get();
>         boolean hasPreListeners = (preListeners.isEmpty() == false);
>         List viewsToPersistList = new ArrayList();
272,272c292,292
<                 if (deletedObjects.contains(notification.getNotifier())) {
---
>             	if (deletedObjects.contains(notifier)) {
274a295,303
>                 if (editingDomain != null) {
>                     View viewToPersist = getViewToPersist(notification,
>                         elementsInPersistQueue);
>                     if (viewToPersist != null) {
>                         viewsToPersistList.add(viewToPersist);
>                     }
>                 }
>                 if (hasPreListeners) {
>                     Command cmd = fireTransactionAboutToCommit(notification);
275,275d294
<                 Command cmd = handleTransactionAboutToCommitEvent(notification,elementsInPersistQueue);
281,281d308
<         elementsInPersistQueue.clear();
300,300d337
<                 if (deletedObjects.contains(notification.getNotifier())&&
301,301c338,338
<                     !customNotification) {
---
>                 if (!customNotification && deletedObjects.contains(notifier)) {
305,305c342,342
<                 handleElementEvent(notification);
---
>                 fireNotification(notification);
338a376,376
>         	postListeners);
339,341d375
<             false);
<         if (!listenerList.isEmpty()) {
<             List listenersSnapShot = new ArrayList(listenerList);
343,343c378,378
<                 for (Iterator listenerIT = listenersSnapShot.iterator(); listenerIT
---
> 			for (Iterator listenerIT = listenerList.iterator(); listenerIT
350a43,44
> 
> 
351,351d42
<     }
353,353c414,414
<     private Command fireTransactionAboutToCommit(Notification event,Set elementsInPersistQueue) {
---
>     private View getViewToPersist(Notification event, Set elementsInPersistQueue) {
354a396,396
>             preListeners);       
355,359d395
<             true);
<         CompoundCommand cc = new CompoundCommand();
<         preparePersistCommand(event,cc,elementsInPersistQueue);
<         if (!listenerList.isEmpty()) {
<             List listenersSnapShot = new ArrayList(listenerList);
360a398,398
>         	 CompoundCommand cc = new CompoundCommand();            
361,361d397
<                 
362,362c399,399
<                 for (Iterator listenerIT = listenersSnapShot.iterator(); listenerIT
---
>             for (Iterator listenerIT = listenerList.iterator(); listenerIT
373a327,328
>     	if (postListeners.isEmpty()) {
>             return;
374,374c329,329
<         }
---
>         }
375,376d329
<         
<         if (cc.isEmpty())
378,378c437,437
<         
---
>         }
379,379c438,438
<         return cc;
---
>         return null;
382,383d413
<     private void preparePersistCommand(Notification event, CompoundCommand cc, Set elementsInPersistQueue) {
<         PersistElementCommand persistCmd = null;
385a417,417
>             while (elementToPersist != null
386,386c418,418
<             while (elementToPersist != null && !(elementToPersist instanceof View)) {
---
>                 && !(elementToPersist instanceof View)) {
388a421,421
>             if (elementToPersist != null
389,389c422,422
<             if (elementToPersist != null && !elementsInPersistQueue.contains(elementToPersist)
---
>                 && !elementsInPersistQueue.contains(elementToPersist)
392a426,433
>                     View view = (View) elementToPersist;
>                     if (!view.isMutable()) {
>                         // get Top view needs to get persisted
>                         View viewToPersist = ViewUtil.getTopViewToPersist(view);
>                         if (viewToPersist != null) {                            
>                             elementsInPersistQueue.add(viewToPersist);
>                             return viewToPersist;
>                         }
393,393d425
<                     persistCmd = getPersistViewCommand((View)elementToPersist);
396a309,313
>         }
> 
>         if (viewsToPersistList.isEmpty() == false) {
>             PersistViewsCommand persistCmd = new PersistViewsCommand(
>                 editingDomain, viewsToPersistList);
397,397d308
<         if (persistCmd!=null && persistCmd.getEditingDomain()!=null)
398,398c314,314
<             cc.append(new EMFOperationCommand(persistCmd.getEditingDomain(),persistCmd));
---
>             cc.append(new EMFOperationCommand(editingDomain, persistCmd));
398a315,316
>         }
> 
530a571,571
>     private Set getNotificationListeners(Object notifier, NotifierToKeyToListenersSetMap listeners) {       
531,548d570
<     public final void finalize() {
<         try {
<             for (Iterator iter = instanceMap.keySet().iterator(); iter
<                 .hasNext();) {
<                 TransactionalEditingDomain editingDomain = (TransactionalEditingDomain) iter
<                     .next();
<                 editingDomain
<                     .removeResourceSetListener((DiagramEventBroker) ((WeakReference) instanceMap
<                         .get(editingDomain)).get());
<             }
<         } catch (Throwable ignored) {
<             // intentionally ignored
<         }
<     }
< 
<     private Set getNotificationListeners(Object notifier, boolean preCommit) {
<         NotifierToKeyToListenersSetMap listeners = preCommit ? preListeners
<             : postListeners;
559,559d581
<             boolean preCommit) {
560,560c582,582
<         NotifierToKeyToListenersSetMap listeners = preCommit ? preListeners
---
>     		NotifierToKeyToListenersSetMap listeners) {
561,561d582
<             : postListeners;
564,564c585,585
<                 Set listenersSet = new HashSet();
---
>                 Set listenersSet = new LinkedHashSet();
587a609,610
>     		NotifierToKeyToListenersSetMap listeners) {
>         Set listenerSet = new LinkedHashSet();
588,589d608
<             boolean preCommit) {
<         HashSet listenerSet = new HashSet();
592,592c613,613
<             .getFeature(), preCommit);
---
>             .getFeature(), listeners);
603a625,625
>             	listeners));
604,604d624
<                 preCommit));
606a628,628
>             	listeners);
607,607d627
<                 preCommit);
612,612c633,633
<             addListenersOfNotifier(listenerSet, notifier, event, preCommit);
---
>             addListenersOfNotifier(listenerSet, notifier, event, listeners);
629,629c650,650
<             Notification event, boolean preCommit) {
---
>             Notification event, NotifierToKeyToListenersSetMap listeners) {
632,632c653,653
<                 .getFeature(), preCommit);
---
>                 .getFeature(), listeners);
647,647c387,387
<     /**
---
>     /**
648,648c388,388
<      * Forwards the event to all interested listeners.
---
>      * Forwards the event to all interested listeners.
649,649c389,389
<      * 
---
>      * 
650,650c390,390
<      * @param event
---
>      * @param event
651,651c391,391
<      *            the event to handle
---
>      *            the event to handle
652,652c392,392
<      * @p
---
>      * @p
653,653c393,393
<      */
---
>      */
654,654c394,394
<     private Command handleTransactionAboutToCommitEvent(Notification event, Set elementsInPersistQueue) {
---
>     private Command fireTransactionAboutToCommit(Notification event) {
655,698d394
<         EObject element = (EObject) event.getNotifier();
<         if (element != null) {
<             return fireTransactionAboutToCommit(event,elementsInPersistQueue);
<         }
<         return null;
<     }
<     
<     
<     /**
<      * Forwards the event to all interested listeners.
<      * 
<      * @param event
<      *            the event to handle
<      * 
<      */
<     private void handleElementEvent(Notification event) {
<         EObject element = (EObject) event.getNotifier();
<         if (element != null) {
<             fireNotification(event);
<         }
<     }
< 
<     /**
<      * Returns a persisted view command. This command if executed will persisted
<      * the passed view and all its required parents.
<      * @param view the view to persist
<      * @return the command to persist the view; the return value can be null
<      */
<     private PersistElementCommand getPersistViewCommand(View view) {
<         PersistElementCommand pvc = null;
<         // only immutable views can be persisted
<         if (!view.isMutable()) {
<             TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(view);
<             // get Top view needs to get persisted
<             View viewToPersist = ViewUtil.getTopViewToPersist(view);
<             if (viewToPersist!=null){
<                 // now the command that will persist the view
<                 //Map options = Collections.singletonMap( Transaction.OPTION_UNPROTECTED, Boolean.TRUE);
<                 pvc = new PersistElementCommand(editingDomain, viewToPersist /*, options*/);
<             }
<         }
<         return pvc;
<         
<     }
