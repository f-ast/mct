38,38c38,38
< public class ArrowStyleImpl extends NotationObjectImpl implements ArrowStyle {
---
> public class ArrowStyleImpl extends NotationEObjectImpl implements ArrowStyle {
49a50,76
> 	 * The offset of the flags representing the value of the '{@link #getArrowSource() <em>Arrow Source</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ARROW_SOURCE_EFLAG_OFFSET = 8;
> 
> 	/**
> 	 * The flags representing the default value of the '{@link #getArrowSource() <em>Arrow Source</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ARROW_SOURCE_EFLAG_DEFAULT = ArrowType.VALUES.indexOf(ARROW_SOURCE_EDEFAULT) << ARROW_SOURCE_EFLAG_OFFSET;
> 
> 	/**
> 	 * The array of enumeration values for '{@link ArrowType Arrow Type}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final ArrowType[] ARROW_SOURCE_EFLAG_VALUES = (ArrowType[])ArrowType.VALUES.toArray(new ArrowType[ArrowType.VALUES.size()]);
> 
> 	/**
50,50c77,77
< 	 * The cached value of the '{@link #getArrowSource() <em>Arrow Source</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getArrowSource() <em>Arrow Source</em>}' attribute.
56a84,84
> 	protected static final int ARROW_SOURCE_EFLAG = 0x3 << ARROW_SOURCE_EFLAG_OFFSET;
57,57d83
< 	protected ArrowType arrowSource = ARROW_SOURCE_EDEFAULT;
69a97,123
> 	 * The offset of the flags representing the value of the '{@link #getArrowTarget() <em>Arrow Target</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ARROW_TARGET_EFLAG_OFFSET = 10;
> 
> 	/**
> 	 * The flags representing the default value of the '{@link #getArrowTarget() <em>Arrow Target</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ARROW_TARGET_EFLAG_DEFAULT = ArrowType.VALUES.indexOf(ARROW_TARGET_EDEFAULT) << ARROW_TARGET_EFLAG_OFFSET;
> 
> 	/**
> 	 * The array of enumeration values for '{@link ArrowType Arrow Type}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final ArrowType[] ARROW_TARGET_EFLAG_VALUES = (ArrowType[])ArrowType.VALUES.toArray(new ArrowType[ArrowType.VALUES.size()]);
> 
> 	/**
70,70c124,124
< 	 * The cached value of the '{@link #getArrowTarget() <em>Arrow Target</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getArrowTarget() <em>Arrow Target</em>}' attribute.
76a131,131
> 	protected static final int ARROW_TARGET_EFLAG = 0x3 << ARROW_TARGET_EFLAG_OFFSET;
77,77d130
< 	protected ArrowType arrowTarget = ARROW_TARGET_EDEFAULT;
102a157,157
> 		return ARROW_SOURCE_EFLAG_VALUES[(eFlags & ARROW_SOURCE_EFLAG) >>> ARROW_SOURCE_EFLAG_OFFSET];
103,103d156
< 		return arrowSource;
111a166,166
> 		ArrowType oldArrowSource = ARROW_SOURCE_EFLAG_VALUES[(eFlags & ARROW_SOURCE_EFLAG) >>> ARROW_SOURCE_EFLAG_OFFSET];
112,112d165
< 		ArrowType oldArrowSource = arrowSource;
113,113c167,167
< 		arrowSource = newArrowSource == null ? ARROW_SOURCE_EDEFAULT : newArrowSource;
---
> 		if (newArrowSource == null) newArrowSource = ARROW_SOURCE_EDEFAULT;
113a168,168
> 		eFlags = eFlags & ~ARROW_SOURCE_EFLAG | ArrowType.VALUES.indexOf(newArrowSource) << ARROW_SOURCE_EFLAG_OFFSET;
115,115c170,170
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ARROW_STYLE__ARROW_SOURCE, oldArrowSource, arrowSource));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ARROW_STYLE__ARROW_SOURCE, oldArrowSource, newArrowSource));
123a179,179
> 		return ARROW_TARGET_EFLAG_VALUES[(eFlags & ARROW_TARGET_EFLAG) >>> ARROW_TARGET_EFLAG_OFFSET];
124,124d178
< 		return arrowTarget;
132a188,188
> 		ArrowType oldArrowTarget = ARROW_TARGET_EFLAG_VALUES[(eFlags & ARROW_TARGET_EFLAG) >>> ARROW_TARGET_EFLAG_OFFSET];
133,133d187
< 		ArrowType oldArrowTarget = arrowTarget;
134,134c189,189
< 		arrowTarget = newArrowTarget == null ? ARROW_TARGET_EDEFAULT : newArrowTarget;
---
> 		if (newArrowTarget == null) newArrowTarget = ARROW_TARGET_EDEFAULT;
134a190,190
> 		eFlags = eFlags & ~ARROW_TARGET_EFLAG | ArrowType.VALUES.indexOf(newArrowTarget) << ARROW_TARGET_EFLAG_OFFSET;
136,136c192,192
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ARROW_STYLE__ARROW_TARGET, oldArrowTarget, arrowTarget));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ARROW_STYLE__ARROW_TARGET, oldArrowTarget, newArrowTarget));
146,147d201
< 			case NotationPackage.ARROW_STYLE__UUID:
< 				return getUUID();
163,165d216
< 			case NotationPackage.ARROW_STYLE__UUID:
< 				setUUID((byte[])newValue);
< 				return;
183,185d233
< 			case NotationPackage.ARROW_STYLE__UUID:
< 				setUUID(UUID_EDEFAULT);
< 				return;
203,204d250
< 			case NotationPackage.ARROW_STYLE__UUID:
< 				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
205a252,252
> 				return (eFlags & ARROW_SOURCE_EFLAG) != ARROW_SOURCE_EFLAG_DEFAULT;
206,206d251
< 				return arrowSource != ARROW_SOURCE_EDEFAULT;
207a254,254
> 				return (eFlags & ARROW_TARGET_EFLAG) != ARROW_TARGET_EFLAG_DEFAULT;
208,208d253
< 				return arrowTarget != ARROW_TARGET_EDEFAULT;
222a269,269
> 		result.append(ARROW_SOURCE_EFLAG_VALUES[(eFlags & ARROW_SOURCE_EFLAG) >>> ARROW_SOURCE_EFLAG_OFFSET]);
223,223d268
< 		result.append(arrowSource);
224a271,271
> 		result.append(ARROW_TARGET_EFLAG_VALUES[(eFlags & ARROW_TARGET_EFLAG) >>> ARROW_TARGET_EFLAG_OFFSET]);
225,225d270
< 		result.append(arrowTarget);
