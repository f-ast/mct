15a16,18
> import org.eclipse.draw2d.IFigure;
> import org.eclipse.draw2d.geometry.Dimension;
> import org.eclipse.draw2d.geometry.PrecisionRectangle;
23,23d25
< 
25a28,29
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
> import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;
87a92,121
>     protected void showChangeBoundsFeedback(ChangeBoundsRequest request) {
>         IFigure feedback = getDragSourceFeedbackFigure();
>         
>         PrecisionRectangle rect = new PrecisionRectangle(getInitialFeedbackBounds().getCopy());
>         getHostFigure().translateToAbsolute(rect);
>         rect.translate(request.getMoveDelta());
>         rect.resize(request.getSizeDelta());
>         
>         IFigure f = getHostFigure();
>         Dimension min = f.getMinimumSize().getCopy();
>         Dimension max = f.getMaximumSize().getCopy();
>         IMapMode mmode = MapModeUtil.getMapMode(f);
>         min.height = mmode.LPtoDP(min.height);
>         min.width = mmode.LPtoDP(min.width);
>         max.height = mmode.LPtoDP(max.height);
>         max.width = mmode.LPtoDP(max.width);
>         
>         if (min.width>rect.width)
>             rect.width = min.width;
>         else if (max.width < rect.width)
>             rect.width = max.width;
>         
>         if (min.height>rect.height)
>             rect.height = min.height;
>         else if (max.height < rect.height)
>             rect.height = max.height;
>         
>         feedback.translateToRelative(rect);
>         feedback.setBounds(rect);
>     }
