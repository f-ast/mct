2,2c2,2
<  * Copyright (c) 2005 Borland Software Corporation
---
>  * Copyright (c) 2005, 2007 Borland Software Corporation
19a20,20
> import java.util.LinkedList;
31,31d31
< import org.eclipse.emf.common.util.EMap;
175,175c175,175
< 					List nameSeq = new ArrayList<String>(Arrays.asList(typeName));
---
> 					ArrayList<String> nameSeq = new ArrayList<String>(Arrays.asList(typeName));
258,258c258,258
< 				List<EClassifier> subTypes  = getSubTypes(getRootEPackage(referencedClass.getEPackage()), referencedClass, new ArrayList<EClassifier>());
---
> 				List<EClass> subTypes  = getSubTypes(getRootEPackage(referencedClass.getEPackage()), referencedClass, new LinkedList<EClass>());
261,261c261,261
< 				for (Iterator it = subTypes.iterator(); it.hasNext();) {
---
> 				for (Iterator<EClass> it = subTypes.iterator(); it.hasNext();) {
262,262c262,262
< 					EClass nextClass = (EClass) it.next();
---
> 					EClass nextClass = it.next();
271,271c271,271
< 				for (Iterator it = subTypes.iterator(); it.hasNext();) {
---
> 				for (Iterator<EClass> it = subTypes.iterator(); it.hasNext();) {
272,272c272,272
< 					EClass nextClass = (EClass) it.next();
---
> 					EClass nextClass = it.next();
314a315,315
> 				for (EClass nextClass : contextProviderEClass.getESuperTypes()) {
315,315d314
< 				for(Iterator it = contextProviderEClass.getESuperTypes().iterator(); it.hasNext();) {
316,316c316,316
< 					ContextProvider nextProvider = referencedContexts.get(it.next());
---
> 					ContextProvider nextProvider = referencedContexts.get(nextClass);
431,431c431,431
< 		List children = diagnostic.getChildren();
---
> 		List<Diagnostic> children = diagnostic.getChildren();
434a435,435
> 			for (Diagnostic next : children) {
435,435d434
< 			for (Iterator it = children.iterator(); it.hasNext();) {
436,436c436,436
< 				mergeAndFlatten((Diagnostic) it.next(), diagnosticChain);
---
> 				mergeAndFlatten(next, diagnosticChain);
494,494c494,494
< 			Class rightClass = right.getInstanceClass();
---
> 			Class<?> rightClass = right.getInstanceClass();
519,519d518
< 		for (Iterator it = eModelElement.getEAnnotations().iterator(); it.hasNext();) {
520,520c519,519
< 			EAnnotation nextAnnotation = (EAnnotation) it.next();
---
> 		for (EAnnotation nextAnnotation : eModelElement.getEAnnotations()) {
528,528c527,527
< 	public static Map.Entry findAnnotationDetailEntry(EModelElement eModelElement, String sourceURI, String key, String val) {
---
> 	public static Map.Entry<String, String> findAnnotationDetailEntry(EModelElement eModelElement, String sourceURI, String key, String val) {
529,529d527
< 		for (Iterator it = eModelElement.getEAnnotations().iterator(); it.hasNext();) {
530,530c528,528
< 			EAnnotation nextAnnotation = (EAnnotation) it.next();
---
> 		for (EAnnotation nextAnnotation : eModelElement.getEAnnotations()) {
531a530,530
> 				for (Map.Entry<String, String> nextEntry  : nextAnnotation.getDetails()) {
532,533d529
< 				for (Iterator entryIt = nextAnnotation.getDetails().iterator(); entryIt.hasNext();) {
< 					Map.Entry nextEntry = (Map.Entry)entryIt.next();
544a542,542
> 		for (Map.Entry<String, String> nextEntry : annotation.getDetails()) {
544,544c541,541
< 	public static Map.Entry getKeyPreffixAnnotation(EAnnotation annotation, String keyPrefix) {
---
> 	public static Map.Entry<String, String> getKeyPrefixAnnotation(EAnnotation annotation, String keyPrefix) {
545,546d541
< 		for (Iterator it = annotation.getDetails().entrySet().iterator(); it.hasNext();) {
< 			Map.Entry nextEntry = (Map.Entry)it.next();
547,547c543,543
< 			if(((String)nextEntry.getKey()).startsWith(keyPrefix)) {
---
> 			if(nextEntry.getKey().startsWith(keyPrefix)) {
554,554d549
< 	@SuppressWarnings("unchecked")
555,555c550,550
< 	public static List getAnnotationsWithKeyAndValue(EModelElement eModelElement, String sourceURI, String key, String value) {
---
> 	public static List<EAnnotation> getAnnotationsWithKeyAndValue(EModelElement eModelElement, String sourceURI, String key, String value) {
556,556c551,551
< 		List annotations = null;
---
> 		ArrayList<EAnnotation> annotations = null;
557,557d551
< 		for (Iterator it = eModelElement.getEAnnotations().iterator(); it.hasNext();) {
558,558c552,552
< 			EAnnotation nextAnnotation = (EAnnotation) it.next();
---
> 		for (EAnnotation nextAnnotation : eModelElement.getEAnnotations()) {
563,563c557,557
< 						annotations = new ArrayList(eModelElement.getEAnnotations().size());
---
> 						annotations = new ArrayList<EAnnotation>(eModelElement.getEAnnotations().size());
568a563,566
> 		if (annotations != null) {
> 			return annotations;
> 		}
> 		return Collections.emptyList();
569,569d562
< 		return annotations != null ? annotations : Collections.EMPTY_LIST;
608,620d604
< 	/**
< 	 * @return String value associated with the given key in given detail map or
< 	 * <code>null</code> if not key is present in the value
< 	 */
< 	public static String getAnnotationDetailValue(EMap detail, String key) {
< 		if(detail == null || key == null) {
< 			throw new IllegalArgumentException("null detail map or key"); //$NON-NLS-1$
< 		}
< 		Object val = detail.get(key);
< 		return val instanceof String ? (String) val : null;
< 	}
< 	
< 	
627a612,612
> 			for (Map.Entry<String, String> nextDetail : ctxAnnotation.getDetails()) {
628,629d611
< 			for (Iterator it = ctxAnnotation.getDetails().entrySet().iterator(); it.hasNext();) {
< 				Map.Entry nextDetail = (Map.Entry) it.next();
630,630c613,613
< 				Object key = nextDetail.getKey();
---
> 				String key = nextDetail.getKey();
631,631c614,614
< 				String value = nextDetail.getValue() instanceof String ? (String) nextDetail.getValue() : ""; //$NON-NLS-1$
---
> 				String value = nextDetail.getValue() != null ? nextDetail.getValue() : ""; //$NON-NLS-1$
667,667c650,650
< 	static List<EClassifier> getSubTypes(EPackage ePackage, EClass superType, List<EClassifier> foundSubTypes) {
---
> 	static List<EClass> getSubTypes(EPackage ePackage, EClass superType, List<EClass> foundSubTypes) {
668,668d650
< 		for (Iterator it = ePackage.getEClassifiers().iterator(); it.hasNext();) {
669,669c651,651
< 			EClassifier classifier = (EClassifier) it.next();
---
> 		for (EClassifier classifier : ePackage.getEClassifiers()) {
671,671c653,653
< 				foundSubTypes.add(classifier);
---
> 				foundSubTypes.add((EClass) classifier);
673a656,656
> 		for (EPackage next : ePackage.getESubpackages()) {
674,674d655
< 		for (Iterator it = ePackage.getESubpackages().iterator(); it.hasNext();) {
675,675c657,657
< 			getSubTypes((EPackage) it.next(), superType, foundSubTypes);			
---
> 			getSubTypes(next, superType, foundSubTypes);			
