9,10d8
< import org.eclipse.emf.common.util.EList;
< 
20a19,19
>  * Label definition; text is taken from the graph model; no editing support; user may contribute custom parser
21,21d18
<  * Label on diagram; either features or text should be specified
28,28d25
<  *   <li>{@link org.eclipse.gmf.mappings.LabelMapping#getFeatures <em>Features</em>}</li>
30,31d26
<  *   <li>{@link org.eclipse.gmf.mappings.LabelMapping#getViewPattern <em>View Pattern</em>}</li>
<  *   <li>{@link org.eclipse.gmf.mappings.LabelMapping#getEditPattern <em>Edit Pattern</em>}</li>
68,84d62
< 	 * Returns the value of the '<em><b>Features</b></em>' reference list.
< 	 * The list contents are of type {@link org.eclipse.emf.ecore.EAttribute}.
< 	 * <!-- begin-user-doc -->
< 	 * <p>
< 	 * If the meaning of the '<em>Features</em>' reference list isn't clear,
< 	 * there really should be more of a description here...
< 	 * </p>
< 	 * <!-- end-user-doc -->
< 	 * @return the value of the '<em>Features</em>' reference list.
< 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_Features()
< 	 * @model type="org.eclipse.emf.ecore.EAttribute"
< 	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))' description='Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry'"
< 	 * @generated
< 	 */
< 	EList getFeatures();
< 
< 	/**
111,160d88
< 	 * Returns the value of the '<em><b>View Pattern</b></em>' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Pattern for java.text.MessageFormat to produce label on diagram
< 	 * <!-- end-model-doc -->
< 	 * @return the value of the '<em>View Pattern</em>' attribute.
< 	 * @see #setViewPattern(String)
< 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_ViewPattern()
< 	 * @model
< 	 * @generated
< 	 */
< 	String getViewPattern();
< 
< 	/**
< 	 * Sets the value of the '{@link org.eclipse.gmf.mappings.LabelMapping#getViewPattern <em>View Pattern</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @param value the new value of the '<em>View Pattern</em>' attribute.
< 	 * @see #getViewPattern()
< 	 * @generated
< 	 */
< 	void setViewPattern(String value);
< 
< 	/**
< 	 * Returns the value of the '<em><b>Edit Pattern</b></em>' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * <!-- begin-model-doc -->
< 	 * Pattern for java.text.MessageFormat to produce text for inplace editor; if not specified then viewPattern should be used
< 	 * <!-- end-model-doc -->
< 	 * @return the value of the '<em>Edit Pattern</em>' attribute.
< 	 * @see #setEditPattern(String)
< 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_EditPattern()
< 	 * @model
< 	 * @generated
< 	 */
< 	String getEditPattern();
< 
< 	/**
< 	 * Sets the value of the '{@link org.eclipse.gmf.mappings.LabelMapping#getEditPattern <em>Edit Pattern</em>}' attribute.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @param value the new value of the '<em>Edit Pattern</em>' attribute.
< 	 * @see #getEditPattern()
< 	 * @generated
< 	 */
< 	void setEditPattern(String value);
< 
< 	/**
