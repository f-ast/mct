20a21,21
> import org.eclipse.emf.common.ui.celleditor.ExtendedDialogCellEditor;
29a31,31
> import org.eclipse.emf.edit.ui.celleditor.FeatureEditorDialog;
40a43,43
> import org.eclipse.swt.widgets.Control;
195,195c198,198
<             final Collection choiceOfValues = getChoiceOfValues();
---
>             final List choiceOfValues = getChoiceOfValues();
197a201,201
>             	if (getItemDescriptor().isMany(getObject())) {
198,200d200
< 
<             	// TODO We need to properly handle unspecified multiplicities on the structural feature
<                 if (feature.isMany()) {
209,209c210,210
<                     if (valid)
---
>                     if (valid) {
210,210c211,211
<                         result = createComboBoxCellEditor(composite);
---
>                     	result = createDialogCellEditor(composite, feature, choiceOfValues);
210a212,212
> 					}
219a222,223
>                         if (getItemDescriptor().isMany(getObject())) {
>                         	result = createDialogCellEditor(composite, feature, choiceOfValues);
220,222d221
<                     	// TODO We need to properly handle unspecified multiplicities on the structural feature
<                         if (feature.isMany()) {
<                             result = createComboBoxCellEditor(composite);
359a361,389
>     /**
> 	 * Creates a dialog cell editor for editing multivalued features.
> 	 * 
> 	 * @param composite
> 	 *            the composite to contain the new cell editor
> 	 * @param feature
> 	 *            the feature being edited
> 	 * @param choiceOfValues
> 	 *            the possible values for that feature
> 	 * @return the new cell editor
> 	 */
>     protected CellEditor createDialogCellEditor(Composite composite,
> 			final EStructuralFeature feature, final List choiceOfValues) {
>     	
> 		return new ExtendedDialogCellEditor(composite, getEditLabelProvider()) {
> 			protected Object openDialogBox(Control cellEditorWindow) {
> 				FeatureEditorDialog dialog = new FeatureEditorDialog(
> 						cellEditorWindow.getShell(), getLabelProvider(),
> 						getObject(), feature.getEType(),
> 						(List) ((IItemPropertySource) itemPropertyDescriptor
> 								.getPropertyValue(object))
> 								.getEditableValue(object), getDisplayName(),
> 						choiceOfValues);
> 				dialog.open();
> 				return dialog.getResult();
> 			}
> 		};
> 	}
> 
453a484,487
>         if (value instanceof IItemPropertySource) {
>             return (IItemPropertySource) value;
>         }
>         
