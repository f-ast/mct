80a81,82
> 	 * @param declaredImportsAsStrings 
>      *            imports added in previous file revision (default is null)
90a93,96
>         organizeImports(icu, null, progress);
>     }
>     
> 	public void organizeImports(ICompilationUnit icu, String[] declaredImportsAsStrings, IProgressMonitor progress) throws CoreException {
97,97c103,103
< 		TextEdit importsEdit = organizeImports(cu, progress);
---
> 		TextEdit importsEdit = organizeImports(cu, declaredImportsAsStrings, progress);
121a128,129
>      * @param declaredImports 
>      *            imports added in previous file revision (default is null)
134a143,146
>         return organizeImports(astRoot, null, progress);
>     }
>     
> 	public TextEdit organizeImports(CompilationUnit astRoot, String[] declaredImports, IProgressMonitor progress) throws CoreException {
139a152,152
>         String[] customImports = substract(declaredImports, astRoot.imports());
141,141c154,154
< 			collectExistingImports(astRoot, oldSingleImports, oldDemandImports);
---
>             collectExistingImports(astRoot, oldSingleImports, oldDemandImports, customImports);
154a168,168
>         copyImports(importRewrite, customImports);
193a208,232
>     /*
>      * Since we do organizeImports prior to merge, we must ensure
>      * imports added manually are known to OrganizeImportsProcessor
>      */
>     private static void copyImports(ImportRewrite importRewrite, String[] importsToCopy) {
>         if (importsToCopy == null || importsToCopy.length == 0) {
>             return;
>         }
>         for (int i = 0; i < importsToCopy.length; i++) {
>             importRewrite.addImport(importsToCopy[i]);
>         }
>     }
>     
>     private String[] substract(String[] declaredImports, List list) {
>         if (declaredImports == null || declaredImports.length == 0) {
>             return declaredImports;
>         }
>         List<String> result = new ArrayList<String>(Arrays.asList(declaredImports));
>         for (int i=0; i<list.size(); i++) {
>             ImportDeclaration next = (ImportDeclaration) list.get(i);
>             result.remove(next.getName().getFullyQualifiedName());
>         }
>         return result.toArray(new String[result.size()]);
>     }
> 
202a242,251
>         if (declaredImports != null && declaredImports.length > 0) {
>             for (int i=0; i<declaredImports.length; i++) {
>                 String curr = declaredImports[i];
>                 if (curr.endsWith("*")) {
>                     oldDemandImports.add(curr);
>                 } else {
>                     oldSingleImports.add(curr);
>                 }
>             }
>         }
202,202c241,241
< 	private void collectExistingImports(CompilationUnit astRoot, Set<String> oldSingleImports, Set<String> oldDemandImports) {
---
>     private void collectExistingImports(CompilationUnit astRoot, Set<String> oldSingleImports, Set<String> oldDemandImports, String[] declaredImports) {
203,203c252,252
< 		List imports = astRoot.imports();
---
>         final List imports = astRoot.imports();
