100a101,105
> 
> 			protected boolean useLocalCoordinates() {
> 				return true;
> 			}
> 		};
100,100c100,100
< 		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0));
---
> 		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(getMapMode().DPtoLP(0), getMapMode().DPtoLP(0)) {
193a199,206
> 			refreshBounds();
> 			refreshLayoutData();
> 			getPrimaryShape().setOutline(modelElement.isOutline());
> 			getPrimaryShape().setFill(modelElement.isFill());
> 			getPrimaryShape().setLineWidth(modelElement.getLineWidth());
> 			getPrimaryShape().setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			getPrimaryShape().setFillXOR(modelElement.isXorFill());
> 			getPrimaryShape().setOutlineXOR(modelElement.isXorOutline());
198a212,212
> 			getPrimaryShape().setPoints(getPointList(modelElement.getTemplate()));
214a229,306
> 		ChangeTracker refreshBoundsTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				refreshBounds();
> 			}
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getFigure_Location(), refreshBoundsTracker, new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE
> 				.getPoint_X()), new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE.getPoint_Y())));
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize(), refreshBoundsTracker, new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE
> 				.getDimension_Dx()), new FeatureTracker(refreshBoundsTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy())));
> 
> 		ChangeTracker refreshLayoutDataTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				refreshLayoutData();
> 			}
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getLayoutable_LayoutData(), refreshLayoutDataTracker, new AttachAdapter(GMFGraphPackage.eINSTANCE
> 				.getXYLayoutData_TopLeft(), refreshLayoutDataTracker, new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getPoint_X()), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getPoint_Y())), new AttachAdapter(GMFGraphPackage.eINSTANCE.getXYLayoutData_Size(), refreshLayoutDataTracker, new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy())), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getBorderLayoutData_Alignment()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE
> 				.getBorderLayoutData_Vertical()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_GrabExcessHorizontalSpace()), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_GrabExcessVerticalSpace()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE
> 				.getGridLayoutData_VerticalAlignment()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_HorizontalAlignment()), new FeatureTracker(
> 				refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_VerticalSpan()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE
> 				.getGridLayoutData_HorizontalSpan()), new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getGridLayoutData_HorizontalIndent()), new AttachAdapter(
> 				GMFGraphPackage.eINSTANCE.getGridLayoutData_SizeHint(), refreshLayoutDataTracker, new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dx()),
> 				new FeatureTracker(refreshLayoutDataTracker, GMFGraphPackage.eINSTANCE.getDimension_Dy()))));
> 
> 		ChangeTracker outlineTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setOutline(modelElement.isOutline());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(outlineTracker, GMFGraphPackage.eINSTANCE.getShape_Outline()));
> 
> 		ChangeTracker fillTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setFill(modelElement.isFill());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(fillTracker, GMFGraphPackage.eINSTANCE.getShape_Fill()));
> 
> 		ChangeTracker lineWidthTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setLineWidth(modelElement.getLineWidth());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(lineWidthTracker, GMFGraphPackage.eINSTANCE.getShape_LineWidth()));
> 
> 		ChangeTracker lineStyleTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setLineStyle(getLineStyle(modelElement.getLineKind()));
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(lineStyleTracker, GMFGraphPackage.eINSTANCE.getShape_LineKind()));
> 
> 		ChangeTracker fillXORTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setFillXOR(modelElement.isXorFill());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(fillXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorFill()));
> 
> 		ChangeTracker outlineXORTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setOutlineXOR(modelElement.isXorOutline());
> 			}
> 		};
> 		myDomainElementAdapters.add(new FeatureTracker(outlineXORTracker, GMFGraphPackage.eINSTANCE.getShape_XorOutline()));
> 
262a355,363
> 
> 		ChangeTracker pointsTracker = new ChangeTracker() {
> 
> 			public void modelChanged(Notification msg) {
> 				getPrimaryShape().setPoints(getPointList(modelElement.getTemplate()));
> 			}
> 		};
> 		myDomainElementAdapters.add(new AttachAdapter(GMFGraphPackage.eINSTANCE.getPolyline_Template(), pointsTracker, new FeatureTracker(pointsTracker, GMFGraphPackage.eINSTANCE.getPoint_X()),
> 				new FeatureTracker(pointsTracker, GMFGraphPackage.eINSTANCE.getPoint_Y())));
