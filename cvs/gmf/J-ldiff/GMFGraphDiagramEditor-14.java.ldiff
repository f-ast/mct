14a15,15
> import org.eclipse.gmf.runtime.notation.Diagram;
15a17,17
> import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
65a68,68
> import org.eclipse.jface.viewers.ISelection;
67a71,71
> import org.eclipse.jface.viewers.StructuredSelection;
86a91,91
> import org.eclipse.ui.navigator.resources.ProjectExplorer;
87a93,94
> import org.eclipse.ui.part.IShowInTargetList;
> import org.eclipse.ui.part.ShowInContext;
143a151,165
> 	public Object getAdapter(Class type) {
> 		if (type == IShowInTargetList.class) {
> 			return new IShowInTargetList() {
> 
> 				public String[] getShowInTargetIds() {
> 					return new String[] { ProjectExplorer.VIEW_ID };
> 				}
> 			};
> 		}
> 		return super.getAdapter(type);
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
212,212c234,234
< 			String message = NLS.bind("The original file ''{0}'' has been deleted.", original.getName());
---
> 			String message = NLS.bind(Messages.GMFGraphDiagramEditor_SavingDeletedFile, original.getName());
236a259,259
> 				MessageDialog.openWarning(shell, Messages.GMFGraphDiagramEditor_SaveAsErrorTitle, Messages.GMFGraphDiagramEditor_SaveAsErrorMessage);
237,237d258
< 				MessageDialog.openWarning(shell, "Problem During Save As...", "Save could not be completed. Target file is already open in another editor.");
248a271,271
> 				ErrorDialog.openError(shell, Messages.GMFGraphDiagramEditor_SaveErrorTitle, Messages.GMFGraphDiagramEditor_SaveErrorMessage, x.getStatus());
249,249d270
< 				ErrorDialog.openError(shell, "Save Problems", "Could not save file.", x.getStatus());
264a287,310
> 	public ShowInContext getShowInContext() {
> 		return new ShowInContext(getEditorInput(), getNavigatorSelection());
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	private ISelection getNavigatorSelection() {
> 		IDiagramDocument document = getDiagramDocument();
> 		if (document == null) {
> 			return StructuredSelection.EMPTY;
> 		}
> 		Diagram diagram = document.getDiagram();
> 		IFile file = WorkspaceSynchronizer.getFile(diagram.eResource());
> 		if (file != null) {
> 			GMFGraphNavigatorItem item = new GMFGraphNavigatorItem(diagram, file, false);
> 			return new StructuredSelection(item);
> 		}
> 		return StructuredSelection.EMPTY;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
