46,46c46,46
< public class RoutingStyleImpl extends NotationObjectImpl implements RoutingStyle {
---
> public class RoutingStyleImpl extends NotationEObjectImpl implements RoutingStyle {
57a58,84
> 	 * The offset of the flags representing the value of the '{@link #getRouting() <em>Routing</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ROUTING_EFLAG_OFFSET = 8;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getRouting() <em>Routing</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int ROUTING_EFLAG_DEFAULT = Routing.VALUES.indexOf(ROUTING_EDEFAULT) << ROUTING_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link Routing Routing}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final Routing[] ROUTING_EFLAG_VALUES = (Routing[])Routing.VALUES.toArray(new Routing[Routing.VALUES.size()]);
> 
> 				/**
58,58c85,85
< 	 * The cached value of the '{@link #getRouting() <em>Routing</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getRouting() <em>Routing</em>}' attribute.
64a92,92
> 	protected static final int ROUTING_EFLAG = 0x3 << ROUTING_EFLAG_OFFSET;
65,65d91
< 	protected Routing routing = ROUTING_EDEFAULT;
77a105,131
> 	 * The offset of the flags representing the value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int SMOOTHNESS_EFLAG_OFFSET = 10;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int SMOOTHNESS_EFLAG_DEFAULT = Smoothness.VALUES.indexOf(SMOOTHNESS_EDEFAULT) << SMOOTHNESS_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link Smoothness Smoothness}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final Smoothness[] SMOOTHNESS_EFLAG_VALUES = (Smoothness[])Smoothness.VALUES.toArray(new Smoothness[Smoothness.VALUES.size()]);
> 
> 				/**
78,78c132,132
< 	 * The cached value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getSmoothness() <em>Smoothness</em>}' attribute.
84a139,139
> 	protected static final int SMOOTHNESS_EFLAG = 0x3 << SMOOTHNESS_EFLAG_OFFSET;
85,85d138
< 	protected Smoothness smoothness = SMOOTHNESS_EDEFAULT;
105,105c159,159
< 	protected static final int AVOID_OBSTRUCTIONS_EFLAG = 1 << 8;
---
> 	protected static final int AVOID_OBSTRUCTIONS_EFLAG = 1 << 12;
125,125c179,179
< 	protected static final int CLOSEST_DISTANCE_EFLAG = 1 << 9;
---
> 	protected static final int CLOSEST_DISTANCE_EFLAG = 1 << 13;
137a192,218
> 	 * The offset of the flags representing the value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_STATUS_EFLAG_OFFSET = 14;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_STATUS_EFLAG_DEFAULT = JumpLinkStatus.VALUES.indexOf(JUMP_LINK_STATUS_EDEFAULT) << JUMP_LINK_STATUS_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link JumpLinkStatus Jump Link Status}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final JumpLinkStatus[] JUMP_LINK_STATUS_EFLAG_VALUES = (JumpLinkStatus[])JumpLinkStatus.VALUES.toArray(new JumpLinkStatus[JumpLinkStatus.VALUES.size()]);
> 
> 				/**
138,138c219,219
< 	 * The cached value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getJumpLinkStatus() <em>Jump Link Status</em>}' attribute.
144a226,226
> 	protected static final int JUMP_LINK_STATUS_EFLAG = 0x3 << JUMP_LINK_STATUS_EFLAG_OFFSET;
145,145d225
< 	protected JumpLinkStatus jumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
157a239,265
> 	 * The offset of the flags representing the value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_TYPE_EFLAG_OFFSET = 16;
> 
> 				/**
> 	 * The flags representing the default value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	protected static final int JUMP_LINK_TYPE_EFLAG_DEFAULT = JumpLinkType.VALUES.indexOf(JUMP_LINK_TYPE_EDEFAULT) << JUMP_LINK_TYPE_EFLAG_OFFSET;
> 
> 				/**
> 	 * The array of enumeration values for '{@link JumpLinkType Jump Link Type}'
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 * @ordered
> 	 */
> 	private static final JumpLinkType[] JUMP_LINK_TYPE_EFLAG_VALUES = (JumpLinkType[])JumpLinkType.VALUES.toArray(new JumpLinkType[JumpLinkType.VALUES.size()]);
> 
> 				/**
158,158c266,266
< 	 * The cached value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
---
> 	 * The flags representing the value of the '{@link #getJumpLinkType() <em>Jump Link Type</em>}' attribute.
164a273,273
> 	protected static final int JUMP_LINK_TYPE_EFLAG = 0x3 << JUMP_LINK_TYPE_EFLAG_OFFSET;
165,165d272
< 	protected JumpLinkType jumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
185,185c293,293
< 	protected static final int JUMP_LINKS_REVERSE_EFLAG = 1 << 10;
---
> 	protected static final int JUMP_LINKS_REVERSE_EFLAG = 1 << 18;
210a319,319
> 		return ROUTING_EFLAG_VALUES[(eFlags & ROUTING_EFLAG) >>> ROUTING_EFLAG_OFFSET];
211,211d318
< 		return routing;
219a328,328
> 		Routing oldRouting = ROUTING_EFLAG_VALUES[(eFlags & ROUTING_EFLAG) >>> ROUTING_EFLAG_OFFSET];
220,220d327
< 		Routing oldRouting = routing;
221,221c329,329
< 		routing = newRouting == null ? ROUTING_EDEFAULT : newRouting;
---
> 		if (newRouting == null) newRouting = ROUTING_EDEFAULT;
221a330,330
> 		eFlags = eFlags & ~ROUTING_EFLAG | Routing.VALUES.indexOf(newRouting) << ROUTING_EFLAG_OFFSET;
223,223c332,332
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__ROUTING, oldRouting, routing));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__ROUTING, oldRouting, newRouting));
231a341,341
> 		return SMOOTHNESS_EFLAG_VALUES[(eFlags & SMOOTHNESS_EFLAG) >>> SMOOTHNESS_EFLAG_OFFSET];
232,232d340
< 		return smoothness;
240a350,350
> 		Smoothness oldSmoothness = SMOOTHNESS_EFLAG_VALUES[(eFlags & SMOOTHNESS_EFLAG) >>> SMOOTHNESS_EFLAG_OFFSET];
241,241d349
< 		Smoothness oldSmoothness = smoothness;
242a352,352
> 		eFlags = eFlags & ~SMOOTHNESS_EFLAG | Smoothness.VALUES.indexOf(newSmoothness) << SMOOTHNESS_EFLAG_OFFSET;
242,242c351,351
< 		smoothness = newSmoothness == null ? SMOOTHNESS_EDEFAULT : newSmoothness;
---
> 		if (newSmoothness == null) newSmoothness = SMOOTHNESS_EDEFAULT;
244,244c354,354
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__SMOOTHNESS, oldSmoothness, smoothness));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__SMOOTHNESS, oldSmoothness, newSmoothness));
294a405,405
> 		return JUMP_LINK_STATUS_EFLAG_VALUES[(eFlags & JUMP_LINK_STATUS_EFLAG) >>> JUMP_LINK_STATUS_EFLAG_OFFSET];
295,295d404
< 		return jumpLinkStatus;
303a414,414
> 		JumpLinkStatus oldJumpLinkStatus = JUMP_LINK_STATUS_EFLAG_VALUES[(eFlags & JUMP_LINK_STATUS_EFLAG) >>> JUMP_LINK_STATUS_EFLAG_OFFSET];
304,304d413
< 		JumpLinkStatus oldJumpLinkStatus = jumpLinkStatus;
305a416,416
> 		eFlags = eFlags & ~JUMP_LINK_STATUS_EFLAG | JumpLinkStatus.VALUES.indexOf(newJumpLinkStatus) << JUMP_LINK_STATUS_EFLAG_OFFSET;
305,305c415,415
< 		jumpLinkStatus = newJumpLinkStatus == null ? JUMP_LINK_STATUS_EDEFAULT : newJumpLinkStatus;
---
> 		if (newJumpLinkStatus == null) newJumpLinkStatus = JUMP_LINK_STATUS_EDEFAULT;
307,307c418,418
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_STATUS, oldJumpLinkStatus, jumpLinkStatus));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_STATUS, oldJumpLinkStatus, newJumpLinkStatus));
315a427,427
> 		return JUMP_LINK_TYPE_EFLAG_VALUES[(eFlags & JUMP_LINK_TYPE_EFLAG) >>> JUMP_LINK_TYPE_EFLAG_OFFSET];
316,316d426
< 		return jumpLinkType;
324a436,436
> 		JumpLinkType oldJumpLinkType = JUMP_LINK_TYPE_EFLAG_VALUES[(eFlags & JUMP_LINK_TYPE_EFLAG) >>> JUMP_LINK_TYPE_EFLAG_OFFSET];
325,325d435
< 		JumpLinkType oldJumpLinkType = jumpLinkType;
326a438,438
> 		eFlags = eFlags & ~JUMP_LINK_TYPE_EFLAG | JumpLinkType.VALUES.indexOf(newJumpLinkType) << JUMP_LINK_TYPE_EFLAG_OFFSET;
326,326c437,437
< 		jumpLinkType = newJumpLinkType == null ? JUMP_LINK_TYPE_EDEFAULT : newJumpLinkType;
---
> 		if (newJumpLinkType == null) newJumpLinkType = JUMP_LINK_TYPE_EDEFAULT;
328,328c440,440
< 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_TYPE, oldJumpLinkType, jumpLinkType));
---
> 			eNotify(new ENotificationImpl(this, Notification.SET, NotationPackage.ROUTING_STYLE__JUMP_LINK_TYPE, oldJumpLinkType, newJumpLinkType));
359,360d470
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				return getUUID();
386,388d495
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				setUUID((byte[])newValue);
< 				return;
421,423d527
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				setUUID(UUID_EDEFAULT);
< 				return;
456,457d559
< 			case NotationPackage.ROUTING_STYLE__UUID:
< 				return UUID_EDEFAULT == null ? uUID != null : !UUID_EDEFAULT.equals(uUID);
458a561,561
> 				return (eFlags & ROUTING_EFLAG) != ROUTING_EFLAG_DEFAULT;
459,459d560
< 				return routing != ROUTING_EDEFAULT;
460a563,563
> 				return (eFlags & SMOOTHNESS_EFLAG) != SMOOTHNESS_EFLAG_DEFAULT;
461,461d562
< 				return smoothness != SMOOTHNESS_EDEFAULT;
466a569,569
> 				return (eFlags & JUMP_LINK_STATUS_EFLAG) != JUMP_LINK_STATUS_EFLAG_DEFAULT;
467,467d568
< 				return jumpLinkStatus != JUMP_LINK_STATUS_EDEFAULT;
468a571,571
> 				return (eFlags & JUMP_LINK_TYPE_EFLAG) != JUMP_LINK_TYPE_EFLAG_DEFAULT;
469,469d570
< 				return jumpLinkType != JUMP_LINK_TYPE_EDEFAULT;
485a588,588
> 		result.append(ROUTING_EFLAG_VALUES[(eFlags & ROUTING_EFLAG) >>> ROUTING_EFLAG_OFFSET]);
486,486d587
< 		result.append(routing);
487a590,590
> 		result.append(SMOOTHNESS_EFLAG_VALUES[(eFlags & SMOOTHNESS_EFLAG) >>> SMOOTHNESS_EFLAG_OFFSET]);
488,488d589
< 		result.append(smoothness);
493a596,596
> 		result.append(JUMP_LINK_STATUS_EFLAG_VALUES[(eFlags & JUMP_LINK_STATUS_EFLAG) >>> JUMP_LINK_STATUS_EFLAG_OFFSET]);
494,494d595
< 		result.append(jumpLinkStatus);
495a598,598
> 		result.append(JUMP_LINK_TYPE_EFLAG_VALUES[(eFlags & JUMP_LINK_TYPE_EFLAG) >>> JUMP_LINK_TYPE_EFLAG_OFFSET]);
496,496d597
< 		result.append(jumpLinkType);
