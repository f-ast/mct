40a41,41
> import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
77,77c78,78
< 			update(notification, (EObject) notification.getNotifier());
---
> 			update(domain, notification);
369a371,378
> 	/**
> 	 * Subclasses overriding this method should remember to override
> 	 * {@link #update(TransactionalEditingDomain, Notification)} as required.
> 	 * The default implementation of
> 	 * {@link #update(TransactionalEditingDomain, Notification)} will only
> 	 * update if the notifier is an <code>EObject</code>.
> 	 * 
> 	 * @return the filter for events used by my <code>eventListener</code>.
370,371d370
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.emf.core.edit.IDemuxedMListener#getFilter()
415a423,442
> 	 * Updates me if the notifier is an <code>EObject</code> by calling
> 	 * {@link #update(Notification, EObject)}. Does nothing otherwise.
> 	 * Subclasses should override this method if they need to update based on
> 	 * non-EObject notifiers.
> 	 * 
> 	 * @param domain
> 	 *            the editing domain
> 	 * @param notification
> 	 *            the event notification
> 	 */
> 	protected void update(TransactionalEditingDomain domain, Notification notification) {
> 
> 		Object notifier = notification.getNotifier();
> 		
> 		if (notifier instanceof EObject) {
> 			update(notification, (EObject) notifier);
> 		}
> 	}
> 
> 	/**
567,567c594,594
< 			if (contributor instanceof IReadOnlyDiagramPropertySheetPageContributor) {
---
>             if (contributor instanceof IReadOnlyDiagramPropertySheetPageContributor
567a595,596
>                     || (contributor instanceof DiagramEditor && !((DiagramEditor) contributor)
>                         .isWritable())) {
