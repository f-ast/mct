30a31,31
> import org.eclipse.gmf.runtime.draw2d.ui.graph.GMFDirectedGraphLayout;
90,90d90
<             if (advancedSubgraphParent != null && advancedSubgraphParent.getDirection() != PositionConstants.NONE) {
95,95c96,96
<             DirectedGraphLayout layout = new DirectedGraphLayout();
---
>             DirectedGraphLayout layout = new GMFDirectedGraphLayout();
96a98,100
>             if (advancedSubgraphParent != null && advancedSubgraphParent.isAutoSize()) {
>                 advancedSubgraphParent.width = g.getLayoutSize().width;
>                 advancedSubgraphParent.height = g.getLayoutSize().height;
97,97c91,91
<             if (advancedSubgraphParent != null) {
---
>             if (advancedSubgraphParent != null) {
98,98d91
<                 adjustAutoSizeNodeWidthAndHeight(advancedSubgraphParent);
259a262,270
> //    private void adjustAutoSizeNodeWidthAndHeight(AdvancedSubGraph subGraph) {
> //    	if (!subGraph.isAutoSize()) {
> //    	    return;
> //    	}
> //        NodeList nodes = subGraph.members;
> //        if (nodes.isEmpty())
> //            return;
> //        int size = nodes.size();
> //        Node node = nodes.getNode(0);
260,268d261
<     private void adjustAutoSizeNodeWidthAndHeight(AdvancedSubGraph subGraph) {
<     	if (!subGraph.isAutoSize()) {
<     	    return;
<     	}
<         NodeList nodes = subGraph.members;
<         if (nodes.isEmpty())
<             return;
<         int size = nodes.size();
<         Node node = nodes.getNode(0);
269,269c271,271
<         int top=node.y,left=node.x,bottom = top + node.height ,right = left+node.width;
---
> //        int top=node.y,left=node.x,bottom = top + node.height ,right = left+node.width;
269a272,273
> //        Node topNode, leftNode;
> //        topNode = leftNode = node;
270,271d271
<         Node topNode, leftNode;
<         topNode = leftNode = node;
272a275,295
> //            node = (Node)nodes.get(index);
> //            if (top>node.y){
> //                top = node.y;
> //                topNode = node;
> //            }
> //            if (bottom < (node.y+node.height))
> //                bottom = node.y+node.height;
> //            if (left>node.x){
> //                left = node.x;
> //                leftNode = node;
> //            }
> //            if (right<(node.x+node.width))
> //                right = node.x+node.width;
> //        }
> //        int xDiff = 0 ;
> //        int yDiff = 0 ;
> //        if (subGraph.isHasBufferedZone()){
> //             xDiff = leftNode.x;
> //             yDiff = topNode.y ;
> //        }
> //        subGraph.width = right - left + xDiff;
272,272c274,274
<         for (int index = 1 ; index<size; index++) {
---
> //        for (int index = 1 ; index<size; index++) {
273,293d274
<             node = (Node)nodes.get(index);
<             if (top>node.y){
<                 top = node.y;
<                 topNode = node;
<             }
<             if (bottom < (node.y+node.height))
<                 bottom = node.y+node.height;
<             if (left>node.x){
<                 left = node.x;
<                 leftNode = node;
<             }
<             if (right<(node.x+node.width))
<                 right = node.x+node.width;
<         }
<         int xDiff = 0 ;
<         int yDiff = 0 ;
<         if (subGraph.isHasBufferedZone()){
<              xDiff = leftNode.x;
<              yDiff = topNode.y ;
<         }
<         subGraph.width = right - left + xDiff;
294,294c296,296
<         subGraph.height = bottom - top + yDiff;
---
> //        subGraph.height = bottom - top + yDiff;
295,295c297,297
<         
---
> //        
296,296c298,298
<     }
---
> //    }
