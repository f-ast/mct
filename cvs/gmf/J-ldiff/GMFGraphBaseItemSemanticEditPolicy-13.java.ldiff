15a16,16
> import org.eclipse.gef.Request;
17a19,19
> import org.eclipse.gef.requests.ReconnectRequest;
20a23,23
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;
52a56,91
> 	 * Extended request data key to hold editpart visual id.
> 	 * 
> 	 * @generated
> 	 */
> 	public static final String VISUAL_ID_KEY = "visual_id"; //$NON-NLS-1$
> 
> 	/**
> 	 * Add visual id of edited editpart to extended data of the request
> 	 * so command switch can decide what kind of diagram element is being edited.
> 	 * It is done in those cases when it's not possible to deduce diagram
> 	 * element kind from domain element.
> 	 * 
> 	 * @generated
> 	 */
> 	public Command getCommand(Request request) {
> 		if (request instanceof ReconnectRequest) {
> 			Object view = ((ReconnectRequest) request).getConnectionEditPart().getModel();
> 			if (view instanceof View) {
> 				Integer id = new Integer(GMFGraphVisualIDRegistry.getVisualID((View) view));
> 				request.getExtendedData().put(VISUAL_ID_KEY, id);
> 			}
> 		}
> 		return super.getCommand(request);
> 	}
> 
> 	/**
> 	 * Returns visual id from request parameters.
> 	 * 
> 	 * @generated
> 	 */
> 	protected int getVisualID(IEditCommandRequest request) {
> 		Object id = request.getParameter(VISUAL_ID_KEY);
> 		return id instanceof Integer ? ((Integer) id).intValue() : -1;
> 	}
> 
> 	/**
229a269,270
> 		if (uelement instanceof EObject) {
> 			EObject element = (EObject) uelement;
229,229c268,268
< 	protected EObject getRelationshipContainer(EObject element, EClass containerClass, IElementType relationshipType) {
---
> 	protected EObject getRelationshipContainer(Object uelement, EClass containerClass, IElementType relationshipType) {
234a276,276
> 		}
