2,2c2,2
<  * Copyright (c) 2002, 2005 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
21a20,20
> import org.eclipse.core.commands.operations.IOperationHistory;
22,22d19
< import org.eclipse.gmf.runtime.common.core.command.CommandManagerChangeEvent;
23,23c21,21
< import org.eclipse.gmf.runtime.common.core.command.ICommandManagerChangeListener;
---
> import org.eclipse.core.commands.operations.IOperationHistoryListener;
23a22,22
> import org.eclipse.core.commands.operations.OperationHistoryEvent;
36,36d36
< import org.eclipse.gmf.runtime.common.ui.services.action.internal.filter.TestAttributeOperation;
51,51c51,51
< 	implements IActionFilterProvider, ICommandManagerChangeListener {
---
> 	implements IActionFilterProvider, IOperationHistoryListener {
184a185,185
>         getOperationHistory().addOperationHistoryListener(this);
185,185d184
< 		getCommandManager().addCommandManagerChangeListener(this);
252a253,253
> 	 * @deprecated Use {@link #getOperationHistory()} instead.
253,253d252
< 	 *  
255a256,265
> 		return CommandManager.getDefault();
> 	}
>     
>     /**
>      * Returns the operation history from my action manager.
>      * 
>      * @return the operation history
>      */
>     protected IOperationHistory getOperationHistory() {
>         return getActionManager().getOperationHistory();
256,256d255
< 		return getActionManager().getCommandManager();
357a367,367
>      * Clears my cache when my operation history changes.
358,364d366
< 	 * Handles an event indicating that a command manager has changed.
< 	 * 
< 	 * @param event
< 	 *            The command manager change event to be handled.
< 	 * 
< 	 * @see ICommandManagerChangeListener#commandManagerChanged(CommandManagerChangeEvent)
< 	 *  
366,366c369,369
< 	public void commandManagerChanged(CommandManagerChangeEvent event) {
---
>     public void historyNotification(OperationHistoryEvent event) {
