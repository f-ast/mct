9a10,11
> import org.eclipse.emf.common.util.EList;
> 
18,18c20,20
<  * Top-level diagram node
---
>  * Both top-level diagram node and any inner node
24a27,28
>  *   <li>{@link org.eclipse.gmf.mappings.NodeMapping#getChildren <em>Children</em>}</li>
>  *   <li>{@link org.eclipse.gmf.mappings.NodeMapping#getCompartments <em>Compartments</em>}</li>
28a33,34
>  * @model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not (domainMetaElement.oclIsUndefined()  and containmentFeature.oclIsUndefined())' description='Either domain meta element or containment feature must be set in node mapping'"
>  *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not domainMetaElement.oclIsUndefined() implies containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)' description='\'Domain Element\' must be the same or extend the type referenced by \'Containment Feature\''"
29,29d32
<  * @model
32,32c37,37
< public interface NodeMapping extends AbstractNodeMapping {
---
> public interface NodeMapping extends MappingEntry, MenuOwner, ToolOwner, AppearanceSteward {
58a64,99
> 	/**
> 	 * Returns the value of the '<em><b>Children</b></em>' containment reference list.
> 	 * The list contents are of type {@link org.eclipse.gmf.mappings.ChildReference}.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.mappings.ChildReference#getParentNode <em>Parent Node</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * <p>
> 	 * If the meaning of the '<em>Children</em>' containment reference list isn't clear,
> 	 * there really should be more of a description here...
> 	 * </p>
> 	 * <!-- end-user-doc -->
> 	 * @return the value of the '<em>Children</em>' containment reference list.
> 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_Children()
> 	 * @see org.eclipse.gmf.mappings.ChildReference#getParentNode
> 	 * @model type="org.eclipse.gmf.mappings.ChildReference" opposite="parentNode" containment="true"
> 	 * @generated
> 	 */
> 	EList getChildren();
> 
> 	/**
> 	 * Returns the value of the '<em><b>Compartments</b></em>' containment reference list.
> 	 * The list contents are of type {@link org.eclipse.gmf.mappings.CompartmentMapping}.
> 	 * It is bidirectional and its opposite is '{@link org.eclipse.gmf.mappings.CompartmentMapping#getParentNode <em>Parent Node</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * <p>
> 	 * If the meaning of the '<em>Compartments</em>' containment reference list isn't clear,
> 	 * there really should be more of a description here...
> 	 * </p>
> 	 * <!-- end-user-doc -->
> 	 * @return the value of the '<em>Compartments</em>' containment reference list.
> 	 * @see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_Compartments()
> 	 * @see org.eclipse.gmf.mappings.CompartmentMapping#getParentNode
> 	 * @model type="org.eclipse.gmf.mappings.CompartmentMapping" opposite="parentNode" containment="true"
> 	 * @generated
> 	 */
> 	EList getCompartments();
> 
