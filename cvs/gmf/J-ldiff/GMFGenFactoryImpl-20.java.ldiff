11a12,12
> import org.eclipse.emf.ecore.EPackage;
12a14,14
> import org.eclipse.emf.ecore.plugin.EcorePlugin;
15,15c21,21
< import org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap;
---
> import org.eclipse.gmf.codegen.gmfgen.FigureViewmap;
16,16d21
< import org.eclipse.gmf.codegen.gmfgen.ColorAttributes;
19,19c30,30
< import org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap;
---
> import org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints;
33,33c40,40
< import org.eclipse.gmf.codegen.gmfgen.LinkDecoration;
---
> import org.eclipse.gmf.codegen.gmfgen.SnippetViewmap;
52a54,72
> 	 * Creates the default factory implementation.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public static GMFGenFactory init() {
> 		try {
> 			GMFGenFactory theGMFGenFactory = (GMFGenFactory)EPackage.Registry.INSTANCE.getEFactory("http://www.eclipse.org/gmf/2005/GenModel"); 
> 			if (theGMFGenFactory != null) {
> 				return theGMFGenFactory;
> 			}
> 		}
> 		catch (Exception exception) {
> 			EcorePlugin.INSTANCE.log(exception);
> 		}
> 		return new GMFGenFactoryImpl();
> 	}
> 
> 	/**
82,84d101
< 			case GMFGenPackage.BASIC_NODE_VIEWMAP: return createBasicNodeViewmap();
< 			case GMFGenPackage.DECORATED_CONNECTION_VIEWMAP: return createDecoratedConnectionViewmap();
< 			case GMFGenPackage.LINK_DECORATION: return createLinkDecoration();
85,85c102,102
< 			case GMFGenPackage.DIAGRAM_VIEWMAP: return createDiagramViewmap();
---
> 			case GMFGenPackage.FIGURE_VIEWMAP: return createFigureViewmap();
86,86d102
< 			case GMFGenPackage.COMPARTMENT_VIEWMAP: return createCompartmentViewmap();
87,87c103,103
< 			case GMFGenPackage.LABEL_VIEWMAP: return createLabelViewmap();
---
> 			case GMFGenPackage.SNIPPET_VIEWMAP: return createSnippetViewmap();
108a403,404
> 	public CompartmentPlacementKind createCompartmentPlacementKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
108a125,130
> 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND:
> 				return createCompartmentPlacementKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND:
> 				return createCompartmentLayoutKindFromString(eDataType, initialValue);
> 			case GMFGenPackage.LINK_LABEL_ALIGNMENT:
> 				return createLinkLabelAlignmentFromString(eDataType, initialValue);
109,110d402
< 			case GMFGenPackage.COMPARTMENT_PLACEMENT_KIND: {
< 				CompartmentPlacementKind result = CompartmentPlacementKind.get(initialValue);
111,111c405,405
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
---
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
112,112c406,406
< 				return result;
---
> 		return result;
113,123d406
< 			}
< 			case GMFGenPackage.COMPARTMENT_LAYOUT_KIND: {
< 				CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
< 			case GMFGenPackage.LINK_LABEL_ALIGNMENT: {
< 				LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
< 				if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
< 				return result;
< 			}
138a414,414
> 	public String convertCompartmentPlacementKindToString(EDataType eDataType, Object instanceValue) {
138a146,146
> 				return convertCompartmentPlacementKindToString(eDataType, instanceValue);
139,139c415,415
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 		return instanceValue == null ? null : instanceValue.toString();
140a434,434
> 	public String convertCompartmentLayoutKindToString(EDataType eDataType, Object instanceValue) {
140a148,148
> 				return convertCompartmentLayoutKindToString(eDataType, instanceValue);
141a436,455
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public LinkLabelAlignment createLinkLabelAlignmentFromString(EDataType eDataType, String initialValue) {
> 		LinkLabelAlignment result = LinkLabelAlignment.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
> 	}
> 
> 	/**
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	public String convertLinkLabelAlignmentToString(EDataType eDataType, Object instanceValue) {
> 		return instanceValue == null ? null : instanceValue.toString();
141,141c435,435
< 				return instanceValue == null ? null : instanceValue.toString();
---
> 		return instanceValue == null ? null : instanceValue.toString();
142a150,150
> 				return convertLinkLabelAlignmentToString(eDataType, instanceValue);
143,143d149
< 				return instanceValue == null ? null : instanceValue.toString();
285a293,295
> 	public FigureViewmap createFigureViewmap() {
> 		FigureViewmapImpl figureViewmap = new FigureViewmapImpl();
> 		return figureViewmap;
286,288d292
< 	public BasicNodeViewmap createBasicNodeViewmap() {
< 		BasicNodeViewmapImpl basicNodeViewmap = new BasicNodeViewmapImpl();
< 		return basicNodeViewmap;
295a303,305
> 	public SnippetViewmap createSnippetViewmap() {
> 		SnippetViewmapImpl snippetViewmap = new SnippetViewmapImpl();
> 		return snippetViewmap;
296,298d302
< 	public DecoratedConnectionViewmap createDecoratedConnectionViewmap() {
< 		DecoratedConnectionViewmapImpl decoratedConnectionViewmap = new DecoratedConnectionViewmapImpl();
< 		return decoratedConnectionViewmap;
306,308d312
< 	public LinkDecoration createLinkDecoration() {
< 		LinkDecorationImpl linkDecoration = new LinkDecorationImpl();
< 		return linkDecoration;
316,318d322
< 	public DiagramViewmap createDiagramViewmap() {
< 		DiagramViewmapImpl diagramViewmap = new DiagramViewmapImpl();
< 		return diagramViewmap;
326,328d332
< 	public CompartmentViewmap createCompartmentViewmap() {
< 		CompartmentViewmapImpl compartmentViewmap = new CompartmentViewmapImpl();
< 		return compartmentViewmap;
336,338d342
< 	public LabelViewmap createLabelViewmap() {
< 		LabelViewmapImpl labelViewmap = new LabelViewmapImpl();
< 		return labelViewmap;
346,346c313,313
< 	public ValueExpression createValueExpression() {
---
> 	public ValueExpression createValueExpression() {
347,347c314,314
< 		ValueExpressionImpl valueExpression = new ValueExpressionImpl();
---
> 		ValueExpressionImpl valueExpression = new ValueExpressionImpl();
348,348c315,315
< 		return valueExpression;
---
> 		return valueExpression;
356,356c323,323
< 	public ModelElementSelector createModelElementSelector() {
---
> 	public ModelElementSelector createModelElementSelector() {
357,357c324,324
< 		ModelElementSelectorImpl modelElementSelector = new ModelElementSelectorImpl();
---
> 		ModelElementSelectorImpl modelElementSelector = new ModelElementSelectorImpl();
358,358c325,325
< 		return modelElementSelector;
---
> 		return modelElementSelector;
366,366c333,333
< 	public Palette createPalette() {
---
> 	public Palette createPalette() {
367,367c334,334
< 		PaletteImpl palette = new PaletteImpl();
---
> 		PaletteImpl palette = new PaletteImpl();
368,368c335,335
< 		return palette;
---
> 		return palette;
376,376c343,343
< 	public NodeEntry createNodeEntry() {
---
> 	public NodeEntry createNodeEntry() {
377,377c344,344
< 		NodeEntryImpl nodeEntry = new NodeEntryImpl();
---
> 		NodeEntryImpl nodeEntry = new NodeEntryImpl();
378,378c345,345
< 		return nodeEntry;
---
> 		return nodeEntry;
386,386c353,353
< 	public LinkEntry createLinkEntry() {
---
> 	public LinkEntry createLinkEntry() {
387,387c354,354
< 		LinkEntryImpl linkEntry = new LinkEntryImpl();
---
> 		LinkEntryImpl linkEntry = new LinkEntryImpl();
388,388c355,355
< 		return linkEntry;
---
> 		return linkEntry;
396,396c363,363
< 	public ToolGroup createToolGroup() {
---
> 	public ToolGroup createToolGroup() {
397,397c364,364
< 		ToolGroupImpl toolGroup = new ToolGroupImpl();
---
> 		ToolGroupImpl toolGroup = new ToolGroupImpl();
398,398c365,365
< 		return toolGroup;
---
> 		return toolGroup;
406,406c373,373
< 	public GenFeatureSeqInitializer createGenFeatureSeqInitializer() {
---
> 	public GenFeatureSeqInitializer createGenFeatureSeqInitializer() {
407,407c374,374
< 		GenFeatureSeqInitializerImpl genFeatureSeqInitializer = new GenFeatureSeqInitializerImpl();
---
> 		GenFeatureSeqInitializerImpl genFeatureSeqInitializer = new GenFeatureSeqInitializerImpl();
408,408c375,375
< 		return genFeatureSeqInitializer;
---
> 		return genFeatureSeqInitializer;
415a423,426
> 	public CompartmentLayoutKind createCompartmentLayoutKindFromString(EDataType eDataType, String initialValue) {
> 		CompartmentLayoutKind result = CompartmentLayoutKind.get(initialValue);
> 		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
> 		return result;
416,416c383,383
< 	public GenFeatureValueSpec createGenFeatureValueSpec() {
---
> 	public GenFeatureValueSpec createGenFeatureValueSpec() {
417,417c384,384
< 		GenFeatureValueSpecImpl genFeatureValueSpec = new GenFeatureValueSpecImpl();
---
> 		GenFeatureValueSpecImpl genFeatureValueSpec = new GenFeatureValueSpecImpl();
418,418c385,385
< 		return genFeatureValueSpec;
---
> 		return genFeatureValueSpec;
426,426c393,393
< 	public GenLinkConstraints createGenLinkConstraints() {
---
> 	public GenLinkConstraints createGenLinkConstraints() {
427,427c394,394
< 		GenLinkConstraintsImpl genLinkConstraints = new GenLinkConstraintsImpl();
---
> 		GenLinkConstraintsImpl genLinkConstraints = new GenLinkConstraintsImpl();
428,428c395,395
< 		return genLinkConstraints;
---
> 		return genLinkConstraints;
