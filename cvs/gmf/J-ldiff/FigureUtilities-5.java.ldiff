2,2c2,2
<  * Copyright (c) 2002, 2004 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
13a14,15
> import org.eclipse.draw2d.Graphics;
> import org.eclipse.draw2d.IFigure;
17a20,20
> import org.eclipse.swt.SWT;
177a181,236
> 	
> 	/**
> 	 * Helper method to paint a grid.  Painting is optimized as it is restricted to the
> 	 * Graphics' clip.
> 	 * 
> 	 * @param	g			The Graphics object to be used for painting
> 	 * @param	f			The figure in which the grid is to be painted
> 	 * @param	origin		Any point where the grid lines are expected to intersect
> 	 * @param	distanceX	Distance between vertical grid lines; if 0 or less, vertical grid
> 	 * 						lines will not be drawn
> 	 * @param	distanceY	Distance between horizontal grid lines; if 0 or less, horizontal
> 	 * 						grid lines will not be drawn
> 	 * @param	lineStyle   Line style to be used for painting the grid lines
> 	 * @param   dashes      Dash pattern to be used for the grid line (ignored if lineStyle != LINE_CUSTOM)
> 	 * 
> 	 */
> 	public static void paintGridWithStyle(Graphics g, IFigure f, 
> 			org.eclipse.draw2d.geometry.Point origin, int distanceX, int distanceY, int lineStyle, int[] dashes) {
> 		Rectangle clip = g.getClip(Rectangle.SINGLETON);
> 		
> 		int origLineStyle = g.getLineStyle();		
> 		
> 		if (distanceX > 0) {
> 			if (origin.x >= clip.x)
> 				while (origin.x - distanceX >= clip.x)
> 					origin.x -= distanceX;
> 			else
> 				while (origin.x < clip.x)
> 					origin.x += distanceX;
> 			for (int i = origin.x; i < clip.x + clip.width; i += distanceX) {
> 				g.setLineStyle(lineStyle);
> 				if ((dashes != null) && (lineStyle == SWT.LINE_CUSTOM)) g.setLineDash(dashes);
> 				g.drawLine(i, clip.y, i, clip.y + clip.height);
> 				g.setLineStyle(origLineStyle);
> 			}
> 		}
> 		
> 		if (distanceY > 0) {
> 			if (origin.y >= clip.y)
> 				while (origin.y - distanceY >= clip.y)
> 					origin.y -= distanceY;
> 			else
> 				while (origin.y < clip.y)
> 					origin.y += distanceY;
> 			for (int i = origin.y; i < clip.y + clip.height; i += distanceY) {
> 				g.setLineStyle(lineStyle);
> 				if ((dashes != null) && (lineStyle == SWT.LINE_CUSTOM)) g.setLineDash(dashes);
> 				g.drawLine(clip.x, i, clip.x + clip.width, i);
> 				g.setLineStyle(origLineStyle);
> 			}
> 		}
> 	}
> 
> 	
> 	
> 	
