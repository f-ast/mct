13a14,14
> import org.eclipse.emf.ecore.EObject;
23a25,26
> import org.eclipse.gmf.codegen.gmfgen.MetamodelType;
> import org.eclipse.gmf.codegen.gmfgen.SpecializationType;
52a56,59
> 	private NamingStrategy myEditHelper;
> 
> 	private NamingStrategy myEditHelperAdvice;
> 
63a71,72
> 		setEditHelper(new ClassNameStrategy(MetamodelType.EDIT_HELPER_SUFFIX, null, dispenser));
> 		setEditHelperAdvice(new ClassNameStrategy(SpecializationType.EDIT_HELPER_ADVICE_SUFFIX, null, dispenser));
113a123,138
> 	public void setEditHelper(NamingStrategy editHelper) {
> 		this.myEditHelper = editHelper;
> 	}
> 
> 	public NamingStrategy getEditHelper() {
> 		return myEditHelper;
> 	}
> 
> 	public void setEditHelperAdvice(NamingStrategy editHelperAdvice) {
> 		this.myEditHelperAdvice = editHelperAdvice;
> 	}
> 
> 	public NamingStrategy getEditHelperAdvice() {
> 		return myEditHelperAdvice;
> 	}
> 
115a141,141
> 		myDispenser.add(genDiagram.getBaseExternalNodeLabelEditPartClassName());
116a143,143
> 		myDispenser.add(genDiagram.getBaseItemSemanticEditPolicyClassName());
119a147,148
> 		myDispenser.add(genDiagram.getBaseEditHelperClassName());
> 		feedElementType(genDiagram, cme);
119,119c146,146
< 		getNodeGraphicalPolicy().getNamesDispenser().add(genDiagram.getBaseGraphicalNodeEditPolicyClassName()); // #127310
---
> 		myDispenser.add(genDiagram.getBaseGraphicalNodeEditPolicyClassName());
127a157,157
> 		feedElementType(genNode, nme);
135a166,166
> 		feedElementType(childNode, nme);
141a173,173
> 		feedElementType(genLink, lme);
154a187,187
> 		feedElementType(label, labelMapping);
160a194,194
> 		feedElementType(label, labelMapping);
167a202,226
> 
> 	protected void feedElementType(GenCommonBase element, EObject mapping) {
> 		if (element.getElementType() instanceof MetamodelType) {
> 			MetamodelType type = (MetamodelType) element.getElementType();
> 			type.setEditHelperClassName(getName(getEditHelper(), mapping));
> 		} else if (element.getElementType() instanceof SpecializationType) {
> 			SpecializationType type = (SpecializationType) element.getElementType();
> 			type.setEditHelperAdviceClassName(getName(getEditHelperAdvice(), mapping));
> 		}
> 	}
> 
> 	protected static String getName(NamingStrategy strategy, EObject mapping) {
> 		if (mapping instanceof CanvasMapping) {
> 			return strategy.get((CanvasMapping) mapping);
> 		} else if (mapping instanceof NodeMapping) {
> 			return strategy.get((NodeMapping) mapping);
> 		} else if (mapping instanceof LinkMapping) {
> 			return strategy.get((LinkMapping) mapping);
> 		} else if (mapping instanceof CompartmentMapping) {
> 			return strategy.get((CompartmentMapping) mapping);
> 		} else if (mapping instanceof LabelMapping) {
> 			return strategy.get((LabelMapping) mapping);
> 		}
> 		throw new IllegalArgumentException();
> 	}
