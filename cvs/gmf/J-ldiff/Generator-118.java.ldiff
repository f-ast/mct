22a23,23
> import org.eclipse.gmf.codegen.gmfgen.GenApplication;
216a218,218
> 		generateApplication();
1023a1026,1085
> 	// application
> 
> 	private void generateApplication() throws UnexpectedBehaviourException, InterruptedException {
> 		GenApplication application = myEditorGen.getApplication();
> 		if (application != null) {
> 			generateActionBarAdvisor(application);
> 			generateApplication(application);
> 			generatePerspective(application);
> 			generateWorkbenchAdvisor(application);
> 			generateWorkbenchWindowAdvisor(application);
> 		}
> 	}
> 
> 	private void generateActionBarAdvisor(GenApplication application) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getActionBarAdvisorEmitter(),
> 			application.getApplicationPackageName(),
> 			application.getActionBarAdvisorClassName(),
> 			application
> 		);
> 	}
> 
> 	private void generateApplication(GenApplication application) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getApplicationEmitter(),
> 			application.getApplicationPackageName(),
> 			application.getApplicationClassName(),
> 			application
> 		);
> 	}
> 
> 	private void generatePerspective(GenApplication application) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getPerspectiveEmitter(),
> 			application.getApplicationPackageName(),
> 			application.getPerspectiveClassName(),
> 			application
> 		);
> 	}
> 
> 	private void generateWorkbenchAdvisor(GenApplication application) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getWorkbenchAdvisorEmitter(),
> 			application.getApplicationPackageName(),
> 			application.getWorkbenchAdvisorClassName(),
> 			application
> 		);
> 	}
> 
> 	private void generateWorkbenchWindowAdvisor(GenApplication application) throws UnexpectedBehaviourException, InterruptedException {
> 		internalGenerateJavaClass(
> 			myEmitters.getWorkbenchWindowAdvisorEmitter(),
> 			application.getApplicationPackageName(),
> 			application.getWorkbenchWindowAdvisorClassName(),
> 			application
> 		);
> 	}
> 
> 	// util
> 
