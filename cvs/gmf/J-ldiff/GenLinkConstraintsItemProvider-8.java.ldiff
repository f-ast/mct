15a16,16
> import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
64a66,67
> 			addSourceEndPropertyDescriptor(object);
> 			addTargetEndPropertyDescriptor(object);
69a73,73
> 	 * This adds a property descriptor for the Source End feature.
70,72d72
< 	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
< 	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
< 	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
76a78,91
> 	protected void addSourceEndPropertyDescriptor(Object object) {
> 		itemPropertyDescriptors.add
> 			(createItemPropertyDescriptor
> 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
> 				 getResourceLocator(),
> 				 getString("_UI_GenLinkConstraints_sourceEnd_feature"),
> 				 getString("_UI_PropertyDescriptor_description", "_UI_GenLinkConstraints_sourceEnd_feature", "_UI_GenLinkConstraints_type"),
> 				 GMFGenPackage.eINSTANCE.getGenLinkConstraints_SourceEnd(),
> 				 true,
> 				 false,
> 				 true,
> 				 null,
> 				 null,
> 				 null));
77,84d77
< 	@Override
< 	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
< 		if (childrenFeatures == null) {
< 			super.getChildrenFeatures(object);
< 			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenLinkConstraints_SourceEnd());
< 			childrenFeatures.add(GMFGenPackage.eINSTANCE.getGenLinkConstraints_TargetEnd());
< 		}
< 		return childrenFeatures;
87a95,95
> 	 * This adds a property descriptor for the Target End feature.
91a100,113
> 	protected void addTargetEndPropertyDescriptor(Object object) {
> 		itemPropertyDescriptors.add
> 			(createItemPropertyDescriptor
> 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
> 				 getResourceLocator(),
> 				 getString("_UI_GenLinkConstraints_targetEnd_feature"),
> 				 getString("_UI_PropertyDescriptor_description", "_UI_GenLinkConstraints_targetEnd_feature", "_UI_GenLinkConstraints_type"),
> 				 GMFGenPackage.eINSTANCE.getGenLinkConstraints_TargetEnd(),
> 				 true,
> 				 false,
> 				 true,
> 				 null,
> 				 null,
> 				 null));
92,97d99
< 	@Override
< 	protected EStructuralFeature getChildFeature(Object object, Object child) {
< 		// Check the type of the specified child object and return the proper feature to use for
< 		// adding (see {@link AddCommand}) it as a child.
< 
< 		return super.getChildFeature(object, child);
132,138d147
< 
< 		switch (notification.getFeatureID(GenLinkConstraints.class)) {
< 			case GMFGenPackage.GEN_LINK_CONSTRAINTS__SOURCE_END:
< 			case GMFGenPackage.GEN_LINK_CONSTRAINTS__TARGET_END:
< 				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
< 				return;
< 		}
152,184d160
< 
< 		newChildDescriptors.add
< 			(createChildParameter
< 				(GMFGenPackage.eINSTANCE.getGenLinkConstraints_SourceEnd(),
< 				 GMFGenFactory.eINSTANCE.createGenConstraint()));
< 
< 		newChildDescriptors.add
< 			(createChildParameter
< 				(GMFGenPackage.eINSTANCE.getGenLinkConstraints_TargetEnd(),
< 				 GMFGenFactory.eINSTANCE.createGenConstraint()));
< 	}
< 
< 	/**
< 	 * This returns the label text for {@link org.eclipse.emf.edit.command.CreateChildCommand}.
< 	 * <!-- begin-user-doc -->
< 	 * <!-- end-user-doc -->
< 	 * @generated
< 	 */
< 	@Override
< 	public String getCreateChildText(Object owner, Object feature, Object child, Collection<?> selection) {
< 		Object childFeature = feature;
< 		Object childObject = child;
< 
< 		boolean qualify =
< 			childFeature == GMFGenPackage.eINSTANCE.getGenLinkConstraints_SourceEnd() ||
< 			childFeature == GMFGenPackage.eINSTANCE.getGenLinkConstraints_TargetEnd();
< 
< 		if (qualify) {
< 			return getString
< 				("_UI_CreateChild_text2",
< 				 new Object[] { getTypeText(childObject), getFeatureText(childFeature), getTypeText(owner) });
< 		}
< 		return super.getCreateChildText(owner, feature, child, selection);
