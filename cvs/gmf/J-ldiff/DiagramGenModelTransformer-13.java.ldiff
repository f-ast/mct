14a15,15
> import java.util.Collection;
34a36,36
> import org.eclipse.gmf.codegen.gmfgen.DesignLabelModelFacet;
108a111,111
> import org.eclipse.gmf.mappings.DesignLabelMapping;
113a117,117
> import org.eclipse.gmf.mappings.FeatureLabelMapping;
590a595,596
> 		if (mapping instanceof FeatureLabelMapping) {
> 			FeatureLabelMapping flMapping = (FeatureLabelMapping) mapping;
591,591d594
< 		if (mapping.getFeatures().size() > 0) {
592a598,598
> 			for (EAttribute attr : (Collection<? extends EAttribute>) flMapping.getFeatures()) {
593,593d597
< 			for (Iterator features = mapping.getFeatures().iterator(); features.hasNext();) {
594,594c599,599
< 				modelFacet.getMetaFeatures().add(findGenFeature((EAttribute) features.next()));
---
> 				modelFacet.getMetaFeatures().add(findGenFeature(attr));
596,596c601,601
< 			modelFacet.setViewPattern(mapping.getViewPattern());
---
> 			modelFacet.setViewPattern(flMapping.getViewPattern());
597,597c602,602
< 			modelFacet.setEditPattern(mapping.getEditPattern());
---
> 			modelFacet.setEditPattern(flMapping.getEditPattern());
599a605,607
> 		if (mapping instanceof DesignLabelMapping) {
> 			DesignLabelModelFacet modelFacet = GMFGenFactory.eINSTANCE.createDesignLabelModelFacet();
> 			return modelFacet;
600,602d604
< 		if (!mapping.isReadOnly()) {
< 			// use design model facet if there are no features and label is editable
< 			//return GMFGenFactory.eINSTANCE.createDesignLabelModelFacet();
684a690,696
> 		for (LabelMapping labelMapping : (Collection<? extends LabelMapping>) entry.getLabelMappings()) {
> 			if (labelMapping instanceof FeatureLabelMapping) {
> 				final EClass domainElement = labelMapping.getMapEntry().getDomainContext();
> 				for (EAttribute attr : (Collection<? extends EAttribute>) ((FeatureLabelMapping) labelMapping).getFeatures()) {
> 					if (!attr.getEContainingClass().isSuperTypeOf(domainElement)) {
> 						return false;
> 					}
685,687d689
< 		boolean ok = true;
< 		for (Iterator it = entry.getLabelMappings().iterator(); ok && it.hasNext();) {
< 			ok = checkLabelFeatureValidity((LabelMapping) it.next());
689,689c700,700
< 		return ok;
---
> 		return true;
691,697d698
< 
< 	private static boolean checkLabelFeatureValidity(LabelMapping labelMapping) {
< 		final EClass domainElement = labelMapping.getMapEntry().getDomainContext(); 
< 		boolean isOk = true;
< 		for (Iterator it = labelMapping.getFeatures().iterator(); isOk && it.hasNext(); ) {
< 			EClass attrContainer = ((EAttribute) it.next()).getEContainingClass();
< 			isOk = attrContainer.isSuperTypeOf(domainElement);
699,699d699
< 		return isOk;
