24a25,25
> import org.eclipse.gmf.gmfgraph.FigureDescriptor;
35,35c36,36
< 	extends DiagramElementItemProvider
---
> 	extends AbstractNodeItemProvider
64a66,66
> 			addContentPanePropertyDescriptor(object);
113a116,137
> 	 * This adds a property descriptor for the Content Pane feature.
> 	 * <!-- begin-user-doc -->
> 	 * <!-- end-user-doc -->
> 	 * @generated
> 	 */
> 	protected void addContentPanePropertyDescriptor(Object object) {
> 		itemPropertyDescriptors.add
> 			(createItemPropertyDescriptor
> 				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
> 				 getResourceLocator(),
> 				 getString("_UI_Node_contentPane_feature"),
> 				 getString("_UI_PropertyDescriptor_description", "_UI_Node_contentPane_feature", "_UI_Node_type"),
> 				 GMFGraphPackage.eINSTANCE.getNode_ContentPane(),
> 				 true,
> 				 false,
> 				 true,
> 				 null,
> 				 null,
> 				 null));
> 	}
> 
> 	/**
125,125c159,159
< 	 * This returns the label text for the adapted class.
---
> 	 * This returns the label text for the adapted class.
126,126c160,160
< 	 * <!-- begin-user-doc -->
---
> 	 * <!-- begin-user-doc -->
127,127c161,161
< 	 * <!-- end-user-doc -->
---
> 	 * <!-- end-user-doc -->
127a162,173
> 	 * @generated NOT
> 	 */
> 	@Override
> 	public String getText(Object object) {
> 		FigureDescriptor fd = ((Node) object).getFigure();
> 		if (fd != null && fd.getName() != null) {
> 			return getTextGen(object) + ' ' + '(' + fd.getName() + ')';
> 		}
> 		return getTextGen(object);
> 	}
> 
> 	/**
130,130d150
< 	@Override
131,131c151,151
< 	public String getText(Object object) {
---
> 	public String getTextGen(Object object) {
