28a29,29
> import org.eclipse.emf.ecore.xmi.XMLResource;
29,29d28
< 
690a691,722
> 	 * Resolves a <code>proxy</code>, using the specified resource.  If a proxy
> 	 * resolves to another proxy, then this procedure repeats until either a
> 	 * non-proxy is found or it is not resolved.
> 	 * 
> 	 * @param proxy a proxy
> 	 * @param resource the resource containing a mapping of element ID strings to {@link EObject}s
> 	 * @return a resolved element, or a proxy if it could not be resolved.  In
> 	 *     either case, the result may be different than the original
> 	 *     <code>proxy</code> (this is different from the behaviour of the
> 	 *     {@link org.eclipse.emf.ecore.util.EcoreUtil#resolve(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)}
> 	 *     method
> 	 */
> 	public static EObject resolve(EObject proxy, XMLResource resource) {
> 		URI proxyUri = ((InternalEObject) proxy).eProxyURI();
> 		if (proxyUri != null) {
> 			try {
> 				String id = getProxyID(proxyUri);
> 				if ((id == null) || (id.length() == 0)) {
> 					id = proxyUri.fragment();
> 				}
> 				EObject resolvedObject = resource.getEObject(id);
> 				if (resolvedObject != null && resolvedObject != proxy) {
> 					return resolve(resolvedObject, resource);
> 				}
> 			} catch (Exception exception) {
> 				ClipboardPlugin.catching(ClipboardSupportUtil.class, RESOLVE, exception);
> 			}
> 		}
> 		return proxy;
> 	}
> 
> 	/**
