14,15d13
< import java.awt.Color;
< 
18,18d15
< 
25a23,26
> 
> 	public RenderedImageKey() {
> 		super();
> 	}
25,25c22,22
< public final class RenderedImageKey implements RenderInfo {
---
> public final class RenderedImageKey extends RenderInfoImpl {
26a28,31
> 	public RenderedImageKey(RenderInfo info) {
> 		this(info, 0, null);
> 	}
> 
27,27c32,32
< 	public RenderedImageKey(long checksum, RenderInfo info, Object extraData) {
---
> 	public RenderedImageKey(RenderInfo info, long checksum, Object extraData) {
27a33,33
> 		super(info);
29,29d34
< 		this.info = info;
33,33c38,38
< 	private long checksum;
---
> 	private long checksum = 0;
34,34d38
< 	private RenderInfo info;
35,35c39,39
< 	private Object extraData;
---
> 	private Object extraData = null;
45,54d48
< 	 * getRenderInfo
< 	 * Accessor to return RenderInfo object.
< 	 * 
< 	 * @return RenderInfo object.
< 	 */
< 	public RenderInfo getRenderInfo() {
< 		return info;
< 	}
< 
< 	/**
73,126d66
< 	/* (non-Javadoc)
< 	 * @see com.ibm.xtools.gef.figure.svg.RenderInfo#getWidth()
< 	 */
< 	public int getWidth() {
< 		return info.getWidth();
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see com.ibm.xtools.gef.figure.svg.RenderInfo#getHeight()
< 	 */
< 	public int getHeight() {
< 		return info.getHeight();
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderInfo#getFillColor()
< 	 */
< 	public Color getFillColor() {
< 		return info.getFillColor();
< 	}
< 	
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderInfo#getOutlineColor()
< 	 */
< 	public Color getOutlineColor() {
< 		return info.getOutlineColor();
< 	}
< 	
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderInfo#setValues(int, int, java.awt.Color, java.awt.Color, boolean, boolean)
< 	 */
< 	public void setValues(int width, int height, Color fill, Color outline,
< 							boolean maintainAspectRatio, 
< 							boolean antialias) {
< 		// Don't do anything - this class implementation is used as a key and as
< 		// such should be immutable.  A copy should be made if they wish to 
< 		// modify the values.
< 		throw new UnsupportedOperationException();
< 	}
< 
< 	/* (non-Javadoc)
< 	 * @see com.ibm.xtools.gef.figure.svg.RenderInfo#shouldMaintainAspectRatio()
< 	 */
< 	public boolean shouldMaintainAspectRatio() {
< 		return info.shouldMaintainAspectRatio();
< 	}
< 	
< 	/* (non-Javadoc)
< 	 * @see org.eclipse.gmf.runtime.gef.ui.internal.render.RenderInfo#shouldAntiAlias()
< 	 */
< 	public boolean shouldAntiAlias() {
< 		return info.shouldAntiAlias();
< 	}
< 
137,137c77,77
< 		int hashCode = new Long(checksum).hashCode();
---
> 		int hashCode = new Long(getChecksum()).hashCode();
138,138c78,78
< 		hashCode = hashCode + getRenderInfo().hashCode();
---
> 		hashCode += super.hashCode();
155,155c95,95
< 			&& getRenderInfo().equals(imagekey.getRenderInfo())) {
---
> 			&& super.equals(imagekey)) {
