2,2c2,2
<  * Copyright (c) 2006 Borland Software Corporation and others.
---
>  *  Copyright (c) 2006, 2007 Borland Software Corporation and others.
12a13,13
> import java.util.ArrayList;
18,20d17
< import org.eclipse.jface.resource.ImageDescriptor;
< import java.util.ArrayList;
< 
21,21c18,18
< import org.eclipse.gef.palette.PaletteDrawer;
---
> import org.eclipse.gef.palette.PaletteDrawer;
22,22d18
< 
24,24c15,15
< 
---
> 
41a39,39
> 	 * Creates "Diagram Elements" palette tool group
44a43,44
> 		PaletteDrawer paletteContainer = new PaletteDrawer(Messages.DiagramElements1Group_title);
> 		paletteContainer.setDescription(Messages.DiagramElements1Group_desc);
45,46d42
< 		PaletteContainer paletteContainer = new PaletteDrawer("Diagram Elements");
< 		paletteContainer.setDescription("Can visualize domain model elements");
55a54,54
> 	 * Creates "Figures" palette tool group
58a58,59
> 		PaletteDrawer paletteContainer = new PaletteDrawer(Messages.Figures2Group_title);
> 		paletteContainer.setDescription(Messages.Figures2Group_desc);
59,60d57
< 		PaletteContainer paletteContainer = new PaletteDrawer("Figures");
< 		paletteContainer.setDescription("Can be references by Diagram Elements");
72a72,77
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(1);
> 		types.add(GMFGraphElementTypes.Node_2002);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.Node1CreationTool_title, Messages.Node1CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Node_2002));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
73,84d71
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Node_2002);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.Node_2002);
< 		ToolEntry result = new NodeToolEntry("Node", "Create Diagram Element representing Top-level diagram Node", smallImage, largeImage, elementTypes);
< 
< 		return result;
90a84,84
> 		ToolEntry entry = new ToolEntry(Messages.ChildNode2CreationTool_title, Messages.ChildNode2CreationTool_desc, null, null) {
91,98d83
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = null;
< 
< 		largeImage = smallImage;
< 
< 		ToolEntry result = new ToolEntry("ChildNode", "Create Diagram Element representing Child diagram Node", smallImage, largeImage) {
100,100d85
< 
101,101c86,86
< 		return result;
---
> 		return entry;
107a93,98
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(1);
> 		types.add(GMFGraphElementTypes.Compartment_2001);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.Compartment3CreationTool_title, Messages.Compartment3CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Compartment_2001));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
108,119d92
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Compartment_2001);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.Compartment_2001);
< 		ToolEntry result = new NodeToolEntry("Compartment", "Create Diagram Element representing Children Compartment", smallImage, largeImage, elementTypes);
< 
< 		return result;
125a105,110
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(1);
> 		types.add(GMFGraphElementTypes.Connection_2003);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.Connection4CreationTool_title, Messages.Connection4CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Connection_2003));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
126,137d104
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Connection_2003);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.Connection_2003);
< 		ToolEntry result = new NodeToolEntry("Connection", "Create Diagram Element representing Connection", smallImage, largeImage, elementTypes);
< 
< 		return result;
143a117,122
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(1);
> 		types.add(GMFGraphElementTypes.DiagramElementFigure_4001);
> 		LinkToolEntry entry = new LinkToolEntry(Messages.FigureLink5CreationTool_title, Messages.FigureLink5CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.DiagramElementFigure_4001));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
144,155d116
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.DiagramElementFigure_4001);
< 
< 		largeImage = smallImage;
< 
< 		final List relationshipTypes = new ArrayList();
< 		relationshipTypes.add(GMFGraphElementTypes.DiagramElementFigure_4001);
< 		ToolEntry result = new LinkToolEntry("Figure Link", "Link from the Diagram Element to the figure", smallImage, largeImage, relationshipTypes);
< 
< 		return result;
161a129,134
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(1);
> 		types.add(GMFGraphElementTypes.FigureGallery_2004);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.FigureGallery1CreationTool_title, Messages.FigureGallery1CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.FigureGallery_2004));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
162,173d128
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.FigureGallery_2004);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.FigureGallery_2004);
< 		ToolEntry result = new NodeToolEntry("FigureGallery", "Create FigureGallery - physical container for figures", smallImage, largeImage, elementTypes);
< 
< 		return result;
179a141,147
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(2);
> 		types.add(GMFGraphElementTypes.Rectangle_3001);
> 		types.add(GMFGraphElementTypes.Rectangle_3002);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.Rectangle2CreationTool_title, Messages.Rectangle2CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Rectangle_3001));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
180,192d140
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Rectangle_3001);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.Rectangle_3001);
< 		elementTypes.add(GMFGraphElementTypes.Rectangle_3002);
< 		ToolEntry result = new NodeToolEntry("Rectangle", "Create Rectangle", smallImage, largeImage, elementTypes);
< 
< 		return result;
198a154,160
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(2);
> 		types.add(GMFGraphElementTypes.Ellipse_3003);
> 		types.add(GMFGraphElementTypes.Ellipse_3006);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.Ellipse3CreationTool_title, Messages.Ellipse3CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Ellipse_3003));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
199,211d153
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Ellipse_3003);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.Ellipse_3003);
< 		elementTypes.add(GMFGraphElementTypes.Ellipse_3006);
< 		ToolEntry result = new NodeToolEntry("Ellipse", "Create Ellipse", smallImage, largeImage, elementTypes);
< 
< 		return result;
217a167,173
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(2);
> 		types.add(GMFGraphElementTypes.RoundedRectangle_3004);
> 		types.add(GMFGraphElementTypes.RoundedRectangle_3007);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.RoundedRectangle4CreationTool_title, Messages.RoundedRectangle4CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.RoundedRectangle_3004));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
218,230d166
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.RoundedRectangle_3004);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.RoundedRectangle_3004);
< 		elementTypes.add(GMFGraphElementTypes.RoundedRectangle_3007);
< 		ToolEntry result = new NodeToolEntry("Rounded Rectangle", "Create Rounded Rectangle", smallImage, largeImage, elementTypes);
< 
< 		return result;
236a180,186
> 		List/*<IElementType>*/types = new ArrayList/*<IElementType>*/(2);
> 		types.add(GMFGraphElementTypes.Polyline_3005);
> 		types.add(GMFGraphElementTypes.Polyline_3008);
> 		NodeToolEntry entry = new NodeToolEntry(Messages.Polyline5CreationTool_title, Messages.Polyline5CreationTool_desc, types);
> 		entry.setSmallIcon(GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Polyline_3005));
> 		entry.setLargeIcon(entry.getSmallIcon());
> 		return entry;
237,249d179
< 		ImageDescriptor smallImage;
< 		ImageDescriptor largeImage;
< 
< 		smallImage = GMFGraphElementTypes.getImageDescriptor(GMFGraphElementTypes.Polyline_3005);
< 
< 		largeImage = smallImage;
< 
< 		final List elementTypes = new ArrayList();
< 		elementTypes.add(GMFGraphElementTypes.Polyline_3005);
< 		elementTypes.add(GMFGraphElementTypes.Polyline_3008);
< 		ToolEntry result = new NodeToolEntry("Polyline", "Create new PolylineConnection", smallImage, largeImage, elementTypes);
< 
< 		return result;
264a202,202
> 		private NodeToolEntry(String title, String description, List elementTypes) {
265,265d201
< 		private NodeToolEntry(String title, String description, ImageDescriptor smallIcon, ImageDescriptor largeIcon, List elementTypes) {
266,266c203,203
< 			super(title, description, smallIcon, largeIcon);
---
> 			super(title, description, null, null);
292a230,230
> 		private LinkToolEntry(String title, String description, List relationshipTypes) {
293,293d229
< 		private LinkToolEntry(String title, String description, ImageDescriptor smallIcon, ImageDescriptor largeIcon, List relationshipTypes) {
294,294c231,231
< 			super(title, description, smallIcon, largeIcon);
---
> 			super(title, description, null, null);
