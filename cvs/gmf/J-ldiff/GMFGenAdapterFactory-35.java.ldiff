36a37,38
> import org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget;
> import org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget;
48a51,51
> import org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget;
49a53,55
> import org.eclipse.gmf.codegen.gmfgen.GenRuleBase;
> import org.eclipse.gmf.codegen.gmfgen.GenRuleContainerBase;
> import org.eclipse.gmf.codegen.gmfgen.GenRuleTarget;
291a298,300
> 			public Object caseGenRuleContainerBase(GenRuleContainerBase object) {
> 				return createGenRuleContainerBaseAdapter();
> 			}
294a304,306
> 			public Object caseGenRuleBase(GenRuleBase object) {
> 				return createGenRuleBaseAdapter();
> 			}
297a310,321
> 			public Object caseGenRuleTarget(GenRuleTarget object) {
> 				return createGenRuleTargetAdapter();
> 			}
> 			public Object caseGenDomainElementTarget(GenDomainElementTarget object) {
> 				return createGenDomainElementTargetAdapter();
> 			}
> 			public Object caseGenDiagramElementTarget(GenDiagramElementTarget object) {
> 				return createGenDiagramElementTargetAdapter();
> 			}
> 			public Object caseGenNotationElementTarget(GenNotationElementTarget object) {
> 				return createGenNotationElementTargetAdapter();
> 			}
1058a1083,1096
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.GenRuleContainerBase <em>Gen Rule Container Base</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenRuleContainerBase
> 	 * @generated
> 	 */
> 	public Adapter createGenRuleContainerBaseAdapter() {
> 		return null;
> 	}
> 
> 	/**
1086a1125,1194
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.GenRuleTarget <em>Gen Rule Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenRuleTarget
> 	 * @generated
> 	 */
> 	public Adapter createGenRuleTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget <em>Gen Domain Element Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenDomainElementTarget
> 	 * @generated
> 	 */
> 	public Adapter createGenDomainElementTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget <em>Gen Diagram Element Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenDiagramElementTarget
> 	 * @generated
> 	 */
> 	public Adapter createGenDiagramElementTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget <em>Gen Notation Element Target</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenNotationElementTarget
> 	 * @generated
> 	 */
> 	public Adapter createGenNotationElementTargetAdapter() {
> 		return null;
> 	}
> 
> 	/**
> 	 * Creates a new adapter for an object of class '{@link org.eclipse.gmf.codegen.gmfgen.GenRuleBase <em>Gen Rule Base</em>}'.
> 	 * <!-- begin-user-doc -->
> 	 * This default implementation returns null so that we can easily ignore cases;
> 	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
> 	 * <!-- end-user-doc -->
> 	 * @return the new adapter.
> 	 * @see org.eclipse.gmf.codegen.gmfgen.GenRuleBase
> 	 * @generated
> 	 */
> 	public Adapter createGenRuleBaseAdapter() {
> 		return null;
> 	}
> 
> 	/**
