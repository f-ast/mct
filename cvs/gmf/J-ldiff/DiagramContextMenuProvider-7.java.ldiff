2,2c2,2
<  * Copyright (c) 2002, 2003 IBM Corporation and others.
---
>  * Copyright (c) 2002, 2006 IBM Corporation and others.
13a14,16
> import java.util.HashSet;
> import java.util.Set;
> 
22a26,26
> import org.eclipse.jface.action.IContributionItem;
40a45,59
>     private Set exclusionSet = new HashSet();
>     
>     /** the following items will be deleted from the context menus by default */
>     private String[] defaultExclusionList = {
>         "replaceWithMenu", //$NON-NLS-1$
>         "compareWithMenu", //$NON-NLS-1$
>         "ValidationAction", //$NON-NLS-1$
>         "team.main", //$NON-NLS-1$
>         "org.eclipse.jst.ws.atk.ui.webservice.category.popupMenu", //$NON-NLS-1$
>         "org.eclipse.tptp.platform.analysis.core.ui.internal.actions.MultiAnalysisActionDelegate", //$NON-NLS-1$
>         "org.eclipse.debug.ui.contextualLaunch.run.submenu", //$NON-NLS-1$
>         "org.eclipse.debug.ui.contextualLaunch.debug.submenu", //$NON-NLS-1$
>         "org.eclipse.debug.ui.contextualLaunch.profile.submenu" //$NON-NLS-1$
>     };
> 
50a70,70
>         addDefaultExclusions();
82a103,141
>     /**
>      * The exclusion <code>Set</code> allows clients to specify which contributed
>      * menu items they do not want to include in their context menus.
>      * @return <code>Set</code> of IDs
>      */
>     public Set getExclusionSet() {
>         return exclusionSet;
>     }
>     
>     /**
>      * set the exclusion <code>Set</code>. 
>      * @see org.eclipse.gmf.runtime.diagram.ui.providers.DiagramContextMenuProvider#getExclusionSet
>      * @param exclusionSet the <code>Set</code> of IDs of menu items that need to be 
>      * excluded from the context menu
>      */
>     public void setExclusionSet(Set exclusionSet) {
>         this.exclusionSet = exclusionSet;
>     }
>     
>     /* (non-Javadoc)
>      * @see org.eclipse.jface.action.ContributionManager#allowItem(org.eclipse.jface.action.IContributionItem)
>      */
>     protected boolean allowItem(IContributionItem itemToAdd) {
>         if (itemToAdd.getId() != null && exclusionSet.contains(itemToAdd.getId()))
>             //we don't want to return false, as other menu items may depend on it...
>             itemToAdd.setVisible(false);
> 
>         return super.allowItem(itemToAdd);
>     }
>     
>     /**
>      * Transfer the String array <code>defaultExclusionList</code>
>      * into the <code>exclusionSet</code>
>      *
>      */
>     protected void addDefaultExclusions() {
>         for (int i=0; i < defaultExclusionList.length; i++)
>             exclusionSet.add(defaultExclusionList[i]);
>     }
