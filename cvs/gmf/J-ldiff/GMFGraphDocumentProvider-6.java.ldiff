37a38,39
> import org.eclipse.emf.common.ui.URIEditorInput;
> import org.eclipse.emf.ecore.EObject;
52a56,56
> import org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory;
53a58,58
> import org.eclipse.jface.operation.IRunnableContext;
63,63c68,68
< public class GMFGraphDocumentProvider extends StorageDocumentProvider implements IDiagramDocumentProvider {
---
> public class GMFGraphDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
68,68c73,73
< 	protected ElementInfo createElementInfo(Object element) throws CoreException {
---
> 	protected ElementInfo createElementInfo(Object element) throws org.eclipse.core.runtime.CoreException, CoreException {
69,69c74,74
< 		if (false == element instanceof FileEditorInput) {
---
> 		if (false == element instanceof FileEditorInput && false == element instanceof URIEditorInput) {
69a75,75
> 			throw new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, 0,
70,70c76,76
< 			throw new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, 0, "Incorrect element used: " + element + " instead of org.eclipse.ui.part.FileEditorInput", null)); //$NON-NLS-1$ //$NON-NLS-2$
---
> 					"Incorrect element used: " + element + " instead of org.eclipse.ui.part.FileEditorInput or org.eclipse.emf.common.ui.URIEditorInput", null)); //$NON-NLS-1$ //$NON-NLS-2$
71a78,78
> 		IEditorInput editorInput = (IEditorInput) element;
72,72d77
< 		FileEditorInput editorInput = (FileEditorInput) element;
77a671,671
> 			myResourceSetListener = new ResourceSetModificationListener(this);
78,78d670
< 		ResourceSetModificationListener modificationListener = new ResourceSetModificationListener(info);
79,79c672,672
< 		info.getResourceSet().eAdapters().add(modificationListener);
---
> 			getResourceSet().eAdapters().add(myResourceSetListener);
85a90,118
> 	protected IDocument createDocument(Object element) throws CoreException {
> 		if (false == element instanceof FileEditorInput && false == element instanceof URIEditorInput) {
> 			throw new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, 0,
> 					"Incorrect element used: " + element + " instead of org.eclipse.ui.part.FileEditorInput or org.eclipse.emf.common.ui.URIEditorInput", null)); //$NON-NLS-1$ //$NON-NLS-2$
> 		}
> 		IDocument document = createEmptyDocument();
> 		setDocumentContent(document, (IEditorInput) element);
> 		setupDocument(element, document);
> 		return document;
> 	}
> 
> 	/**
> 	 * Sets up the given document as it would be provided for the given element.
> 	 * The content of the document is not changed. This default implementation
> 	 * is empty. Subclasses may reimplement.
> 	 * 
> 	 * @param element
> 	 *            the blue-print element
> 	 * @param document
> 	 *            the document to set up
> 	 * @generated
> 	 */
> 	protected void setupDocument(Object element, IDocument document) {
> 		// for subclasses
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
111,111c144,144
< 	private TransactionalEditingDomain createEditingDomain() {
---
> 	private org.eclipse.emf.transaction.TransactionalEditingDomain createEditingDomain() {
112,112c145,145
< 		TransactionalEditingDomain editingDomain = DiagramEditingDomainFactory.getInstance().createEditingDomain();
---
> 		org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.gmf.runtime.diagram.core.DiagramEditingDomainFactory.getInstance().createEditingDomain();
113a147,150
> 		final org.eclipse.emf.transaction.NotificationFilter diagramResourceModifiedFilter = org.eclipse.emf.transaction.NotificationFilter.createNotifierFilter(editingDomain.getResourceSet()).and(
> 				org.eclipse.emf.transaction.NotificationFilter.createEventTypeFilter(org.eclipse.emf.common.notify.Notification.ADD)).and(
> 				org.eclipse.emf.transaction.NotificationFilter
> 						.createFeatureFilter(org.eclipse.emf.ecore.resource.ResourceSet.class, org.eclipse.emf.ecore.resource.ResourceSet.RESOURCE_SET__RESOURCES));
114,115d146
< 		final NotificationFilter diagramResourceModifiedFilter = NotificationFilter.createNotifierFilter(editingDomain.getResourceSet())
< 				.and(NotificationFilter.createEventTypeFilter(Notification.ADD)).and(NotificationFilter.createFeatureFilter(ResourceSet.class, ResourceSet.RESOURCE_SET__RESOURCES));
116,116c151,151
< 		editingDomain.getResourceSet().eAdapters().add(new Adapter() {
---
> 		editingDomain.getResourceSet().eAdapters().add(new org.eclipse.emf.common.notify.Adapter() {
118,118c153,153
< 			private Notifier myTarger;
---
> 			private org.eclipse.emf.common.notify.Notifier myTarger;
120,120c155,155
< 			public Notifier getTarget() {
---
> 			public org.eclipse.emf.common.notify.Notifier getTarget() {
128,128c163,163
< 			public void notifyChanged(Notification notification) {
---
> 			public void notifyChanged(org.eclipse.emf.common.notify.Notification notification) {
130a166,166
> 					if (value instanceof org.eclipse.emf.ecore.resource.Resource) {
131,131d165
< 					if (value instanceof Resource) {
132,132c167,167
< 						((Resource) value).setTrackingModification(true);
---
> 						((org.eclipse.emf.ecore.resource.Resource) value).setTrackingModification(true);
137,137c172,172
< 			public void setTarget(Notifier newTarget) {
---
> 			public void setTarget(org.eclipse.emf.common.notify.Notifier newTarget) {
149,149c184,184
< 	protected void setDocumentContentFromStorage(IDocument document, IStorage storage) throws CoreException {
---
> 	protected void setDocumentContent(IDocument document, IEditorInput element) throws CoreException {
151,153d47
< 		//	org.eclipse.gmf.runtime.notation.Diagram diagram = diagramDocument.getDiagram();
< 
< 		//	org.eclipse.emf.transaction.TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
154,154c48,48
< 		//	diagram = org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.DiagramIOUtil.load(domain, storage, true, getProgressMonitor());
---
> import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.AbstractDocumentProvider;
155,161d48
< 		//	if (myContentObjectURI != null && diagram != null && diagram.eResource() != null && !diagram.eResource().getURIFragment(diagram).equals(myContentObjectURI)) {
< 		//		org.eclipse.emf.ecore.EObject anotherContentObject = diagram.eResource().getEObject(myContentObjectURI);
< 		//		document.setContent(anotherContentObject);
< 		//	} else {
< 		//		document.setContent(diagram);
< 		//	}
< 
164a191,243
> 		} else if (element instanceof URIEditorInput) {
> 			org.eclipse.emf.common.util.URI uri = ((URIEditorInput) element).getURI();
> 			Resource resource = null;
> 			try {
> 				resource = domain.getResourceSet().getResource(uri.trimFragment(), false);
> 				if (resource == null) {
> 					resource = domain.getResourceSet().createResource(uri.trimFragment());
> 				}
> 				if (!resource.isLoaded()) {
> 					try {
> 						Map options = new HashMap(GMFResourceFactory.getDefaultLoadOptions());
> 						// @see 171060
> 						// options.put(org.eclipse.emf.ecore.xmi.XMLResource.OPTION_RECORD_UNKNOWN_FEATURE,
> 						// Boolean.TRUE);
> 						resource.load(options);
> 					} catch (IOException e) {
> 						resource.unload();
> 						throw e;
> 					}
> 				}
> 				if (resource == null) {
> 					throw new RuntimeException("Unable to load diagram resource");
> 				}
> 				if (uri.fragment() != null) {
> 					EObject rootElement = resource.getEObject(uri.fragment());
> 					if (rootElement instanceof Diagram) {
> 						document.setContent((Diagram) rootElement);
> 						return;
> 					}
> 				} else {
> 					for (Iterator it = resource.getContents().iterator(); it.hasNext();) {
> 						Object rootElement = it.next();
> 						if (rootElement instanceof Diagram) {
> 							document.setContent((Diagram) rootElement);
> 							return;
> 						}
> 					}
> 				}
> 				throw new RuntimeException("Diagram is not present in resource");
> 			} catch (Exception e) {
> 				CoreException thrownExcp = null;
> 				if (e instanceof CoreException) {
> 					thrownExcp = (CoreException) e;
> 				} else {
> 					String msg = e.getLocalizedMessage();
> 					thrownExcp = new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, 0, msg != null ? msg : "Error loading diagram", e)); //$NON-NLS-1$
> 				}
> 				throw thrownExcp;
> 			}
> 		} else {
> 			throw new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, 0,
> 					"Incorrect element used: " + element + " instead of org.eclipse.ui.part.FileEditorInput or org.eclipse.emf.common.ui.URIEditorInput", null)); //$NON-NLS-1$ //$NON-NLS-2$
> 		}
180a313,313
> 	public boolean isReadOnly(Object element) {
181,181d312
< 	public long getSynchronizationStamp(Object element) {
182,182c314,314
< 		ResourceSetInfo info = getResourceSetInfo(element);
---
> 		ResourceSetInfo info = getResourceSetInfo(element);
183a316,323
> 			if (info.isUpdateCache()) {
> 				try {
> 					updateCache(element);
> 				} catch (CoreException ex) {
> 					GMFGraphDiagramEditorPlugin.getInstance().logError(Messages.DocumentProvider_isModifiable, ex);
> 				}
> 			}
> 			return info.isReadOnly();
183,183c315,315
< 		if (info != null) {
---
> 		if (info != null) {
184,184d315
< 			return info.getModificationStamp();
185a325,325
> 		return super.isReadOnly(element);
185,185c324,324
< 		}
---
> 		}
186,186d324
< 		return super.getSynchronizationStamp(element);
187,187c326,326
< 	}
---
> 	}
188,188c327,327
< 
---
> 
189,189c328,328
< 	/**
---
> 	/**
190,190c329,329
< 	 * @generated
---
> 	 * @generated
191,191c330,330
< 	 */
---
> 	 */
193,197d260
< 		if (element instanceof IFileEditorInput) {
< 			IFileEditorInput input = (IFileEditorInput) element;
< 			IPath path = input.getFile().getLocation();
< 			if (path == null) {
< 				return true;
198a582,582
> 			return;
199,199d581
< 			return !path.toFile().exists();
225,225c293,293
< 	protected void doValidateState(Object element, Object computationContext) throws CoreException {
---
> 	protected void doValidateState(Object element, Object computationContext) throws org.eclipse.core.runtime.CoreException, CoreException {
247,247c333,333
< 			if (element instanceof FileEditorInput) {
---
> 			if (element instanceof FileEditorInput || element instanceof URIEditorInput) {
250a337,347
> 		ResourceSetInfo info = getResourceSetInfo(element);
> 		if (info != null) {
> 			if (info.isUpdateCache()) {
> 				try {
> 					updateCache(element);
> 				} catch (CoreException ex) {
> 					GMFGraphDiagramEditorPlugin.getInstance().logError(Messages.DocumentProvider_isModifiable, ex);
> 				}
> 			}
> 			return info.isModifiable();
> 		}
256a354,354
> 	protected void updateCache(Object element) throws CoreException {
257,257d353
< 	protected void updateCache(IStorageEditorInput input) throws CoreException {
258,258c355,355
< 		ResourceSetInfo info = getResourceSetInfo(input);
---
> 		ResourceSetInfo info = getResourceSetInfo(element);
263a361,361
> 					info.setReadOnly(true);
264,264d360
< 					info.fIsReadOnly = true;
265,265c362,362
< 					info.fIsModifiable = false;
---
> 					info.setModifiable(false);
268a366,366
> 			info.setReadOnly(false);
269,269d365
< 			info.fIsReadOnly = false;
270,270c367,367
< 			info.fIsModifiable = true;
---
> 			info.setModifiable(true);
272a370,380
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
> 	protected void doUpdateStateCache(Object element) throws CoreException {
> 		ResourceSetInfo info = getResourceSetInfo(element);
> 		if (info != null) {
> 			info.setUpdateCache(true);
> 		}
> 		super.doUpdateStateCache(element);
273,273d369
< 		super.updateCache(input);
390,390c187,187
< 		if (info != null && element instanceof FileEditorInput) {
---
> 		if (element instanceof FileEditorInput) {
390a188,188
> 			IStorage storage = ((FileEditorInput) element).getStorage();
403,412d509
< 	protected void markWholeResourceSetAsDirty(ResourceSet resourceSet) {
< 		for (Iterator it = resourceSet.getResources().iterator(); it.hasNext();) {
< 			Resource nextResource = (Resource) it.next();
< 			nextResource.setModified(true);
< 		}
< 	}
< 
< 	/**
< 	 * @generated
< 	 */
417,417c514,514
< 				throw new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, IResourceStatus.OUT_OF_SYNC_LOCAL, "The file has been changed on the file system", null)); //$NON-NLS-1$
---
> 				throw new CoreException(new Status(IStatus.ERROR, GMFGraphDiagramEditorPlugin.ID, IStatus.OK, "The file has been changed on the file system", null)); //$NON-NLS-1$
446,446d496
< 
447,447c497,497
< 			if (info != null) {
---
> 		if (info != null) {
448,450d497
< 				info.setModificationStamp(computeModificationStamp(info));
< 				info.setSynchronized();
< 			}
452,452d543
< 		super.doSaveDocument(monitor, element, document, overwrite);
462a554,555
> 			} catch (CoreException ex) {
> 				GMFGraphDiagramEditorPlugin.getInstance().logError(Messages.DocumentProvider_handleElementContentChanged, ex);
463,464d553
< 			} catch (CoreException e) {
< 				handleCoreException(e, "FileDocumentProvider.handleElementContentChanged");
487,489d577
< 	protected void handleElementMoved(FileEditorInput input, IPath path) {
< 		IWorkspace workspace = ResourcesPlugin.getWorkspace();
< 		IFile newFile = workspace.getRoot().getFile(path);
491a584,585
> 		// TODO: append suffix to the URI! (use diagram as a parameter)
> 		fireElementMoved(input, new URIEditorInput(uri));
492,497d583
< 
< 	/**
< 	 * @generated
< 	 */
< 	protected void handleElementDeleted(FileEditorInput input) {
< 		fireElementDeleted(input);
520a609,615
> 	protected IRunnableContext getOperationRunner(IProgressMonitor monitor) {
> 		return null;
> 	}
> 
> 	/**
> 	 * @generated
> 	 */
521,521c616,616
< 	protected class ResourceSetInfo extends StorageInfo {
---
> 	protected class ResourceSetInfo extends ElementInfo {
546,546c641,641
< 		private FileEditorInput myEditorInput;
---
> 		private IEditorInput myEditorInput;
550a646,666
> 		private boolean myUpdateCache = true;
> 
> 		/**
> 		 * @generated
> 		 */
> 		private boolean myModifiable = false;
> 
> 		/**
> 		 * @generated
> 		 */
> 		private boolean myReadOnly = true;
> 
> 		/**
> 		 * @generated
> 		 */
> 		private ResourceSetModificationListener myResourceSetListener;
> 
> 		/**
> 		 * @generated
> 		 */
> 		public ResourceSetInfo(IDiagramDocument document, IEditorInput editorInput) {
551,551d645
< 		public ResourceSetInfo(IDiagramDocument document, FileEditorInput editorInput) {
582,582c699,699
< 		public FileEditorInput getEditorInput() {
---
> 		public IEditorInput getEditorInput() {
590a708,708
> 			getResourceSet().eAdapters().remove(myResourceSetListener);
607,613d724
< 		public void setSynchronized() {
< 			myUnSynchronizedResources.clear();
< 		}
< 
< 		/**
< 		 * @generated
< 		 */
642a754,795
> 		public boolean isUpdateCache() {
> 			return myUpdateCache;
> 		}
> 
> 		/**
> 		 * @generated
> 		 */
> 		public void setUpdateCache(boolean update) {
> 			myUpdateCache = update;
> 		}
> 
> 		/**
> 		 * @generated
> 		 */
> 		public boolean isModifiable() {
> 			return myModifiable;
> 		}
> 
> 		/**
> 		 * @generated
> 		 */
> 		public void setModifiable(boolean modifiable) {
> 			myModifiable = modifiable;
> 		}
> 
> 		/**
> 		 * @generated
> 		 */
> 		public boolean isReadOnly() {
> 			return myReadOnly;
> 		}
> 
> 		/**
> 		 * @generated
> 		 */
> 		public void setReadOnly(boolean readOnly) {
> 			myReadOnly = readOnly;
> 		}
> 
> 		/**
> 		 * @generated
> 		 */
654a808,813
> 				synchronized (ResourceSetInfo.this) {
> 					if (ResourceSetInfo.this.fCanBeSaved) {
> 						ResourceSetInfo.this.setUnSynchronized(resource);
> 						return true;
> 					}
> 				}
667a827,832
> 				synchronized (ResourceSetInfo.this) {
> 					if (ResourceSetInfo.this.fCanBeSaved) {
> 						ResourceSetInfo.this.setUnSynchronized(resource);
> 						return true;
> 					}
> 				}
671,671c836,836
< 						handleElementDeleted(ResourceSetInfo.this.getEditorInput());
---
> 						fireElementDeleted(ResourceSetInfo.this.getEditorInput());
680a846,852
> 				synchronized (ResourceSetInfo.this) {
> 					if (ResourceSetInfo.this.fCanBeSaved) {
> 						ResourceSetInfo.this.setUnSynchronized(resource);
> 						return true;
> 					}
> 				}
> 				if (myDocument.getDiagram().eResource() == resource) {
680a261,264
> 		IDiagramDocument document = getDiagramDocument(element);
> 		if (document != null) {
> 			Resource diagramResource = document.getDiagram().eResource();
> 			if (diagramResource != null) {
681,681c265,265
< 				IFile file = WorkspaceSynchronizer.getFile(resource);
---
> 				IFile file = WorkspaceSynchronizer.getFile(diagramResource);
681a266,266
> 				return file == null || file.getLocation() == null || !file.getLocation().toFile().exists();
682,682d265
< 				if (file != null && file.equals(ResourceSetInfo.this.getEditorInput().getFile())) {
685a578,579
> 	protected void handleElementMoved(IEditorInput input, org.eclipse.emf.common.util.URI uri) {
> 		if (input instanceof FileEditorInput) {
685a856,856
> 							handleElementMoved(ResourceSetInfo.this.getEditorInput(), newURI);
686,686c580,580
< 							handleElementMoved(ResourceSetInfo.this.getEditorInput(), new Path(org.eclipse.emf.common.util.URI.decode(newURI.path())).removeFirstSegments(1));
---
> 			IFile newFile = ResourcesPlugin.getWorkspace().getRoot().getFile(new Path(org.eclipse.emf.common.util.URI.decode(uri.path())).removeFirstSegments(1));
752a923,923
> 
