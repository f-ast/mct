12a13,14
> import java.util.Collection;
> import java.util.HashSet;
15a18,18
> import java.util.Set;
16a20,24
> import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;
> import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;
17,21d19
< import org.eclipse.emf.ecore.EObject;
< import org.eclipse.gmf.gmfgraph.FigureGallery;
< import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse2EditPart;
< import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline2EditPart;
< import org.eclipse.gmf.graphdef.editor.edit.parts.RectangleEditPart;
22,22c25,25
< import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle2EditPart;
---
> import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;
22a26,27
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramUpdater;
> import org.eclipse.gmf.graphdef.editor.part.GMFGraphNodeDescriptor;
34a40,44
> 	Set myFeaturesToSynchronize;
> 
> 	/**
> 	 * @generated
> 	 */
36,37d45
< 		List result = new LinkedList();
< 		EObject modelObject = ((View) getHost().getModel()).getElement();
38a47,49
> 		List result = new LinkedList();
> 		for (Iterator it = GMFGraphDiagramUpdater.getFigureGalleryFigures_7008SemanticChildren(viewObject).iterator(); it.hasNext();) {
> 			result.add(((GMFGraphNodeDescriptor) it.next()).getModelElement());
39,61d46
< 		EObject nextValue;
< 		int nodeVID;
< 		for (Iterator values = ((FigureGallery) modelObject).getFigures().iterator(); values.hasNext();) {
< 			nextValue = (EObject) values.next();
< 			nodeVID = GMFGraphVisualIDRegistry.getNodeVisualID(viewObject, nextValue);
< 			switch (nodeVID) {
< 			case RectangleEditPart.VISUAL_ID: {
< 				result.add(nextValue);
< 				break;
< 			}
< 			case Ellipse2EditPart.VISUAL_ID: {
< 				result.add(nextValue);
< 				break;
< 			}
< 			case RoundedRectangle2EditPart.VISUAL_ID: {
< 				result.add(nextValue);
< 				break;
< 			}
< 			case Polyline2EditPart.VISUAL_ID: {
< 				result.add(nextValue);
< 				break;
< 			}
< 			}
68a57,62
> 	protected boolean isOrphaned(Collection semanticChildren, final View view) {
> 		int visualID = GMFGraphVisualIDRegistry.getVisualID(view);
> 		switch (visualID) {
> 		case FigureDescriptorEditPart.VISUAL_ID:
> 		case Rectangle3EditPart.VISUAL_ID:
> 		case Ellipse3EditPart.VISUAL_ID:
69,76d56
< 	protected boolean shouldDeleteView(View view) {
< 		if (view.getEAnnotation("Shortcut") != null) { //$NON-NLS-1$
< 			return view.isSetElement() && (view.getElement() == null || view.getElement().eIsProxy());
< 		}
< 		int nodeVID = GMFGraphVisualIDRegistry.getVisualID(view);
< 		switch (nodeVID) {
< 		case RectangleEditPart.VISUAL_ID:
< 		case Ellipse2EditPart.VISUAL_ID:
77,77c63,63
< 		case RoundedRectangle2EditPart.VISUAL_ID:
---
> 		case RoundedRectangle3EditPart.VISUAL_ID:
78,78c64,64
< 		case Polyline2EditPart.VISUAL_ID:
---
> 		case Polyline3EditPart.VISUAL_ID:
78a65,65
> 			return !semanticChildren.contains(view.getElement()) || visualID != GMFGraphVisualIDRegistry.getNodeVisualID((View) getHost().getModel(), view.getElement());
79,79d64
< 			return true;
90a77,88
> 	/**
> 	 * @generated
> 	 */
> 	protected Set getFeaturesToSynchronize() {
> 		if (myFeaturesToSynchronize == null) {
> 			myFeaturesToSynchronize = new HashSet();
> 			myFeaturesToSynchronize.add(GMFGraphPackage.eINSTANCE.getFigureGallery_Descriptors());
> 			myFeaturesToSynchronize.add(GMFGraphPackage.eINSTANCE.getFigureGallery_Figures());
> 		}
> 		return myFeaturesToSynchronize;
> 	}
> 
