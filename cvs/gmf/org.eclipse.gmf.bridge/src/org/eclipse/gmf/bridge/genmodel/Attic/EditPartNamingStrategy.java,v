head	1.3;
access;
symbols
	v20081015-1925:1.3
	v20080917-1925:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2005.11.28.16.09.36;	author dstadnik;	state dead;
branches;
next	1.2;

1.2
date	2005.11.02.17.53.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.19.10;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@#117749 & #118040 generate unique names for the shared elements in mapping model
@
text
@/*
 * Copyright (c) 2005 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.bridge.genmodel;

/**
 * Naming for EditPart classes.
 * @@author artem
 */
public class EditPartNamingStrategy extends DefaultNamingStrategy {

	protected String getLinkSuffix() {
		return getNodeSuffix();
	}

	protected String getNodeSuffix() {
		return "EditPart";
	}

	protected String getCanvasSuffix() {
		return getNodeSuffix();
	}

	protected String getChildNodeSuffix() {
		return "ChildNodeEditPart";
	}

	protected String getChildNodeLabelSuffix() {
		return getChildNodeSuffix();
	}

	protected String getLinkLabelSuffix() {
		return getNodeSuffix();
	}

	protected String getNodeLabelSuffix() {
		return getNodeSuffix();
	}

	protected String getCompartmentSuffix() {
		return "CompartmentEditPart";
	}
	
}
@


1.2
log
@[ashatalin] #114750 annotate diagram runtime model elements with visual id to tell one from another during EP decision making
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d35 17
@

