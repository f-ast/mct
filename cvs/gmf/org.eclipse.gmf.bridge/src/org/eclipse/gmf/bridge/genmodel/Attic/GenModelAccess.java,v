head	1.3;
access;
symbols
	v20081015-1925:1.3
	v20080917-1925:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060620-0400:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	v20060512-1000:1.2
	I20060512-1000:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.06.26.14.05.05;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.02.14.20.09.54;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.06.18.58.23;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@no api packages, classes are for internal use only
@
text
@/*
 * Copyright (c) 2005 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.bridge.genmodel;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Status;
import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.ecore.resource.ResourceSet;

/**
 * @@author artem
 *
 */
public interface GenModelAccess {

	GenModel model();
	IStatus load();
	IStatus load(ResourceSet resourceSet);
	void unload();

	public class Adapter implements GenModelAccess {
		private final GenModel model;

		public Adapter(GenModel aModel) {
			model = aModel;
		}
		public GenModel model() {
			return model;
		}
		public IStatus load() {
			return Status.OK_STATUS;
		}
		public IStatus load(ResourceSet rs) {
			return load();
		}
		public void unload() {
			// do nothing
		}
	}
}
@


1.2
log
@#116432 - ask user to supply genmodel if we notice several domain packages
and #123608 to some extent - with genModel set, no more easy-to-get NPEs should occur while transforming
@
text
@@


1.1
log
@refactor GenModel access with dedicated hack to get Notation/Runtime GenModel
@
text
@d17 1
d27 1
d30 1
a30 1
	class Adapter implements GenModelAccess {
d42 3
@

