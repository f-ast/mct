head	1.7;
access;
symbols
	v20081015-1925:1.7
	v20080917-1925:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060620-0400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-0800:1.6
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2006.06.26.14.05.04;	author atikhomirov;	state dead;
branches;
next	1.6;

1.6
date	2006.05.14.18.06.39;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.11.09.42.06;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.10.15.12.36;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.23.15.45.36;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.22.22.01.15;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.19.10;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@no api packages, classes are for internal use only
@
text
@/*
 * Copyright (c) 2005 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.bridge.genmodel;

import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;
import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.mappings.LabelMapping;
import org.eclipse.gmf.mappings.LinkMapping;
import org.eclipse.gmf.mappings.NodeMapping;

/**
 * Provides user-tuned runtime diagram presentation.
 * @@author artem
 */
public class SpecificDiagramRunTimeModelHelper extends BasicDiagramRunTimeModelHelper {
	private final Map myName2GenClassMap;

	/**
	 * @@param drtGenModel user-defined diagram run-time model (still, should extend basic RT model)
	 */
	public SpecificDiagramRunTimeModelHelper(GenModel drtGenModel) {
		assert !drtGenModel.getGenPackages().isEmpty();
		myName2GenClassMap = collectGenClasses(drtGenModel);
	}
	
	public GenClass get(NodeMapping nodeMapping) {
		GenClass gc = getGenClass(nodeMapping.getDiagramNode().getName());
		if (gc != null) {
			return gc;
		}
		return super.get(nodeMapping);
	}

	public GenClass get(LinkMapping linkMapping) {
		GenClass gc = getGenClass(linkMapping.getDiagramLink().getName());
		if (gc != null) {
			return gc;
		}
		return super.get(linkMapping);
	}

	public GenClass get(CanvasMapping canvasMapping) {
		GenClass gc = getGenClass(canvasMapping.getDiagramCanvas().getName());
		if (gc != null) {
			return gc;
		}
		return super.get(canvasMapping);
	}

	public GenClass get(LabelMapping labelMapping) {
		GenClass gc = getGenClass(labelMapping.getDiagramLabel().getName());
		if (gc != null) {
			return gc;
		}
		return super.get(labelMapping);
	}

	private Map collectGenClasses(GenModel drtGenModel) {
		TreeMap rv = new TreeMap();
		GenPackage genPack = (GenPackage) drtGenModel.getGenPackages().get(0);
		for (Iterator it =  genPack.getGenClasses().iterator(); it.hasNext();) {
			GenClass next = (GenClass) it.next();
			rv.put(next.getName(), next);
		}
		return rv;
	}

	private GenClass getGenClass(String name) {
		return (GenClass) myName2GenClassMap.get(name);
	}
}
@


1.6
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@@


1.5
log
@revert to gmfmap model compatibility
@
text
@a22 1
import org.eclipse.gmf.mappings.LabelNodeMapping;
d42 1
a42 6
		GenClass gc = null;
		if (nodeMapping instanceof LabelNodeMapping) {
			gc = getGenClass(((LabelNodeMapping) nodeMapping).getDiagramLabel().getName());
		} else {
			gc = getGenClass(nodeMapping.getDiagramNode().getName());
		}
@


1.4
log
@#133836 Creating a child node without a label causes error
@
text
@a25 1
import org.eclipse.gmf.mappings.ShapeNodeMapping;
d44 1
a44 3
		if (nodeMapping instanceof ShapeNodeMapping) {
			gc = getGenClass(((ShapeNodeMapping) nodeMapping).getDiagramNode().getName());
		} else if (nodeMapping instanceof LabelNodeMapping) {
d46 2
@


1.3
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d23 1
d26 1
d44 6
a49 1
		GenClass gc = getGenClass(nodeMapping.getDiagramNode().getName());
@


1.2
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@a21 1
import org.eclipse.gmf.mappings.ChildNodeMapping;
a64 8
	public GenClass get(ChildNodeMapping childNodeMapping) {
		GenClass gc = getGenClass(childNodeMapping.getDiagramNode().getName());
		if (gc != null) {
			return gc;
		}
		return super.get(childNodeMapping);
	}

@


1.1
log
@*** empty log message ***
@
text
@d23 1
d74 8
@

