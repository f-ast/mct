head	1.7;
access;
symbols
	v20081015-1925:1.7
	v20080917-1925:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.4
	I20051201-1800:1.3
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2006.01.18.19.28.16;	author atikhomirov;	state dead;
branches;
next	1.6;

1.6
date	2006.01.10.20.40.15;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.13.17.11.20;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.06.22.21.18;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.28.16.09.36;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.02.17.53.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.19.10;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@refactor NamingStrategy: extracted all className setters to provisional NamingMediator
@
text
@/*
 * Copyright (c) 2005 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.bridge.genmodel;

import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.gmf.gmfgraph.Compartment;
import org.eclipse.gmf.mappings.AbstractNodeMapping;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.mappings.ChildNodeMapping;
import org.eclipse.gmf.mappings.LinkMapping;
import org.eclipse.gmf.mappings.NodeMapping;
import org.eclipse.gmf.tooldef.AbstractTool;

/**
 * Means to provide your own names for classes being generated from genmodel. 
 * Returned values (class names) are not expected to be fully qualified names.
 * <code>null</code> return value means that default naming scheme handcoded
 * in genmodel impl should be used. Instances of this class could be used as is
 * in case you are ok with naming scheme provided by genmodel.
 * 
 * @@author artem
 */
public class NamingStrategy {

	public String createCanvasClassName(CanvasMapping mapping, String suffix) {
		return null;
	}

	public String createNodeClassName(NodeMapping mapping, String suffix) {
		return null;
	}

	public String createChildNodeClassName(ChildNodeMapping mapping, String suffix) {
		return null;
	}

	public String createCompartmentClassName(AbstractNodeMapping mapping, Compartment compartment, String suffix) {
		return null;
	}

	public String createNodeLabelClassName(AbstractNodeMapping mapping, EStructuralFeature labelFeature, String suffix) {
		return null;
	}

	public String createLinkClassName(LinkMapping mapping, String suffix) {
		return null;
	}

	public String createLinkLabelClassName(LinkMapping mapping, EStructuralFeature labelFeature, String suffix) {
		return null;
	}
	
	public String createCreationMethodName(AbstractTool tool) {
		return null;
	}

	public void reset() {
	};
}
@


1.6
log
@#114197 - tooling definition in place
@
text
@@


1.5
log
@#120553
- Adding accessors for the palette entries factory methods into genmodel
- Refreshing unit-tests
- Fixing some old problems found by this refreshment.
@
text
@d21 1
a21 1
import org.eclipse.gmf.mappings.ToolGroup;
d62 1
a62 1
	public String createToolCreationMethodName(AbstractNodeMapping nodeMapping) {
a65 8
	public String createToolCreationMethodName(LinkMapping linkMapping) {
		return null;
	}
	
	public String createToolGroupCreationMethodName(ToolGroup toolGroup) {
		return null;
	}
	
@


1.4
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d21 1
d61 4
d66 8
@


1.3
log
@#117749 & #118040 generate unique names for the shared elements in mapping model
@
text
@d15 1
a15 1
import org.eclipse.gmf.diadef.Compartment;
@


1.2
log
@[ashatalin] #114750 annotate diagram runtime model elements with visual id to tell one from another during EP decision making
@
text
@d14 1
d16 1
d24 5
a28 3
 * Return values (class names) are not expected to be fully-qualified names.
 * <code>null</code> return value means use default naming scheme handcoded in genmodel impl.
 * Instances of this class could be used as-is in case you are ok with naming scheme coded in genmodel 
d33 1
a33 1
	public String createClassName(NodeMapping nme) {
d36 2
a37 2
	
	public String createLableTextClassName(NodeMapping nme) {
d41 1
a41 1
	public String createClassName(ChildNodeMapping chnme) {
d44 2
a45 2
	
	public String createLableTextClassName(ChildNodeMapping chnme) {
d49 1
a49 1
	public String createClassName(LinkMapping lme) {
d53 1
a53 1
	public String createLableClassName(LinkMapping lme) {
d57 1
a57 1
	public String createLableTextClassName(LinkMapping lme) {
d61 2
a62 9
	
	public String createClassName(CanvasMapping mapping) {
		return null;
	}
	
	public String createClassName(Compartment compartment) {
		return null;
	}
	
@


1.1
log
@*** empty log message ***
@
text
@d14 1
d32 4
d40 4
d49 9
d61 5
@

