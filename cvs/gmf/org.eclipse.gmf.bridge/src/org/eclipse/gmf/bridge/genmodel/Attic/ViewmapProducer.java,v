head	1.6;
access;
symbols
	v20081015-1925:1.6
	v20080917-1925:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060620-0400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2006.06.26.14.05.05;	author atikhomirov;	state dead;
branches;
next	1.5;

1.5
date	2006.05.23.21.09.42;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.20.16.27.14;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.22.22.01.15;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.06.19.22.31;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.05.17.30.32;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@no api packages, classes are for internal use only
@
text
@/*
 * Copyright (c) 2005 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.bridge.genmodel;

import org.eclipse.gmf.codegen.gmfgen.Viewmap;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.gmfgraph.Compartment;
import org.eclipse.gmf.gmfgraph.Connection;
import org.eclipse.gmf.gmfgraph.DiagramLabel;
import org.eclipse.gmf.gmfgraph.Node;

/**
 * @@author artem
 * XXX rename 'create' to 'get'? 
 */
public abstract class ViewmapProducer {

	public abstract Viewmap create(Canvas canvasElement);

	public abstract Viewmap create(Node node);

	public abstract Viewmap create(Connection link);

	public abstract Viewmap create(Compartment compartment);

	public abstract Viewmap create(DiagramLabel label);

}@


1.5
log
@#140887 Remove Child interface from GMFGraph.
Although the need to reference child figures persist, thus FigureHandle was introduced, to allow diagramElements to reference either *generateable* figures (Figure subclasses) or *just-use* figures (like CustomFigure and FigureAccessor).
Refactoring performed with #131365 "Mirror GMFGraph model when generating standalone figure plugin" in mind
@
text
@@


1.4
log
@[mgolubev] #129362 Respect plug-in dependencies imposed on figure code - fix missing support for inner-class case
@
text
@a15 1
import org.eclipse.gmf.gmfgraph.Child;
a32 2
	public abstract Viewmap create(Child child);

@


1.3
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@a18 1
import org.eclipse.gmf.gmfgraph.DiagramElement;
a20 1
import org.eclipse.gmf.gmfgraph.util.GMFGraphSwitch;
a39 23
	public Viewmap create(DiagramElement diagramElement) {
		return (Viewmap) new GMFGraphSwitch() {
			public Object caseCanvas(Canvas object) {
				return create(object);
			}
			public Object caseChild(Child object) {
				return create(object);
			}
			public Object caseCompartment(Compartment object) {
				return create(object);
			}
			public Object caseNode(Node object) {
				return create(object);
			}
			public Object caseConnection(Connection object) {
				return create(object);
			}
			public Object caseDiagramLabel(DiagramLabel object) {
				return create(object);
			}
		}.doSwitch(diagramElement);
	}

@


1.2
log
@New plugin with IFigure codegeneration to support #114177 (graphical definition model) was added
@
text
@d20 1
d40 3
a42 1
	public final Viewmap create(DiagramElement diagramElement) {
d59 3
@


1.1
log
@With #114177 in mind, viewmaps in genmodel should be simplistic as much as possible, no need to duplicate figure descriptions available in gmfgraph (and/or code generated from it)
@
text
@a13 2
import org.eclipse.gmf.codegen.gmfgen.FigureViewmap;
import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
d27 3
a29 6
public class ViewmapProducer {
	public Viewmap create(Canvas canvasElement) {
		FigureViewmap v = GMFGenFactory.eINSTANCE.createFigureViewmap();
		v.setFigureQualifiedClassName("org.eclipse.draw2d.FreeformLayer");
		return v;
	}
d31 1
a31 5
	public Viewmap create(Node node) {
		FigureViewmap v = GMFGenFactory.eINSTANCE.createFigureViewmap();
		v.setFigureQualifiedClassName("org.eclipse.draw2d.RoundedRectangle");
		return v;
	}
d33 1
a33 5
	public Viewmap create(Connection link) {
		FigureViewmap v = GMFGenFactory.eINSTANCE.createFigureViewmap();
		v.setFigureQualifiedClassName("org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx");
		return v;
	}
d35 1
a35 3
	public Viewmap create(Child child) {
		return createLabelViewmap();
	}
d37 1
a37 6
	public Viewmap create(Compartment compartment) {
		FigureViewmap v = GMFGenFactory.eINSTANCE.createFigureViewmap();
		// ShapeCompartmentFigure | NestedResizableCompartmentFigure
		v.setFigureQualifiedClassName("XXX");
		return v;
	}
d39 1
a39 1
	public Viewmap create(DiagramElement diagramElement) {
d59 1
a59 7
	// FIXME remove
	Viewmap createLabelViewmap() {
		FigureViewmap v = GMFGenFactory.eINSTANCE.createFigureViewmap();
		v.setFigureQualifiedClassName("org.eclipse.draw2d.Label");
		return v;
	}
}
@

