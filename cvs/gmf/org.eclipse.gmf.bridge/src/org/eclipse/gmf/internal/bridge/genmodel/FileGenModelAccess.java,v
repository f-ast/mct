head	1.2;
access;
symbols
	v20081015-1925:1.2
	v20080917-1925:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080528-1052:1.2
	v20080507-1326:1.2
	v20080417-1610:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070228-2000:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061214-0000:1.2
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.11.22.17.33.43;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	10ab456489f64567;

1.1
date	2006.06.26.14.05.04;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Removing warnings
@
text
@/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.genmodel;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.Status;
import org.eclipse.emf.codegen.ecore.genmodel.GenModel;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;

/**
 * @@author artem
 */
public class FileGenModelAccess implements GenModelAccess {
	private final URI myLocation;
	private GenModel myModel;

	public FileGenModelAccess(URI genModelResource) {
		myLocation = genModelResource;
	}

	public FileGenModelAccess(IFile genModelWorkspaceFile) {
		this(URI.createPlatformResourceURI(genModelWorkspaceFile.getFullPath().toString(), true));
	}

	public GenModel model() {
		return myModel;
	}

	public IStatus load() {
		return load(new ResourceSetImpl());
	}

	public IStatus load(ResourceSet resourceSet) {
		if (myModel != null) {
			return Status.OK_STATUS;
		}
		try {
			Resource res = resourceSet.getResource(myLocation, true);
			Object root = res.getContents().get(0);
			if (root instanceof GenModel) {
				myModel = (GenModel) root;
				return Status.OK_STATUS;
			} else {
				return new Status(IStatus.ERROR, "org.eclipse.gmf.bridge", 0, "Root object of resource " + myLocation + " is not GenModel", null);
			}
		} catch (RuntimeException ex) {
			return new Status(IStatus.ERROR, "org.eclipse.gmf.bridge", 0, "Can't load resource " + myLocation, ex);
		}
	}

	public void unload() {
		if (myModel != null) {
			myModel.eResource().unload();
			myModel = null;
		}
	}

}
@


1.1
log
@no api packages, classes are for internal use only
@
text
@d35 1
a35 1
		this(URI.createPlatformResourceURI(genModelWorkspaceFile.getFullPath().toString()));
@

