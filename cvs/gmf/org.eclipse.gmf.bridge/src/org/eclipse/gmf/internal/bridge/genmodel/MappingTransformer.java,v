head	1.3;
access;
symbols
	v20081015-1925:1.3
	v20080917-1925:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080722-1827:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080528-1052:1.3
	v20080507-1326:1.3
	v20080417-1610:1.3
	v20080222-1200:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	v20060925-1700:1.1.2.1
	v20060919-0800:1.1.2.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2007.06.21.14.04.51;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	1329467a85824567;

1.2
date	2007.03.19.16.49.06;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	5c9c45febf004567;

1.1
date	2006.06.26.14.05.04;	author atikhomirov;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.09.13.23.07.20;	author rgronback;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2005, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.genmodel;


import org.eclipse.gmf.mappings.AuditContainer;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.mappings.LinkMapping;
import org.eclipse.gmf.mappings.Mapping;
import org.eclipse.gmf.mappings.MetricContainer;
import org.eclipse.gmf.mappings.TopNodeReference;

/**
 * Encapsulates iteration over diagram definition.
 * @@author artem
 */
public abstract class MappingTransformer {

	public void transform(Mapping m) {
		process(m.getDiagram());
		for (TopNodeReference element : m.getNodes()) {
			process(element);
		}
		for (LinkMapping element : m.getLinks()) {
			process(element);
		}
		
		process(m.getMetrics());		
		process(m.getAudits());
	}

	protected abstract void process(CanvasMapping cme);
	protected abstract void process(TopNodeReference topNode);
	protected abstract void process(LinkMapping lme);
	protected abstract void process(AuditContainer audits);
	protected abstract void process(MetricContainer metrics);	
}
@


1.2
log
@EMF 2.3 M5 and Java 5 cleanup
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
d46 1
a46 1
}@


1.1
log
@no api packages, classes are for internal use only
@
text
@a13 1
import java.util.Iterator;
d30 2
a31 2
		for (Iterator it = m.getNodes().iterator(); it.hasNext();) {
			process((TopNodeReference) it.next());
d33 2
a34 2
		for (Iterator it = m.getLinks().iterator(); it.hasNext();) {
			process((LinkMapping) it.next());
@


1.1.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@

