head	1.7;
access;
symbols
	v20081015-1925:1.7
	v20080917-1925:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.4
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080528-1052:1.7
	v20080507-1326:1.7
	v20080417-1610:1.7
	v20080222-1200:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070405-1100:1.6
	v20070330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.4
	v20070228-2000:1.4
	v20070208-1800:1.4
	M4_20:1.3
	v20061222-1800:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2007.06.21.14.04.51;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	1329467a85824567;

1.6
date	2007.04.04.17.48.33;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	48c64613e4f04567;

1.5
date	2007.03.19.16.49.06;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	5c9c45febf004567;

1.4
date	2007.02.06.15.48.18;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	360e45c8a3414567;

1.3
date	2006.09.22.13.21.18;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.18.09.05.33;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.15.20.44.17;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.genmodel;

import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;
import org.eclipse.gmf.codegen.gmfgen.GenCustomPropertyTab;
import org.eclipse.gmf.codegen.gmfgen.GenPropertySheet;
import org.eclipse.gmf.codegen.gmfgen.GenPropertyTab;
import org.eclipse.gmf.codegen.gmfgen.GenStandardPropertyTab;
import org.eclipse.gmf.codegen.gmfgen.GeneratedType;
import org.eclipse.gmf.codegen.gmfgen.TypeTabFilter;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.runtime.notation.View;

/**
 * @@author artem
 */
public class PropertySheetHandler {

	protected static final String APPEARANCE = "appearance";
	protected static final String DIAGRAM = "diagram";
	protected static final String ADVANCED = "advanced";
	protected static final String DOMAIN = "domain";

	private GenPropertySheet myPropertySheet;

	public void initialize(GenPropertySheet propertySheet) {
		assert propertySheet != null;
		myPropertySheet = propertySheet;
	}

	public void process(CanvasMapping canvas) {
		addStandardTabs();
		addCustomTabs(canvas);
	}

	protected void addStandardTabs() {
		GenStandardPropertyTab t1 = GMFGenFactory.eINSTANCE.createGenStandardPropertyTab();
		t1.setID(APPEARANCE);
		addTab(t1);
		t1 = GMFGenFactory.eINSTANCE.createGenStandardPropertyTab();
		t1.setID(DIAGRAM);
		addTab(t1);
	}

	protected void addCustomTabs(CanvasMapping canvas) {
		if (!hasDomainModel(canvas)) {
			return;
		}
		GenCustomPropertyTab t1 = GMFGenFactory.eINSTANCE.createGenCustomPropertyTab();
		t1.setID(DOMAIN);
		t1.setLabel("Core");
		TypeTabFilter f = GMFGenFactory.eINSTANCE.createTypeTabFilter();
		f.getTypes().add(View.class.getName());
		f.getTypes().add("org.eclipse.gef.EditPart");
		if (myPropertySheet.getEditorGen().getNavigator() != null) {
			f.getGeneratedTypes().add(GeneratedType.ABSTRACT_NAVIGATOR_ITEM_LITERAL);
		}
		t1.setFilter(f);
		addTab(t1);
	}

	private void addTab(GenPropertyTab tab) {
		myPropertySheet.getTabs().add(tab);
	}

	private static boolean hasDomainModel(CanvasMapping canvas) {
		return canvas.getDomainModel() != null;
	}
}
@


1.6
log
@moved value into genmodel instead of setting it in the handler to allow reconciling of changed value
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
@


1.5
log
@EMF 2.3 M5 and Java 5 cleanup
@
text
@a51 1
		t1.setLabel("Rulers & Grid"); // to match original from the runtime
@


1.4
log
@clear few warnings
@
text
@a55 1
	@@SuppressWarnings("unchecked")
a72 1
	@@SuppressWarnings("unchecked")
@


1.3
log
@Read-only properties provided into the navigator.
@
text
@d56 1
@


1.2
log
@don't add advanced section by default
@
text
@d19 1
d66 3
@


1.1
log
@Generate PropertySheet pluged into tabbed page framework of Eclipse instead of plug-in as runtime provider.
Eases pages being added/removed/replaced/tuned
@
text
@a13 1
import org.eclipse.draw2d.IFigure;
d28 4
a31 4
	private static final String APPEARANCE = "appearance";
	private static final String DIAGRAM = "diagram";
	private static final String ADVANCED = "advanced";
	private static final String DOMAIN = "domain";
a52 3
		t1 = GMFGenFactory.eINSTANCE.createGenStandardPropertyTab();
		t1.setID(ADVANCED); // FIXME don't add advanced by default
		addTab(t1);
@

