head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080731-1520:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	I20060203-0830:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2006.02.06.18.10.22;	author atikhomirov;	state dead;
branches;
next	1.8;

1.8
date	2006.02.05.23.00.50;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.04.22.34.49;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.26.12.23.29;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.25.19.16.55;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.25.14.02.29;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.23.20.00.49;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.07.16.50.43;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.19.17.28;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.gmfgraph.util.*;
import org.eclipse.gmf.common.codegen.*;
import org.eclipse.gmf.graphdef.codegen.Dispatcher;
import java.util.*;

public class CustomFigureGenerator
{
  protected static String nl;
  public static synchronized CustomFigureGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    CustomFigureGenerator result = new CustomFigureGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends ";
  protected final String TEXT_4 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_5 = "() {" + NL + "\t\t// TODO - process custom properties here";
  protected final String TEXT_6 = NL;
  protected final String TEXT_7 = NL;
  protected final String TEXT_8 = NL + "\t\t";
  protected final String TEXT_9 = " ";
  protected final String TEXT_10 = " = new ";
  protected final String TEXT_11 = "();";
  protected final String TEXT_12 = NL;
  protected final String TEXT_13 = NL + "\t\t";
  protected final String TEXT_14 = ".setForegroundColor(";
  protected final String TEXT_15 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_16 = ", ";
  protected final String TEXT_17 = ", ";
  protected final String TEXT_18 = ")";
  protected final String TEXT_19 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_20 = ");";
  protected final String TEXT_21 = NL + "\t\t";
  protected final String TEXT_22 = ".setBackgroundColor(";
  protected final String TEXT_23 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_24 = ", ";
  protected final String TEXT_25 = ", ";
  protected final String TEXT_26 = ")";
  protected final String TEXT_27 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_28 = ");";
  protected final String TEXT_29 = NL + "\t\t";
  protected final String TEXT_30 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_31 = "), getMapMode().DPtoLP(";
  protected final String TEXT_32 = "));";
  protected final String TEXT_33 = NL + "\t\t";
  protected final String TEXT_34 = " ";
  protected final String TEXT_35 = " = new ";
  protected final String TEXT_36 = "();";
  protected final String TEXT_37 = NL;
  protected final String TEXT_38 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_39 = " = new ";
  protected final String TEXT_40 = "();";
  protected final String TEXT_41 = NL + "\t\t";
  protected final String TEXT_42 = " ";
  protected final String TEXT_43 = " = new ";
  protected final String TEXT_44 = "();" + NL + "\t\t";
  protected final String TEXT_45 = ".setText(\"";
  protected final String TEXT_46 = "\");";
  protected final String TEXT_47 = NL;
  protected final String TEXT_48 = NL + "\t\t";
  protected final String TEXT_49 = ".setForegroundColor(";
  protected final String TEXT_50 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_51 = ", ";
  protected final String TEXT_52 = ", ";
  protected final String TEXT_53 = ")";
  protected final String TEXT_54 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_55 = ");";
  protected final String TEXT_56 = NL + "\t\t";
  protected final String TEXT_57 = ".setBackgroundColor(";
  protected final String TEXT_58 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_59 = ", ";
  protected final String TEXT_60 = ", ";
  protected final String TEXT_61 = ")";
  protected final String TEXT_62 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_63 = ");";
  protected final String TEXT_64 = NL + "\t\t";
  protected final String TEXT_65 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_66 = "), getMapMode().DPtoLP(";
  protected final String TEXT_67 = "));";
  protected final String TEXT_68 = NL + "\t\t";
  protected final String TEXT_69 = ".add(";
  protected final String TEXT_70 = ");";
  protected final String TEXT_71 = NL + "\t}" + NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
    
Object[] args = (Object[]) argument;
CustomFigure figure = (CustomFigure) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];
final GMFGraphSwitch fqnSwitch = new FigureQualifiedNameSwitch();
final Dispatcher dispatcher = (Dispatcher) args[2];

    stringBuffer.append(TEXT_1);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(importManager.getImportedName(figure.getQualifiedClassName()));
    stringBuffer.append(TEXT_4);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_5);
    String parentFigureVarName = "this";
    stringBuffer.append(TEXT_6);
    
LinkedList l = new LinkedList();
l.addAll(figure.getChildren());
final Object marker = new Object();
Stack figureVarNamesStack = new Stack();
int figureCount = 0;
while (!l.isEmpty()) {
	Object _nxt = l.removeFirst();
	if (_nxt == marker) {
		parentFigureVarName = (String) figureVarNamesStack.pop();
		continue;
	}
	FigureMarker figureMarker = (FigureMarker) _nxt;
	String figureVarName = "fig" + (figureCount++);
    stringBuffer.append(TEXT_7);
    
// FigureMarker:  figureMarker
// String:        figureVarName
if (figureMarker instanceof CustomFigure) {
	CustomFigure figureInstance = (CustomFigure) figureMarker;

    stringBuffer.append(TEXT_8);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_9);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_11);
    stringBuffer.append(TEXT_12);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_13);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_14);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_15);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_17);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_18);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_19);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_20);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_21);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_22);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_23);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_24);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_25);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_26);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_27);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_28);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_29);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_31);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_32);
    }
    } else if (figureMarker instanceof Shape) {
Shape figureInstance = (Shape) figureMarker;
    stringBuffer.append(TEXT_33);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_34);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_35);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_36);
    stringBuffer.append(TEXT_37);
    stringBuffer.append(dispatcher.dispatch("ShapeAttrs", dispatcher.create(figureInstance, figureVarName, importManager, fqnSwitch)));
    } else if (figureMarker instanceof FigureRef) {
    stringBuffer.append(TEXT_38);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_39);
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
    stringBuffer.append(TEXT_40);
    } else if (figureMarker instanceof Label) {
	Label figureInstance = (Label) figureMarker;

    stringBuffer.append(TEXT_41);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_42);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_43);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_44);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_45);
    stringBuffer.append(((Label) figureMarker).getText());
    stringBuffer.append(TEXT_46);
    stringBuffer.append(TEXT_47);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_48);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_49);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_50);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_51);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_52);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_53);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_54);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_55);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_56);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_57);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_58);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_59);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_60);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_61);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_62);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_63);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_64);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_65);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_66);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_67);
    }
    }
    stringBuffer.append(TEXT_68);
    stringBuffer.append(parentFigureVarName);
    stringBuffer.append(TEXT_69);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_70);
    
if (_nxt instanceof Figure && !((Figure) _nxt).getChildren().isEmpty()) {
	l.addFirst(marker);
	l.addAll(0, ((Figure) _nxt).getChildren());
	figureVarNamesStack.push(parentFigureVarName);
	parentFigureVarName = figureVarName; // go on processing children of new parentFigure
}

    
} // while

    stringBuffer.append(TEXT_71);
    importManager.emitSortedImports();
    return stringBuffer.toString();
  }
}
@


1.8
log
@provisional framework that supports (double-)dispatch from templates to
a) avoid lengthy if instanceof elseif checks,
b) solve scope and name visibility issues when extracting common code into jetinc
@
text
@@


1.7
log
@provide option to use importManager
@
text
@d6 1
d58 3
a60 3
  protected final String TEXT_38 = NL + "\t\t";
  protected final String TEXT_39 = ".setFill(";
  protected final String TEXT_40 = ");";
d62 13
a74 13
  protected final String TEXT_42 = ".setOutline(";
  protected final String TEXT_43 = ");";
  protected final String TEXT_44 = NL + "\t\t";
  protected final String TEXT_45 = ".setLineWidth(";
  protected final String TEXT_46 = ");";
  protected final String TEXT_47 = NL + "\t\t";
  protected final String TEXT_48 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_49 = ");";
  protected final String TEXT_50 = NL + "\t\t";
  protected final String TEXT_51 = ".setFillXOR(";
  protected final String TEXT_52 = ");";
  protected final String TEXT_53 = NL + "\t\t";
  protected final String TEXT_54 = ".setOutlineXOR(";
d77 7
a83 7
  protected final String TEXT_57 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_58 = ", ";
  protected final String TEXT_59 = "));";
  protected final String TEXT_60 = NL + "\t\t";
  protected final String TEXT_61 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_62 = "), getMapMode().DPtoLP(";
  protected final String TEXT_63 = ")));";
d85 7
a91 53
  protected final String TEXT_65 = ".setForegroundColor(";
  protected final String TEXT_66 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_67 = ", ";
  protected final String TEXT_68 = ", ";
  protected final String TEXT_69 = ")";
  protected final String TEXT_70 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_71 = ");";
  protected final String TEXT_72 = NL + "\t\t";
  protected final String TEXT_73 = ".setBackgroundColor(";
  protected final String TEXT_74 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_75 = ", ";
  protected final String TEXT_76 = ", ";
  protected final String TEXT_77 = ")";
  protected final String TEXT_78 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_79 = ");";
  protected final String TEXT_80 = NL + "\t\t";
  protected final String TEXT_81 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_82 = "), getMapMode().DPtoLP(";
  protected final String TEXT_83 = "));";
  protected final String TEXT_84 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_85 = " = new ";
  protected final String TEXT_86 = "();";
  protected final String TEXT_87 = NL + "\t\t";
  protected final String TEXT_88 = " ";
  protected final String TEXT_89 = " = new ";
  protected final String TEXT_90 = "();" + NL + "\t\t";
  protected final String TEXT_91 = ".setText(\"";
  protected final String TEXT_92 = "\");";
  protected final String TEXT_93 = NL;
  protected final String TEXT_94 = NL + "\t\t";
  protected final String TEXT_95 = ".setForegroundColor(";
  protected final String TEXT_96 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_97 = ", ";
  protected final String TEXT_98 = ", ";
  protected final String TEXT_99 = ")";
  protected final String TEXT_100 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_101 = ");";
  protected final String TEXT_102 = NL + "\t\t";
  protected final String TEXT_103 = ".setBackgroundColor(";
  protected final String TEXT_104 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_105 = ", ";
  protected final String TEXT_106 = ", ";
  protected final String TEXT_107 = ")";
  protected final String TEXT_108 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_109 = ");";
  protected final String TEXT_110 = NL + "\t\t";
  protected final String TEXT_111 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_112 = "), getMapMode().DPtoLP(";
  protected final String TEXT_113 = "));";
  protected final String TEXT_114 = NL + "\t\t";
  protected final String TEXT_115 = ".add(";
  protected final String TEXT_116 = ");";
  protected final String TEXT_117 = NL + "\t}" + NL + "}";
d101 1
d200 2
a201 4
    
// PERHAPS, do this with reflection?

    if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d205 1
a205 1
    stringBuffer.append(figureInstance.isFill());
d207 3
a209 1
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d211 2
a213 2
    stringBuffer.append(TEXT_42);
    stringBuffer.append(figureInstance.isOutline());
d215 1
a215 1
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d219 1
a219 1
    stringBuffer.append(figureInstance.getLineWidth());
a220 1
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
a221 37
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_48);
    stringBuffer.append(figureInstance.getLineKind().getName());
    stringBuffer.append(TEXT_49);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
    stringBuffer.append(TEXT_50);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(figureInstance.isXorFill());
    stringBuffer.append(TEXT_52);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
    stringBuffer.append(TEXT_53);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_54);
    stringBuffer.append(figureInstance.isXorOutline());
    stringBuffer.append(TEXT_55);
    } if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_56);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_57);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_58);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_59);
    }
    } else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;
    stringBuffer.append(TEXT_60);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_61);
    stringBuffer.append(rrFigure.getCornerWidth());
    stringBuffer.append(TEXT_62);
    stringBuffer.append(rrFigure.getCornerHeight());
    stringBuffer.append(TEXT_63);
    }
d225 1
a225 1
    stringBuffer.append(TEXT_64);
d227 1
a227 1
    stringBuffer.append(TEXT_65);
d229 1
a229 1
    stringBuffer.append(TEXT_66);
d231 1
a231 1
    stringBuffer.append(TEXT_67);
d233 1
a233 1
    stringBuffer.append(TEXT_68);
d235 1
a235 1
    stringBuffer.append(TEXT_69);
d237 1
a237 1
    stringBuffer.append(TEXT_70);
d240 1
a240 1
    stringBuffer.append(TEXT_71);
d243 1
a243 1
    stringBuffer.append(TEXT_72);
d245 1
a245 1
    stringBuffer.append(TEXT_73);
d247 1
a247 1
    stringBuffer.append(TEXT_74);
d249 1
a249 1
    stringBuffer.append(TEXT_75);
d251 1
a251 1
    stringBuffer.append(TEXT_76);
d253 1
a253 1
    stringBuffer.append(TEXT_77);
d255 1
a255 1
    stringBuffer.append(TEXT_78);
d258 1
a258 1
    stringBuffer.append(TEXT_79);
d261 1
a261 1
    stringBuffer.append(TEXT_80);
d263 1
a263 1
    stringBuffer.append(TEXT_81);
d265 1
a265 1
    stringBuffer.append(TEXT_82);
d267 1
a267 58
    stringBuffer.append(TEXT_83);
    }
    } else if (figureMarker instanceof FigureRef) {
    stringBuffer.append(TEXT_84);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_85);
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
    stringBuffer.append(TEXT_86);
    } else if (figureMarker instanceof Label) {
	Label figureInstance = (Label) figureMarker;

    stringBuffer.append(TEXT_87);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_88);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_89);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_90);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_91);
    stringBuffer.append(((Label) figureMarker).getText());
    stringBuffer.append(TEXT_92);
    stringBuffer.append(TEXT_93);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_94);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_95);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_96);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_97);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_98);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_99);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_100);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_101);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_102);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_103);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_104);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_105);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_106);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_107);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_108);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
a268 10
    stringBuffer.append(TEXT_109);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_110);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_111);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_112);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_113);
d270 1
a270 2
    }
    stringBuffer.append(TEXT_114);
d272 1
a272 1
    stringBuffer.append(TEXT_115);
d274 1
a274 1
    stringBuffer.append(TEXT_116);
d286 1
a286 1
    stringBuffer.append(TEXT_117);
@


1.6
log
@Correcting color-relative file names
@
text
@d5 1
d20 5
a24 5
  protected final String TEXT_1 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_2 = " extends ";
  protected final String TEXT_3 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_4 = "() {" + NL + "\t\t// TODO - process custom properties here";
  protected final String TEXT_5 = NL;
d26 9
a34 9
  protected final String TEXT_7 = NL + "\t\t";
  protected final String TEXT_8 = " ";
  protected final String TEXT_9 = " = new ";
  protected final String TEXT_10 = "();";
  protected final String TEXT_11 = NL;
  protected final String TEXT_12 = NL + "\t\t";
  protected final String TEXT_13 = ".setForegroundColor(";
  protected final String TEXT_14 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_15 = ", ";
d36 7
a42 7
  protected final String TEXT_17 = ")";
  protected final String TEXT_18 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_19 = ");";
  protected final String TEXT_20 = NL + "\t\t";
  protected final String TEXT_21 = ".setBackgroundColor(";
  protected final String TEXT_22 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_23 = ", ";
d44 42
a85 42
  protected final String TEXT_25 = ")";
  protected final String TEXT_26 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_27 = ");";
  protected final String TEXT_28 = NL + "\t\t";
  protected final String TEXT_29 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_30 = "), getMapMode().DPtoLP(";
  protected final String TEXT_31 = "));";
  protected final String TEXT_32 = NL + "\t\t";
  protected final String TEXT_33 = " ";
  protected final String TEXT_34 = " = new ";
  protected final String TEXT_35 = "();";
  protected final String TEXT_36 = NL;
  protected final String TEXT_37 = NL + "\t\t";
  protected final String TEXT_38 = ".setFill(";
  protected final String TEXT_39 = ");";
  protected final String TEXT_40 = NL + "\t\t";
  protected final String TEXT_41 = ".setOutline(";
  protected final String TEXT_42 = ");";
  protected final String TEXT_43 = NL + "\t\t";
  protected final String TEXT_44 = ".setLineWidth(";
  protected final String TEXT_45 = ");";
  protected final String TEXT_46 = NL + "\t\t";
  protected final String TEXT_47 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_48 = ");";
  protected final String TEXT_49 = NL + "\t\t";
  protected final String TEXT_50 = ".setFillXOR(";
  protected final String TEXT_51 = ");";
  protected final String TEXT_52 = NL + "\t\t";
  protected final String TEXT_53 = ".setOutlineXOR(";
  protected final String TEXT_54 = ");";
  protected final String TEXT_55 = NL + "\t\t";
  protected final String TEXT_56 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_57 = ", ";
  protected final String TEXT_58 = "));";
  protected final String TEXT_59 = NL + "\t\t";
  protected final String TEXT_60 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_61 = "), getMapMode().DPtoLP(";
  protected final String TEXT_62 = ")));";
  protected final String TEXT_63 = NL + "\t\t";
  protected final String TEXT_64 = ".setForegroundColor(";
  protected final String TEXT_65 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_66 = ", ";
d87 7
a93 7
  protected final String TEXT_68 = ")";
  protected final String TEXT_69 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_70 = ");";
  protected final String TEXT_71 = NL + "\t\t";
  protected final String TEXT_72 = ".setBackgroundColor(";
  protected final String TEXT_73 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_74 = ", ";
d95 21
a115 21
  protected final String TEXT_76 = ")";
  protected final String TEXT_77 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_78 = ");";
  protected final String TEXT_79 = NL + "\t\t";
  protected final String TEXT_80 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_81 = "), getMapMode().DPtoLP(";
  protected final String TEXT_82 = "));";
  protected final String TEXT_83 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_84 = " = new ";
  protected final String TEXT_85 = "();";
  protected final String TEXT_86 = NL + "\t\t";
  protected final String TEXT_87 = " ";
  protected final String TEXT_88 = " = new ";
  protected final String TEXT_89 = "();" + NL + "\t\t";
  protected final String TEXT_90 = ".setText(\"";
  protected final String TEXT_91 = "\");";
  protected final String TEXT_92 = NL;
  protected final String TEXT_93 = NL + "\t\t";
  protected final String TEXT_94 = ".setForegroundColor(";
  protected final String TEXT_95 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_96 = ", ";
d117 7
a123 7
  protected final String TEXT_98 = ")";
  protected final String TEXT_99 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_100 = ");";
  protected final String TEXT_101 = NL + "\t\t";
  protected final String TEXT_102 = ".setBackgroundColor(";
  protected final String TEXT_103 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_104 = ", ";
d125 12
a136 11
  protected final String TEXT_106 = ")";
  protected final String TEXT_107 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_108 = ");";
  protected final String TEXT_109 = NL + "\t\t";
  protected final String TEXT_110 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_111 = "), getMapMode().DPtoLP(";
  protected final String TEXT_112 = "));";
  protected final String TEXT_113 = NL + "\t\t";
  protected final String TEXT_114 = ".add(";
  protected final String TEXT_115 = ");";
  protected final String TEXT_116 = NL + "\t}" + NL + "}";
d142 3
a144 1
CustomFigure figure = (CustomFigure) argument;
d148 2
a150 2
    stringBuffer.append(TEXT_2);
    stringBuffer.append(figure.getQualifiedClassName());
d152 2
d155 1
a155 1
    stringBuffer.append(TEXT_4);
d157 1
a157 1
    stringBuffer.append(TEXT_5);
d172 1
a172 1
    stringBuffer.append(TEXT_6);
d179 1
a179 1
    stringBuffer.append(TEXT_7);
d181 1
a181 1
    stringBuffer.append(TEXT_8);
d183 1
a183 1
    stringBuffer.append(TEXT_9);
a184 1
    stringBuffer.append(TEXT_10);
d186 1
d190 1
a190 1
    stringBuffer.append(TEXT_12);
d192 1
a192 1
    stringBuffer.append(TEXT_13);
d194 1
a194 1
    stringBuffer.append(TEXT_14);
d196 1
a196 1
    stringBuffer.append(TEXT_15);
d198 1
a198 1
    stringBuffer.append(TEXT_16);
d200 1
a200 1
    stringBuffer.append(TEXT_17);
d202 1
a202 1
    stringBuffer.append(TEXT_18);
d205 1
a205 1
    stringBuffer.append(TEXT_19);
d208 1
a208 1
    stringBuffer.append(TEXT_20);
d210 1
a210 1
    stringBuffer.append(TEXT_21);
d212 1
a212 1
    stringBuffer.append(TEXT_22);
d214 1
a214 1
    stringBuffer.append(TEXT_23);
d216 1
a216 1
    stringBuffer.append(TEXT_24);
d218 1
a218 1
    stringBuffer.append(TEXT_25);
d220 1
a220 1
    stringBuffer.append(TEXT_26);
d223 1
a223 1
    stringBuffer.append(TEXT_27);
d226 1
a226 1
    stringBuffer.append(TEXT_28);
d228 1
a228 1
    stringBuffer.append(TEXT_29);
d230 1
a230 1
    stringBuffer.append(TEXT_30);
d232 1
a232 1
    stringBuffer.append(TEXT_31);
d236 1
a236 1
    stringBuffer.append(TEXT_32);
d238 1
a238 1
    stringBuffer.append(TEXT_33);
d240 1
a240 1
    stringBuffer.append(TEXT_34);
a241 1
    stringBuffer.append(TEXT_35);
d243 1
d248 1
a248 1
    stringBuffer.append(TEXT_37);
d250 1
a250 1
    stringBuffer.append(TEXT_38);
d252 1
a252 1
    stringBuffer.append(TEXT_39);
d254 1
a254 1
    stringBuffer.append(TEXT_40);
d256 1
a256 1
    stringBuffer.append(TEXT_41);
d258 1
a258 1
    stringBuffer.append(TEXT_42);
d260 1
a260 1
    stringBuffer.append(TEXT_43);
d262 1
a262 1
    stringBuffer.append(TEXT_44);
d264 1
a264 1
    stringBuffer.append(TEXT_45);
d266 1
a266 1
    stringBuffer.append(TEXT_46);
d268 1
a268 1
    stringBuffer.append(TEXT_47);
d270 1
a270 1
    stringBuffer.append(TEXT_48);
d272 1
a272 1
    stringBuffer.append(TEXT_49);
d274 1
a274 1
    stringBuffer.append(TEXT_50);
d276 1
a276 1
    stringBuffer.append(TEXT_51);
d278 1
a278 1
    stringBuffer.append(TEXT_52);
d280 1
a280 1
    stringBuffer.append(TEXT_53);
d282 1
a282 1
    stringBuffer.append(TEXT_54);
d286 1
a286 1
    stringBuffer.append(TEXT_55);
d288 1
a288 1
    stringBuffer.append(TEXT_56);
d290 1
a290 1
    stringBuffer.append(TEXT_57);
d292 1
a292 1
    stringBuffer.append(TEXT_58);
d296 1
a296 1
    stringBuffer.append(TEXT_59);
d298 1
a298 1
    stringBuffer.append(TEXT_60);
d300 1
a300 1
    stringBuffer.append(TEXT_61);
d302 1
a302 1
    stringBuffer.append(TEXT_62);
d307 1
a307 1
    stringBuffer.append(TEXT_63);
d309 1
a309 1
    stringBuffer.append(TEXT_64);
d311 1
a311 1
    stringBuffer.append(TEXT_65);
d313 1
a313 1
    stringBuffer.append(TEXT_66);
d315 1
a315 1
    stringBuffer.append(TEXT_67);
d317 1
a317 1
    stringBuffer.append(TEXT_68);
d319 1
a319 1
    stringBuffer.append(TEXT_69);
d322 1
a322 1
    stringBuffer.append(TEXT_70);
d325 1
a325 1
    stringBuffer.append(TEXT_71);
d327 1
a327 1
    stringBuffer.append(TEXT_72);
d329 1
a329 1
    stringBuffer.append(TEXT_73);
d331 1
a331 1
    stringBuffer.append(TEXT_74);
d333 1
a333 1
    stringBuffer.append(TEXT_75);
d335 1
a335 1
    stringBuffer.append(TEXT_76);
d337 1
a337 1
    stringBuffer.append(TEXT_77);
d340 1
a340 1
    stringBuffer.append(TEXT_78);
d343 1
a343 1
    stringBuffer.append(TEXT_79);
d345 1
a345 1
    stringBuffer.append(TEXT_80);
d347 1
a347 1
    stringBuffer.append(TEXT_81);
d349 1
a349 1
    stringBuffer.append(TEXT_82);
d352 1
a352 1
    stringBuffer.append(TEXT_83);
d354 1
a354 1
    stringBuffer.append(TEXT_84);
d356 1
a356 1
    stringBuffer.append(TEXT_85);
d360 1
a360 1
    stringBuffer.append(TEXT_86);
d362 1
a362 1
    stringBuffer.append(TEXT_87);
d364 1
a364 1
    stringBuffer.append(TEXT_88);
d366 1
a366 1
    stringBuffer.append(TEXT_89);
d368 1
a368 1
    stringBuffer.append(TEXT_90);
a369 1
    stringBuffer.append(TEXT_91);
d371 1
d375 1
a375 1
    stringBuffer.append(TEXT_93);
d377 1
a377 1
    stringBuffer.append(TEXT_94);
d379 1
a379 1
    stringBuffer.append(TEXT_95);
d381 1
a381 1
    stringBuffer.append(TEXT_96);
d383 1
a383 1
    stringBuffer.append(TEXT_97);
d385 1
a385 1
    stringBuffer.append(TEXT_98);
d387 1
a387 1
    stringBuffer.append(TEXT_99);
d390 1
a390 1
    stringBuffer.append(TEXT_100);
d393 1
a393 1
    stringBuffer.append(TEXT_101);
d395 1
a395 1
    stringBuffer.append(TEXT_102);
d397 1
a397 1
    stringBuffer.append(TEXT_103);
d399 1
a399 1
    stringBuffer.append(TEXT_104);
d401 1
a401 1
    stringBuffer.append(TEXT_105);
d403 1
a403 1
    stringBuffer.append(TEXT_106);
d405 1
a405 1
    stringBuffer.append(TEXT_107);
d408 1
a408 1
    stringBuffer.append(TEXT_108);
d411 1
a411 1
    stringBuffer.append(TEXT_109);
d413 1
a413 1
    stringBuffer.append(TEXT_110);
d415 1
a415 1
    stringBuffer.append(TEXT_111);
d417 1
a417 1
    stringBuffer.append(TEXT_112);
d420 1
a420 1
    stringBuffer.append(TEXT_113);
d422 1
a422 1
    stringBuffer.append(TEXT_114);
d424 1
a424 1
    stringBuffer.append(TEXT_115);
d436 2
a437 1
    stringBuffer.append(TEXT_116);
@


1.5
log
@support figure's preferred size
@
text
@d32 1
a32 1
  protected final String TEXT_14 = "new Color(null, ";
d36 1
a36 1
  protected final String TEXT_18 = "ColorConstants.";
d40 1
a40 1
  protected final String TEXT_22 = "new Color(null, ";
d44 1
a44 1
  protected final String TEXT_26 = "ColorConstants.";
d83 1
a83 1
  protected final String TEXT_65 = "new Color(null, ";
d87 1
a87 1
  protected final String TEXT_69 = "ColorConstants.";
d91 1
a91 1
  protected final String TEXT_73 = "new Color(null, ";
d95 1
a95 1
  protected final String TEXT_77 = "ColorConstants.";
d113 1
a113 1
  protected final String TEXT_95 = "new Color(null, ";
d117 1
a117 1
  protected final String TEXT_99 = "ColorConstants.";
d121 1
a121 1
  protected final String TEXT_103 = "new Color(null, ";
d125 1
a125 1
  protected final String TEXT_107 = "ColorConstants.";
@


1.4
log
@support Figure.color attributes
@
text
@d47 26
a72 26
  protected final String TEXT_29 = " ";
  protected final String TEXT_30 = " = new ";
  protected final String TEXT_31 = "();";
  protected final String TEXT_32 = NL;
  protected final String TEXT_33 = NL + "\t\t";
  protected final String TEXT_34 = ".setFill(";
  protected final String TEXT_35 = ");";
  protected final String TEXT_36 = NL + "\t\t";
  protected final String TEXT_37 = ".setOutline(";
  protected final String TEXT_38 = ");";
  protected final String TEXT_39 = NL + "\t\t";
  protected final String TEXT_40 = ".setLineWidth(";
  protected final String TEXT_41 = ");";
  protected final String TEXT_42 = NL + "\t\t";
  protected final String TEXT_43 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_44 = ");";
  protected final String TEXT_45 = NL + "\t\t";
  protected final String TEXT_46 = ".setFillXOR(";
  protected final String TEXT_47 = ");";
  protected final String TEXT_48 = NL + "\t\t";
  protected final String TEXT_49 = ".setOutlineXOR(";
  protected final String TEXT_50 = ");";
  protected final String TEXT_51 = NL + "\t\t";
  protected final String TEXT_52 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_53 = ", ";
  protected final String TEXT_54 = "));";
d74 3
a76 3
  protected final String TEXT_56 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_57 = "), getMapMode().DPtoLP(";
  protected final String TEXT_58 = ")));";
d78 33
a110 33
  protected final String TEXT_60 = ".setForegroundColor(";
  protected final String TEXT_61 = "new Color(null, ";
  protected final String TEXT_62 = ", ";
  protected final String TEXT_63 = ", ";
  protected final String TEXT_64 = ")";
  protected final String TEXT_65 = "ColorConstants.";
  protected final String TEXT_66 = ");";
  protected final String TEXT_67 = NL + "\t\t";
  protected final String TEXT_68 = ".setBackgroundColor(";
  protected final String TEXT_69 = "new Color(null, ";
  protected final String TEXT_70 = ", ";
  protected final String TEXT_71 = ", ";
  protected final String TEXT_72 = ")";
  protected final String TEXT_73 = "ColorConstants.";
  protected final String TEXT_74 = ");";
  protected final String TEXT_75 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_76 = " = new ";
  protected final String TEXT_77 = "();";
  protected final String TEXT_78 = NL + "\t\t";
  protected final String TEXT_79 = " ";
  protected final String TEXT_80 = " = new ";
  protected final String TEXT_81 = "();" + NL + "\t\t";
  protected final String TEXT_82 = ".setText(\"";
  protected final String TEXT_83 = "\");";
  protected final String TEXT_84 = NL;
  protected final String TEXT_85 = NL + "\t\t";
  protected final String TEXT_86 = ".setForegroundColor(";
  protected final String TEXT_87 = "new Color(null, ";
  protected final String TEXT_88 = ", ";
  protected final String TEXT_89 = ", ";
  protected final String TEXT_90 = ")";
  protected final String TEXT_91 = "ColorConstants.";
  protected final String TEXT_92 = ");";
d112 1
a112 1
  protected final String TEXT_94 = ".setBackgroundColor(";
d120 15
a134 3
  protected final String TEXT_102 = ".add(";
  protected final String TEXT_103 = ");";
  protected final String TEXT_104 = NL + "\t}" + NL + "}";
d218 9
d230 1
a230 1
    stringBuffer.append(TEXT_28);
d232 1
a232 1
    stringBuffer.append(TEXT_29);
d234 1
a234 1
    stringBuffer.append(TEXT_30);
d236 2
a237 2
    stringBuffer.append(TEXT_31);
    stringBuffer.append(TEXT_32);
d242 1
a242 1
    stringBuffer.append(TEXT_33);
d244 1
a244 1
    stringBuffer.append(TEXT_34);
d246 1
a246 1
    stringBuffer.append(TEXT_35);
d248 1
a248 1
    stringBuffer.append(TEXT_36);
d250 1
a250 1
    stringBuffer.append(TEXT_37);
d252 1
a252 1
    stringBuffer.append(TEXT_38);
d254 1
a254 1
    stringBuffer.append(TEXT_39);
d256 1
a256 1
    stringBuffer.append(TEXT_40);
d258 1
a258 1
    stringBuffer.append(TEXT_41);
d260 1
a260 1
    stringBuffer.append(TEXT_42);
d262 1
a262 1
    stringBuffer.append(TEXT_43);
d264 1
a264 1
    stringBuffer.append(TEXT_44);
d266 1
a266 1
    stringBuffer.append(TEXT_45);
d268 1
a268 1
    stringBuffer.append(TEXT_46);
d270 1
a270 1
    stringBuffer.append(TEXT_47);
d272 1
a272 1
    stringBuffer.append(TEXT_48);
d274 1
a274 1
    stringBuffer.append(TEXT_49);
d276 1
a276 1
    stringBuffer.append(TEXT_50);
d280 1
a280 1
    stringBuffer.append(TEXT_51);
d282 1
a282 1
    stringBuffer.append(TEXT_52);
d284 1
a284 1
    stringBuffer.append(TEXT_53);
d286 1
a286 1
    stringBuffer.append(TEXT_54);
d290 1
a290 1
    stringBuffer.append(TEXT_55);
d292 1
a292 1
    stringBuffer.append(TEXT_56);
d294 1
a294 1
    stringBuffer.append(TEXT_57);
d296 1
a296 1
    stringBuffer.append(TEXT_58);
d301 1
a301 1
    stringBuffer.append(TEXT_59);
d303 1
a303 1
    stringBuffer.append(TEXT_60);
d305 1
a305 1
    stringBuffer.append(TEXT_61);
d307 1
a307 1
    stringBuffer.append(TEXT_62);
d309 1
a309 1
    stringBuffer.append(TEXT_63);
d311 1
a311 1
    stringBuffer.append(TEXT_64);
d313 1
a313 1
    stringBuffer.append(TEXT_65);
d316 1
a316 1
    stringBuffer.append(TEXT_66);
d319 1
a319 1
    stringBuffer.append(TEXT_67);
d321 1
a321 1
    stringBuffer.append(TEXT_68);
d323 1
a323 1
    stringBuffer.append(TEXT_69);
d325 1
a325 1
    stringBuffer.append(TEXT_70);
d327 1
a327 1
    stringBuffer.append(TEXT_71);
d329 1
a329 1
    stringBuffer.append(TEXT_72);
d331 1
a331 1
    stringBuffer.append(TEXT_73);
d334 10
a343 1
    stringBuffer.append(TEXT_74);
d346 1
a346 1
    stringBuffer.append(TEXT_75);
d348 1
a348 1
    stringBuffer.append(TEXT_76);
d350 1
a350 1
    stringBuffer.append(TEXT_77);
d354 1
a354 1
    stringBuffer.append(TEXT_78);
d356 1
a356 1
    stringBuffer.append(TEXT_79);
d358 1
a358 1
    stringBuffer.append(TEXT_80);
d360 1
a360 1
    stringBuffer.append(TEXT_81);
d362 1
a362 1
    stringBuffer.append(TEXT_82);
d364 2
a365 2
    stringBuffer.append(TEXT_83);
    stringBuffer.append(TEXT_84);
d369 1
a369 1
    stringBuffer.append(TEXT_85);
d371 1
a371 1
    stringBuffer.append(TEXT_86);
d373 1
a373 1
    stringBuffer.append(TEXT_87);
d375 1
a375 1
    stringBuffer.append(TEXT_88);
d377 1
a377 1
    stringBuffer.append(TEXT_89);
d379 1
a379 1
    stringBuffer.append(TEXT_90);
d381 1
a381 1
    stringBuffer.append(TEXT_91);
d384 1
a384 1
    stringBuffer.append(TEXT_92);
d387 1
a387 1
    stringBuffer.append(TEXT_93);
d389 1
a389 1
    stringBuffer.append(TEXT_94);
d391 1
a391 1
    stringBuffer.append(TEXT_95);
d393 1
a393 1
    stringBuffer.append(TEXT_96);
d395 1
a395 1
    stringBuffer.append(TEXT_97);
d397 1
a397 1
    stringBuffer.append(TEXT_98);
d399 1
a399 1
    stringBuffer.append(TEXT_99);
d402 10
a411 1
    stringBuffer.append(TEXT_100);
d414 1
a414 1
    stringBuffer.append(TEXT_101);
d416 1
a416 1
    stringBuffer.append(TEXT_102);
d418 1
a418 1
    stringBuffer.append(TEXT_103);
d430 1
a430 1
    stringBuffer.append(TEXT_104);
@


1.3
log
@- Generating figures for Child node
- Transforming coordinates for rounded rectangles
@
text
@d25 20
a44 20
  protected final String TEXT_7 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_8 = " = new ";
  protected final String TEXT_9 = "();";
  protected final String TEXT_10 = NL;
  protected final String TEXT_11 = NL + "\t\t";
  protected final String TEXT_12 = " ";
  protected final String TEXT_13 = " = new ";
  protected final String TEXT_14 = "();";
  protected final String TEXT_15 = NL;
  protected final String TEXT_16 = NL + "\t\t";
  protected final String TEXT_17 = ".setFill(";
  protected final String TEXT_18 = ");";
  protected final String TEXT_19 = NL + "\t\t";
  protected final String TEXT_20 = ".setOutline(";
  protected final String TEXT_21 = ");";
  protected final String TEXT_22 = NL + "\t\t";
  protected final String TEXT_23 = ".setLineWidth(";
  protected final String TEXT_24 = ");";
  protected final String TEXT_25 = NL + "\t\t";
  protected final String TEXT_26 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
d47 22
a68 22
  protected final String TEXT_29 = ".setFillXOR(";
  protected final String TEXT_30 = ");";
  protected final String TEXT_31 = NL + "\t\t";
  protected final String TEXT_32 = ".setOutlineXOR(";
  protected final String TEXT_33 = ");";
  protected final String TEXT_34 = NL + "\t\t";
  protected final String TEXT_35 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_36 = ", ";
  protected final String TEXT_37 = "));";
  protected final String TEXT_38 = NL + "\t\t";
  protected final String TEXT_39 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_40 = "), getMapMode().DPtoLP(";
  protected final String TEXT_41 = ")));";
  protected final String TEXT_42 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_43 = " = new ";
  protected final String TEXT_44 = "();";
  protected final String TEXT_45 = NL;
  protected final String TEXT_46 = NL + "\t\torg.eclipse.draw2d.Label ";
  protected final String TEXT_47 = " = new org.eclipse.draw2d.Label();" + NL + "\t\t";
  protected final String TEXT_48 = ".setText(\"";
  protected final String TEXT_49 = "\");";
  protected final String TEXT_50 = NL;
d70 53
a122 3
  protected final String TEXT_52 = ".add(";
  protected final String TEXT_53 = ");";
  protected final String TEXT_54 = NL + "\t}" + NL + "}";
d159 1
d162 2
a164 2
    stringBuffer.append(TEXT_8);
    stringBuffer.append(((CustomFigure) figureMarker).getQualifiedClassName());
d166 1
a167 3
    } else if (figureMarker instanceof Shape) {
Shape shapeFigure = (Shape) figureMarker;
String shapeVarName = figureVarName;
d169 3
a171 1
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
d175 1
a175 1
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
d177 1
d179 1
a179 4
    
// PERHAPS, do this with reflection?

    if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d181 1
a181 1
    stringBuffer.append(shapeVarName);
d183 1
a183 1
    stringBuffer.append(shapeFigure.isFill());
d185 2
a186 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d188 2
a189 1
    stringBuffer.append(shapeVarName);
d191 1
a191 1
    stringBuffer.append(shapeFigure.isOutline());
d193 1
a193 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d195 1
a195 1
    stringBuffer.append(shapeVarName);
d197 1
a197 1
    stringBuffer.append(shapeFigure.getLineWidth());
d199 1
a199 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
d201 1
a201 1
    stringBuffer.append(shapeVarName);
d203 2
a204 1
    stringBuffer.append(shapeFigure.getLineKind().getName());
d206 3
a208 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
d210 1
a210 1
    stringBuffer.append(shapeVarName);
d212 1
a212 1
    stringBuffer.append(shapeFigure.isXorFill());
d214 1
a214 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
a215 1
    stringBuffer.append(shapeVarName);
d217 4
a220 1
    stringBuffer.append(shapeFigure.isXorOutline());
d222 1
a222 3
    } if (shapeFigure instanceof Polyline && !((Polyline) shapeFigure).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) shapeFigure).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
d224 1
a224 1
    stringBuffer.append(shapeVarName);
d226 1
a226 1
    stringBuffer.append(p.getX());
d228 1
a228 1
    stringBuffer.append(p.getY());
d230 1
a230 3
    }
    } else if (shapeFigure instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) shapeFigure;
d232 1
a232 1
    stringBuffer.append(shapeVarName);
d234 1
a234 1
    stringBuffer.append(rrFigure.getCornerWidth());
d236 1
a236 1
    stringBuffer.append(rrFigure.getCornerHeight());
d238 1
a238 2
    }
    } else if (figureMarker instanceof FigureRef) {
d242 1
a242 1
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
d244 1
d246 1
a246 1
    } else if (figureMarker instanceof Label) {
d248 1
a248 1
    stringBuffer.append(figureVarName);
d250 2
a252 2
    stringBuffer.append(TEXT_48);
    stringBuffer.append(((Label) figureMarker).getText());
d254 1
d256 118
d375 1
a375 1
    stringBuffer.append(TEXT_51);
d377 1
a377 1
    stringBuffer.append(TEXT_52);
d379 1
a379 1
    stringBuffer.append(TEXT_53);
d391 1
a391 1
    stringBuffer.append(TEXT_54);
@


1.2
log
@@@generated comments ws added
@
text
@d57 3
a59 3
  protected final String TEXT_39 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(";
  protected final String TEXT_40 = ", ";
  protected final String TEXT_41 = "));";
@


1.1
log
@ some templates to support #114177 (graphical definition model) - with GEF IFigure code as an outcome
@
text
@d19 1
a19 1
  protected final String TEXT_1 = NL + "public class ";
d21 1
a21 1
  protected final String TEXT_3 = " {" + NL + "" + NL + "\tpublic ";
@

