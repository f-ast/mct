head	1.8;
access;
symbols
	v20080813-1520:1.8
	v20080806-1520:1.8
	v20080731-1520:1.8
	v20061027-1200:1.6.2.1
	v20061013-1330:1.7
	v20060925-1700:1.6
	v20060919-0800:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060616-1200:1.6
	v20060531-1730:1.6
	v20060530-1930:1.6
	v20060526-1200:1.6
	v20060519-1300:1.6
	v20060519-0800:1.6
	I20060505-1400:1.6
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2006.11.02.21.58.37;	author atikhomirov;	state dead;
branches;
next	1.7;

1.7
date	2006.09.14.18.20.42;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.02.15.05.35;	author atikhomirov;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2006.05.02.11.44.18;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.07.14.49.17;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.13.17.53.19;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.15.14.44.35;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.13.17.36.17;	author atikhomirov;	state Exp;
branches;
next	;

1.6.2.1
date	2006.10.27.14.20.46;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.8
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.graphdef.codegen.*;

public class InitGridLayoutDataGenerator
{
  protected static String nl;
  public static synchronized InitGridLayoutDataGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    InitGridLayoutDataGenerator result = new InitGridLayoutDataGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "\t\t\t";
  protected final String TEXT_2 = " ";
  protected final String TEXT_3 = " = new ";
  protected final String TEXT_4 = "();" + NL + "\t\t\t";
  protected final String TEXT_5 = ".verticalAlignment = ";
  protected final String TEXT_6 = ".";
  protected final String TEXT_7 = ";" + NL + "\t\t\t";
  protected final String TEXT_8 = ".horizontalAlignment = ";
  protected final String TEXT_9 = ".";
  protected final String TEXT_10 = ";";
  protected final String TEXT_11 = NL + "\t\t\t";
  protected final String TEXT_12 = ".widthHint = ";
  protected final String TEXT_13 = ";" + NL + "\t\t\t";
  protected final String TEXT_14 = ".heightHint = ";
  protected final String TEXT_15 = ";";
  protected final String TEXT_16 = NL + "\t\t\t";
  protected final String TEXT_17 = ".horizontalIndent = ";
  protected final String TEXT_18 = ";" + NL + "\t\t\t";
  protected final String TEXT_19 = ".horizontalSpan = ";
  protected final String TEXT_20 = ";" + NL + "\t\t\t";
  protected final String TEXT_21 = ".verticalSpan = ";
  protected final String TEXT_22 = ";" + NL + "\t\t\t";
  protected final String TEXT_23 = ".grabExcessHorizontalSpace = ";
  protected final String TEXT_24 = ";" + NL + "\t\t\t";
  protected final String TEXT_25 = ".grabExcessVerticalSpace = ";
  protected final String TEXT_26 = ";" + NL;
  protected final String TEXT_27 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GraphDefDispatcher.LayoutArgs argsBundle = (GraphDefDispatcher.LayoutArgs) argument;
final GridLayoutData gmfLayoutData = (GridLayoutData) argsBundle.getData();
final GraphDefDispatcher dispatcher = argsBundle.getDispatcher();
final String layoutConstraintVarName = argsBundle.getConstraintVariableName();

final String layoutImplClassName = dispatcher.getFQNSwitch().get(gmfLayoutData, dispatcher.getImportManager());

    stringBuffer.append(TEXT_1);
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(gmfLayoutData.getVerticalAlignment().getName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(gmfLayoutData.getHorizontalAlignment().getName());
    stringBuffer.append(TEXT_10);
    
Dimension sizeHint = gmfLayoutData.getSizeHint();
if (sizeHint != null){

    stringBuffer.append(TEXT_11);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(sizeHint.getDx());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(sizeHint.getDy());
    stringBuffer.append(TEXT_15);
    
}

    stringBuffer.append(TEXT_16);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_17);
    stringBuffer.append(gmfLayoutData.getHorizontalIndent());
    stringBuffer.append(TEXT_18);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_19);
    stringBuffer.append(gmfLayoutData.getHorizontalSpan());
    stringBuffer.append(TEXT_20);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(gmfLayoutData.getVerticalSpan());
    stringBuffer.append(TEXT_22);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_23);
    stringBuffer.append(gmfLayoutData.isGrabExcessHorizontalSpace());
    stringBuffer.append(TEXT_24);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(gmfLayoutData.isGrabExcessVerticalSpace());
    stringBuffer.append(TEXT_26);
    stringBuffer.append(TEXT_27);
    return stringBuffer.toString();
  }
}
@


1.7
log
@[155707] mgolubev - Do not generate magic numbers for SWT.* constants in the GridLayout support code
@
text
@@


1.6
log
@unused code removed
@
text
@d23 12
a34 12
  protected final String TEXT_6 = ";" + NL + "\t\t\t";
  protected final String TEXT_7 = ".horizontalAlignment = ";
  protected final String TEXT_8 = ";";
  protected final String TEXT_9 = NL + "\t\t\t";
  protected final String TEXT_10 = ".widthHint = ";
  protected final String TEXT_11 = ";" + NL + "\t\t\t";
  protected final String TEXT_12 = ".heightHint = ";
  protected final String TEXT_13 = ";";
  protected final String TEXT_14 = NL + "\t\t\t";
  protected final String TEXT_15 = ".horizontalIndent = ";
  protected final String TEXT_16 = ";" + NL + "\t\t\t";
  protected final String TEXT_17 = ".horizontalSpan = ";
d36 1
a36 1
  protected final String TEXT_19 = ".verticalSpan = ";
d38 1
a38 1
  protected final String TEXT_21 = ".grabExcessHorizontalSpace = ";
d40 5
a44 3
  protected final String TEXT_23 = ".grabExcessVerticalSpace = ";
  protected final String TEXT_24 = ";" + NL;
  protected final String TEXT_25 = NL;
d66 1
a66 1
    stringBuffer.append(gmfLayoutData.getVerticalAlignment().getValue());
d68 2
a70 2
    stringBuffer.append(TEXT_7);
    stringBuffer.append(gmfLayoutData.getHorizontalAlignment().getValue());
d72 4
d80 1
a80 1
    stringBuffer.append(TEXT_9);
d82 1
a82 1
    stringBuffer.append(TEXT_10);
d84 1
a84 1
    stringBuffer.append(TEXT_11);
d86 1
a86 1
    stringBuffer.append(TEXT_12);
d88 1
a88 1
    stringBuffer.append(TEXT_13);
a91 4
    stringBuffer.append(TEXT_14);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_15);
    stringBuffer.append(gmfLayoutData.getHorizontalIndent());
d95 1
a95 1
    stringBuffer.append(gmfLayoutData.getHorizontalSpan());
d99 1
a99 1
    stringBuffer.append(gmfLayoutData.getVerticalSpan());
d103 1
a103 1
    stringBuffer.append(gmfLayoutData.isGrabExcessHorizontalSpace());
d107 1
a107 1
    stringBuffer.append(gmfLayoutData.isGrabExcessVerticalSpace());
d109 1
d111 3
@


1.6.2.1
log
@[155707] mgolubev - [gmfgraph] Do not generate magic numbers for SWT.* constants in the GridLayout support code
@
text
@d23 12
a34 12
  protected final String TEXT_6 = ".";
  protected final String TEXT_7 = ";" + NL + "\t\t\t";
  protected final String TEXT_8 = ".horizontalAlignment = ";
  protected final String TEXT_9 = ".";
  protected final String TEXT_10 = ";";
  protected final String TEXT_11 = NL + "\t\t\t";
  protected final String TEXT_12 = ".widthHint = ";
  protected final String TEXT_13 = ";" + NL + "\t\t\t";
  protected final String TEXT_14 = ".heightHint = ";
  protected final String TEXT_15 = ";";
  protected final String TEXT_16 = NL + "\t\t\t";
  protected final String TEXT_17 = ".horizontalIndent = ";
d36 1
a36 1
  protected final String TEXT_19 = ".horizontalSpan = ";
d38 1
a38 1
  protected final String TEXT_21 = ".verticalSpan = ";
d40 3
a42 5
  protected final String TEXT_23 = ".grabExcessHorizontalSpace = ";
  protected final String TEXT_24 = ";" + NL + "\t\t\t";
  protected final String TEXT_25 = ".grabExcessVerticalSpace = ";
  protected final String TEXT_26 = ";" + NL;
  protected final String TEXT_27 = NL;
d64 1
a64 1
    stringBuffer.append(layoutImplClassName);
d66 1
a66 1
    stringBuffer.append(gmfLayoutData.getVerticalAlignment().getName());
d68 1
a68 1
    stringBuffer.append(layoutConstraintVarName);
a69 4
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(gmfLayoutData.getHorizontalAlignment().getName());
    stringBuffer.append(TEXT_10);
d74 4
d81 1
a81 1
    stringBuffer.append(sizeHint.getDx());
a82 4
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(sizeHint.getDy());
    stringBuffer.append(TEXT_15);
d86 4
d93 1
a93 1
    stringBuffer.append(gmfLayoutData.getHorizontalIndent());
d97 1
a97 1
    stringBuffer.append(gmfLayoutData.getHorizontalSpan());
d101 1
a101 1
    stringBuffer.append(gmfLayoutData.getVerticalSpan());
d105 1
a105 1
    stringBuffer.append(gmfLayoutData.isGrabExcessHorizontalSpace());
a106 1
    stringBuffer.append(layoutConstraintVarName);
a107 3
    stringBuffer.append(gmfLayoutData.isGrabExcessVerticalSpace());
    stringBuffer.append(TEXT_26);
    stringBuffer.append(TEXT_27);
@


1.5
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@a49 1
final String figureVarName = argsBundle.getVariableName();
a51 1
final String layoutManagerVarName = argsBundle.getManagerVariableName();
@


1.4
log
@Switching to eclipse M6.
@
text
@d41 2
a42 5
  protected final String TEXT_24 = ";" + NL + "\t\t\t";
  protected final String TEXT_25 = ".setConstraint(";
  protected final String TEXT_26 = ", ";
  protected final String TEXT_27 = ");" + NL;
  protected final String TEXT_28 = NL;
a108 1
    stringBuffer.append(layoutManagerVarName);
a109 5
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_27);
    stringBuffer.append(TEXT_28);
@


1.3
log
@explicit method names for fqn switch to better reflect it's intention
@
text
@d49 1
a49 1
    StringBuffer stringBuffer = new StringBuffer();
@


1.2
log
@[mgolubev] #127252 layout support
@
text
@d58 1
a58 1
final String layoutImplClassName = dispatcher.getImportManager().getImportedName((String) dispatcher.getFQNSwitch().doSwitch(gmfLayoutData));
@


1.1
log
@[mgolubev] #127252 layout support
@
text
@d42 1
a42 1
  protected final String TEXT_25 = ".getParent().getLayoutManager().setConstraint(";
d55 2
a56 1
final String layoutConstraintVarName = argsBundle.getLayoutVariableName();
d112 1
a112 1
    stringBuffer.append(figureVarName);
@

