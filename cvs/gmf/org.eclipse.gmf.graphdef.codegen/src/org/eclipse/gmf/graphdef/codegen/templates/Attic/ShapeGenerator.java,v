head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080731-1520:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	I20060203-0830:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2006.02.06.18.10.22;	author atikhomirov;	state dead;
branches;
next	1.8;

1.8
date	2006.02.05.23.00.50;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.04.22.34.49;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.26.12.23.29;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.25.19.16.56;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.25.14.02.29;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.23.20.00.49;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.07.16.50.43;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.19.17.28;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.gmfgraph.util.*;
import org.eclipse.gmf.common.codegen.*;
import org.eclipse.gmf.graphdef.codegen.Dispatcher;
import java.util.*;

public class ShapeGenerator
{
  protected static String nl;
  public static synchronized ShapeGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    ShapeGenerator result = new ShapeGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends ";
  protected final String TEXT_4 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_5 = "() {";
  protected final String TEXT_6 = NL;
  protected final String TEXT_7 = NL + "\t\tsetFigure";
  protected final String TEXT_8 = "(createFigure";
  protected final String TEXT_9 = "());" + NL + "\t\tadd(getFigure";
  protected final String TEXT_10 = "());";
  protected final String TEXT_11 = NL + "\t}" + NL;
  protected final String TEXT_12 = NL + NL + "\tprivate IFigure f";
  protected final String TEXT_13 = "; " + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic IFigure getFigure";
  protected final String TEXT_14 = "() {" + NL + "\t\treturn f";
  protected final String TEXT_15 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setFigure";
  protected final String TEXT_16 = "(IFigure figure) {" + NL + "\t\tf";
  protected final String TEXT_17 = " = figure;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate IFigure createFigure";
  protected final String TEXT_18 = "() {";
  protected final String TEXT_19 = NL;
  protected final String TEXT_20 = NL + "\t\t";
  protected final String TEXT_21 = " ";
  protected final String TEXT_22 = " = new ";
  protected final String TEXT_23 = "();";
  protected final String TEXT_24 = NL;
  protected final String TEXT_25 = NL + "\t\t";
  protected final String TEXT_26 = ".setForegroundColor(";
  protected final String TEXT_27 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_28 = ", ";
  protected final String TEXT_29 = ", ";
  protected final String TEXT_30 = ")";
  protected final String TEXT_31 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_32 = ");";
  protected final String TEXT_33 = NL + "\t\t";
  protected final String TEXT_34 = ".setBackgroundColor(";
  protected final String TEXT_35 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_36 = ", ";
  protected final String TEXT_37 = ", ";
  protected final String TEXT_38 = ")";
  protected final String TEXT_39 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_40 = ");";
  protected final String TEXT_41 = NL + "\t\t";
  protected final String TEXT_42 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_43 = "), getMapMode().DPtoLP(";
  protected final String TEXT_44 = "));";
  protected final String TEXT_45 = NL + "\t\t";
  protected final String TEXT_46 = " ";
  protected final String TEXT_47 = " = new ";
  protected final String TEXT_48 = "();";
  protected final String TEXT_49 = NL;
  protected final String TEXT_50 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_51 = " = new ";
  protected final String TEXT_52 = "();";
  protected final String TEXT_53 = NL + "\t\t";
  protected final String TEXT_54 = " ";
  protected final String TEXT_55 = " = new ";
  protected final String TEXT_56 = "();" + NL + "\t\t";
  protected final String TEXT_57 = ".setText(\"";
  protected final String TEXT_58 = "\");";
  protected final String TEXT_59 = NL;
  protected final String TEXT_60 = NL + "\t\t";
  protected final String TEXT_61 = ".setForegroundColor(";
  protected final String TEXT_62 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_63 = ", ";
  protected final String TEXT_64 = ", ";
  protected final String TEXT_65 = ")";
  protected final String TEXT_66 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_67 = ");";
  protected final String TEXT_68 = NL + "\t\t";
  protected final String TEXT_69 = ".setBackgroundColor(";
  protected final String TEXT_70 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_71 = ", ";
  protected final String TEXT_72 = ", ";
  protected final String TEXT_73 = ")";
  protected final String TEXT_74 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_75 = ");";
  protected final String TEXT_76 = NL + "\t\t";
  protected final String TEXT_77 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_78 = "), getMapMode().DPtoLP(";
  protected final String TEXT_79 = "));";
  protected final String TEXT_80 = NL;
  protected final String TEXT_81 = NL;
  protected final String TEXT_82 = NL + "\t\t";
  protected final String TEXT_83 = " ";
  protected final String TEXT_84 = " = new ";
  protected final String TEXT_85 = "();";
  protected final String TEXT_86 = NL;
  protected final String TEXT_87 = NL + "\t\t";
  protected final String TEXT_88 = ".setForegroundColor(";
  protected final String TEXT_89 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_90 = ", ";
  protected final String TEXT_91 = ", ";
  protected final String TEXT_92 = ")";
  protected final String TEXT_93 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_94 = ");";
  protected final String TEXT_95 = NL + "\t\t";
  protected final String TEXT_96 = ".setBackgroundColor(";
  protected final String TEXT_97 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_98 = ", ";
  protected final String TEXT_99 = ", ";
  protected final String TEXT_100 = ")";
  protected final String TEXT_101 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_102 = ");";
  protected final String TEXT_103 = NL + "\t\t";
  protected final String TEXT_104 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_105 = "), getMapMode().DPtoLP(";
  protected final String TEXT_106 = "));";
  protected final String TEXT_107 = NL + "\t\t";
  protected final String TEXT_108 = " ";
  protected final String TEXT_109 = " = new ";
  protected final String TEXT_110 = "();";
  protected final String TEXT_111 = NL;
  protected final String TEXT_112 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_113 = " = new ";
  protected final String TEXT_114 = "();";
  protected final String TEXT_115 = NL + "\t\t";
  protected final String TEXT_116 = " ";
  protected final String TEXT_117 = " = new ";
  protected final String TEXT_118 = "();" + NL + "\t\t";
  protected final String TEXT_119 = ".setText(\"";
  protected final String TEXT_120 = "\");";
  protected final String TEXT_121 = NL;
  protected final String TEXT_122 = NL + "\t\t";
  protected final String TEXT_123 = ".setForegroundColor(";
  protected final String TEXT_124 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_125 = ", ";
  protected final String TEXT_126 = ", ";
  protected final String TEXT_127 = ")";
  protected final String TEXT_128 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_129 = ");";
  protected final String TEXT_130 = NL + "\t\t";
  protected final String TEXT_131 = ".setBackgroundColor(";
  protected final String TEXT_132 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_133 = ", ";
  protected final String TEXT_134 = ", ";
  protected final String TEXT_135 = ")";
  protected final String TEXT_136 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_137 = ");";
  protected final String TEXT_138 = NL + "\t\t";
  protected final String TEXT_139 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_140 = "), getMapMode().DPtoLP(";
  protected final String TEXT_141 = "));";
  protected final String TEXT_142 = NL + "\t\t";
  protected final String TEXT_143 = ".add(";
  protected final String TEXT_144 = ");";
  protected final String TEXT_145 = NL + "\t\treturn ";
  protected final String TEXT_146 = ";" + NL + "\t}" + NL;
  protected final String TEXT_147 = NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
    
Object[] args = (Object[]) argument;
Shape shapeFig = (Shape) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];
final GMFGraphSwitch fqnSwitch = new FigureQualifiedNameSwitch();
final Dispatcher dispatcher = (Dispatcher) args[2];

    stringBuffer.append(TEXT_1);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(shapeFig.getName());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(importManager.getImportedName((String) fqnSwitch.doSwitch(shapeFig)));
    stringBuffer.append(TEXT_4);
    stringBuffer.append(shapeFig.getName());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(dispatcher.dispatch("ShapeAttrs", dispatcher.create(shapeFig, "this", importManager, fqnSwitch)));
    
for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext();) {
		Figure next = (Figure) it.next();
    stringBuffer.append(TEXT_7);
    stringBuffer.append(next.getName());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(next.getName());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(next.getName());
    stringBuffer.append(TEXT_10);
    }
    stringBuffer.append(TEXT_11);
    
int fc = 0;
for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext(); fc++) {
	Figure figure = (Figure) it.next();
    stringBuffer.append(TEXT_12);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_14);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_15);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_17);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_18);
    
String parentFigureVarName = "rv" + fc;
{ // scope
FigureMarker figureMarker = figure;
String figureVarName = parentFigureVarName;
    stringBuffer.append(TEXT_19);
    
// FigureMarker:  figureMarker
// String:        figureVarName
if (figureMarker instanceof CustomFigure) {
	CustomFigure figureInstance = (CustomFigure) figureMarker;

    stringBuffer.append(TEXT_20);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_21);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_22);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_23);
    stringBuffer.append(TEXT_24);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_25);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_26);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_27);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_28);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_29);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_30);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_31);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_32);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_33);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_34);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_35);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_36);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_37);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_38);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_39);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_40);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_41);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_43);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_44);
    }
    } else if (figureMarker instanceof Shape) {
Shape figureInstance = (Shape) figureMarker;
    stringBuffer.append(TEXT_45);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_46);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_47);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_48);
    stringBuffer.append(TEXT_49);
    stringBuffer.append(dispatcher.dispatch("ShapeAttrs", dispatcher.create(figureInstance, figureVarName, importManager, fqnSwitch)));
    } else if (figureMarker instanceof FigureRef) {
    stringBuffer.append(TEXT_50);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
    stringBuffer.append(TEXT_52);
    } else if (figureMarker instanceof Label) {
	Label figureInstance = (Label) figureMarker;

    stringBuffer.append(TEXT_53);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_54);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_56);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_57);
    stringBuffer.append(((Label) figureMarker).getText());
    stringBuffer.append(TEXT_58);
    stringBuffer.append(TEXT_59);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_60);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_61);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_62);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_63);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_64);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_65);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_66);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_67);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_68);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_69);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_70);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_71);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_72);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_73);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_74);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_75);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_76);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_77);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_78);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_79);
    }
    }
    }
    stringBuffer.append(TEXT_80);
    
LinkedList l = new LinkedList();
l.addAll(figure.getChildren());
final Object marker = new Object();
Stack figureVarNamesStack = new Stack();
int figureCount = 0;
while (!l.isEmpty()) {
	Object _nxt = l.removeFirst();
	if (_nxt == marker) {
		parentFigureVarName = (String) figureVarNamesStack.pop();
		continue;
	}
	FigureMarker figureMarker = (FigureMarker) _nxt;
	String figureVarName = "fig" + (figureCount++);
    stringBuffer.append(TEXT_81);
    
// FigureMarker:  figureMarker
// String:        figureVarName
if (figureMarker instanceof CustomFigure) {
	CustomFigure figureInstance = (CustomFigure) figureMarker;

    stringBuffer.append(TEXT_82);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_83);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_84);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_85);
    stringBuffer.append(TEXT_86);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_87);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_88);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_89);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_90);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_91);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_92);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_93);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_94);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_95);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_96);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_97);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_98);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_99);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_100);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_101);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_102);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_103);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_104);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_105);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_106);
    }
    } else if (figureMarker instanceof Shape) {
Shape figureInstance = (Shape) figureMarker;
    stringBuffer.append(TEXT_107);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_108);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_110);
    stringBuffer.append(TEXT_111);
    stringBuffer.append(dispatcher.dispatch("ShapeAttrs", dispatcher.create(figureInstance, figureVarName, importManager, fqnSwitch)));
    } else if (figureMarker instanceof FigureRef) {
    stringBuffer.append(TEXT_112);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_113);
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
    stringBuffer.append(TEXT_114);
    } else if (figureMarker instanceof Label) {
	Label figureInstance = (Label) figureMarker;

    stringBuffer.append(TEXT_115);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_116);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_117);
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
    stringBuffer.append(TEXT_118);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_119);
    stringBuffer.append(((Label) figureMarker).getText());
    stringBuffer.append(TEXT_120);
    stringBuffer.append(TEXT_121);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_122);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_123);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_124);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_125);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_126);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_127);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_128);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_129);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_130);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_131);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_132);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_133);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_134);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_135);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_136);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_137);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_138);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_139);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_140);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_141);
    }
    }
    stringBuffer.append(TEXT_142);
    stringBuffer.append(parentFigureVarName);
    stringBuffer.append(TEXT_143);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_144);
    
if (_nxt instanceof Figure && !((Figure) _nxt).getChildren().isEmpty()) {
	l.addFirst(marker);
	l.addAll(0, ((Figure) _nxt).getChildren());
	figureVarNamesStack.push(parentFigureVarName);
	parentFigureVarName = figureVarName; // go on processing children of new parentFigure
}

    
} // while

    stringBuffer.append(TEXT_145);
    stringBuffer.append(parentFigureVarName);
    stringBuffer.append(TEXT_146);
    }
    stringBuffer.append(TEXT_147);
    importManager.emitSortedImports();
    return stringBuffer.toString();
  }
}
@


1.8
log
@provisional framework that supports (double-)dispatch from templates to
a) avoid lengthy if instanceof elseif checks,
b) solve scope and name visibility issues when extracting common code into jetinc
@
text
@@


1.7
log
@provide option to use importManager
@
text
@d6 1
d27 18
a44 18
  protected final String TEXT_7 = NL + "\t\t";
  protected final String TEXT_8 = ".setFill(";
  protected final String TEXT_9 = ");";
  protected final String TEXT_10 = NL + "\t\t";
  protected final String TEXT_11 = ".setOutline(";
  protected final String TEXT_12 = ");";
  protected final String TEXT_13 = NL + "\t\t";
  protected final String TEXT_14 = ".setLineWidth(";
  protected final String TEXT_15 = ");";
  protected final String TEXT_16 = NL + "\t\t";
  protected final String TEXT_17 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_18 = ");";
  protected final String TEXT_19 = NL + "\t\t";
  protected final String TEXT_20 = ".setFillXOR(";
  protected final String TEXT_21 = ");";
  protected final String TEXT_22 = NL + "\t\t";
  protected final String TEXT_23 = ".setOutlineXOR(";
  protected final String TEXT_24 = ");";
d46 7
a52 7
  protected final String TEXT_26 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_27 = ", ";
  protected final String TEXT_28 = "));";
  protected final String TEXT_29 = NL + "\t\t";
  protected final String TEXT_30 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_31 = "), getMapMode().DPtoLP(";
  protected final String TEXT_32 = ")));";
d54 1
a54 1
  protected final String TEXT_34 = ".setForegroundColor(";
d62 45
a106 45
  protected final String TEXT_42 = ".setBackgroundColor(";
  protected final String TEXT_43 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_44 = ", ";
  protected final String TEXT_45 = ", ";
  protected final String TEXT_46 = ")";
  protected final String TEXT_47 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_48 = ");";
  protected final String TEXT_49 = NL + "\t\t";
  protected final String TEXT_50 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_51 = "), getMapMode().DPtoLP(";
  protected final String TEXT_52 = "));";
  protected final String TEXT_53 = NL + "\t\tsetFigure";
  protected final String TEXT_54 = "(createFigure";
  protected final String TEXT_55 = "());" + NL + "\t\tadd(getFigure";
  protected final String TEXT_56 = "());";
  protected final String TEXT_57 = NL + "\t}" + NL;
  protected final String TEXT_58 = NL + NL + "\tprivate IFigure f";
  protected final String TEXT_59 = "; " + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic IFigure getFigure";
  protected final String TEXT_60 = "() {" + NL + "\t\treturn f";
  protected final String TEXT_61 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setFigure";
  protected final String TEXT_62 = "(IFigure figure) {" + NL + "\t\tf";
  protected final String TEXT_63 = " = figure;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate IFigure createFigure";
  protected final String TEXT_64 = "() {";
  protected final String TEXT_65 = NL;
  protected final String TEXT_66 = NL + "\t\t";
  protected final String TEXT_67 = " ";
  protected final String TEXT_68 = " = new ";
  protected final String TEXT_69 = "();";
  protected final String TEXT_70 = NL;
  protected final String TEXT_71 = NL + "\t\t";
  protected final String TEXT_72 = ".setForegroundColor(";
  protected final String TEXT_73 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_74 = ", ";
  protected final String TEXT_75 = ", ";
  protected final String TEXT_76 = ")";
  protected final String TEXT_77 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_78 = ");";
  protected final String TEXT_79 = NL + "\t\t";
  protected final String TEXT_80 = ".setBackgroundColor(";
  protected final String TEXT_81 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_82 = ", ";
  protected final String TEXT_83 = ", ";
  protected final String TEXT_84 = ")";
  protected final String TEXT_85 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_86 = ");";
d108 34
a141 34
  protected final String TEXT_88 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_89 = "), getMapMode().DPtoLP(";
  protected final String TEXT_90 = "));";
  protected final String TEXT_91 = NL + "\t\t";
  protected final String TEXT_92 = " ";
  protected final String TEXT_93 = " = new ";
  protected final String TEXT_94 = "();";
  protected final String TEXT_95 = NL;
  protected final String TEXT_96 = NL + "\t\t";
  protected final String TEXT_97 = ".setFill(";
  protected final String TEXT_98 = ");";
  protected final String TEXT_99 = NL + "\t\t";
  protected final String TEXT_100 = ".setOutline(";
  protected final String TEXT_101 = ");";
  protected final String TEXT_102 = NL + "\t\t";
  protected final String TEXT_103 = ".setLineWidth(";
  protected final String TEXT_104 = ");";
  protected final String TEXT_105 = NL + "\t\t";
  protected final String TEXT_106 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_107 = ");";
  protected final String TEXT_108 = NL + "\t\t";
  protected final String TEXT_109 = ".setFillXOR(";
  protected final String TEXT_110 = ");";
  protected final String TEXT_111 = NL + "\t\t";
  protected final String TEXT_112 = ".setOutlineXOR(";
  protected final String TEXT_113 = ");";
  protected final String TEXT_114 = NL + "\t\t";
  protected final String TEXT_115 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_116 = ", ";
  protected final String TEXT_117 = "));";
  protected final String TEXT_118 = NL + "\t\t";
  protected final String TEXT_119 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_120 = "), getMapMode().DPtoLP(";
  protected final String TEXT_121 = ")));";
d162 6
a167 144
  protected final String TEXT_142 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_143 = " = new ";
  protected final String TEXT_144 = "();";
  protected final String TEXT_145 = NL + "\t\t";
  protected final String TEXT_146 = " ";
  protected final String TEXT_147 = " = new ";
  protected final String TEXT_148 = "();" + NL + "\t\t";
  protected final String TEXT_149 = ".setText(\"";
  protected final String TEXT_150 = "\");";
  protected final String TEXT_151 = NL;
  protected final String TEXT_152 = NL + "\t\t";
  protected final String TEXT_153 = ".setForegroundColor(";
  protected final String TEXT_154 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_155 = ", ";
  protected final String TEXT_156 = ", ";
  protected final String TEXT_157 = ")";
  protected final String TEXT_158 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_159 = ");";
  protected final String TEXT_160 = NL + "\t\t";
  protected final String TEXT_161 = ".setBackgroundColor(";
  protected final String TEXT_162 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_163 = ", ";
  protected final String TEXT_164 = ", ";
  protected final String TEXT_165 = ")";
  protected final String TEXT_166 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_167 = ");";
  protected final String TEXT_168 = NL + "\t\t";
  protected final String TEXT_169 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_170 = "), getMapMode().DPtoLP(";
  protected final String TEXT_171 = "));";
  protected final String TEXT_172 = NL;
  protected final String TEXT_173 = NL;
  protected final String TEXT_174 = NL + "\t\t";
  protected final String TEXT_175 = " ";
  protected final String TEXT_176 = " = new ";
  protected final String TEXT_177 = "();";
  protected final String TEXT_178 = NL;
  protected final String TEXT_179 = NL + "\t\t";
  protected final String TEXT_180 = ".setForegroundColor(";
  protected final String TEXT_181 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_182 = ", ";
  protected final String TEXT_183 = ", ";
  protected final String TEXT_184 = ")";
  protected final String TEXT_185 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_186 = ");";
  protected final String TEXT_187 = NL + "\t\t";
  protected final String TEXT_188 = ".setBackgroundColor(";
  protected final String TEXT_189 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_190 = ", ";
  protected final String TEXT_191 = ", ";
  protected final String TEXT_192 = ")";
  protected final String TEXT_193 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_194 = ");";
  protected final String TEXT_195 = NL + "\t\t";
  protected final String TEXT_196 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_197 = "), getMapMode().DPtoLP(";
  protected final String TEXT_198 = "));";
  protected final String TEXT_199 = NL + "\t\t";
  protected final String TEXT_200 = " ";
  protected final String TEXT_201 = " = new ";
  protected final String TEXT_202 = "();";
  protected final String TEXT_203 = NL;
  protected final String TEXT_204 = NL + "\t\t";
  protected final String TEXT_205 = ".setFill(";
  protected final String TEXT_206 = ");";
  protected final String TEXT_207 = NL + "\t\t";
  protected final String TEXT_208 = ".setOutline(";
  protected final String TEXT_209 = ");";
  protected final String TEXT_210 = NL + "\t\t";
  protected final String TEXT_211 = ".setLineWidth(";
  protected final String TEXT_212 = ");";
  protected final String TEXT_213 = NL + "\t\t";
  protected final String TEXT_214 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_215 = ");";
  protected final String TEXT_216 = NL + "\t\t";
  protected final String TEXT_217 = ".setFillXOR(";
  protected final String TEXT_218 = ");";
  protected final String TEXT_219 = NL + "\t\t";
  protected final String TEXT_220 = ".setOutlineXOR(";
  protected final String TEXT_221 = ");";
  protected final String TEXT_222 = NL + "\t\t";
  protected final String TEXT_223 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_224 = ", ";
  protected final String TEXT_225 = "));";
  protected final String TEXT_226 = NL + "\t\t";
  protected final String TEXT_227 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_228 = "), getMapMode().DPtoLP(";
  protected final String TEXT_229 = ")));";
  protected final String TEXT_230 = NL + "\t\t";
  protected final String TEXT_231 = ".setForegroundColor(";
  protected final String TEXT_232 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_233 = ", ";
  protected final String TEXT_234 = ", ";
  protected final String TEXT_235 = ")";
  protected final String TEXT_236 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_237 = ");";
  protected final String TEXT_238 = NL + "\t\t";
  protected final String TEXT_239 = ".setBackgroundColor(";
  protected final String TEXT_240 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_241 = ", ";
  protected final String TEXT_242 = ", ";
  protected final String TEXT_243 = ")";
  protected final String TEXT_244 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_245 = ");";
  protected final String TEXT_246 = NL + "\t\t";
  protected final String TEXT_247 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_248 = "), getMapMode().DPtoLP(";
  protected final String TEXT_249 = "));";
  protected final String TEXT_250 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_251 = " = new ";
  protected final String TEXT_252 = "();";
  protected final String TEXT_253 = NL + "\t\t";
  protected final String TEXT_254 = " ";
  protected final String TEXT_255 = " = new ";
  protected final String TEXT_256 = "();" + NL + "\t\t";
  protected final String TEXT_257 = ".setText(\"";
  protected final String TEXT_258 = "\");";
  protected final String TEXT_259 = NL;
  protected final String TEXT_260 = NL + "\t\t";
  protected final String TEXT_261 = ".setForegroundColor(";
  protected final String TEXT_262 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_263 = ", ";
  protected final String TEXT_264 = ", ";
  protected final String TEXT_265 = ")";
  protected final String TEXT_266 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_267 = ");";
  protected final String TEXT_268 = NL + "\t\t";
  protected final String TEXT_269 = ".setBackgroundColor(";
  protected final String TEXT_270 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_271 = ", ";
  protected final String TEXT_272 = ", ";
  protected final String TEXT_273 = ")";
  protected final String TEXT_274 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_275 = ");";
  protected final String TEXT_276 = NL + "\t\t";
  protected final String TEXT_277 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_278 = "), getMapMode().DPtoLP(";
  protected final String TEXT_279 = "));";
  protected final String TEXT_280 = NL + "\t\t";
  protected final String TEXT_281 = ".add(";
  protected final String TEXT_282 = ");";
  protected final String TEXT_283 = NL + "\t\treturn ";
  protected final String TEXT_284 = ";" + NL + "\t}" + NL;
  protected final String TEXT_285 = NL + "}";
d177 1
a187 5
    
{
Shape figureInstance = shapeFig;
String figureVarName = "this";

d189 1
d191 2
a192 3
// PERHAPS, do this with reflection?

    if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d194 1
a194 1
    stringBuffer.append(figureVarName);
d196 1
a196 1
    stringBuffer.append(figureInstance.isFill());
d198 1
a198 1
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d200 1
a200 1
    stringBuffer.append(figureVarName);
a201 106
    stringBuffer.append(figureInstance.isOutline());
    stringBuffer.append(TEXT_12);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
    stringBuffer.append(TEXT_13);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(figureInstance.getLineWidth());
    stringBuffer.append(TEXT_15);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
    stringBuffer.append(TEXT_16);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_17);
    stringBuffer.append(figureInstance.getLineKind().getName());
    stringBuffer.append(TEXT_18);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
    stringBuffer.append(TEXT_19);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_20);
    stringBuffer.append(figureInstance.isXorFill());
    stringBuffer.append(TEXT_21);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
    stringBuffer.append(TEXT_22);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_23);
    stringBuffer.append(figureInstance.isXorOutline());
    stringBuffer.append(TEXT_24);
    } if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_25);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_27);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_28);
    }
    } else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;
    stringBuffer.append(TEXT_29);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(rrFigure.getCornerWidth());
    stringBuffer.append(TEXT_31);
    stringBuffer.append(rrFigure.getCornerHeight());
    stringBuffer.append(TEXT_32);
    }
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_33);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_34);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_35);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_36);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_37);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_38);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_39);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_40);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_41);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_42);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_43);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_44);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_45);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_46);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_47);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_48);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_49);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_50);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_51);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_52);
    }
    
}for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext();) {
		Figure next = (Figure) it.next();
    stringBuffer.append(TEXT_53);
    stringBuffer.append(next.getName());
    stringBuffer.append(TEXT_54);
    stringBuffer.append(next.getName());
    stringBuffer.append(TEXT_55);
    stringBuffer.append(next.getName());
    stringBuffer.append(TEXT_56);
    }
    stringBuffer.append(TEXT_57);
d206 1
a206 1
    stringBuffer.append(TEXT_58);
d208 1
a208 1
    stringBuffer.append(TEXT_59);
d210 1
a210 1
    stringBuffer.append(TEXT_60);
d212 1
a212 1
    stringBuffer.append(TEXT_61);
d214 1
a214 1
    stringBuffer.append(TEXT_62);
d216 1
a216 1
    stringBuffer.append(TEXT_63);
d218 1
a218 1
    stringBuffer.append(TEXT_64);
d224 1
a224 1
    stringBuffer.append(TEXT_65);
d231 1
a231 1
    stringBuffer.append(TEXT_66);
d233 1
a233 1
    stringBuffer.append(TEXT_67);
d235 1
a235 1
    stringBuffer.append(TEXT_68);
d237 2
a238 2
    stringBuffer.append(TEXT_69);
    stringBuffer.append(TEXT_70);
d242 1
a242 1
    stringBuffer.append(TEXT_71);
d244 1
a244 1
    stringBuffer.append(TEXT_72);
d246 1
a246 1
    stringBuffer.append(TEXT_73);
d248 1
a248 1
    stringBuffer.append(TEXT_74);
d250 1
a250 1
    stringBuffer.append(TEXT_75);
d252 1
a252 1
    stringBuffer.append(TEXT_76);
d254 1
a254 1
    stringBuffer.append(TEXT_77);
d257 1
a257 1
    stringBuffer.append(TEXT_78);
d260 1
a260 1
    stringBuffer.append(TEXT_79);
d262 1
a262 1
    stringBuffer.append(TEXT_80);
d264 1
a264 1
    stringBuffer.append(TEXT_81);
d266 1
a266 1
    stringBuffer.append(TEXT_82);
d268 1
a268 1
    stringBuffer.append(TEXT_83);
d270 1
a270 1
    stringBuffer.append(TEXT_84);
d272 1
a272 1
    stringBuffer.append(TEXT_85);
d275 1
a275 1
    stringBuffer.append(TEXT_86);
d278 1
a278 1
    stringBuffer.append(TEXT_87);
d280 1
a280 1
    stringBuffer.append(TEXT_88);
d282 1
a282 1
    stringBuffer.append(TEXT_89);
d284 1
a284 1
    stringBuffer.append(TEXT_90);
d288 1
a288 1
    stringBuffer.append(TEXT_91);
d290 1
a290 1
    stringBuffer.append(TEXT_92);
d292 1
a292 1
    stringBuffer.append(TEXT_93);
d294 3
a296 109
    stringBuffer.append(TEXT_94);
    stringBuffer.append(TEXT_95);
    
// PERHAPS, do this with reflection?

    if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
    stringBuffer.append(TEXT_96);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_97);
    stringBuffer.append(figureInstance.isFill());
    stringBuffer.append(TEXT_98);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
    stringBuffer.append(TEXT_99);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_100);
    stringBuffer.append(figureInstance.isOutline());
    stringBuffer.append(TEXT_101);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
    stringBuffer.append(TEXT_102);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_103);
    stringBuffer.append(figureInstance.getLineWidth());
    stringBuffer.append(TEXT_104);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
    stringBuffer.append(TEXT_105);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_106);
    stringBuffer.append(figureInstance.getLineKind().getName());
    stringBuffer.append(TEXT_107);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
    stringBuffer.append(TEXT_108);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(figureInstance.isXorFill());
    stringBuffer.append(TEXT_110);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
    stringBuffer.append(TEXT_111);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_112);
    stringBuffer.append(figureInstance.isXorOutline());
    stringBuffer.append(TEXT_113);
    } if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_114);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_115);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_116);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_117);
    }
    } else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;
    stringBuffer.append(TEXT_118);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_119);
    stringBuffer.append(rrFigure.getCornerWidth());
    stringBuffer.append(TEXT_120);
    stringBuffer.append(rrFigure.getCornerHeight());
    stringBuffer.append(TEXT_121);
    }
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_122);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_123);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_124);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_125);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_126);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_127);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_128);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_129);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_130);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_131);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_132);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_133);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_134);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_135);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_136);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_137);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_138);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_139);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_140);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_141);
    }
d298 1
a298 1
    stringBuffer.append(TEXT_142);
d300 1
a300 1
    stringBuffer.append(TEXT_143);
d302 1
a302 1
    stringBuffer.append(TEXT_144);
d306 1
a306 1
    stringBuffer.append(TEXT_145);
d308 1
a308 1
    stringBuffer.append(TEXT_146);
d310 1
a310 1
    stringBuffer.append(TEXT_147);
d312 1
a312 1
    stringBuffer.append(TEXT_148);
d314 1
a314 1
    stringBuffer.append(TEXT_149);
d316 2
a317 2
    stringBuffer.append(TEXT_150);
    stringBuffer.append(TEXT_151);
d321 1
a321 1
    stringBuffer.append(TEXT_152);
d323 1
a323 1
    stringBuffer.append(TEXT_153);
d325 1
a325 1
    stringBuffer.append(TEXT_154);
d327 1
a327 1
    stringBuffer.append(TEXT_155);
d329 1
a329 1
    stringBuffer.append(TEXT_156);
d331 1
a331 1
    stringBuffer.append(TEXT_157);
d333 1
a333 1
    stringBuffer.append(TEXT_158);
d336 1
a336 1
    stringBuffer.append(TEXT_159);
d339 1
a339 1
    stringBuffer.append(TEXT_160);
d341 1
a341 1
    stringBuffer.append(TEXT_161);
d343 1
a343 1
    stringBuffer.append(TEXT_162);
d345 1
a345 1
    stringBuffer.append(TEXT_163);
d347 1
a347 1
    stringBuffer.append(TEXT_164);
d349 1
a349 1
    stringBuffer.append(TEXT_165);
d351 1
a351 1
    stringBuffer.append(TEXT_166);
d354 1
a354 1
    stringBuffer.append(TEXT_167);
d357 1
a357 1
    stringBuffer.append(TEXT_168);
d359 1
a359 1
    stringBuffer.append(TEXT_169);
d361 1
a361 1
    stringBuffer.append(TEXT_170);
d363 1
a363 1
    stringBuffer.append(TEXT_171);
d367 1
a367 1
    stringBuffer.append(TEXT_172);
d382 1
a382 1
    stringBuffer.append(TEXT_173);
d389 1
a389 1
    stringBuffer.append(TEXT_174);
d391 1
a391 1
    stringBuffer.append(TEXT_175);
d393 1
a393 1
    stringBuffer.append(TEXT_176);
d395 2
a396 2
    stringBuffer.append(TEXT_177);
    stringBuffer.append(TEXT_178);
d400 1
a400 1
    stringBuffer.append(TEXT_179);
d402 1
a402 1
    stringBuffer.append(TEXT_180);
d404 1
a404 1
    stringBuffer.append(TEXT_181);
d406 1
a406 1
    stringBuffer.append(TEXT_182);
d408 1
a408 1
    stringBuffer.append(TEXT_183);
d410 1
a410 1
    stringBuffer.append(TEXT_184);
d412 1
a412 1
    stringBuffer.append(TEXT_185);
d415 1
a415 1
    stringBuffer.append(TEXT_186);
d418 1
a418 1
    stringBuffer.append(TEXT_187);
d420 1
a420 1
    stringBuffer.append(TEXT_188);
d422 1
a422 1
    stringBuffer.append(TEXT_189);
d424 1
a424 1
    stringBuffer.append(TEXT_190);
d426 1
a426 1
    stringBuffer.append(TEXT_191);
d428 1
a428 1
    stringBuffer.append(TEXT_192);
d430 1
a430 1
    stringBuffer.append(TEXT_193);
d433 1
a433 1
    stringBuffer.append(TEXT_194);
d436 1
a436 1
    stringBuffer.append(TEXT_195);
d438 1
a438 1
    stringBuffer.append(TEXT_196);
d440 1
a440 1
    stringBuffer.append(TEXT_197);
d442 1
a442 1
    stringBuffer.append(TEXT_198);
d446 1
a446 1
    stringBuffer.append(TEXT_199);
d448 1
a448 1
    stringBuffer.append(TEXT_200);
d450 1
a450 1
    stringBuffer.append(TEXT_201);
d452 3
a454 109
    stringBuffer.append(TEXT_202);
    stringBuffer.append(TEXT_203);
    
// PERHAPS, do this with reflection?

    if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
    stringBuffer.append(TEXT_204);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_205);
    stringBuffer.append(figureInstance.isFill());
    stringBuffer.append(TEXT_206);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
    stringBuffer.append(TEXT_207);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_208);
    stringBuffer.append(figureInstance.isOutline());
    stringBuffer.append(TEXT_209);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
    stringBuffer.append(TEXT_210);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_211);
    stringBuffer.append(figureInstance.getLineWidth());
    stringBuffer.append(TEXT_212);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
    stringBuffer.append(TEXT_213);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_214);
    stringBuffer.append(figureInstance.getLineKind().getName());
    stringBuffer.append(TEXT_215);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
    stringBuffer.append(TEXT_216);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_217);
    stringBuffer.append(figureInstance.isXorFill());
    stringBuffer.append(TEXT_218);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
    stringBuffer.append(TEXT_219);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_220);
    stringBuffer.append(figureInstance.isXorOutline());
    stringBuffer.append(TEXT_221);
    } if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_222);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_223);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_224);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_225);
    }
    } else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;
    stringBuffer.append(TEXT_226);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_227);
    stringBuffer.append(rrFigure.getCornerWidth());
    stringBuffer.append(TEXT_228);
    stringBuffer.append(rrFigure.getCornerHeight());
    stringBuffer.append(TEXT_229);
    }
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_230);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_231);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_232);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_233);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_234);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_235);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_236);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_237);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_238);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_239);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_240);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_241);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_242);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_243);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_244);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_245);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_246);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_247);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_248);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_249);
    }
d456 1
a456 1
    stringBuffer.append(TEXT_250);
d458 1
a458 1
    stringBuffer.append(TEXT_251);
d460 1
a460 1
    stringBuffer.append(TEXT_252);
d464 1
a464 1
    stringBuffer.append(TEXT_253);
d466 1
a466 1
    stringBuffer.append(TEXT_254);
d468 1
a468 1
    stringBuffer.append(TEXT_255);
d470 1
a470 1
    stringBuffer.append(TEXT_256);
d472 1
a472 1
    stringBuffer.append(TEXT_257);
d474 2
a475 2
    stringBuffer.append(TEXT_258);
    stringBuffer.append(TEXT_259);
d479 1
a479 1
    stringBuffer.append(TEXT_260);
d481 1
a481 1
    stringBuffer.append(TEXT_261);
d483 1
a483 1
    stringBuffer.append(TEXT_262);
d485 1
a485 1
    stringBuffer.append(TEXT_263);
d487 1
a487 1
    stringBuffer.append(TEXT_264);
d489 1
a489 1
    stringBuffer.append(TEXT_265);
d491 1
a491 1
    stringBuffer.append(TEXT_266);
d494 1
a494 1
    stringBuffer.append(TEXT_267);
d497 1
a497 1
    stringBuffer.append(TEXT_268);
d499 1
a499 1
    stringBuffer.append(TEXT_269);
d501 1
a501 1
    stringBuffer.append(TEXT_270);
d503 1
a503 1
    stringBuffer.append(TEXT_271);
d505 1
a505 1
    stringBuffer.append(TEXT_272);
d507 1
a507 1
    stringBuffer.append(TEXT_273);
d509 1
a509 1
    stringBuffer.append(TEXT_274);
d512 1
a512 1
    stringBuffer.append(TEXT_275);
d515 1
a515 1
    stringBuffer.append(TEXT_276);
d517 1
a517 1
    stringBuffer.append(TEXT_277);
d519 1
a519 1
    stringBuffer.append(TEXT_278);
d521 1
a521 1
    stringBuffer.append(TEXT_279);
d524 1
a524 1
    stringBuffer.append(TEXT_280);
d526 1
a526 1
    stringBuffer.append(TEXT_281);
d528 1
a528 1
    stringBuffer.append(TEXT_282);
d540 1
a540 1
    stringBuffer.append(TEXT_283);
d542 1
a542 1
    stringBuffer.append(TEXT_284);
d544 1
a544 1
    stringBuffer.append(TEXT_285);
@


1.6
log
@Correcting color-relative file names
@
text
@d5 1
d20 35
a54 35
  protected final String TEXT_1 = NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_2 = " extends ";
  protected final String TEXT_3 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_4 = "() {";
  protected final String TEXT_5 = NL;
  protected final String TEXT_6 = NL + "\t\t";
  protected final String TEXT_7 = ".setFill(";
  protected final String TEXT_8 = ");";
  protected final String TEXT_9 = NL + "\t\t";
  protected final String TEXT_10 = ".setOutline(";
  protected final String TEXT_11 = ");";
  protected final String TEXT_12 = NL + "\t\t";
  protected final String TEXT_13 = ".setLineWidth(";
  protected final String TEXT_14 = ");";
  protected final String TEXT_15 = NL + "\t\t";
  protected final String TEXT_16 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_17 = ");";
  protected final String TEXT_18 = NL + "\t\t";
  protected final String TEXT_19 = ".setFillXOR(";
  protected final String TEXT_20 = ");";
  protected final String TEXT_21 = NL + "\t\t";
  protected final String TEXT_22 = ".setOutlineXOR(";
  protected final String TEXT_23 = ");";
  protected final String TEXT_24 = NL + "\t\t";
  protected final String TEXT_25 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_26 = ", ";
  protected final String TEXT_27 = "));";
  protected final String TEXT_28 = NL + "\t\t";
  protected final String TEXT_29 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_30 = "), getMapMode().DPtoLP(";
  protected final String TEXT_31 = ")));";
  protected final String TEXT_32 = NL + "\t\t";
  protected final String TEXT_33 = ".setForegroundColor(";
  protected final String TEXT_34 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_35 = ", ";
d56 7
a62 7
  protected final String TEXT_37 = ")";
  protected final String TEXT_38 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_39 = ");";
  protected final String TEXT_40 = NL + "\t\t";
  protected final String TEXT_41 = ".setBackgroundColor(";
  protected final String TEXT_42 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_43 = ", ";
d64 29
a92 29
  protected final String TEXT_45 = ")";
  protected final String TEXT_46 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_47 = ");";
  protected final String TEXT_48 = NL + "\t\t";
  protected final String TEXT_49 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_50 = "), getMapMode().DPtoLP(";
  protected final String TEXT_51 = "));";
  protected final String TEXT_52 = NL + "\t\tsetFigure";
  protected final String TEXT_53 = "(createFigure";
  protected final String TEXT_54 = "());" + NL + "\t\tadd(getFigure";
  protected final String TEXT_55 = "());";
  protected final String TEXT_56 = NL + "\t}" + NL;
  protected final String TEXT_57 = NL + NL + "\tprivate IFigure f";
  protected final String TEXT_58 = "; " + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic IFigure getFigure";
  protected final String TEXT_59 = "() {" + NL + "\t\treturn f";
  protected final String TEXT_60 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setFigure";
  protected final String TEXT_61 = "(IFigure figure) {" + NL + "\t\tf";
  protected final String TEXT_62 = " = figure;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate IFigure createFigure";
  protected final String TEXT_63 = "() {";
  protected final String TEXT_64 = NL;
  protected final String TEXT_65 = NL + "\t\t";
  protected final String TEXT_66 = " ";
  protected final String TEXT_67 = " = new ";
  protected final String TEXT_68 = "();";
  protected final String TEXT_69 = NL;
  protected final String TEXT_70 = NL + "\t\t";
  protected final String TEXT_71 = ".setForegroundColor(";
  protected final String TEXT_72 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_73 = ", ";
d94 7
a100 7
  protected final String TEXT_75 = ")";
  protected final String TEXT_76 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_77 = ");";
  protected final String TEXT_78 = NL + "\t\t";
  protected final String TEXT_79 = ".setBackgroundColor(";
  protected final String TEXT_80 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_81 = ", ";
d102 42
a143 42
  protected final String TEXT_83 = ")";
  protected final String TEXT_84 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_85 = ");";
  protected final String TEXT_86 = NL + "\t\t";
  protected final String TEXT_87 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_88 = "), getMapMode().DPtoLP(";
  protected final String TEXT_89 = "));";
  protected final String TEXT_90 = NL + "\t\t";
  protected final String TEXT_91 = " ";
  protected final String TEXT_92 = " = new ";
  protected final String TEXT_93 = "();";
  protected final String TEXT_94 = NL;
  protected final String TEXT_95 = NL + "\t\t";
  protected final String TEXT_96 = ".setFill(";
  protected final String TEXT_97 = ");";
  protected final String TEXT_98 = NL + "\t\t";
  protected final String TEXT_99 = ".setOutline(";
  protected final String TEXT_100 = ");";
  protected final String TEXT_101 = NL + "\t\t";
  protected final String TEXT_102 = ".setLineWidth(";
  protected final String TEXT_103 = ");";
  protected final String TEXT_104 = NL + "\t\t";
  protected final String TEXT_105 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_106 = ");";
  protected final String TEXT_107 = NL + "\t\t";
  protected final String TEXT_108 = ".setFillXOR(";
  protected final String TEXT_109 = ");";
  protected final String TEXT_110 = NL + "\t\t";
  protected final String TEXT_111 = ".setOutlineXOR(";
  protected final String TEXT_112 = ");";
  protected final String TEXT_113 = NL + "\t\t";
  protected final String TEXT_114 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_115 = ", ";
  protected final String TEXT_116 = "));";
  protected final String TEXT_117 = NL + "\t\t";
  protected final String TEXT_118 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_119 = "), getMapMode().DPtoLP(";
  protected final String TEXT_120 = ")));";
  protected final String TEXT_121 = NL + "\t\t";
  protected final String TEXT_122 = ".setForegroundColor(";
  protected final String TEXT_123 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_124 = ", ";
d145 7
a151 7
  protected final String TEXT_126 = ")";
  protected final String TEXT_127 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_128 = ");";
  protected final String TEXT_129 = NL + "\t\t";
  protected final String TEXT_130 = ".setBackgroundColor(";
  protected final String TEXT_131 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_132 = ", ";
d153 21
a173 21
  protected final String TEXT_134 = ")";
  protected final String TEXT_135 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_136 = ");";
  protected final String TEXT_137 = NL + "\t\t";
  protected final String TEXT_138 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_139 = "), getMapMode().DPtoLP(";
  protected final String TEXT_140 = "));";
  protected final String TEXT_141 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_142 = " = new ";
  protected final String TEXT_143 = "();";
  protected final String TEXT_144 = NL + "\t\t";
  protected final String TEXT_145 = " ";
  protected final String TEXT_146 = " = new ";
  protected final String TEXT_147 = "();" + NL + "\t\t";
  protected final String TEXT_148 = ".setText(\"";
  protected final String TEXT_149 = "\");";
  protected final String TEXT_150 = NL;
  protected final String TEXT_151 = NL + "\t\t";
  protected final String TEXT_152 = ".setForegroundColor(";
  protected final String TEXT_153 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_154 = ", ";
d175 7
a181 7
  protected final String TEXT_156 = ")";
  protected final String TEXT_157 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_158 = ");";
  protected final String TEXT_159 = NL + "\t\t";
  protected final String TEXT_160 = ".setBackgroundColor(";
  protected final String TEXT_161 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_162 = ", ";
d183 8
a190 8
  protected final String TEXT_164 = ")";
  protected final String TEXT_165 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_166 = ");";
  protected final String TEXT_167 = NL + "\t\t";
  protected final String TEXT_168 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_169 = "), getMapMode().DPtoLP(";
  protected final String TEXT_170 = "));";
  protected final String TEXT_171 = NL;
d192 9
a200 9
  protected final String TEXT_173 = NL + "\t\t";
  protected final String TEXT_174 = " ";
  protected final String TEXT_175 = " = new ";
  protected final String TEXT_176 = "();";
  protected final String TEXT_177 = NL;
  protected final String TEXT_178 = NL + "\t\t";
  protected final String TEXT_179 = ".setForegroundColor(";
  protected final String TEXT_180 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_181 = ", ";
d202 7
a208 7
  protected final String TEXT_183 = ")";
  protected final String TEXT_184 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_185 = ");";
  protected final String TEXT_186 = NL + "\t\t";
  protected final String TEXT_187 = ".setBackgroundColor(";
  protected final String TEXT_188 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_189 = ", ";
d210 42
a251 42
  protected final String TEXT_191 = ")";
  protected final String TEXT_192 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_193 = ");";
  protected final String TEXT_194 = NL + "\t\t";
  protected final String TEXT_195 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_196 = "), getMapMode().DPtoLP(";
  protected final String TEXT_197 = "));";
  protected final String TEXT_198 = NL + "\t\t";
  protected final String TEXT_199 = " ";
  protected final String TEXT_200 = " = new ";
  protected final String TEXT_201 = "();";
  protected final String TEXT_202 = NL;
  protected final String TEXT_203 = NL + "\t\t";
  protected final String TEXT_204 = ".setFill(";
  protected final String TEXT_205 = ");";
  protected final String TEXT_206 = NL + "\t\t";
  protected final String TEXT_207 = ".setOutline(";
  protected final String TEXT_208 = ");";
  protected final String TEXT_209 = NL + "\t\t";
  protected final String TEXT_210 = ".setLineWidth(";
  protected final String TEXT_211 = ");";
  protected final String TEXT_212 = NL + "\t\t";
  protected final String TEXT_213 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_214 = ");";
  protected final String TEXT_215 = NL + "\t\t";
  protected final String TEXT_216 = ".setFillXOR(";
  protected final String TEXT_217 = ");";
  protected final String TEXT_218 = NL + "\t\t";
  protected final String TEXT_219 = ".setOutlineXOR(";
  protected final String TEXT_220 = ");";
  protected final String TEXT_221 = NL + "\t\t";
  protected final String TEXT_222 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_223 = ", ";
  protected final String TEXT_224 = "));";
  protected final String TEXT_225 = NL + "\t\t";
  protected final String TEXT_226 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_227 = "), getMapMode().DPtoLP(";
  protected final String TEXT_228 = ")));";
  protected final String TEXT_229 = NL + "\t\t";
  protected final String TEXT_230 = ".setForegroundColor(";
  protected final String TEXT_231 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_232 = ", ";
d253 7
a259 7
  protected final String TEXT_234 = ")";
  protected final String TEXT_235 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_236 = ");";
  protected final String TEXT_237 = NL + "\t\t";
  protected final String TEXT_238 = ".setBackgroundColor(";
  protected final String TEXT_239 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_240 = ", ";
d261 21
a281 21
  protected final String TEXT_242 = ")";
  protected final String TEXT_243 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_244 = ");";
  protected final String TEXT_245 = NL + "\t\t";
  protected final String TEXT_246 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_247 = "), getMapMode().DPtoLP(";
  protected final String TEXT_248 = "));";
  protected final String TEXT_249 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_250 = " = new ";
  protected final String TEXT_251 = "();";
  protected final String TEXT_252 = NL + "\t\t";
  protected final String TEXT_253 = " ";
  protected final String TEXT_254 = " = new ";
  protected final String TEXT_255 = "();" + NL + "\t\t";
  protected final String TEXT_256 = ".setText(\"";
  protected final String TEXT_257 = "\");";
  protected final String TEXT_258 = NL;
  protected final String TEXT_259 = NL + "\t\t";
  protected final String TEXT_260 = ".setForegroundColor(";
  protected final String TEXT_261 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_262 = ", ";
d283 7
a289 7
  protected final String TEXT_264 = ")";
  protected final String TEXT_265 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_266 = ");";
  protected final String TEXT_267 = NL + "\t\t";
  protected final String TEXT_268 = ".setBackgroundColor(";
  protected final String TEXT_269 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_270 = ", ";
d291 14
a304 13
  protected final String TEXT_272 = ")";
  protected final String TEXT_273 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_274 = ");";
  protected final String TEXT_275 = NL + "\t\t";
  protected final String TEXT_276 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_277 = "), getMapMode().DPtoLP(";
  protected final String TEXT_278 = "));";
  protected final String TEXT_279 = NL + "\t\t";
  protected final String TEXT_280 = ".add(";
  protected final String TEXT_281 = ");";
  protected final String TEXT_282 = NL + "\t\treturn ";
  protected final String TEXT_283 = ";" + NL + "\t}" + NL;
  protected final String TEXT_284 = NL + "}";
d310 3
a312 1
Shape shapeFig = (Shape) argument;
d316 2
a318 2
    stringBuffer.append(TEXT_2);
    stringBuffer.append(fqnSwitch.doSwitch(shapeFig));
d320 2
d323 1
a323 1
    stringBuffer.append(TEXT_4);
d329 1
a329 1
    stringBuffer.append(TEXT_5);
d334 1
a334 1
    stringBuffer.append(TEXT_6);
d336 1
a336 1
    stringBuffer.append(TEXT_7);
d338 1
a338 1
    stringBuffer.append(TEXT_8);
d340 1
a340 1
    stringBuffer.append(TEXT_9);
d342 1
a342 1
    stringBuffer.append(TEXT_10);
d344 1
a344 1
    stringBuffer.append(TEXT_11);
d346 1
a346 1
    stringBuffer.append(TEXT_12);
d348 1
a348 1
    stringBuffer.append(TEXT_13);
d350 1
a350 1
    stringBuffer.append(TEXT_14);
d352 1
a352 1
    stringBuffer.append(TEXT_15);
d354 1
a354 1
    stringBuffer.append(TEXT_16);
d356 1
a356 1
    stringBuffer.append(TEXT_17);
d358 1
a358 1
    stringBuffer.append(TEXT_18);
d360 1
a360 1
    stringBuffer.append(TEXT_19);
d362 1
a362 1
    stringBuffer.append(TEXT_20);
d364 1
a364 1
    stringBuffer.append(TEXT_21);
d366 1
a366 1
    stringBuffer.append(TEXT_22);
d368 1
a368 1
    stringBuffer.append(TEXT_23);
d372 1
a372 1
    stringBuffer.append(TEXT_24);
d374 1
a374 1
    stringBuffer.append(TEXT_25);
d376 1
a376 1
    stringBuffer.append(TEXT_26);
d378 1
a378 1
    stringBuffer.append(TEXT_27);
d382 1
a382 1
    stringBuffer.append(TEXT_28);
d384 1
a384 1
    stringBuffer.append(TEXT_29);
d386 1
a386 1
    stringBuffer.append(TEXT_30);
d388 1
a388 1
    stringBuffer.append(TEXT_31);
d393 1
a393 1
    stringBuffer.append(TEXT_32);
d395 1
a395 1
    stringBuffer.append(TEXT_33);
d397 1
a397 1
    stringBuffer.append(TEXT_34);
d399 1
a399 1
    stringBuffer.append(TEXT_35);
d401 1
a401 1
    stringBuffer.append(TEXT_36);
d403 1
a403 1
    stringBuffer.append(TEXT_37);
d405 1
a405 1
    stringBuffer.append(TEXT_38);
d408 1
a408 1
    stringBuffer.append(TEXT_39);
d411 1
a411 1
    stringBuffer.append(TEXT_40);
d413 1
a413 1
    stringBuffer.append(TEXT_41);
d415 1
a415 1
    stringBuffer.append(TEXT_42);
d417 1
a417 1
    stringBuffer.append(TEXT_43);
d419 1
a419 1
    stringBuffer.append(TEXT_44);
d421 1
a421 1
    stringBuffer.append(TEXT_45);
d423 1
a423 1
    stringBuffer.append(TEXT_46);
d426 1
a426 1
    stringBuffer.append(TEXT_47);
d429 1
a429 1
    stringBuffer.append(TEXT_48);
d431 1
a431 1
    stringBuffer.append(TEXT_49);
d433 1
a433 1
    stringBuffer.append(TEXT_50);
d435 1
a435 1
    stringBuffer.append(TEXT_51);
a439 2
    stringBuffer.append(TEXT_52);
    stringBuffer.append(next.getName());
d445 2
d448 1
a448 1
    stringBuffer.append(TEXT_56);
a452 2
    stringBuffer.append(TEXT_57);
    stringBuffer.append(figure.getName());
d464 2
d471 1
a471 1
    stringBuffer.append(TEXT_64);
d478 1
a478 1
    stringBuffer.append(TEXT_65);
d480 1
a480 1
    stringBuffer.append(TEXT_66);
d482 1
a482 1
    stringBuffer.append(TEXT_67);
a483 1
    stringBuffer.append(TEXT_68);
d485 1
d489 1
a489 1
    stringBuffer.append(TEXT_70);
d491 1
a491 1
    stringBuffer.append(TEXT_71);
d493 1
a493 1
    stringBuffer.append(TEXT_72);
d495 1
a495 1
    stringBuffer.append(TEXT_73);
d497 1
a497 1
    stringBuffer.append(TEXT_74);
d499 1
a499 1
    stringBuffer.append(TEXT_75);
d501 1
a501 1
    stringBuffer.append(TEXT_76);
d504 1
a504 1
    stringBuffer.append(TEXT_77);
d507 1
a507 1
    stringBuffer.append(TEXT_78);
d509 1
a509 1
    stringBuffer.append(TEXT_79);
d511 1
a511 1
    stringBuffer.append(TEXT_80);
d513 1
a513 1
    stringBuffer.append(TEXT_81);
d515 1
a515 1
    stringBuffer.append(TEXT_82);
d517 1
a517 1
    stringBuffer.append(TEXT_83);
d519 1
a519 1
    stringBuffer.append(TEXT_84);
d522 1
a522 1
    stringBuffer.append(TEXT_85);
d525 1
a525 1
    stringBuffer.append(TEXT_86);
d527 1
a527 1
    stringBuffer.append(TEXT_87);
d529 1
a529 1
    stringBuffer.append(TEXT_88);
d531 1
a531 1
    stringBuffer.append(TEXT_89);
d535 1
a535 1
    stringBuffer.append(TEXT_90);
d537 1
a537 1
    stringBuffer.append(TEXT_91);
d539 1
a539 1
    stringBuffer.append(TEXT_92);
a540 1
    stringBuffer.append(TEXT_93);
d542 1
d547 1
a547 1
    stringBuffer.append(TEXT_95);
d549 1
a549 1
    stringBuffer.append(TEXT_96);
d551 1
a551 1
    stringBuffer.append(TEXT_97);
d553 1
a553 1
    stringBuffer.append(TEXT_98);
d555 1
a555 1
    stringBuffer.append(TEXT_99);
d557 1
a557 1
    stringBuffer.append(TEXT_100);
d559 1
a559 1
    stringBuffer.append(TEXT_101);
d561 1
a561 1
    stringBuffer.append(TEXT_102);
d563 1
a563 1
    stringBuffer.append(TEXT_103);
d565 1
a565 1
    stringBuffer.append(TEXT_104);
d567 1
a567 1
    stringBuffer.append(TEXT_105);
d569 1
a569 1
    stringBuffer.append(TEXT_106);
d571 1
a571 1
    stringBuffer.append(TEXT_107);
d573 1
a573 1
    stringBuffer.append(TEXT_108);
d575 1
a575 1
    stringBuffer.append(TEXT_109);
d577 1
a577 1
    stringBuffer.append(TEXT_110);
d579 1
a579 1
    stringBuffer.append(TEXT_111);
d581 1
a581 1
    stringBuffer.append(TEXT_112);
d585 1
a585 1
    stringBuffer.append(TEXT_113);
d587 1
a587 1
    stringBuffer.append(TEXT_114);
d589 1
a589 1
    stringBuffer.append(TEXT_115);
d591 1
a591 1
    stringBuffer.append(TEXT_116);
d595 1
a595 1
    stringBuffer.append(TEXT_117);
d597 1
a597 1
    stringBuffer.append(TEXT_118);
d599 1
a599 1
    stringBuffer.append(TEXT_119);
d601 1
a601 1
    stringBuffer.append(TEXT_120);
d606 1
a606 1
    stringBuffer.append(TEXT_121);
d608 1
a608 1
    stringBuffer.append(TEXT_122);
d610 1
a610 1
    stringBuffer.append(TEXT_123);
d612 1
a612 1
    stringBuffer.append(TEXT_124);
d614 1
a614 1
    stringBuffer.append(TEXT_125);
d616 1
a616 1
    stringBuffer.append(TEXT_126);
d618 1
a618 1
    stringBuffer.append(TEXT_127);
d621 1
a621 1
    stringBuffer.append(TEXT_128);
d624 1
a624 1
    stringBuffer.append(TEXT_129);
d626 1
a626 1
    stringBuffer.append(TEXT_130);
d628 1
a628 1
    stringBuffer.append(TEXT_131);
d630 1
a630 1
    stringBuffer.append(TEXT_132);
d632 1
a632 1
    stringBuffer.append(TEXT_133);
d634 1
a634 1
    stringBuffer.append(TEXT_134);
d636 1
a636 1
    stringBuffer.append(TEXT_135);
d639 1
a639 1
    stringBuffer.append(TEXT_136);
d642 1
a642 1
    stringBuffer.append(TEXT_137);
d644 1
a644 1
    stringBuffer.append(TEXT_138);
d646 1
a646 1
    stringBuffer.append(TEXT_139);
d648 1
a648 1
    stringBuffer.append(TEXT_140);
d651 1
a651 1
    stringBuffer.append(TEXT_141);
d653 1
a653 1
    stringBuffer.append(TEXT_142);
d655 1
a655 1
    stringBuffer.append(TEXT_143);
d659 1
a659 1
    stringBuffer.append(TEXT_144);
d661 1
a661 1
    stringBuffer.append(TEXT_145);
d663 1
a663 1
    stringBuffer.append(TEXT_146);
d665 1
a665 1
    stringBuffer.append(TEXT_147);
d667 1
a667 1
    stringBuffer.append(TEXT_148);
a668 1
    stringBuffer.append(TEXT_149);
d670 1
d674 1
a674 1
    stringBuffer.append(TEXT_151);
d676 1
a676 1
    stringBuffer.append(TEXT_152);
d678 1
a678 1
    stringBuffer.append(TEXT_153);
d680 1
a680 1
    stringBuffer.append(TEXT_154);
d682 1
a682 1
    stringBuffer.append(TEXT_155);
d684 1
a684 1
    stringBuffer.append(TEXT_156);
d686 1
a686 1
    stringBuffer.append(TEXT_157);
d689 1
a689 1
    stringBuffer.append(TEXT_158);
d692 1
a692 1
    stringBuffer.append(TEXT_159);
d694 1
a694 1
    stringBuffer.append(TEXT_160);
d696 1
a696 1
    stringBuffer.append(TEXT_161);
d698 1
a698 1
    stringBuffer.append(TEXT_162);
d700 1
a700 1
    stringBuffer.append(TEXT_163);
d702 1
a702 1
    stringBuffer.append(TEXT_164);
d704 1
a704 1
    stringBuffer.append(TEXT_165);
d707 1
a707 1
    stringBuffer.append(TEXT_166);
d710 1
a710 1
    stringBuffer.append(TEXT_167);
d712 1
a712 1
    stringBuffer.append(TEXT_168);
d714 1
a714 1
    stringBuffer.append(TEXT_169);
d716 1
a716 1
    stringBuffer.append(TEXT_170);
d720 1
a720 1
    stringBuffer.append(TEXT_171);
d735 1
a735 1
    stringBuffer.append(TEXT_172);
d742 1
a742 1
    stringBuffer.append(TEXT_173);
d744 1
a744 1
    stringBuffer.append(TEXT_174);
d746 1
a746 1
    stringBuffer.append(TEXT_175);
a747 1
    stringBuffer.append(TEXT_176);
d749 1
d753 1
a753 1
    stringBuffer.append(TEXT_178);
d755 1
a755 1
    stringBuffer.append(TEXT_179);
d757 1
a757 1
    stringBuffer.append(TEXT_180);
d759 1
a759 1
    stringBuffer.append(TEXT_181);
d761 1
a761 1
    stringBuffer.append(TEXT_182);
d763 1
a763 1
    stringBuffer.append(TEXT_183);
d765 1
a765 1
    stringBuffer.append(TEXT_184);
d768 1
a768 1
    stringBuffer.append(TEXT_185);
d771 1
a771 1
    stringBuffer.append(TEXT_186);
d773 1
a773 1
    stringBuffer.append(TEXT_187);
d775 1
a775 1
    stringBuffer.append(TEXT_188);
d777 1
a777 1
    stringBuffer.append(TEXT_189);
d779 1
a779 1
    stringBuffer.append(TEXT_190);
d781 1
a781 1
    stringBuffer.append(TEXT_191);
d783 1
a783 1
    stringBuffer.append(TEXT_192);
d786 1
a786 1
    stringBuffer.append(TEXT_193);
d789 1
a789 1
    stringBuffer.append(TEXT_194);
d791 1
a791 1
    stringBuffer.append(TEXT_195);
d793 1
a793 1
    stringBuffer.append(TEXT_196);
d795 1
a795 1
    stringBuffer.append(TEXT_197);
d799 1
a799 1
    stringBuffer.append(TEXT_198);
d801 1
a801 1
    stringBuffer.append(TEXT_199);
d803 1
a803 1
    stringBuffer.append(TEXT_200);
a804 1
    stringBuffer.append(TEXT_201);
d806 1
d811 1
a811 1
    stringBuffer.append(TEXT_203);
d813 1
a813 1
    stringBuffer.append(TEXT_204);
d815 1
a815 1
    stringBuffer.append(TEXT_205);
d817 1
a817 1
    stringBuffer.append(TEXT_206);
d819 1
a819 1
    stringBuffer.append(TEXT_207);
d821 1
a821 1
    stringBuffer.append(TEXT_208);
d823 1
a823 1
    stringBuffer.append(TEXT_209);
d825 1
a825 1
    stringBuffer.append(TEXT_210);
d827 1
a827 1
    stringBuffer.append(TEXT_211);
d829 1
a829 1
    stringBuffer.append(TEXT_212);
d831 1
a831 1
    stringBuffer.append(TEXT_213);
d833 1
a833 1
    stringBuffer.append(TEXT_214);
d835 1
a835 1
    stringBuffer.append(TEXT_215);
d837 1
a837 1
    stringBuffer.append(TEXT_216);
d839 1
a839 1
    stringBuffer.append(TEXT_217);
d841 1
a841 1
    stringBuffer.append(TEXT_218);
d843 1
a843 1
    stringBuffer.append(TEXT_219);
d845 1
a845 1
    stringBuffer.append(TEXT_220);
d849 1
a849 1
    stringBuffer.append(TEXT_221);
d851 1
a851 1
    stringBuffer.append(TEXT_222);
d853 1
a853 1
    stringBuffer.append(TEXT_223);
d855 1
a855 1
    stringBuffer.append(TEXT_224);
d859 1
a859 1
    stringBuffer.append(TEXT_225);
d861 1
a861 1
    stringBuffer.append(TEXT_226);
d863 1
a863 1
    stringBuffer.append(TEXT_227);
d865 1
a865 1
    stringBuffer.append(TEXT_228);
d870 1
a870 1
    stringBuffer.append(TEXT_229);
d872 1
a872 1
    stringBuffer.append(TEXT_230);
d874 1
a874 1
    stringBuffer.append(TEXT_231);
d876 1
a876 1
    stringBuffer.append(TEXT_232);
d878 1
a878 1
    stringBuffer.append(TEXT_233);
d880 1
a880 1
    stringBuffer.append(TEXT_234);
d882 1
a882 1
    stringBuffer.append(TEXT_235);
d885 1
a885 1
    stringBuffer.append(TEXT_236);
d888 1
a888 1
    stringBuffer.append(TEXT_237);
d890 1
a890 1
    stringBuffer.append(TEXT_238);
d892 1
a892 1
    stringBuffer.append(TEXT_239);
d894 1
a894 1
    stringBuffer.append(TEXT_240);
d896 1
a896 1
    stringBuffer.append(TEXT_241);
d898 1
a898 1
    stringBuffer.append(TEXT_242);
d900 1
a900 1
    stringBuffer.append(TEXT_243);
d903 1
a903 1
    stringBuffer.append(TEXT_244);
d906 1
a906 1
    stringBuffer.append(TEXT_245);
d908 1
a908 1
    stringBuffer.append(TEXT_246);
d910 1
a910 1
    stringBuffer.append(TEXT_247);
d912 1
a912 1
    stringBuffer.append(TEXT_248);
d915 1
a915 1
    stringBuffer.append(TEXT_249);
d917 1
a917 1
    stringBuffer.append(TEXT_250);
d919 1
a919 1
    stringBuffer.append(TEXT_251);
d923 1
a923 1
    stringBuffer.append(TEXT_252);
d925 1
a925 1
    stringBuffer.append(TEXT_253);
d927 1
a927 1
    stringBuffer.append(TEXT_254);
d929 1
a929 1
    stringBuffer.append(TEXT_255);
d931 1
a931 1
    stringBuffer.append(TEXT_256);
a932 1
    stringBuffer.append(TEXT_257);
d934 1
d938 1
a938 1
    stringBuffer.append(TEXT_259);
d940 1
a940 1
    stringBuffer.append(TEXT_260);
d942 1
a942 1
    stringBuffer.append(TEXT_261);
d944 1
a944 1
    stringBuffer.append(TEXT_262);
d946 1
a946 1
    stringBuffer.append(TEXT_263);
d948 1
a948 1
    stringBuffer.append(TEXT_264);
d950 1
a950 1
    stringBuffer.append(TEXT_265);
d953 1
a953 1
    stringBuffer.append(TEXT_266);
d956 1
a956 1
    stringBuffer.append(TEXT_267);
d958 1
a958 1
    stringBuffer.append(TEXT_268);
d960 1
a960 1
    stringBuffer.append(TEXT_269);
d962 1
a962 1
    stringBuffer.append(TEXT_270);
d964 1
a964 1
    stringBuffer.append(TEXT_271);
d966 1
a966 1
    stringBuffer.append(TEXT_272);
d968 1
a968 1
    stringBuffer.append(TEXT_273);
d971 1
a971 1
    stringBuffer.append(TEXT_274);
d974 1
a974 1
    stringBuffer.append(TEXT_275);
d976 1
a976 1
    stringBuffer.append(TEXT_276);
d978 1
a978 1
    stringBuffer.append(TEXT_277);
d980 1
a980 1
    stringBuffer.append(TEXT_278);
d983 1
a983 1
    stringBuffer.append(TEXT_279);
d985 1
a985 1
    stringBuffer.append(TEXT_280);
d987 1
a987 1
    stringBuffer.append(TEXT_281);
d999 1
a999 1
    stringBuffer.append(TEXT_282);
d1001 1
a1001 1
    stringBuffer.append(TEXT_283);
d1003 2
a1004 1
    stringBuffer.append(TEXT_284);
@


1.5
log
@support figure's preferred size
@
text
@d52 1
a52 1
  protected final String TEXT_34 = "new Color(null, ";
d56 1
a56 1
  protected final String TEXT_38 = "ColorConstants.";
d60 1
a60 1
  protected final String TEXT_42 = "new Color(null, ";
d64 1
a64 1
  protected final String TEXT_46 = "ColorConstants.";
d90 1
a90 1
  protected final String TEXT_72 = "new Color(null, ";
d94 1
a94 1
  protected final String TEXT_76 = "ColorConstants.";
d98 1
a98 1
  protected final String TEXT_80 = "new Color(null, ";
d102 1
a102 1
  protected final String TEXT_84 = "ColorConstants.";
d141 1
a141 1
  protected final String TEXT_123 = "new Color(null, ";
d145 1
a145 1
  protected final String TEXT_127 = "ColorConstants.";
d149 1
a149 1
  protected final String TEXT_131 = "new Color(null, ";
d153 1
a153 1
  protected final String TEXT_135 = "ColorConstants.";
d171 1
a171 1
  protected final String TEXT_153 = "new Color(null, ";
d175 1
a175 1
  protected final String TEXT_157 = "ColorConstants.";
d179 1
a179 1
  protected final String TEXT_161 = "new Color(null, ";
d183 1
a183 1
  protected final String TEXT_165 = "ColorConstants.";
d198 1
a198 1
  protected final String TEXT_180 = "new Color(null, ";
d202 1
a202 1
  protected final String TEXT_184 = "ColorConstants.";
d206 1
a206 1
  protected final String TEXT_188 = "new Color(null, ";
d210 1
a210 1
  protected final String TEXT_192 = "ColorConstants.";
d249 1
a249 1
  protected final String TEXT_231 = "new Color(null, ";
d253 1
a253 1
  protected final String TEXT_235 = "ColorConstants.";
d257 1
a257 1
  protected final String TEXT_239 = "new Color(null, ";
d261 1
a261 1
  protected final String TEXT_243 = "ColorConstants.";
d279 1
a279 1
  protected final String TEXT_261 = "new Color(null, ";
d283 1
a283 1
  protected final String TEXT_265 = "ColorConstants.";
d287 1
a287 1
  protected final String TEXT_269 = "new Color(null, ";
d291 1
a291 1
  protected final String TEXT_273 = "ColorConstants.";
@


1.4
log
@support Figure.color attributes
@
text
@d66 42
a107 42
  protected final String TEXT_48 = NL + "\t\tsetFigure";
  protected final String TEXT_49 = "(createFigure";
  protected final String TEXT_50 = "());" + NL + "\t\tadd(getFigure";
  protected final String TEXT_51 = "());";
  protected final String TEXT_52 = NL + "\t}" + NL;
  protected final String TEXT_53 = NL + NL + "\tprivate IFigure f";
  protected final String TEXT_54 = "; " + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic IFigure getFigure";
  protected final String TEXT_55 = "() {" + NL + "\t\treturn f";
  protected final String TEXT_56 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setFigure";
  protected final String TEXT_57 = "(IFigure figure) {" + NL + "\t\tf";
  protected final String TEXT_58 = " = figure;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate IFigure createFigure";
  protected final String TEXT_59 = "() {";
  protected final String TEXT_60 = NL;
  protected final String TEXT_61 = NL + "\t\t";
  protected final String TEXT_62 = " ";
  protected final String TEXT_63 = " = new ";
  protected final String TEXT_64 = "();";
  protected final String TEXT_65 = NL;
  protected final String TEXT_66 = NL + "\t\t";
  protected final String TEXT_67 = ".setForegroundColor(";
  protected final String TEXT_68 = "new Color(null, ";
  protected final String TEXT_69 = ", ";
  protected final String TEXT_70 = ", ";
  protected final String TEXT_71 = ")";
  protected final String TEXT_72 = "ColorConstants.";
  protected final String TEXT_73 = ");";
  protected final String TEXT_74 = NL + "\t\t";
  protected final String TEXT_75 = ".setBackgroundColor(";
  protected final String TEXT_76 = "new Color(null, ";
  protected final String TEXT_77 = ", ";
  protected final String TEXT_78 = ", ";
  protected final String TEXT_79 = ")";
  protected final String TEXT_80 = "ColorConstants.";
  protected final String TEXT_81 = ");";
  protected final String TEXT_82 = NL + "\t\t";
  protected final String TEXT_83 = " ";
  protected final String TEXT_84 = " = new ";
  protected final String TEXT_85 = "();";
  protected final String TEXT_86 = NL;
  protected final String TEXT_87 = NL + "\t\t";
  protected final String TEXT_88 = ".setFill(";
  protected final String TEXT_89 = ");";
d109 22
a130 22
  protected final String TEXT_91 = ".setOutline(";
  protected final String TEXT_92 = ");";
  protected final String TEXT_93 = NL + "\t\t";
  protected final String TEXT_94 = ".setLineWidth(";
  protected final String TEXT_95 = ");";
  protected final String TEXT_96 = NL + "\t\t";
  protected final String TEXT_97 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_98 = ");";
  protected final String TEXT_99 = NL + "\t\t";
  protected final String TEXT_100 = ".setFillXOR(";
  protected final String TEXT_101 = ");";
  protected final String TEXT_102 = NL + "\t\t";
  protected final String TEXT_103 = ".setOutlineXOR(";
  protected final String TEXT_104 = ");";
  protected final String TEXT_105 = NL + "\t\t";
  protected final String TEXT_106 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_107 = ", ";
  protected final String TEXT_108 = "));";
  protected final String TEXT_109 = NL + "\t\t";
  protected final String TEXT_110 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_111 = "), getMapMode().DPtoLP(";
  protected final String TEXT_112 = ")));";
d132 7
a138 7
  protected final String TEXT_114 = ".setForegroundColor(";
  protected final String TEXT_115 = "new Color(null, ";
  protected final String TEXT_116 = ", ";
  protected final String TEXT_117 = ", ";
  protected final String TEXT_118 = ")";
  protected final String TEXT_119 = "ColorConstants.";
  protected final String TEXT_120 = ");";
d140 1
a140 1
  protected final String TEXT_122 = ".setBackgroundColor(";
d147 49
a195 49
  protected final String TEXT_129 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_130 = " = new ";
  protected final String TEXT_131 = "();";
  protected final String TEXT_132 = NL + "\t\t";
  protected final String TEXT_133 = " ";
  protected final String TEXT_134 = " = new ";
  protected final String TEXT_135 = "();" + NL + "\t\t";
  protected final String TEXT_136 = ".setText(\"";
  protected final String TEXT_137 = "\");";
  protected final String TEXT_138 = NL;
  protected final String TEXT_139 = NL + "\t\t";
  protected final String TEXT_140 = ".setForegroundColor(";
  protected final String TEXT_141 = "new Color(null, ";
  protected final String TEXT_142 = ", ";
  protected final String TEXT_143 = ", ";
  protected final String TEXT_144 = ")";
  protected final String TEXT_145 = "ColorConstants.";
  protected final String TEXT_146 = ");";
  protected final String TEXT_147 = NL + "\t\t";
  protected final String TEXT_148 = ".setBackgroundColor(";
  protected final String TEXT_149 = "new Color(null, ";
  protected final String TEXT_150 = ", ";
  protected final String TEXT_151 = ", ";
  protected final String TEXT_152 = ")";
  protected final String TEXT_153 = "ColorConstants.";
  protected final String TEXT_154 = ");";
  protected final String TEXT_155 = NL;
  protected final String TEXT_156 = NL;
  protected final String TEXT_157 = NL + "\t\t";
  protected final String TEXT_158 = " ";
  protected final String TEXT_159 = " = new ";
  protected final String TEXT_160 = "();";
  protected final String TEXT_161 = NL;
  protected final String TEXT_162 = NL + "\t\t";
  protected final String TEXT_163 = ".setForegroundColor(";
  protected final String TEXT_164 = "new Color(null, ";
  protected final String TEXT_165 = ", ";
  protected final String TEXT_166 = ", ";
  protected final String TEXT_167 = ")";
  protected final String TEXT_168 = "ColorConstants.";
  protected final String TEXT_169 = ");";
  protected final String TEXT_170 = NL + "\t\t";
  protected final String TEXT_171 = ".setBackgroundColor(";
  protected final String TEXT_172 = "new Color(null, ";
  protected final String TEXT_173 = ", ";
  protected final String TEXT_174 = ", ";
  protected final String TEXT_175 = ")";
  protected final String TEXT_176 = "ColorConstants.";
  protected final String TEXT_177 = ");";
d197 6
a202 6
  protected final String TEXT_179 = " ";
  protected final String TEXT_180 = " = new ";
  protected final String TEXT_181 = "();";
  protected final String TEXT_182 = NL;
  protected final String TEXT_183 = NL + "\t\t";
  protected final String TEXT_184 = ".setFill(";
d205 11
a215 11
  protected final String TEXT_187 = ".setOutline(";
  protected final String TEXT_188 = ");";
  protected final String TEXT_189 = NL + "\t\t";
  protected final String TEXT_190 = ".setLineWidth(";
  protected final String TEXT_191 = ");";
  protected final String TEXT_192 = NL + "\t\t";
  protected final String TEXT_193 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_194 = ");";
  protected final String TEXT_195 = NL + "\t\t";
  protected final String TEXT_196 = ".setFillXOR(";
  protected final String TEXT_197 = ");";
d217 10
a226 10
  protected final String TEXT_199 = ".setOutlineXOR(";
  protected final String TEXT_200 = ");";
  protected final String TEXT_201 = NL + "\t\t";
  protected final String TEXT_202 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_203 = ", ";
  protected final String TEXT_204 = "));";
  protected final String TEXT_205 = NL + "\t\t";
  protected final String TEXT_206 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_207 = "), getMapMode().DPtoLP(";
  protected final String TEXT_208 = ")));";
d228 75
a302 47
  protected final String TEXT_210 = ".setForegroundColor(";
  protected final String TEXT_211 = "new Color(null, ";
  protected final String TEXT_212 = ", ";
  protected final String TEXT_213 = ", ";
  protected final String TEXT_214 = ")";
  protected final String TEXT_215 = "ColorConstants.";
  protected final String TEXT_216 = ");";
  protected final String TEXT_217 = NL + "\t\t";
  protected final String TEXT_218 = ".setBackgroundColor(";
  protected final String TEXT_219 = "new Color(null, ";
  protected final String TEXT_220 = ", ";
  protected final String TEXT_221 = ", ";
  protected final String TEXT_222 = ")";
  protected final String TEXT_223 = "ColorConstants.";
  protected final String TEXT_224 = ");";
  protected final String TEXT_225 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_226 = " = new ";
  protected final String TEXT_227 = "();";
  protected final String TEXT_228 = NL + "\t\t";
  protected final String TEXT_229 = " ";
  protected final String TEXT_230 = " = new ";
  protected final String TEXT_231 = "();" + NL + "\t\t";
  protected final String TEXT_232 = ".setText(\"";
  protected final String TEXT_233 = "\");";
  protected final String TEXT_234 = NL;
  protected final String TEXT_235 = NL + "\t\t";
  protected final String TEXT_236 = ".setForegroundColor(";
  protected final String TEXT_237 = "new Color(null, ";
  protected final String TEXT_238 = ", ";
  protected final String TEXT_239 = ", ";
  protected final String TEXT_240 = ")";
  protected final String TEXT_241 = "ColorConstants.";
  protected final String TEXT_242 = ");";
  protected final String TEXT_243 = NL + "\t\t";
  protected final String TEXT_244 = ".setBackgroundColor(";
  protected final String TEXT_245 = "new Color(null, ";
  protected final String TEXT_246 = ", ";
  protected final String TEXT_247 = ", ";
  protected final String TEXT_248 = ")";
  protected final String TEXT_249 = "ColorConstants.";
  protected final String TEXT_250 = ");";
  protected final String TEXT_251 = NL + "\t\t";
  protected final String TEXT_252 = ".add(";
  protected final String TEXT_253 = ");";
  protected final String TEXT_254 = NL + "\t\treturn ";
  protected final String TEXT_255 = ";" + NL + "\t}" + NL;
  protected final String TEXT_256 = NL + "}";
d421 9
d434 1
a434 1
    stringBuffer.append(TEXT_48);
d436 1
a436 1
    stringBuffer.append(TEXT_49);
d438 1
a438 1
    stringBuffer.append(TEXT_50);
d440 1
a440 1
    stringBuffer.append(TEXT_51);
d442 1
a442 1
    stringBuffer.append(TEXT_52);
d447 1
a447 1
    stringBuffer.append(TEXT_53);
d449 1
a449 1
    stringBuffer.append(TEXT_54);
d451 1
a451 1
    stringBuffer.append(TEXT_55);
d453 1
a453 1
    stringBuffer.append(TEXT_56);
d455 1
a455 1
    stringBuffer.append(TEXT_57);
d457 1
a457 1
    stringBuffer.append(TEXT_58);
d459 1
a459 1
    stringBuffer.append(TEXT_59);
d465 1
a465 1
    stringBuffer.append(TEXT_60);
d472 1
a472 1
    stringBuffer.append(TEXT_61);
d474 1
a474 1
    stringBuffer.append(TEXT_62);
d476 1
a476 1
    stringBuffer.append(TEXT_63);
d478 2
a479 2
    stringBuffer.append(TEXT_64);
    stringBuffer.append(TEXT_65);
d483 1
a483 1
    stringBuffer.append(TEXT_66);
d485 1
a485 1
    stringBuffer.append(TEXT_67);
d487 1
a487 1
    stringBuffer.append(TEXT_68);
d489 1
a489 1
    stringBuffer.append(TEXT_69);
d491 1
a491 1
    stringBuffer.append(TEXT_70);
d493 1
a493 1
    stringBuffer.append(TEXT_71);
d495 1
a495 1
    stringBuffer.append(TEXT_72);
d498 1
a498 1
    stringBuffer.append(TEXT_73);
d501 1
a501 1
    stringBuffer.append(TEXT_74);
d503 1
a503 1
    stringBuffer.append(TEXT_75);
d505 1
a505 1
    stringBuffer.append(TEXT_76);
d507 1
a507 1
    stringBuffer.append(TEXT_77);
d509 1
a509 1
    stringBuffer.append(TEXT_78);
d511 1
a511 1
    stringBuffer.append(TEXT_79);
d513 1
a513 1
    stringBuffer.append(TEXT_80);
d516 10
a525 1
    stringBuffer.append(TEXT_81);
d529 1
a529 1
    stringBuffer.append(TEXT_82);
d531 1
a531 1
    stringBuffer.append(TEXT_83);
d533 1
a533 1
    stringBuffer.append(TEXT_84);
d535 2
a536 2
    stringBuffer.append(TEXT_85);
    stringBuffer.append(TEXT_86);
d541 1
a541 1
    stringBuffer.append(TEXT_87);
d543 1
a543 1
    stringBuffer.append(TEXT_88);
d545 1
a545 1
    stringBuffer.append(TEXT_89);
d547 1
a547 1
    stringBuffer.append(TEXT_90);
d549 1
a549 1
    stringBuffer.append(TEXT_91);
d551 1
a551 1
    stringBuffer.append(TEXT_92);
d553 1
a553 1
    stringBuffer.append(TEXT_93);
d555 1
a555 1
    stringBuffer.append(TEXT_94);
d557 1
a557 1
    stringBuffer.append(TEXT_95);
d559 1
a559 1
    stringBuffer.append(TEXT_96);
d561 1
a561 1
    stringBuffer.append(TEXT_97);
d563 1
a563 1
    stringBuffer.append(TEXT_98);
d565 1
a565 1
    stringBuffer.append(TEXT_99);
d567 1
a567 1
    stringBuffer.append(TEXT_100);
d569 1
a569 1
    stringBuffer.append(TEXT_101);
d571 1
a571 1
    stringBuffer.append(TEXT_102);
d573 1
a573 1
    stringBuffer.append(TEXT_103);
d575 1
a575 1
    stringBuffer.append(TEXT_104);
d579 1
a579 1
    stringBuffer.append(TEXT_105);
d581 1
a581 1
    stringBuffer.append(TEXT_106);
d583 1
a583 1
    stringBuffer.append(TEXT_107);
d585 1
a585 1
    stringBuffer.append(TEXT_108);
d589 1
a589 1
    stringBuffer.append(TEXT_109);
d591 1
a591 1
    stringBuffer.append(TEXT_110);
d593 1
a593 1
    stringBuffer.append(TEXT_111);
d595 1
a595 1
    stringBuffer.append(TEXT_112);
d600 1
a600 1
    stringBuffer.append(TEXT_113);
d602 1
a602 1
    stringBuffer.append(TEXT_114);
d604 1
a604 1
    stringBuffer.append(TEXT_115);
d606 1
a606 1
    stringBuffer.append(TEXT_116);
d608 1
a608 1
    stringBuffer.append(TEXT_117);
d610 1
a610 1
    stringBuffer.append(TEXT_118);
d612 1
a612 1
    stringBuffer.append(TEXT_119);
d615 1
a615 1
    stringBuffer.append(TEXT_120);
d618 1
a618 1
    stringBuffer.append(TEXT_121);
d620 1
a620 1
    stringBuffer.append(TEXT_122);
d622 1
a622 1
    stringBuffer.append(TEXT_123);
d624 1
a624 1
    stringBuffer.append(TEXT_124);
d626 1
a626 1
    stringBuffer.append(TEXT_125);
d628 1
a628 1
    stringBuffer.append(TEXT_126);
d630 1
a630 1
    stringBuffer.append(TEXT_127);
d633 10
a642 1
    stringBuffer.append(TEXT_128);
d645 1
a645 1
    stringBuffer.append(TEXT_129);
d647 1
a647 1
    stringBuffer.append(TEXT_130);
d649 1
a649 1
    stringBuffer.append(TEXT_131);
d653 1
a653 1
    stringBuffer.append(TEXT_132);
d655 1
a655 1
    stringBuffer.append(TEXT_133);
d657 1
a657 1
    stringBuffer.append(TEXT_134);
d659 1
a659 1
    stringBuffer.append(TEXT_135);
d661 1
a661 1
    stringBuffer.append(TEXT_136);
d663 2
a664 2
    stringBuffer.append(TEXT_137);
    stringBuffer.append(TEXT_138);
d668 1
a668 1
    stringBuffer.append(TEXT_139);
d670 1
a670 1
    stringBuffer.append(TEXT_140);
d672 1
a672 1
    stringBuffer.append(TEXT_141);
d674 1
a674 1
    stringBuffer.append(TEXT_142);
d676 1
a676 1
    stringBuffer.append(TEXT_143);
d678 1
a678 1
    stringBuffer.append(TEXT_144);
d680 1
a680 1
    stringBuffer.append(TEXT_145);
d683 1
a683 1
    stringBuffer.append(TEXT_146);
d686 1
a686 1
    stringBuffer.append(TEXT_147);
d688 1
a688 1
    stringBuffer.append(TEXT_148);
d690 1
a690 1
    stringBuffer.append(TEXT_149);
d692 1
a692 1
    stringBuffer.append(TEXT_150);
d694 1
a694 1
    stringBuffer.append(TEXT_151);
d696 1
a696 1
    stringBuffer.append(TEXT_152);
d698 1
a698 1
    stringBuffer.append(TEXT_153);
d701 10
a710 1
    stringBuffer.append(TEXT_154);
d714 1
a714 1
    stringBuffer.append(TEXT_155);
d729 1
a729 1
    stringBuffer.append(TEXT_156);
d736 1
a736 1
    stringBuffer.append(TEXT_157);
d738 1
a738 1
    stringBuffer.append(TEXT_158);
d740 1
a740 1
    stringBuffer.append(TEXT_159);
d742 2
a743 2
    stringBuffer.append(TEXT_160);
    stringBuffer.append(TEXT_161);
d747 1
a747 1
    stringBuffer.append(TEXT_162);
d749 1
a749 1
    stringBuffer.append(TEXT_163);
d751 1
a751 1
    stringBuffer.append(TEXT_164);
d753 1
a753 1
    stringBuffer.append(TEXT_165);
d755 1
a755 1
    stringBuffer.append(TEXT_166);
d757 1
a757 1
    stringBuffer.append(TEXT_167);
d759 1
a759 1
    stringBuffer.append(TEXT_168);
d762 1
a762 1
    stringBuffer.append(TEXT_169);
d765 1
a765 1
    stringBuffer.append(TEXT_170);
d767 1
a767 1
    stringBuffer.append(TEXT_171);
d769 1
a769 1
    stringBuffer.append(TEXT_172);
d771 1
a771 1
    stringBuffer.append(TEXT_173);
d773 1
a773 1
    stringBuffer.append(TEXT_174);
d775 1
a775 1
    stringBuffer.append(TEXT_175);
d777 1
a777 1
    stringBuffer.append(TEXT_176);
d780 10
a789 1
    stringBuffer.append(TEXT_177);
d793 1
a793 1
    stringBuffer.append(TEXT_178);
d795 1
a795 1
    stringBuffer.append(TEXT_179);
d797 1
a797 1
    stringBuffer.append(TEXT_180);
d799 2
a800 2
    stringBuffer.append(TEXT_181);
    stringBuffer.append(TEXT_182);
d805 1
a805 1
    stringBuffer.append(TEXT_183);
d807 1
a807 1
    stringBuffer.append(TEXT_184);
d809 1
a809 1
    stringBuffer.append(TEXT_185);
d811 1
a811 1
    stringBuffer.append(TEXT_186);
d813 1
a813 1
    stringBuffer.append(TEXT_187);
d815 1
a815 1
    stringBuffer.append(TEXT_188);
d817 1
a817 1
    stringBuffer.append(TEXT_189);
d819 1
a819 1
    stringBuffer.append(TEXT_190);
d821 1
a821 1
    stringBuffer.append(TEXT_191);
d823 1
a823 1
    stringBuffer.append(TEXT_192);
d825 1
a825 1
    stringBuffer.append(TEXT_193);
d827 1
a827 1
    stringBuffer.append(TEXT_194);
d829 1
a829 1
    stringBuffer.append(TEXT_195);
d831 1
a831 1
    stringBuffer.append(TEXT_196);
d833 1
a833 1
    stringBuffer.append(TEXT_197);
d835 1
a835 1
    stringBuffer.append(TEXT_198);
d837 1
a837 1
    stringBuffer.append(TEXT_199);
d839 1
a839 1
    stringBuffer.append(TEXT_200);
d843 1
a843 1
    stringBuffer.append(TEXT_201);
d845 1
a845 1
    stringBuffer.append(TEXT_202);
d847 1
a847 1
    stringBuffer.append(TEXT_203);
d849 1
a849 1
    stringBuffer.append(TEXT_204);
d853 1
a853 1
    stringBuffer.append(TEXT_205);
d855 1
a855 1
    stringBuffer.append(TEXT_206);
d857 1
a857 1
    stringBuffer.append(TEXT_207);
d859 1
a859 1
    stringBuffer.append(TEXT_208);
d864 1
a864 1
    stringBuffer.append(TEXT_209);
d866 1
a866 1
    stringBuffer.append(TEXT_210);
d868 1
a868 1
    stringBuffer.append(TEXT_211);
d870 1
a870 1
    stringBuffer.append(TEXT_212);
d872 1
a872 1
    stringBuffer.append(TEXT_213);
d874 1
a874 1
    stringBuffer.append(TEXT_214);
d876 1
a876 1
    stringBuffer.append(TEXT_215);
d879 1
a879 1
    stringBuffer.append(TEXT_216);
d882 1
a882 1
    stringBuffer.append(TEXT_217);
d884 1
a884 1
    stringBuffer.append(TEXT_218);
d886 1
a886 1
    stringBuffer.append(TEXT_219);
d888 1
a888 1
    stringBuffer.append(TEXT_220);
d890 1
a890 1
    stringBuffer.append(TEXT_221);
d892 1
a892 1
    stringBuffer.append(TEXT_222);
d894 1
a894 1
    stringBuffer.append(TEXT_223);
d897 10
a906 1
    stringBuffer.append(TEXT_224);
d909 1
a909 1
    stringBuffer.append(TEXT_225);
d911 1
a911 1
    stringBuffer.append(TEXT_226);
d913 1
a913 1
    stringBuffer.append(TEXT_227);
d917 1
a917 1
    stringBuffer.append(TEXT_228);
d919 1
a919 1
    stringBuffer.append(TEXT_229);
d921 1
a921 1
    stringBuffer.append(TEXT_230);
d923 1
a923 1
    stringBuffer.append(TEXT_231);
d925 1
a925 1
    stringBuffer.append(TEXT_232);
d927 2
a928 2
    stringBuffer.append(TEXT_233);
    stringBuffer.append(TEXT_234);
d932 1
a932 1
    stringBuffer.append(TEXT_235);
d934 1
a934 1
    stringBuffer.append(TEXT_236);
d936 1
a936 1
    stringBuffer.append(TEXT_237);
d938 1
a938 1
    stringBuffer.append(TEXT_238);
d940 1
a940 1
    stringBuffer.append(TEXT_239);
d942 1
a942 1
    stringBuffer.append(TEXT_240);
d944 1
a944 1
    stringBuffer.append(TEXT_241);
d947 1
a947 1
    stringBuffer.append(TEXT_242);
d950 1
a950 1
    stringBuffer.append(TEXT_243);
d952 1
a952 1
    stringBuffer.append(TEXT_244);
d954 1
a954 1
    stringBuffer.append(TEXT_245);
d956 1
a956 1
    stringBuffer.append(TEXT_246);
d958 1
a958 1
    stringBuffer.append(TEXT_247);
d960 1
a960 1
    stringBuffer.append(TEXT_248);
d962 1
a962 1
    stringBuffer.append(TEXT_249);
d965 10
a974 1
    stringBuffer.append(TEXT_250);
d977 1
a977 1
    stringBuffer.append(TEXT_251);
d979 1
a979 1
    stringBuffer.append(TEXT_252);
d981 1
a981 1
    stringBuffer.append(TEXT_253);
d993 1
a993 1
    stringBuffer.append(TEXT_254);
d995 1
a995 1
    stringBuffer.append(TEXT_255);
d997 1
a997 1
    stringBuffer.append(TEXT_256);
@


1.3
log
@- Generating figures for Child node
- Transforming coordinates for rounded rectangles
@
text
@d50 34
a83 34
  protected final String TEXT_32 = NL + "\t\tsetFigure";
  protected final String TEXT_33 = "(createFigure";
  protected final String TEXT_34 = "());" + NL + "\t\tadd(getFigure";
  protected final String TEXT_35 = "());";
  protected final String TEXT_36 = NL + "\t}" + NL;
  protected final String TEXT_37 = NL + NL + "\tprivate IFigure f";
  protected final String TEXT_38 = "; " + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic IFigure getFigure";
  protected final String TEXT_39 = "() {" + NL + "\t\treturn f";
  protected final String TEXT_40 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprotected void setFigure";
  protected final String TEXT_41 = "(IFigure figure) {" + NL + "\t\tf";
  protected final String TEXT_42 = " = figure;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate IFigure createFigure";
  protected final String TEXT_43 = "() {";
  protected final String TEXT_44 = NL;
  protected final String TEXT_45 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_46 = " = new ";
  protected final String TEXT_47 = "();";
  protected final String TEXT_48 = NL;
  protected final String TEXT_49 = NL + "\t\t";
  protected final String TEXT_50 = " ";
  protected final String TEXT_51 = " = new ";
  protected final String TEXT_52 = "();";
  protected final String TEXT_53 = NL;
  protected final String TEXT_54 = NL + "\t\t";
  protected final String TEXT_55 = ".setFill(";
  protected final String TEXT_56 = ");";
  protected final String TEXT_57 = NL + "\t\t";
  protected final String TEXT_58 = ".setOutline(";
  protected final String TEXT_59 = ");";
  protected final String TEXT_60 = NL + "\t\t";
  protected final String TEXT_61 = ".setLineWidth(";
  protected final String TEXT_62 = ");";
  protected final String TEXT_63 = NL + "\t\t";
  protected final String TEXT_64 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_65 = ");";
d85 42
a126 42
  protected final String TEXT_67 = ".setFillXOR(";
  protected final String TEXT_68 = ");";
  protected final String TEXT_69 = NL + "\t\t";
  protected final String TEXT_70 = ".setOutlineXOR(";
  protected final String TEXT_71 = ");";
  protected final String TEXT_72 = NL + "\t\t";
  protected final String TEXT_73 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_74 = ", ";
  protected final String TEXT_75 = "));";
  protected final String TEXT_76 = NL + "\t\t";
  protected final String TEXT_77 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_78 = "), getMapMode().DPtoLP(";
  protected final String TEXT_79 = ")));";
  protected final String TEXT_80 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_81 = " = new ";
  protected final String TEXT_82 = "();";
  protected final String TEXT_83 = NL;
  protected final String TEXT_84 = NL + "\t\torg.eclipse.draw2d.Label ";
  protected final String TEXT_85 = " = new org.eclipse.draw2d.Label();" + NL + "\t\t";
  protected final String TEXT_86 = ".setText(\"";
  protected final String TEXT_87 = "\");";
  protected final String TEXT_88 = NL;
  protected final String TEXT_89 = NL;
  protected final String TEXT_90 = NL;
  protected final String TEXT_91 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_92 = " = new ";
  protected final String TEXT_93 = "();";
  protected final String TEXT_94 = NL;
  protected final String TEXT_95 = NL + "\t\t";
  protected final String TEXT_96 = " ";
  protected final String TEXT_97 = " = new ";
  protected final String TEXT_98 = "();";
  protected final String TEXT_99 = NL;
  protected final String TEXT_100 = NL + "\t\t";
  protected final String TEXT_101 = ".setFill(";
  protected final String TEXT_102 = ");";
  protected final String TEXT_103 = NL + "\t\t";
  protected final String TEXT_104 = ".setOutline(";
  protected final String TEXT_105 = ");";
  protected final String TEXT_106 = NL + "\t\t";
  protected final String TEXT_107 = ".setLineWidth(";
  protected final String TEXT_108 = ");";
d128 147
a274 31
  protected final String TEXT_110 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_111 = ");";
  protected final String TEXT_112 = NL + "\t\t";
  protected final String TEXT_113 = ".setFillXOR(";
  protected final String TEXT_114 = ");";
  protected final String TEXT_115 = NL + "\t\t";
  protected final String TEXT_116 = ".setOutlineXOR(";
  protected final String TEXT_117 = ");";
  protected final String TEXT_118 = NL + "\t\t";
  protected final String TEXT_119 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_120 = ", ";
  protected final String TEXT_121 = "));";
  protected final String TEXT_122 = NL + "\t\t";
  protected final String TEXT_123 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_124 = "), getMapMode().DPtoLP(";
  protected final String TEXT_125 = ")));";
  protected final String TEXT_126 = NL + "\t\torg.eclipse.draw2d.IFigure ";
  protected final String TEXT_127 = " = new ";
  protected final String TEXT_128 = "();";
  protected final String TEXT_129 = NL;
  protected final String TEXT_130 = NL + "\t\torg.eclipse.draw2d.Label ";
  protected final String TEXT_131 = " = new org.eclipse.draw2d.Label();" + NL + "\t\t";
  protected final String TEXT_132 = ".setText(\"";
  protected final String TEXT_133 = "\");";
  protected final String TEXT_134 = NL;
  protected final String TEXT_135 = NL + "\t\t";
  protected final String TEXT_136 = ".add(";
  protected final String TEXT_137 = ");";
  protected final String TEXT_138 = NL + "\t\treturn ";
  protected final String TEXT_139 = ";" + NL + "\t}" + NL;
  protected final String TEXT_140 = NL + "}";
d292 2
a293 2
Shape shapeFigure = shapeFig;
String shapeVarName = "this";
d299 1
a299 1
    if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d301 1
a301 1
    stringBuffer.append(shapeVarName);
d303 1
a303 1
    stringBuffer.append(shapeFigure.isFill());
d305 1
a305 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d307 1
a307 1
    stringBuffer.append(shapeVarName);
d309 1
a309 1
    stringBuffer.append(shapeFigure.isOutline());
d311 1
a311 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d313 1
a313 1
    stringBuffer.append(shapeVarName);
d315 1
a315 1
    stringBuffer.append(shapeFigure.getLineWidth());
d317 1
a317 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
d319 1
a319 1
    stringBuffer.append(shapeVarName);
d321 1
a321 1
    stringBuffer.append(shapeFigure.getLineKind().getName());
d323 1
a323 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
d325 1
a325 1
    stringBuffer.append(shapeVarName);
d327 1
a327 1
    stringBuffer.append(shapeFigure.isXorFill());
d329 1
a329 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
d331 1
a331 1
    stringBuffer.append(shapeVarName);
d333 1
a333 1
    stringBuffer.append(shapeFigure.isXorOutline());
d335 2
a336 2
    } if (shapeFigure instanceof Polyline && !((Polyline) shapeFigure).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) shapeFigure).getTemplate().iterator(); pointIt.hasNext(); ) {
d339 1
a339 1
    stringBuffer.append(shapeVarName);
d346 2
a347 2
    } else if (shapeFigure instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) shapeFigure;
d349 1
a349 1
    stringBuffer.append(shapeVarName);
d356 3
a358 3
    
}for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext();) {
		Figure next = (Figure) it.next();
d360 1
a360 1
    stringBuffer.append(next.getName());
d362 1
a362 1
    stringBuffer.append(next.getName());
d364 1
a364 1
    stringBuffer.append(next.getName());
d366 1
a366 1
    }
d368 1
a368 4
    
int fc = 0;
for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext(); fc++) {
	Figure figure = (Figure) it.next();
d370 1
a370 1
    stringBuffer.append(figure.getName());
d372 2
a373 1
    stringBuffer.append(figure.getName());
d375 2
a376 1
    stringBuffer.append(figure.getName());
d378 1
a378 1
    stringBuffer.append(figure.getName());
d380 1
a380 1
    stringBuffer.append(figure.getName());
d382 1
a382 1
    stringBuffer.append(figure.getName());
d384 1
a384 5
    
String parentFigureVarName = "rv" + fc;
{ // scope
FigureMarker figureMarker = figure;
String figureVarName = parentFigureVarName;
d386 1
a386 5
    
// FigureMarker:  figureMarker
// String:        figureVarName
if (figureMarker instanceof CustomFigure) {

d388 1
a388 1
    stringBuffer.append(figureVarName);
d390 2
a391 1
    stringBuffer.append(((CustomFigure) figureMarker).getQualifiedClassName());
d393 4
d398 1
a398 3
    } else if (figureMarker instanceof Shape) {
Shape shapeFigure = (Shape) figureMarker;
String shapeVarName = figureVarName;
d400 1
a400 1
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
d402 1
a402 1
    stringBuffer.append(figureVarName);
d404 1
a404 1
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
d406 4
d411 1
a411 4
    
// PERHAPS, do this with reflection?

    if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d413 1
a413 1
    stringBuffer.append(shapeVarName);
d415 1
a415 1
    stringBuffer.append(shapeFigure.isFill());
d417 1
a417 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d419 1
a419 1
    stringBuffer.append(shapeVarName);
d421 1
a421 1
    stringBuffer.append(shapeFigure.isOutline());
d423 5
a427 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d429 6
a434 1
    stringBuffer.append(shapeVarName);
d436 1
a436 1
    stringBuffer.append(shapeFigure.getLineWidth());
d438 1
a438 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
d440 1
a440 1
    stringBuffer.append(shapeVarName);
a441 1
    stringBuffer.append(shapeFigure.getLineKind().getName());
d443 3
a445 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
d447 1
a447 1
    stringBuffer.append(shapeVarName);
d449 1
a449 1
    stringBuffer.append(shapeFigure.isXorFill());
d451 1
a451 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
d453 1
a453 1
    stringBuffer.append(shapeVarName);
d455 1
a455 1
    stringBuffer.append(shapeFigure.isXorOutline());
d457 1
a457 3
    } if (shapeFigure instanceof Polyline && !((Polyline) shapeFigure).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) shapeFigure).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
d459 2
a460 1
    stringBuffer.append(shapeVarName);
d462 2
a463 1
    stringBuffer.append(p.getX());
d465 1
a465 1
    stringBuffer.append(p.getY());
d467 1
a467 3
    }
    } else if (shapeFigure instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) shapeFigure;
d469 1
a469 1
    stringBuffer.append(shapeVarName);
d471 1
a471 1
    stringBuffer.append(rrFigure.getCornerWidth());
d473 1
a473 1
    stringBuffer.append(rrFigure.getCornerHeight());
d475 3
a478 3
    } else if (figureMarker instanceof FigureRef) {
    stringBuffer.append(TEXT_80);
    stringBuffer.append(figureVarName);
d480 3
a482 1
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
d484 1
d486 1
a486 1
    } else if (figureMarker instanceof Label) {
d488 1
a488 1
    stringBuffer.append(figureVarName);
a489 1
    stringBuffer.append(figureVarName);
d491 4
a494 1
    stringBuffer.append(((Label) figureMarker).getText());
d496 1
d498 1
a498 2
    }
    }
d500 1
a500 14
    
LinkedList l = new LinkedList();
l.addAll(figure.getChildren());
final Object marker = new Object();
Stack figureVarNamesStack = new Stack();
int figureCount = 0;
while (!l.isEmpty()) {
	Object _nxt = l.removeFirst();
	if (_nxt == marker) {
		parentFigureVarName = (String) figureVarNamesStack.pop();
		continue;
	}
	FigureMarker figureMarker = (FigureMarker) _nxt;
	String figureVarName = "fig" + (figureCount++);
d502 1
a502 5
    
// FigureMarker:  figureMarker
// String:        figureVarName
if (figureMarker instanceof CustomFigure) {

d504 1
a504 1
    stringBuffer.append(figureVarName);
d506 1
a506 1
    stringBuffer.append(((CustomFigure) figureMarker).getQualifiedClassName());
d508 1
d510 1
a510 3
    } else if (figureMarker instanceof Shape) {
Shape shapeFigure = (Shape) figureMarker;
String shapeVarName = figureVarName;
d512 1
a512 1
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
d516 1
a516 1
    stringBuffer.append(fqnSwitch.doSwitch(figureMarker));
d518 1
d520 1
a520 4
    
// PERHAPS, do this with reflection?

    if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d522 1
a522 1
    stringBuffer.append(shapeVarName);
d524 1
a524 1
    stringBuffer.append(shapeFigure.isFill());
d526 1
a526 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d528 1
a528 1
    stringBuffer.append(shapeVarName);
d530 3
a532 1
    stringBuffer.append(shapeFigure.isOutline());
d534 1
a534 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d536 1
a536 1
    stringBuffer.append(shapeVarName);
d538 1
a538 1
    stringBuffer.append(shapeFigure.getLineWidth());
d540 3
a542 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
d544 1
a544 1
    stringBuffer.append(shapeVarName);
d546 1
a546 1
    stringBuffer.append(shapeFigure.getLineKind().getName());
d548 1
a548 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
d550 4
a553 1
    stringBuffer.append(shapeVarName);
d555 1
a555 1
    stringBuffer.append(shapeFigure.isXorFill());
d557 1
a557 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
d559 1
a559 1
    stringBuffer.append(shapeVarName);
d561 1
a561 1
    stringBuffer.append(shapeFigure.isXorOutline());
d563 1
a563 3
    } if (shapeFigure instanceof Polyline && !((Polyline) shapeFigure).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) shapeFigure).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
d565 1
a565 1
    stringBuffer.append(shapeVarName);
d567 2
a568 1
    stringBuffer.append(p.getX());
d570 2
a571 1
    stringBuffer.append(p.getY());
d573 1
a573 3
    }
    } else if (shapeFigure instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) shapeFigure;
d575 1
a575 1
    stringBuffer.append(shapeVarName);
d577 1
a577 1
    stringBuffer.append(rrFigure.getCornerWidth());
d579 1
a579 1
    stringBuffer.append(rrFigure.getCornerHeight());
d581 1
a581 2
    }
    } else if (figureMarker instanceof FigureRef) {
d583 1
a583 1
    stringBuffer.append(figureVarName);
d585 2
a586 1
    stringBuffer.append(((FigureRef) figureMarker).getFigure().getName());
d588 2
d591 1
a591 1
    } else if (figureMarker instanceof Label) {
d593 1
a593 1
    stringBuffer.append(figureVarName);
d595 3
a597 1
    stringBuffer.append(figureVarName);
d599 1
a599 1
    stringBuffer.append(((Label) figureMarker).getText());
d601 1
d603 44
d648 239
a886 1
    stringBuffer.append(TEXT_135);
d888 1
a888 1
    stringBuffer.append(TEXT_136);
d890 1
a890 1
    stringBuffer.append(TEXT_137);
d902 1
a902 1
    stringBuffer.append(TEXT_138);
d904 1
a904 1
    stringBuffer.append(TEXT_139);
d906 1
a906 1
    stringBuffer.append(TEXT_140);
@


1.2
log
@@@generated comments ws added
@
text
@d47 3
a49 3
  protected final String TEXT_29 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(";
  protected final String TEXT_30 = ", ";
  protected final String TEXT_31 = "));";
d95 3
a97 3
  protected final String TEXT_77 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(";
  protected final String TEXT_78 = ", ";
  protected final String TEXT_79 = "));";
d141 3
a143 3
  protected final String TEXT_123 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(";
  protected final String TEXT_124 = ", ";
  protected final String TEXT_125 = "));";
@


1.1
log
@ some templates to support #114177 (graphical definition model) - with GEF IFigure code as an outcome
@
text
@d19 1
a19 1
  protected final String TEXT_1 = NL + "public class ";
d21 1
a21 1
  protected final String TEXT_3 = " {" + NL + "" + NL + "\tpublic ";
d56 1
a56 1
  protected final String TEXT_38 = "; " + NL + "" + NL + "\tpublic IFigure getFigure";
d58 1
a58 1
  protected final String TEXT_40 = ";" + NL + "\t}" + NL + "" + NL + "\tprotected void setFigure";
d60 1
a60 1
  protected final String TEXT_42 = " = figure;" + NL + "\t}" + NL + "" + NL + "\tprivate IFigure createFigure";
@

