head	1.6;
access;
symbols
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20080731-1520:1.6
	v20061027-1200:1.5
	v20061013-1330:1.5
	v20060925-1700:1.5
	v20060919-0800:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	I20060505-1400:1.5
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2006.11.02.21.58.37;	author atikhomirov;	state dead;
branches;
next	1.5;

1.5
date	2006.05.02.15.05.35;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.02.11.44.18;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.07.14.49.17;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.13.17.53.19;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.15.14.44.35;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.graphdef.codegen.*;

public class InitXYLayoutDataGenerator
{
  protected static String nl;
  public static synchronized InitXYLayoutDataGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    InitXYLayoutDataGenerator result = new InitXYLayoutDataGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "\t\t\t";
  protected final String TEXT_2 = " ";
  protected final String TEXT_3 = " = new ";
  protected final String TEXT_4 = "();";
  protected final String TEXT_5 = NL + "\t\t\t";
  protected final String TEXT_6 = ".x = ";
  protected final String TEXT_7 = ";" + NL + "\t\t\t";
  protected final String TEXT_8 = ".y = ";
  protected final String TEXT_9 = ";";
  protected final String TEXT_10 = NL + "\t\t\t";
  protected final String TEXT_11 = ".width = ";
  protected final String TEXT_12 = ";" + NL + "\t\t\t";
  protected final String TEXT_13 = ".height = ";
  protected final String TEXT_14 = ";";
  protected final String TEXT_15 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
GraphDefDispatcher.LayoutArgs argsBundle = (GraphDefDispatcher.LayoutArgs) argument;
final XYLayoutData gmfLayoutData = (XYLayoutData) argsBundle.getData();
final GraphDefDispatcher dispatcher = argsBundle.getDispatcher();
final String layoutConstraintVarName = argsBundle.getConstraintVariableName();

final String layoutImplClassName = dispatcher.getFQNSwitch().get(gmfLayoutData, dispatcher.getImportManager());

    stringBuffer.append(TEXT_1);
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(layoutImplClassName);
    stringBuffer.append(TEXT_4);
    
Point topLeft = gmfLayoutData.getTopLeft();
if (topLeft != null){

    stringBuffer.append(TEXT_5);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(topLeft.getX());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(topLeft.getY());
    stringBuffer.append(TEXT_9);
    
}

    
Dimension size = gmfLayoutData.getSize();
if (size != null){

    stringBuffer.append(TEXT_10);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_11);
    stringBuffer.append(size.getDx());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_13);
    stringBuffer.append(size.getDy());
    stringBuffer.append(TEXT_14);
    
}

    stringBuffer.append(TEXT_15);
    return stringBuffer.toString();
  }
}
@


1.5
log
@unused code removed
@
text
@@


1.4
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@a39 1
final String figureVarName = argsBundle.getVariableName();
a41 1
final String layoutManagerVarName = argsBundle.getManagerVariableName();
@


1.3
log
@Switching to eclipse M6.
@
text
@d32 1
a32 5
  protected final String TEXT_15 = NL + "\t\t\t";
  protected final String TEXT_16 = ".setConstraint(";
  protected final String TEXT_17 = ", ";
  protected final String TEXT_18 = ");";
  protected final String TEXT_19 = NL;
a86 7
    stringBuffer.append(layoutManagerVarName);
    stringBuffer.append(TEXT_16);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_17);
    stringBuffer.append(layoutConstraintVarName);
    stringBuffer.append(TEXT_18);
    stringBuffer.append(TEXT_19);
@


1.2
log
@explicit method names for fqn switch to better reflect it's intention
@
text
@d40 1
a40 1
    StringBuffer stringBuffer = new StringBuffer();
@


1.1
log
@[mgolubev] #127252 layout support
@
text
@d49 1
a49 1
final String layoutImplClassName = dispatcher.getImportManager().getImportedName((String) dispatcher.getFQNSwitch().doSwitch(gmfLayoutData));
@

