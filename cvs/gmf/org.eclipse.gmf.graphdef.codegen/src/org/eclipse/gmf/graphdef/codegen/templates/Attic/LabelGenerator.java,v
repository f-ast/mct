head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080731-1520:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.02.06.18.10.22;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.02.04.22.34.49;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.23.20.00.49;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.common.codegen.*;

public class LabelGenerator
{
  protected static String nl;
  public static synchronized LabelGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    LabelGenerator result = new LabelGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL;
  protected final String TEXT_3 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_4 = " extends ";
  protected final String TEXT_5 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_6 = "() {" + NL + "\t\tsuper();" + NL + "\t}" + NL + "" + NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    
Object[] args = (Object[]) argument;
Label figure = (Label) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];

    stringBuffer.append(TEXT_2);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_4);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.Label"));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_6);
    importManager.emitSortedImports();
    return stringBuffer.toString();
  }
}
@


1.2
log
@provide option to use importManager
@
text
@@


1.1
log
@- Generating figures for Child node
- Transforming coordinates for rounded rectangles
@
text
@d4 1
d19 5
a23 4
  protected final String TEXT_2 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends org.eclipse.draw2d.Label {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_4 = "() {" + NL + "\t\tsuper();" + NL + "\t}" + NL + "" + NL + "}";
  protected final String TEXT_5 = NL;
d30 3
a32 1
Label figure = (Label) argument;
d35 1
a35 1
    stringBuffer.append(figure.getName());
d39 1
d41 3
@

