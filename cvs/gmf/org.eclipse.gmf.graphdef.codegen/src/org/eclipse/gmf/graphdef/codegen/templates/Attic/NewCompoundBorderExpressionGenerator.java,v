head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080731-1520:1.3
	v20061027-1200:1.2
	v20061013-1330:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	I20060505-1400:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.11.02.21.58.36;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.04.07.14.49.17;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.31.18.08.35;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.graphdef.codegen.*;
import org.eclipse.gmf.common.codegen.ImportAssistant;

public class NewCompoundBorderExpressionGenerator
{
  protected static String nl;
  public static synchronized NewCompoundBorderExpressionGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    NewCompoundBorderExpressionGenerator result = new NewCompoundBorderExpressionGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "\t";
  protected final String TEXT_2 = NL + "new ";
  protected final String TEXT_3 = "(" + NL + "\t";
  protected final String TEXT_4 = ", " + NL + "\t";
  protected final String TEXT_5 = NL + ")";
  protected final String TEXT_6 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
Object[] args = (Object[]) argument;
final CompoundBorder border = (CompoundBorder)args[0];
final GraphDefDispatcher dispatcher = (GraphDefDispatcher)args[1];
final ImportAssistant importManager = dispatcher.getImportManager();

//We want NEITHER insert any names into the scope NOR produce statement. We need expression instead.

    stringBuffer.append(TEXT_1);
     	Border outer = border.getOuter();
		Border inner = border.getInner();
	
    stringBuffer.append(TEXT_2);
    stringBuffer.append(importManager.getImportedName("org.eclipse.draw2d.CompoundBorder"));
    stringBuffer.append(TEXT_3);
    stringBuffer.append( (outer == null) ? "null" : dispatcher.dispatch(outer, new Object[]{outer, dispatcher}));
    stringBuffer.append(TEXT_4);
    stringBuffer.append( (inner == null) ? "null" : dispatcher.dispatch(inner, new Object[]{inner, dispatcher}));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(TEXT_6);
    return stringBuffer.toString();
  }
}
@


1.2
log
@Switching to eclipse M6.
@
text
@@


1.1
log
@[mgolubev] 134249 Generate all Figure/Shape properties
@
text
@d28 1
a28 1
    StringBuffer stringBuffer = new StringBuffer();
@

