head	1.11;
access;
symbols
	v20080813-1520:1.11
	v20080806-1520:1.11
	v20080731-1520:1.11
	R1_0_maintenance:1.11.0.2
	R1_0:1.11
	I20060203-0830:1.8
	I20060129-1145:1.8
	I20060127-0900:1.8
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2006.02.06.18.10.22;	author atikhomirov;	state dead;
branches;
next	1.10;

1.10
date	2006.02.05.23.00.50;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.04.22.34.49;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.26.12.23.29;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.25.19.16.56;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.25.14.02.29;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.23.20.00.49;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.10.16.46.00;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.10.16.16.54;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.07.16.50.43;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.19.17.28;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.11
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@package org.eclipse.gmf.graphdef.codegen.templates;

import org.eclipse.gmf.gmfgraph.*;
import org.eclipse.gmf.gmfgraph.util.*;
import org.eclipse.gmf.common.codegen.*;
import org.eclipse.gmf.graphdef.codegen.Dispatcher;
import java.util.*;

public class ConnectionGenerator
{
  protected static String nl;
  public static synchronized ConnectionGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    ConnectionGenerator result = new ConnectionGenerator();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL;
  protected final String TEXT_3 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_4 = " extends ";
  protected final String TEXT_5 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_6 = "() {";
  protected final String TEXT_7 = NL;
  protected final String TEXT_8 = NL + "\t\tsetSourceDecoration(createSourceDecoration());";
  protected final String TEXT_9 = NL + "\t\tsetTargetDecoration(createTargetDecoration());";
  protected final String TEXT_10 = NL + "\t}" + NL;
  protected final String TEXT_11 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_12 = " createSourceDecoration() {";
  protected final String TEXT_13 = NL;
  protected final String TEXT_14 = "\t\t";
  protected final String TEXT_15 = " ";
  protected final String TEXT_16 = " = new ";
  protected final String TEXT_17 = "();";
  protected final String TEXT_18 = NL;
  protected final String TEXT_19 = NL + "\t\t";
  protected final String TEXT_20 = ".setForegroundColor(";
  protected final String TEXT_21 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_22 = ", ";
  protected final String TEXT_23 = ", ";
  protected final String TEXT_24 = ")";
  protected final String TEXT_25 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_26 = ");";
  protected final String TEXT_27 = NL + "\t\t";
  protected final String TEXT_28 = ".setBackgroundColor(";
  protected final String TEXT_29 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_30 = ", ";
  protected final String TEXT_31 = ", ";
  protected final String TEXT_32 = ")";
  protected final String TEXT_33 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_34 = ");";
  protected final String TEXT_35 = NL + "\t\t";
  protected final String TEXT_36 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_37 = "), getMapMode().DPtoLP(";
  protected final String TEXT_38 = "));";
  protected final String TEXT_39 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_40 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_41 = ", ";
  protected final String TEXT_42 = ");";
  protected final String TEXT_43 = NL + "\t\t";
  protected final String TEXT_44 = ".setTemplate(pl);";
  protected final String TEXT_45 = NL + "\t\t";
  protected final String TEXT_46 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_47 = NL + "\t\treturn ";
  protected final String TEXT_48 = ";" + NL + "\t}";
  protected final String TEXT_49 = NL;
  protected final String TEXT_50 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_51 = " createTargetDecoration() {";
  protected final String TEXT_52 = NL;
  protected final String TEXT_53 = "\t\t";
  protected final String TEXT_54 = " ";
  protected final String TEXT_55 = " = new ";
  protected final String TEXT_56 = "();";
  protected final String TEXT_57 = NL;
  protected final String TEXT_58 = NL + "\t\t";
  protected final String TEXT_59 = ".setForegroundColor(";
  protected final String TEXT_60 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_61 = ", ";
  protected final String TEXT_62 = ", ";
  protected final String TEXT_63 = ")";
  protected final String TEXT_64 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_65 = ");";
  protected final String TEXT_66 = NL + "\t\t";
  protected final String TEXT_67 = ".setBackgroundColor(";
  protected final String TEXT_68 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_69 = ", ";
  protected final String TEXT_70 = ", ";
  protected final String TEXT_71 = ")";
  protected final String TEXT_72 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_73 = ");";
  protected final String TEXT_74 = NL + "\t\t";
  protected final String TEXT_75 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_76 = "), getMapMode().DPtoLP(";
  protected final String TEXT_77 = "));";
  protected final String TEXT_78 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_79 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_80 = ", ";
  protected final String TEXT_81 = ");";
  protected final String TEXT_82 = NL + "\t\t";
  protected final String TEXT_83 = ".setTemplate(pl);";
  protected final String TEXT_84 = NL + "\t\t";
  protected final String TEXT_85 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_86 = NL + "\t\treturn ";
  protected final String TEXT_87 = ";" + NL + "\t}";
  protected final String TEXT_88 = NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    
Object[] args = (Object[]) argument;
PolylineConnection figure = (PolylineConnection) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];
final GMFGraphSwitch fqnSwitch = new FigureQualifiedNameSwitch();
final Dispatcher dispatcher = (Dispatcher) args[2];

    stringBuffer.append(TEXT_2);
    importManager.markImportLocation(stringBuffer);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_4);
    stringBuffer.append(importManager.getImportedName("org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx"));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(dispatcher.dispatch("ShapeAttrs", dispatcher.create(figure, "this", importManager, fqnSwitch)));
    if (figure.getSourceDecoration() != null) {
    stringBuffer.append(TEXT_8);
    }
if (figure.getTargetDecoration() != null) {
    stringBuffer.append(TEXT_9);
    }
    stringBuffer.append(TEXT_10);
    String decFigVarName = "df";
if (figure.getSourceDecoration() != null) {
DecorationFigure df = figure.getSourceDecoration();
    stringBuffer.append(TEXT_11);
    stringBuffer.append(fqnSwitch.doSwitch(df));
    stringBuffer.append(TEXT_12);
    stringBuffer.append(TEXT_13);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(fqnSwitch.doSwitch(df));
    stringBuffer.append(TEXT_15);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_16);
    stringBuffer.append(fqnSwitch.doSwitch(df));
    stringBuffer.append(TEXT_17);
      { // scope
Figure figureInstance = df;
String figureVarName = decFigVarName;

    stringBuffer.append(TEXT_18);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_19);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_20);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_21);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_22);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_23);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_24);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_25);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_26);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_27);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_28);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_29);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_30);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_31);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_32);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_33);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_34);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_35);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_36);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_37);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_38);
    }
    } // scope 
     /*include FigureChildren*/ 
    
if ((df instanceof PolylineDecoration || df instanceof PolygonDecoration)) {
	if (!((Polyline) df).getTemplate().isEmpty()) {

    stringBuffer.append(TEXT_39);
    		for (Iterator pointIt = ((Polyline) df).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_40);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_41);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_42);
    		} /*for*/ 
    stringBuffer.append(TEXT_43);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_44);
    	} /*!if getTemplate().isEmpty()*/ 
    stringBuffer.append(TEXT_45);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_46);
    } /*if instanceof */ 
    stringBuffer.append(TEXT_47);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_48);
    } /*if sourceDecoration != null */ 
    stringBuffer.append(TEXT_49);
    if (figure.getTargetDecoration() != null) {
DecorationFigure df = figure.getTargetDecoration();
    stringBuffer.append(TEXT_50);
    stringBuffer.append(fqnSwitch.doSwitch(df));
    stringBuffer.append(TEXT_51);
    stringBuffer.append(TEXT_52);
    stringBuffer.append(TEXT_53);
    stringBuffer.append(fqnSwitch.doSwitch(df));
    stringBuffer.append(TEXT_54);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(fqnSwitch.doSwitch(df));
    stringBuffer.append(TEXT_56);
      { // scope
Figure figureInstance = df;
String figureVarName = decFigVarName;

    stringBuffer.append(TEXT_57);
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_58);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_59);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_60);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_61);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_62);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_63);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_64);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_65);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_66);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_67);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_68);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_69);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_70);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_71);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_72);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_73);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_74);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_75);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_76);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_77);
    }
    } // scope 
     /*include FigureChildren*/ 
    
if ((df instanceof PolylineDecoration || df instanceof PolygonDecoration)) {
	if (!((Polyline) df).getTemplate().isEmpty()) {

    stringBuffer.append(TEXT_78);
    		for (Iterator pointIt = ((Polyline) df).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_79);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_80);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_81);
    		} /*for*/ 
    stringBuffer.append(TEXT_82);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_83);
    	} /*!if getTemplate().isEmpty()*/ 
    stringBuffer.append(TEXT_84);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_85);
    } /*if instanceof */ 
    stringBuffer.append(TEXT_86);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_87);
    }
    stringBuffer.append(TEXT_88);
    importManager.emitSortedImports();
    return stringBuffer.toString();
  }
}
@


1.10
log
@provisional framework that supports (double-)dispatch from templates to
a) avoid lengthy if instanceof elseif checks,
b) solve scope and name visibility issues when extracting common code into jetinc
@
text
@@


1.9
log
@provide option to use importManager
@
text
@d6 1
d28 61
a88 61
  protected final String TEXT_8 = NL + "\t\t";
  protected final String TEXT_9 = ".setFill(";
  protected final String TEXT_10 = ");";
  protected final String TEXT_11 = NL + "\t\t";
  protected final String TEXT_12 = ".setOutline(";
  protected final String TEXT_13 = ");";
  protected final String TEXT_14 = NL + "\t\t";
  protected final String TEXT_15 = ".setLineWidth(";
  protected final String TEXT_16 = ");";
  protected final String TEXT_17 = NL + "\t\t";
  protected final String TEXT_18 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_19 = ");";
  protected final String TEXT_20 = NL + "\t\t";
  protected final String TEXT_21 = ".setFillXOR(";
  protected final String TEXT_22 = ");";
  protected final String TEXT_23 = NL + "\t\t";
  protected final String TEXT_24 = ".setOutlineXOR(";
  protected final String TEXT_25 = ");";
  protected final String TEXT_26 = NL + "\t\t";
  protected final String TEXT_27 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_28 = ", ";
  protected final String TEXT_29 = "));";
  protected final String TEXT_30 = NL + "\t\t";
  protected final String TEXT_31 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_32 = "), getMapMode().DPtoLP(";
  protected final String TEXT_33 = ")));";
  protected final String TEXT_34 = NL + "\t\t";
  protected final String TEXT_35 = ".setForegroundColor(";
  protected final String TEXT_36 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_37 = ", ";
  protected final String TEXT_38 = ", ";
  protected final String TEXT_39 = ")";
  protected final String TEXT_40 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_41 = ");";
  protected final String TEXT_42 = NL + "\t\t";
  protected final String TEXT_43 = ".setBackgroundColor(";
  protected final String TEXT_44 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_45 = ", ";
  protected final String TEXT_46 = ", ";
  protected final String TEXT_47 = ")";
  protected final String TEXT_48 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_49 = ");";
  protected final String TEXT_50 = NL + "\t\t";
  protected final String TEXT_51 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_52 = "), getMapMode().DPtoLP(";
  protected final String TEXT_53 = "));";
  protected final String TEXT_54 = NL + "\t\tsetSourceDecoration(createSourceDecoration());";
  protected final String TEXT_55 = NL + "\t\tsetTargetDecoration(createTargetDecoration());";
  protected final String TEXT_56 = NL + "\t}" + NL;
  protected final String TEXT_57 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_58 = " createSourceDecoration() {";
  protected final String TEXT_59 = NL;
  protected final String TEXT_60 = "\t\t";
  protected final String TEXT_61 = " ";
  protected final String TEXT_62 = " = new ";
  protected final String TEXT_63 = "();";
  protected final String TEXT_64 = NL;
  protected final String TEXT_65 = NL + "\t\t";
  protected final String TEXT_66 = ".setForegroundColor(";
  protected final String TEXT_67 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_68 = ", ";
d90 19
a108 65
  protected final String TEXT_70 = ")";
  protected final String TEXT_71 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_72 = ");";
  protected final String TEXT_73 = NL + "\t\t";
  protected final String TEXT_74 = ".setBackgroundColor(";
  protected final String TEXT_75 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_76 = ", ";
  protected final String TEXT_77 = ", ";
  protected final String TEXT_78 = ")";
  protected final String TEXT_79 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_80 = ");";
  protected final String TEXT_81 = NL + "\t\t";
  protected final String TEXT_82 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_83 = "), getMapMode().DPtoLP(";
  protected final String TEXT_84 = "));";
  protected final String TEXT_85 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_86 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_87 = ", ";
  protected final String TEXT_88 = ");";
  protected final String TEXT_89 = NL + "\t\t";
  protected final String TEXT_90 = ".setTemplate(pl);";
  protected final String TEXT_91 = NL + "\t\t";
  protected final String TEXT_92 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_93 = NL + "\t\treturn ";
  protected final String TEXT_94 = ";" + NL + "\t}";
  protected final String TEXT_95 = NL;
  protected final String TEXT_96 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_97 = " createTargetDecoration() {";
  protected final String TEXT_98 = NL;
  protected final String TEXT_99 = "\t\t";
  protected final String TEXT_100 = " ";
  protected final String TEXT_101 = " = new ";
  protected final String TEXT_102 = "();";
  protected final String TEXT_103 = NL;
  protected final String TEXT_104 = NL + "\t\t";
  protected final String TEXT_105 = ".setForegroundColor(";
  protected final String TEXT_106 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_107 = ", ";
  protected final String TEXT_108 = ", ";
  protected final String TEXT_109 = ")";
  protected final String TEXT_110 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_111 = ");";
  protected final String TEXT_112 = NL + "\t\t";
  protected final String TEXT_113 = ".setBackgroundColor(";
  protected final String TEXT_114 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_115 = ", ";
  protected final String TEXT_116 = ", ";
  protected final String TEXT_117 = ")";
  protected final String TEXT_118 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_119 = ");";
  protected final String TEXT_120 = NL + "\t\t";
  protected final String TEXT_121 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_122 = "), getMapMode().DPtoLP(";
  protected final String TEXT_123 = "));";
  protected final String TEXT_124 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_125 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_126 = ", ";
  protected final String TEXT_127 = ");";
  protected final String TEXT_128 = NL + "\t\t";
  protected final String TEXT_129 = ".setTemplate(pl);";
  protected final String TEXT_130 = NL + "\t\t";
  protected final String TEXT_131 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_132 = NL + "\t\treturn ";
  protected final String TEXT_133 = ";" + NL + "\t}";
  protected final String TEXT_134 = NL + "}";
d119 1
a129 3
     { // scope
Shape figureInstance = figure;
String figureVarName = "this";
d131 2
a132 4
    
// PERHAPS, do this with reflection?

    if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
a133 105
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(figureInstance.isFill());
    stringBuffer.append(TEXT_10);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
    stringBuffer.append(TEXT_11);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(figureInstance.isOutline());
    stringBuffer.append(TEXT_13);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
    stringBuffer.append(TEXT_14);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_15);
    stringBuffer.append(figureInstance.getLineWidth());
    stringBuffer.append(TEXT_16);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
    stringBuffer.append(TEXT_17);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_18);
    stringBuffer.append(figureInstance.getLineKind().getName());
    stringBuffer.append(TEXT_19);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
    stringBuffer.append(TEXT_20);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(figureInstance.isXorFill());
    stringBuffer.append(TEXT_22);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
    stringBuffer.append(TEXT_23);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_24);
    stringBuffer.append(figureInstance.isXorOutline());
    stringBuffer.append(TEXT_25);
    } if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();
    stringBuffer.append(TEXT_26);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_27);
    stringBuffer.append(p.getX());
    stringBuffer.append(TEXT_28);
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_29);
    }
    } else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;
    stringBuffer.append(TEXT_30);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(rrFigure.getCornerWidth());
    stringBuffer.append(TEXT_32);
    stringBuffer.append(rrFigure.getCornerHeight());
    stringBuffer.append(TEXT_33);
    }
    Color colorVal;
if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_ForegroundColor())) {
		colorVal = figureInstance.getForegroundColor();
    stringBuffer.append(TEXT_34);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_35);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_36);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_37);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_38);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_39);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_40);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_41);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_BackgroundColor())) {
		colorVal = figureInstance.getBackgroundColor();
    stringBuffer.append(TEXT_42);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_43);
    if (colorVal instanceof RGBColor) {
    stringBuffer.append(TEXT_44);
    stringBuffer.append(((RGBColor) colorVal).getRed());
    stringBuffer.append(TEXT_45);
    stringBuffer.append(((RGBColor) colorVal).getGreen());
    stringBuffer.append(TEXT_46);
    stringBuffer.append(((RGBColor) colorVal).getBlue());
    stringBuffer.append(TEXT_47);
    } else if (colorVal instanceof ConstantColor) {
    stringBuffer.append(TEXT_48);
    stringBuffer.append(((ConstantColor) colorVal).getValue().getLiteral());
    }
    stringBuffer.append(TEXT_49);
    } if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getFigure_PreferredSize())) {
		Dimension d = figureInstance.getPreferredSize();
    stringBuffer.append(TEXT_50);
    stringBuffer.append(figureVarName);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(d.getDx());
    stringBuffer.append(TEXT_52);
    stringBuffer.append(d.getDy());
    stringBuffer.append(TEXT_53);
    }
     }// scope 
    if (figure.getSourceDecoration() != null) {
    stringBuffer.append(TEXT_54);
d136 1
a136 1
    stringBuffer.append(TEXT_55);
d138 1
a138 1
    stringBuffer.append(TEXT_56);
d142 1
a142 1
    stringBuffer.append(TEXT_57);
d144 3
a146 3
    stringBuffer.append(TEXT_58);
    stringBuffer.append(TEXT_59);
    stringBuffer.append(TEXT_60);
d148 1
a148 1
    stringBuffer.append(TEXT_61);
d150 1
a150 1
    stringBuffer.append(TEXT_62);
d152 1
a152 1
    stringBuffer.append(TEXT_63);
d157 1
a157 1
    stringBuffer.append(TEXT_64);
d161 1
a161 1
    stringBuffer.append(TEXT_65);
d163 1
a163 1
    stringBuffer.append(TEXT_66);
d165 1
a165 1
    stringBuffer.append(TEXT_67);
d167 1
a167 1
    stringBuffer.append(TEXT_68);
d169 1
a169 1
    stringBuffer.append(TEXT_69);
d171 1
a171 1
    stringBuffer.append(TEXT_70);
d173 1
a173 1
    stringBuffer.append(TEXT_71);
d176 1
a176 1
    stringBuffer.append(TEXT_72);
d179 1
a179 1
    stringBuffer.append(TEXT_73);
d181 1
a181 1
    stringBuffer.append(TEXT_74);
d183 1
a183 1
    stringBuffer.append(TEXT_75);
d185 1
a185 1
    stringBuffer.append(TEXT_76);
d187 1
a187 1
    stringBuffer.append(TEXT_77);
d189 1
a189 1
    stringBuffer.append(TEXT_78);
d191 1
a191 1
    stringBuffer.append(TEXT_79);
d194 1
a194 1
    stringBuffer.append(TEXT_80);
d197 1
a197 1
    stringBuffer.append(TEXT_81);
d199 1
a199 1
    stringBuffer.append(TEXT_82);
d201 1
a201 1
    stringBuffer.append(TEXT_83);
d203 1
a203 1
    stringBuffer.append(TEXT_84);
d211 1
a211 1
    stringBuffer.append(TEXT_85);
d214 1
a214 1
    stringBuffer.append(TEXT_86);
d216 1
a216 1
    stringBuffer.append(TEXT_87);
d218 1
a218 1
    stringBuffer.append(TEXT_88);
d220 1
a220 1
    stringBuffer.append(TEXT_89);
d222 1
a222 1
    stringBuffer.append(TEXT_90);
d224 1
a224 1
    stringBuffer.append(TEXT_91);
d226 1
a226 1
    stringBuffer.append(TEXT_92);
d228 1
a228 1
    stringBuffer.append(TEXT_93);
d230 1
a230 1
    stringBuffer.append(TEXT_94);
d232 1
a232 1
    stringBuffer.append(TEXT_95);
d235 1
a235 1
    stringBuffer.append(TEXT_96);
d237 3
a239 3
    stringBuffer.append(TEXT_97);
    stringBuffer.append(TEXT_98);
    stringBuffer.append(TEXT_99);
d241 1
a241 1
    stringBuffer.append(TEXT_100);
d243 1
a243 1
    stringBuffer.append(TEXT_101);
d245 1
a245 1
    stringBuffer.append(TEXT_102);
d250 1
a250 1
    stringBuffer.append(TEXT_103);
d254 1
a254 1
    stringBuffer.append(TEXT_104);
d256 1
a256 1
    stringBuffer.append(TEXT_105);
d258 1
a258 1
    stringBuffer.append(TEXT_106);
d260 1
a260 1
    stringBuffer.append(TEXT_107);
d262 1
a262 1
    stringBuffer.append(TEXT_108);
d264 1
a264 1
    stringBuffer.append(TEXT_109);
d266 1
a266 1
    stringBuffer.append(TEXT_110);
d269 1
a269 1
    stringBuffer.append(TEXT_111);
d272 1
a272 1
    stringBuffer.append(TEXT_112);
d274 1
a274 1
    stringBuffer.append(TEXT_113);
d276 1
a276 1
    stringBuffer.append(TEXT_114);
d278 1
a278 1
    stringBuffer.append(TEXT_115);
d280 1
a280 1
    stringBuffer.append(TEXT_116);
d282 1
a282 1
    stringBuffer.append(TEXT_117);
d284 1
a284 1
    stringBuffer.append(TEXT_118);
d287 1
a287 1
    stringBuffer.append(TEXT_119);
d290 1
a290 1
    stringBuffer.append(TEXT_120);
d292 1
a292 1
    stringBuffer.append(TEXT_121);
d294 1
a294 1
    stringBuffer.append(TEXT_122);
d296 1
a296 1
    stringBuffer.append(TEXT_123);
d304 1
a304 1
    stringBuffer.append(TEXT_124);
d307 1
a307 1
    stringBuffer.append(TEXT_125);
d309 1
a309 1
    stringBuffer.append(TEXT_126);
d311 1
a311 1
    stringBuffer.append(TEXT_127);
d313 1
a313 1
    stringBuffer.append(TEXT_128);
d315 1
a315 1
    stringBuffer.append(TEXT_129);
d317 1
a317 1
    stringBuffer.append(TEXT_130);
d319 1
a319 1
    stringBuffer.append(TEXT_131);
d321 1
a321 1
    stringBuffer.append(TEXT_132);
d323 1
a323 1
    stringBuffer.append(TEXT_133);
d325 1
a325 1
    stringBuffer.append(TEXT_134);
@


1.8
log
@Correcting color-relative file names
@
text
@d5 1
d21 87
a107 87
  protected final String TEXT_2 = NL + NL + "/**" + NL + " * @@generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_3 = " extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_4 = "() {";
  protected final String TEXT_5 = NL;
  protected final String TEXT_6 = NL + "\t\t";
  protected final String TEXT_7 = ".setFill(";
  protected final String TEXT_8 = ");";
  protected final String TEXT_9 = NL + "\t\t";
  protected final String TEXT_10 = ".setOutline(";
  protected final String TEXT_11 = ");";
  protected final String TEXT_12 = NL + "\t\t";
  protected final String TEXT_13 = ".setLineWidth(";
  protected final String TEXT_14 = ");";
  protected final String TEXT_15 = NL + "\t\t";
  protected final String TEXT_16 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_17 = ");";
  protected final String TEXT_18 = NL + "\t\t";
  protected final String TEXT_19 = ".setFillXOR(";
  protected final String TEXT_20 = ");";
  protected final String TEXT_21 = NL + "\t\t";
  protected final String TEXT_22 = ".setOutlineXOR(";
  protected final String TEXT_23 = ");";
  protected final String TEXT_24 = NL + "\t\t";
  protected final String TEXT_25 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_26 = ", ";
  protected final String TEXT_27 = "));";
  protected final String TEXT_28 = NL + "\t\t";
  protected final String TEXT_29 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(";
  protected final String TEXT_30 = "), getMapMode().DPtoLP(";
  protected final String TEXT_31 = ")));";
  protected final String TEXT_32 = NL + "\t\t";
  protected final String TEXT_33 = ".setForegroundColor(";
  protected final String TEXT_34 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_35 = ", ";
  protected final String TEXT_36 = ", ";
  protected final String TEXT_37 = ")";
  protected final String TEXT_38 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_39 = ");";
  protected final String TEXT_40 = NL + "\t\t";
  protected final String TEXT_41 = ".setBackgroundColor(";
  protected final String TEXT_42 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_43 = ", ";
  protected final String TEXT_44 = ", ";
  protected final String TEXT_45 = ")";
  protected final String TEXT_46 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_47 = ");";
  protected final String TEXT_48 = NL + "\t\t";
  protected final String TEXT_49 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_50 = "), getMapMode().DPtoLP(";
  protected final String TEXT_51 = "));";
  protected final String TEXT_52 = NL + "\t\tsetSourceDecoration(createSourceDecoration());";
  protected final String TEXT_53 = NL + "\t\tsetTargetDecoration(createTargetDecoration());";
  protected final String TEXT_54 = NL + "\t}" + NL;
  protected final String TEXT_55 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_56 = " createSourceDecoration() {";
  protected final String TEXT_57 = NL;
  protected final String TEXT_58 = "\t\t";
  protected final String TEXT_59 = " ";
  protected final String TEXT_60 = " = new ";
  protected final String TEXT_61 = "();";
  protected final String TEXT_62 = NL;
  protected final String TEXT_63 = NL + "\t\t";
  protected final String TEXT_64 = ".setForegroundColor(";
  protected final String TEXT_65 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_66 = ", ";
  protected final String TEXT_67 = ", ";
  protected final String TEXT_68 = ")";
  protected final String TEXT_69 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_70 = ");";
  protected final String TEXT_71 = NL + "\t\t";
  protected final String TEXT_72 = ".setBackgroundColor(";
  protected final String TEXT_73 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_74 = ", ";
  protected final String TEXT_75 = ", ";
  protected final String TEXT_76 = ")";
  protected final String TEXT_77 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_78 = ");";
  protected final String TEXT_79 = NL + "\t\t";
  protected final String TEXT_80 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_81 = "), getMapMode().DPtoLP(";
  protected final String TEXT_82 = "));";
  protected final String TEXT_83 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_84 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_85 = ", ";
  protected final String TEXT_86 = ");";
  protected final String TEXT_87 = NL + "\t\t";
  protected final String TEXT_88 = ".setTemplate(pl);";
d109 38
a146 38
  protected final String TEXT_90 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_91 = NL + "\t\treturn ";
  protected final String TEXT_92 = ";" + NL + "\t}";
  protected final String TEXT_93 = NL;
  protected final String TEXT_94 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_95 = " createTargetDecoration() {";
  protected final String TEXT_96 = NL;
  protected final String TEXT_97 = "\t\t";
  protected final String TEXT_98 = " ";
  protected final String TEXT_99 = " = new ";
  protected final String TEXT_100 = "();";
  protected final String TEXT_101 = NL;
  protected final String TEXT_102 = NL + "\t\t";
  protected final String TEXT_103 = ".setForegroundColor(";
  protected final String TEXT_104 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_105 = ", ";
  protected final String TEXT_106 = ", ";
  protected final String TEXT_107 = ")";
  protected final String TEXT_108 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_109 = ");";
  protected final String TEXT_110 = NL + "\t\t";
  protected final String TEXT_111 = ".setBackgroundColor(";
  protected final String TEXT_112 = "new org.eclipse.swt.graphics.Color(null, ";
  protected final String TEXT_113 = ", ";
  protected final String TEXT_114 = ", ";
  protected final String TEXT_115 = ")";
  protected final String TEXT_116 = "org.eclipse.draw2d.ColorConstants.";
  protected final String TEXT_117 = ");";
  protected final String TEXT_118 = NL + "\t\t";
  protected final String TEXT_119 = ".setPreferredSize(getMapMode().DPtoLP(";
  protected final String TEXT_120 = "), getMapMode().DPtoLP(";
  protected final String TEXT_121 = "));";
  protected final String TEXT_122 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_123 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_124 = ", ";
  protected final String TEXT_125 = ");";
  protected final String TEXT_126 = NL + "\t\t";
  protected final String TEXT_127 = ".setTemplate(pl);";
d148 6
a153 5
  protected final String TEXT_129 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_130 = NL + "\t\treturn ";
  protected final String TEXT_131 = ";" + NL + "\t}";
  protected final String TEXT_132 = NL + "}";
  protected final String TEXT_133 = NL;
d160 3
a162 1
PolylineConnection figure = (PolylineConnection) argument;
d166 1
a166 1
    stringBuffer.append(figure.getName());
d170 4
d177 1
a177 1
    stringBuffer.append(TEXT_5);
d182 1
a182 1
    stringBuffer.append(TEXT_6);
d184 1
a184 1
    stringBuffer.append(TEXT_7);
d186 1
a186 1
    stringBuffer.append(TEXT_8);
d188 1
a188 1
    stringBuffer.append(TEXT_9);
d190 1
a190 1
    stringBuffer.append(TEXT_10);
d192 1
a192 1
    stringBuffer.append(TEXT_11);
d194 1
a194 1
    stringBuffer.append(TEXT_12);
d196 1
a196 1
    stringBuffer.append(TEXT_13);
d198 1
a198 1
    stringBuffer.append(TEXT_14);
d200 1
a200 1
    stringBuffer.append(TEXT_15);
d202 1
a202 1
    stringBuffer.append(TEXT_16);
d204 1
a204 1
    stringBuffer.append(TEXT_17);
d206 1
a206 1
    stringBuffer.append(TEXT_18);
d208 1
a208 1
    stringBuffer.append(TEXT_19);
d210 1
a210 1
    stringBuffer.append(TEXT_20);
d212 1
a212 1
    stringBuffer.append(TEXT_21);
d214 1
a214 1
    stringBuffer.append(TEXT_22);
d216 1
a216 1
    stringBuffer.append(TEXT_23);
d220 1
a220 1
    stringBuffer.append(TEXT_24);
d222 1
a222 1
    stringBuffer.append(TEXT_25);
d224 1
a224 1
    stringBuffer.append(TEXT_26);
d226 1
a226 1
    stringBuffer.append(TEXT_27);
d230 1
a230 1
    stringBuffer.append(TEXT_28);
d232 1
a232 1
    stringBuffer.append(TEXT_29);
d234 1
a234 1
    stringBuffer.append(TEXT_30);
d236 1
a236 1
    stringBuffer.append(TEXT_31);
d241 1
a241 1
    stringBuffer.append(TEXT_32);
d243 1
a243 1
    stringBuffer.append(TEXT_33);
d245 1
a245 1
    stringBuffer.append(TEXT_34);
d247 1
a247 1
    stringBuffer.append(TEXT_35);
d249 1
a249 1
    stringBuffer.append(TEXT_36);
d251 1
a251 1
    stringBuffer.append(TEXT_37);
d253 1
a253 1
    stringBuffer.append(TEXT_38);
d256 1
a256 1
    stringBuffer.append(TEXT_39);
d259 1
a259 1
    stringBuffer.append(TEXT_40);
d261 1
a261 1
    stringBuffer.append(TEXT_41);
d263 1
a263 1
    stringBuffer.append(TEXT_42);
d265 1
a265 1
    stringBuffer.append(TEXT_43);
d267 1
a267 1
    stringBuffer.append(TEXT_44);
d269 1
a269 1
    stringBuffer.append(TEXT_45);
d271 1
a271 1
    stringBuffer.append(TEXT_46);
d274 1
a274 1
    stringBuffer.append(TEXT_47);
d277 1
a277 1
    stringBuffer.append(TEXT_48);
d279 1
a279 1
    stringBuffer.append(TEXT_49);
d281 1
a281 1
    stringBuffer.append(TEXT_50);
d283 1
a283 1
    stringBuffer.append(TEXT_51);
d287 1
a287 1
    stringBuffer.append(TEXT_52);
d290 1
a290 1
    stringBuffer.append(TEXT_53);
d292 1
a292 1
    stringBuffer.append(TEXT_54);
d296 1
a296 1
    stringBuffer.append(TEXT_55);
a297 2
    stringBuffer.append(TEXT_56);
    stringBuffer.append(TEXT_57);
a298 1
    stringBuffer.append(fqnSwitch.doSwitch(df));
a299 1
    stringBuffer.append(decFigVarName);
d303 4
d311 1
a311 1
    stringBuffer.append(TEXT_62);
d315 1
a315 1
    stringBuffer.append(TEXT_63);
d317 1
a317 1
    stringBuffer.append(TEXT_64);
d319 1
a319 1
    stringBuffer.append(TEXT_65);
d321 1
a321 1
    stringBuffer.append(TEXT_66);
d323 1
a323 1
    stringBuffer.append(TEXT_67);
d325 1
a325 1
    stringBuffer.append(TEXT_68);
d327 1
a327 1
    stringBuffer.append(TEXT_69);
d330 1
a330 1
    stringBuffer.append(TEXT_70);
d333 1
a333 1
    stringBuffer.append(TEXT_71);
d335 1
a335 1
    stringBuffer.append(TEXT_72);
d337 1
a337 1
    stringBuffer.append(TEXT_73);
d339 1
a339 1
    stringBuffer.append(TEXT_74);
d341 1
a341 1
    stringBuffer.append(TEXT_75);
d343 1
a343 1
    stringBuffer.append(TEXT_76);
d345 1
a345 1
    stringBuffer.append(TEXT_77);
d348 1
a348 1
    stringBuffer.append(TEXT_78);
d351 1
a351 1
    stringBuffer.append(TEXT_79);
d353 1
a353 1
    stringBuffer.append(TEXT_80);
d355 1
a355 1
    stringBuffer.append(TEXT_81);
d357 1
a357 1
    stringBuffer.append(TEXT_82);
d365 1
a365 1
    stringBuffer.append(TEXT_83);
d368 1
a368 1
    stringBuffer.append(TEXT_84);
d370 1
a370 1
    stringBuffer.append(TEXT_85);
d372 1
a372 1
    stringBuffer.append(TEXT_86);
a373 4
    stringBuffer.append(TEXT_87);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_88);
    	} /*!if getTemplate().isEmpty()*/ 
d377 1
a377 1
    } /*if instanceof */ 
d381 4
d386 1
a386 1
    stringBuffer.append(TEXT_93);
d389 1
a389 1
    stringBuffer.append(TEXT_94);
a390 2
    stringBuffer.append(TEXT_95);
    stringBuffer.append(TEXT_96);
a391 1
    stringBuffer.append(fqnSwitch.doSwitch(df));
a392 1
    stringBuffer.append(decFigVarName);
d396 4
d404 1
a404 1
    stringBuffer.append(TEXT_101);
d408 1
a408 1
    stringBuffer.append(TEXT_102);
d410 1
a410 1
    stringBuffer.append(TEXT_103);
d412 1
a412 1
    stringBuffer.append(TEXT_104);
d414 1
a414 1
    stringBuffer.append(TEXT_105);
d416 1
a416 1
    stringBuffer.append(TEXT_106);
d418 1
a418 1
    stringBuffer.append(TEXT_107);
d420 1
a420 1
    stringBuffer.append(TEXT_108);
d423 1
a423 1
    stringBuffer.append(TEXT_109);
d426 1
a426 1
    stringBuffer.append(TEXT_110);
d428 1
a428 1
    stringBuffer.append(TEXT_111);
d430 1
a430 1
    stringBuffer.append(TEXT_112);
d432 1
a432 1
    stringBuffer.append(TEXT_113);
d434 1
a434 1
    stringBuffer.append(TEXT_114);
d436 1
a436 1
    stringBuffer.append(TEXT_115);
d438 1
a438 1
    stringBuffer.append(TEXT_116);
d441 1
a441 1
    stringBuffer.append(TEXT_117);
d444 1
a444 1
    stringBuffer.append(TEXT_118);
d446 1
a446 1
    stringBuffer.append(TEXT_119);
d448 1
a448 1
    stringBuffer.append(TEXT_120);
d450 1
a450 1
    stringBuffer.append(TEXT_121);
d458 1
a458 1
    stringBuffer.append(TEXT_122);
d461 1
a461 1
    stringBuffer.append(TEXT_123);
d463 1
a463 1
    stringBuffer.append(TEXT_124);
d465 1
a465 1
    stringBuffer.append(TEXT_125);
a466 4
    stringBuffer.append(TEXT_126);
    stringBuffer.append(decFigVarName);
    stringBuffer.append(TEXT_127);
    	} /*!if getTemplate().isEmpty()*/ 
d470 1
a470 1
    } /*if instanceof */ 
d474 1
a474 1
    }
d476 1
d478 3
@


1.7
log
@support figure's preferred size
@
text
@d52 1
a52 1
  protected final String TEXT_34 = "new Color(null, ";
d56 1
a56 1
  protected final String TEXT_38 = "ColorConstants.";
d60 1
a60 1
  protected final String TEXT_42 = "new Color(null, ";
d64 1
a64 1
  protected final String TEXT_46 = "ColorConstants.";
d83 1
a83 1
  protected final String TEXT_65 = "new Color(null, ";
d87 1
a87 1
  protected final String TEXT_69 = "ColorConstants.";
d91 1
a91 1
  protected final String TEXT_73 = "new Color(null, ";
d95 1
a95 1
  protected final String TEXT_77 = "ColorConstants.";
d122 1
a122 1
  protected final String TEXT_104 = "new Color(null, ";
d126 1
a126 1
  protected final String TEXT_108 = "ColorConstants.";
d130 1
a130 1
  protected final String TEXT_112 = "new Color(null, ";
d134 1
a134 1
  protected final String TEXT_116 = "ColorConstants.";
@


1.6
log
@support Figure.color attributes
@
text
@d66 30
a95 30
  protected final String TEXT_48 = NL + "\t\tsetSourceDecoration(createSourceDecoration());";
  protected final String TEXT_49 = NL + "\t\tsetTargetDecoration(createTargetDecoration());";
  protected final String TEXT_50 = NL + "\t}" + NL;
  protected final String TEXT_51 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_52 = " createSourceDecoration() {";
  protected final String TEXT_53 = NL;
  protected final String TEXT_54 = "\t\t";
  protected final String TEXT_55 = " ";
  protected final String TEXT_56 = " = new ";
  protected final String TEXT_57 = "();";
  protected final String TEXT_58 = NL;
  protected final String TEXT_59 = NL + "\t\t";
  protected final String TEXT_60 = ".setForegroundColor(";
  protected final String TEXT_61 = "new Color(null, ";
  protected final String TEXT_62 = ", ";
  protected final String TEXT_63 = ", ";
  protected final String TEXT_64 = ")";
  protected final String TEXT_65 = "ColorConstants.";
  protected final String TEXT_66 = ");";
  protected final String TEXT_67 = NL + "\t\t";
  protected final String TEXT_68 = ".setBackgroundColor(";
  protected final String TEXT_69 = "new Color(null, ";
  protected final String TEXT_70 = ", ";
  protected final String TEXT_71 = ", ";
  protected final String TEXT_72 = ")";
  protected final String TEXT_73 = "ColorConstants.";
  protected final String TEXT_74 = ");";
  protected final String TEXT_75 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_76 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_77 = ", ";
d98 13
a110 13
  protected final String TEXT_80 = ".setTemplate(pl);";
  protected final String TEXT_81 = NL + "\t\t";
  protected final String TEXT_82 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_83 = NL + "\t\treturn ";
  protected final String TEXT_84 = ";" + NL + "\t}";
  protected final String TEXT_85 = NL;
  protected final String TEXT_86 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_87 = " createTargetDecoration() {";
  protected final String TEXT_88 = NL;
  protected final String TEXT_89 = "\t\t";
  protected final String TEXT_90 = " ";
  protected final String TEXT_91 = " = new ";
  protected final String TEXT_92 = "();";
d112 8
a119 8
  protected final String TEXT_94 = NL + "\t\t";
  protected final String TEXT_95 = ".setForegroundColor(";
  protected final String TEXT_96 = "new Color(null, ";
  protected final String TEXT_97 = ", ";
  protected final String TEXT_98 = ", ";
  protected final String TEXT_99 = ")";
  protected final String TEXT_100 = "ColorConstants.";
  protected final String TEXT_101 = ");";
d121 1
a121 1
  protected final String TEXT_103 = ".setBackgroundColor(";
d128 24
a151 12
  protected final String TEXT_110 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_111 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_112 = ", ";
  protected final String TEXT_113 = ");";
  protected final String TEXT_114 = NL + "\t\t";
  protected final String TEXT_115 = ".setTemplate(pl);";
  protected final String TEXT_116 = NL + "\t\t";
  protected final String TEXT_117 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_118 = NL + "\t\treturn ";
  protected final String TEXT_119 = ";" + NL + "\t}";
  protected final String TEXT_120 = NL + "}";
  protected final String TEXT_121 = NL;
d267 9
d279 1
a279 1
    stringBuffer.append(TEXT_48);
d282 1
a282 1
    stringBuffer.append(TEXT_49);
d284 1
a284 1
    stringBuffer.append(TEXT_50);
d288 1
a288 1
    stringBuffer.append(TEXT_51);
d290 3
a292 3
    stringBuffer.append(TEXT_52);
    stringBuffer.append(TEXT_53);
    stringBuffer.append(TEXT_54);
d294 1
a294 1
    stringBuffer.append(TEXT_55);
d296 1
a296 1
    stringBuffer.append(TEXT_56);
d298 1
a298 1
    stringBuffer.append(TEXT_57);
d303 1
a303 1
    stringBuffer.append(TEXT_58);
d307 1
a307 1
    stringBuffer.append(TEXT_59);
d309 1
a309 1
    stringBuffer.append(TEXT_60);
d311 1
a311 1
    stringBuffer.append(TEXT_61);
d313 1
a313 1
    stringBuffer.append(TEXT_62);
d315 1
a315 1
    stringBuffer.append(TEXT_63);
d317 1
a317 1
    stringBuffer.append(TEXT_64);
d319 1
a319 1
    stringBuffer.append(TEXT_65);
d322 1
a322 1
    stringBuffer.append(TEXT_66);
d325 1
a325 1
    stringBuffer.append(TEXT_67);
d327 1
a327 1
    stringBuffer.append(TEXT_68);
d329 1
a329 1
    stringBuffer.append(TEXT_69);
d331 1
a331 1
    stringBuffer.append(TEXT_70);
d333 1
a333 1
    stringBuffer.append(TEXT_71);
d335 1
a335 1
    stringBuffer.append(TEXT_72);
d337 1
a337 1
    stringBuffer.append(TEXT_73);
d340 10
a349 1
    stringBuffer.append(TEXT_74);
d357 1
a357 1
    stringBuffer.append(TEXT_75);
d360 1
a360 1
    stringBuffer.append(TEXT_76);
d362 1
a362 1
    stringBuffer.append(TEXT_77);
d364 1
a364 1
    stringBuffer.append(TEXT_78);
d366 1
a366 1
    stringBuffer.append(TEXT_79);
d368 1
a368 1
    stringBuffer.append(TEXT_80);
d370 1
a370 1
    stringBuffer.append(TEXT_81);
d372 1
a372 1
    stringBuffer.append(TEXT_82);
d374 1
a374 1
    stringBuffer.append(TEXT_83);
d376 1
a376 1
    stringBuffer.append(TEXT_84);
d378 1
a378 1
    stringBuffer.append(TEXT_85);
d381 1
a381 1
    stringBuffer.append(TEXT_86);
d383 3
a385 3
    stringBuffer.append(TEXT_87);
    stringBuffer.append(TEXT_88);
    stringBuffer.append(TEXT_89);
d387 1
a387 1
    stringBuffer.append(TEXT_90);
d389 1
a389 1
    stringBuffer.append(TEXT_91);
d391 1
a391 1
    stringBuffer.append(TEXT_92);
d396 1
a396 1
    stringBuffer.append(TEXT_93);
d400 1
a400 1
    stringBuffer.append(TEXT_94);
d402 1
a402 1
    stringBuffer.append(TEXT_95);
d404 1
a404 1
    stringBuffer.append(TEXT_96);
d406 1
a406 1
    stringBuffer.append(TEXT_97);
d408 1
a408 1
    stringBuffer.append(TEXT_98);
d410 1
a410 1
    stringBuffer.append(TEXT_99);
d412 1
a412 1
    stringBuffer.append(TEXT_100);
d415 1
a415 1
    stringBuffer.append(TEXT_101);
d418 1
a418 1
    stringBuffer.append(TEXT_102);
d420 1
a420 1
    stringBuffer.append(TEXT_103);
d422 1
a422 1
    stringBuffer.append(TEXT_104);
d424 1
a424 1
    stringBuffer.append(TEXT_105);
d426 1
a426 1
    stringBuffer.append(TEXT_106);
d428 1
a428 1
    stringBuffer.append(TEXT_107);
d430 1
a430 1
    stringBuffer.append(TEXT_108);
d433 10
a442 1
    stringBuffer.append(TEXT_109);
d450 1
a450 1
    stringBuffer.append(TEXT_110);
d453 1
a453 1
    stringBuffer.append(TEXT_111);
d455 1
a455 1
    stringBuffer.append(TEXT_112);
d457 1
a457 1
    stringBuffer.append(TEXT_113);
d459 1
a459 1
    stringBuffer.append(TEXT_114);
d461 1
a461 1
    stringBuffer.append(TEXT_115);
d463 1
a463 1
    stringBuffer.append(TEXT_116);
d465 1
a465 1
    stringBuffer.append(TEXT_117);
d467 1
a467 1
    stringBuffer.append(TEXT_118);
d469 1
a469 1
    stringBuffer.append(TEXT_119);
d471 2
a472 2
    stringBuffer.append(TEXT_120);
    stringBuffer.append(TEXT_121);
@


1.5
log
@- Generating figures for Child node
- Transforming coordinates for rounded rectangles
@
text
@d50 21
a70 21
  protected final String TEXT_32 = NL + "\t\tsetSourceDecoration(createSourceDecoration());";
  protected final String TEXT_33 = NL + "\t\tsetTargetDecoration(createTargetDecoration());";
  protected final String TEXT_34 = NL + "\t}" + NL;
  protected final String TEXT_35 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_36 = " createSourceDecoration() {";
  protected final String TEXT_37 = NL;
  protected final String TEXT_38 = "\t\t";
  protected final String TEXT_39 = " ";
  protected final String TEXT_40 = " = new ";
  protected final String TEXT_41 = "();";
  protected final String TEXT_42 = NL;
  protected final String TEXT_43 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_44 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_45 = ", ";
  protected final String TEXT_46 = ");";
  protected final String TEXT_47 = NL + "\t\t";
  protected final String TEXT_48 = ".setTemplate(pl);";
  protected final String TEXT_49 = NL + "\t\t";
  protected final String TEXT_50 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_51 = NL + "\t\treturn ";
  protected final String TEXT_52 = ";" + NL + "\t}";
d72 68
a139 20
  protected final String TEXT_54 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_55 = " createTargetDecoration() {";
  protected final String TEXT_56 = NL;
  protected final String TEXT_57 = "\t\t";
  protected final String TEXT_58 = " ";
  protected final String TEXT_59 = " = new ";
  protected final String TEXT_60 = "();";
  protected final String TEXT_61 = NL;
  protected final String TEXT_62 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_63 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_64 = ", ";
  protected final String TEXT_65 = ");";
  protected final String TEXT_66 = NL + "\t\t";
  protected final String TEXT_67 = ".setTemplate(pl);";
  protected final String TEXT_68 = NL + "\t\t";
  protected final String TEXT_69 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));";
  protected final String TEXT_70 = NL + "\t\treturn ";
  protected final String TEXT_71 = ";" + NL + "\t}";
  protected final String TEXT_72 = NL + "}";
  protected final String TEXT_73 = NL;
d154 3
a156 2
    Shape shapeFigure = figure;
String shapeVarName = "this";
d161 1
a161 1
    if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {
d163 1
a163 1
    stringBuffer.append(shapeVarName);
d165 1
a165 1
    stringBuffer.append(shapeFigure.isFill());
d167 1
a167 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d169 1
a169 1
    stringBuffer.append(shapeVarName);
d171 1
a171 1
    stringBuffer.append(shapeFigure.isOutline());
d173 1
a173 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d175 1
a175 1
    stringBuffer.append(shapeVarName);
d177 1
a177 1
    stringBuffer.append(shapeFigure.getLineWidth());
d179 1
a179 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
d181 1
a181 1
    stringBuffer.append(shapeVarName);
d183 1
a183 1
    stringBuffer.append(shapeFigure.getLineKind().getName());
d185 1
a185 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
d187 1
a187 1
    stringBuffer.append(shapeVarName);
d189 1
a189 1
    stringBuffer.append(shapeFigure.isXorFill());
d191 1
a191 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
d193 1
a193 1
    stringBuffer.append(shapeVarName);
d195 1
a195 1
    stringBuffer.append(shapeFigure.isXorOutline());
d197 2
a198 2
    } if (shapeFigure instanceof Polyline && !((Polyline) shapeFigure).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) shapeFigure).getTemplate().iterator(); pointIt.hasNext(); ) {
d201 1
a201 1
    stringBuffer.append(shapeVarName);
d208 2
a209 2
    } else if (shapeFigure instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) shapeFigure;
d211 1
a211 1
    stringBuffer.append(shapeVarName);
d218 39
d258 1
a258 1
    stringBuffer.append(TEXT_32);
d261 1
a261 1
    stringBuffer.append(TEXT_33);
d263 1
a263 1
    stringBuffer.append(TEXT_34);
d267 1
a267 1
    stringBuffer.append(TEXT_35);
d269 3
a271 3
    stringBuffer.append(TEXT_36);
    stringBuffer.append(TEXT_37);
    stringBuffer.append(TEXT_38);
d273 1
a273 1
    stringBuffer.append(TEXT_39);
d275 1
a275 1
    stringBuffer.append(TEXT_40);
d277 45
a321 2
    stringBuffer.append(TEXT_41);
    stringBuffer.append(TEXT_42);
d327 1
a327 1
    stringBuffer.append(TEXT_43);
d330 1
a330 1
    stringBuffer.append(TEXT_44);
d332 1
a332 1
    stringBuffer.append(TEXT_45);
d334 1
a334 1
    stringBuffer.append(TEXT_46);
d336 1
a336 1
    stringBuffer.append(TEXT_47);
d338 1
a338 1
    stringBuffer.append(TEXT_48);
d340 1
a340 1
    stringBuffer.append(TEXT_49);
d342 1
a342 1
    stringBuffer.append(TEXT_50);
d344 1
a344 1
    stringBuffer.append(TEXT_51);
d346 1
a346 1
    stringBuffer.append(TEXT_52);
d348 1
a348 1
    stringBuffer.append(TEXT_53);
d351 1
a351 1
    stringBuffer.append(TEXT_54);
d353 3
a355 3
    stringBuffer.append(TEXT_55);
    stringBuffer.append(TEXT_56);
    stringBuffer.append(TEXT_57);
d357 1
a357 1
    stringBuffer.append(TEXT_58);
d359 1
a359 1
    stringBuffer.append(TEXT_59);
d361 45
a405 2
    stringBuffer.append(TEXT_60);
    stringBuffer.append(TEXT_61);
d411 1
a411 1
    stringBuffer.append(TEXT_62);
d414 1
a414 1
    stringBuffer.append(TEXT_63);
d416 1
a416 1
    stringBuffer.append(TEXT_64);
d418 1
a418 1
    stringBuffer.append(TEXT_65);
d420 1
a420 1
    stringBuffer.append(TEXT_66);
d422 1
a422 1
    stringBuffer.append(TEXT_67);
d424 1
a424 1
    stringBuffer.append(TEXT_68);
d426 1
a426 1
    stringBuffer.append(TEXT_69);
d428 1
a428 1
    stringBuffer.append(TEXT_70);
d430 1
a430 1
    stringBuffer.append(TEXT_71);
d432 2
a433 2
    stringBuffer.append(TEXT_72);
    stringBuffer.append(TEXT_73);
@


1.4
log
@Setting scale only for Polyline & Polygon decorations.
@
text
@d47 3
a49 3
  protected final String TEXT_29 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(";
  protected final String TEXT_30 = ", ";
  protected final String TEXT_31 = "));";
@


1.3
log
@As a part of implementstion
#114178,114179
"Shortcutting" diagram elements.
@
text
@d68 24
a91 22
  protected final String TEXT_50 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));" + NL + "\t\treturn ";
  protected final String TEXT_51 = ";" + NL + "\t}";
  protected final String TEXT_52 = NL;
  protected final String TEXT_53 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_54 = " createTargetDecoration() {";
  protected final String TEXT_55 = NL;
  protected final String TEXT_56 = "\t\t";
  protected final String TEXT_57 = " ";
  protected final String TEXT_58 = " = new ";
  protected final String TEXT_59 = "();";
  protected final String TEXT_60 = NL;
  protected final String TEXT_61 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_62 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_63 = ", ";
  protected final String TEXT_64 = ");";
  protected final String TEXT_65 = NL + "\t\t";
  protected final String TEXT_66 = ".setTemplate(pl);";
  protected final String TEXT_67 = NL + "\t\t";
  protected final String TEXT_68 = ".setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));" + NL + "\t\treturn ";
  protected final String TEXT_69 = ";" + NL + "\t}";
  protected final String TEXT_70 = NL + "}";
  protected final String TEXT_71 = NL;
d192 4
a195 1
    if ((df instanceof PolylineDecoration || df instanceof PolygonDecoration) && !((Polyline) df).getTemplate().isEmpty()) {
d197 1
a197 1
    	for (Iterator pointIt = ((Polyline) df).getTemplate().iterator(); pointIt.hasNext(); ) {
d204 1
a204 1
    } /*for*/ 
d208 1
a208 1
    } /*if instanceof */ 
d212 2
d215 1
a215 1
    stringBuffer.append(TEXT_51);
d217 1
a217 1
    stringBuffer.append(TEXT_52);
d220 1
a220 1
    stringBuffer.append(TEXT_53);
a221 1
    stringBuffer.append(TEXT_54);
d224 1
d226 1
a226 1
    stringBuffer.append(TEXT_57);
d228 1
a228 1
    stringBuffer.append(TEXT_58);
a229 1
    stringBuffer.append(TEXT_59);
d231 1
d233 6
a238 3
    if ((df instanceof PolylineDecoration || df instanceof PolygonDecoration) && !((Polyline) df).getTemplate().isEmpty()) {
    stringBuffer.append(TEXT_61);
    	for (Iterator pointIt = ((Polyline) df).getTemplate().iterator(); pointIt.hasNext(); ) {
d240 1
a240 1
    stringBuffer.append(TEXT_62);
d242 1
a242 1
    stringBuffer.append(TEXT_63);
a243 2
    stringBuffer.append(TEXT_64);
    } /*for*/ 
d245 2
a247 2
    stringBuffer.append(TEXT_66);
    } /*if instanceof */ 
d249 1
a249 1
    stringBuffer.append(decFigVarName);
d253 1
a253 1
    }
d255 1
d257 3
@


1.2
log
@@@generated comments ws added
@
text
@d21 48
a68 48
  protected final String TEXT_3 = " extends ";
  protected final String TEXT_4 = " {" + NL + "" + NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tpublic ";
  protected final String TEXT_5 = "() {";
  protected final String TEXT_6 = NL;
  protected final String TEXT_7 = NL + "\t\t";
  protected final String TEXT_8 = ".setFill(";
  protected final String TEXT_9 = ");";
  protected final String TEXT_10 = NL + "\t\t";
  protected final String TEXT_11 = ".setOutline(";
  protected final String TEXT_12 = ");";
  protected final String TEXT_13 = NL + "\t\t";
  protected final String TEXT_14 = ".setLineWidth(";
  protected final String TEXT_15 = ");";
  protected final String TEXT_16 = NL + "\t\t";
  protected final String TEXT_17 = ".setLineStyle(org.eclipse.draw2d.Graphics.";
  protected final String TEXT_18 = ");";
  protected final String TEXT_19 = NL + "\t\t";
  protected final String TEXT_20 = ".setFillXOR(";
  protected final String TEXT_21 = ");";
  protected final String TEXT_22 = NL + "\t\t";
  protected final String TEXT_23 = ".setOutlineXOR(";
  protected final String TEXT_24 = ");";
  protected final String TEXT_25 = NL + "\t\t";
  protected final String TEXT_26 = ".addPoint(new org.eclipse.draw2d.geometry.Point(";
  protected final String TEXT_27 = ", ";
  protected final String TEXT_28 = "));";
  protected final String TEXT_29 = NL + "\t\t";
  protected final String TEXT_30 = ".setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(";
  protected final String TEXT_31 = ", ";
  protected final String TEXT_32 = "));";
  protected final String TEXT_33 = NL + "\t\tsetSourceDecoration(createSourceDecoration());";
  protected final String TEXT_34 = NL + "\t\tsetTargetDecoration(createTargetDecoration());";
  protected final String TEXT_35 = NL + "\t}" + NL;
  protected final String TEXT_36 = NL + "\t/**" + NL + "\t * @@generated" + NL + "\t */" + NL + "\tprivate ";
  protected final String TEXT_37 = " createSourceDecoration() {";
  protected final String TEXT_38 = NL;
  protected final String TEXT_39 = "\t\t";
  protected final String TEXT_40 = " ";
  protected final String TEXT_41 = " = new ";
  protected final String TEXT_42 = "();";
  protected final String TEXT_43 = NL;
  protected final String TEXT_44 = NL + "\t\torg.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();";
  protected final String TEXT_45 = NL + "\t\tpl.addPoint(";
  protected final String TEXT_46 = ", ";
  protected final String TEXT_47 = ");";
  protected final String TEXT_48 = NL + "\t\t";
  protected final String TEXT_49 = ".setTemplate(pl);";
  protected final String TEXT_50 = NL + "\t\treturn ";
d85 5
a89 4
  protected final String TEXT_67 = NL + "\t\treturn ";
  protected final String TEXT_68 = ";" + NL + "\t}";
  protected final String TEXT_69 = NL + "}";
  protected final String TEXT_70 = NL;
d102 1
a102 1
    stringBuffer.append(fqnSwitch.doSwitch(figure));
a103 2
    stringBuffer.append(figure.getName());
    stringBuffer.append(TEXT_5);
d106 1
a106 1
    stringBuffer.append(TEXT_6);
d111 2
d114 1
a114 1
    stringBuffer.append(shapeVarName);
d116 1
a116 1
    stringBuffer.append(shapeFigure.isFill());
d118 1
a118 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {
d120 1
a120 1
    stringBuffer.append(shapeVarName);
d122 1
a122 1
    stringBuffer.append(shapeFigure.isOutline());
d124 1
a124 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {
d126 1
a126 1
    stringBuffer.append(shapeVarName);
d128 1
a128 1
    stringBuffer.append(shapeFigure.getLineWidth());
d130 1
a130 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {
d132 1
a132 1
    stringBuffer.append(shapeVarName);
d134 1
a134 1
    stringBuffer.append(shapeFigure.getLineKind().getName());
d136 1
a136 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {
d138 1
a138 1
    stringBuffer.append(shapeVarName);
d140 1
a140 1
    stringBuffer.append(shapeFigure.isXorFill());
d142 1
a142 1
    } if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {
d144 1
a144 1
    stringBuffer.append(shapeVarName);
a145 2
    stringBuffer.append(shapeFigure.isXorOutline());
    stringBuffer.append(TEXT_24);
d149 2
d152 1
a152 1
    stringBuffer.append(shapeVarName);
d154 1
a154 1
    stringBuffer.append(p.getX());
a155 2
    stringBuffer.append(p.getY());
    stringBuffer.append(TEXT_28);
d159 2
d162 1
a162 1
    stringBuffer.append(shapeVarName);
d164 1
a164 1
    stringBuffer.append(rrFigure.getCornerWidth());
d166 2
a167 1
    stringBuffer.append(rrFigure.getCornerHeight());
d170 1
a170 1
    if (figure.getSourceDecoration() != null) {
a172 1
if (figure.getTargetDecoration() != null) {
a173 2
    }
    stringBuffer.append(TEXT_35);
d177 2
a179 1
    stringBuffer.append(fqnSwitch.doSwitch(df));
d182 1
d184 2
a186 2
    stringBuffer.append(TEXT_40);
    stringBuffer.append(decFigVarName);
a187 1
    stringBuffer.append(fqnSwitch.doSwitch(df));
a188 1
    stringBuffer.append(TEXT_43);
d191 1
a191 1
    stringBuffer.append(TEXT_44);
d194 2
d197 1
a197 1
    stringBuffer.append(p.getX());
d199 1
a199 1
    stringBuffer.append(p.getY());
d201 1
a201 1
    } /*for*/ 
d203 2
a205 2
    stringBuffer.append(TEXT_49);
    } /*if instanceof */ 
d243 2
a245 1
    stringBuffer.append(TEXT_69);
d247 1
@


1.1
log
@ some templates to support #114177 (graphical definition model) - with GEF IFigure code as an outcome
@
text
@d20 1
a20 1
  protected final String TEXT_2 = NL + NL + "public class ";
d22 1
a22 1
  protected final String TEXT_4 = " {" + NL + "" + NL + "\tpublic ";
d54 1
a54 1
  protected final String TEXT_36 = NL + "\tprivate ";
d71 1
a71 1
  protected final String TEXT_53 = NL + "\tprivate ";
@

