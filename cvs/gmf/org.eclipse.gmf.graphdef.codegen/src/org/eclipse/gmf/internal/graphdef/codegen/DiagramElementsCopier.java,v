head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080807-1333:1.3
	v20080806-1520:1.3
	v20080731-1520:1.3
	v20080722-1827:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080528-1052:1.3
	v20080417-1610:1.3
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20080207-0207:1.3
	v20071214-1111:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070518-1300:1.2
	v20070330-1300:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070228-2000:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061027-1200:1.1
	v20061013-1330:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2007.05.28.13.33.47;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	3e69465ada3a4567;

1.2
date	2007.02.27.19.23.13;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	533845e485214567;

1.1
date	2006.05.23.21.09.44;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.graphdef.codegen;

import java.util.HashSet;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.gmf.gmfgraph.FigureDescriptor;

class DiagramElementsCopier extends EcoreUtil.Copier {
	private final HashSet<FigureDescriptor> myOriginalFigures = new HashSet<FigureDescriptor>();
	
	public void registerSubstitution(FigureDescriptor original, FigureDescriptor substituted){
		put(original, substituted);
		myOriginalFigures.add(original);
	}

	public boolean isSubstituted(FigureDescriptor original) {
		return containsKey(original);
	}

	@@SuppressWarnings("unchecked")
	public <T extends EObject> T xcopy(T original) {
		return (T) super.copy(original);
	}

	protected void copyReference(EReference eReference, EObject eObject, EObject copyEObject) {
		if (EcoreUtil.isAncestor(myOriginalFigures, eObject)){
			//no such features in the CustomFigure's
			return;
		}
		super.copyReference(eReference, eObject, copyEObject);
	}
}@


1.2
log
@do not duplicate processed custom figures
@
text
@d19 1
a19 5
import org.eclipse.gmf.gmfgraph.ConnectionFigure;
import org.eclipse.gmf.gmfgraph.CustomFigure;
import org.eclipse.gmf.gmfgraph.DecorationFigure;
import org.eclipse.gmf.gmfgraph.Figure;
import org.eclipse.gmf.gmfgraph.GMFGraphFactory;
d22 1
a22 1
	private final HashSet<Figure> myOriginalFigures = new HashSet<Figure>();
d24 1
a24 1
	public void registerSubstitution(Figure original, CustomFigure substituted){
d29 1
a29 1
	public boolean isSubstituted(Figure original) {
d33 5
a44 15

	/**
	 * 	FIXME this method has nothing to do with DiagramElementsCopier 
	 */
	static CustomFigure createCustomFigure(Figure original){
		GMFGraphFactory factory = GMFGraphFactory.eINSTANCE;
		if (original instanceof DecorationFigure){
			return factory.createCustomDecoration();
		} 
		if (original instanceof ConnectionFigure){
			return factory.createCustomConnection();
		}
		return factory.createCustomFigure();
	}

@


1.1
log
@#140887 Remove Child interface from GMFGraph.
Although the need to reference child figures persist, thus FigureHandle was introduced, to allow diagramElements to reference either *generateable* figures (Figure subclasses) or *just-use* figures (like CustomFigure and FigureAccessor).
Refactoring performed with #131365 "Mirror GMFGraph model when generating standalone figure plugin" in mind
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d26 1
a26 1
	private final HashSet myOriginalFigures = new HashSet();
d32 5
a36 1
	
d45 3
@

