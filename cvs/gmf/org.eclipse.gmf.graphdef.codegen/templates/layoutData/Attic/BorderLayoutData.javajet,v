head	1.5;
access;
symbols
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080731-1520:1.5
	v20061027-1200:1.4
	v20061013-1330:1.4
	v20060925-1700:1.4
	v20060919-0800:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060616-1200:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-1300:1.4
	v20060519-0800:1.4
	I20060505-1400:1.4
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2006.11.02.21.58.37;	author atikhomirov;	state dead;
branches;
next	1.4;

1.4
date	2006.05.02.15.05.35;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.02.11.44.18;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.15.14.44.35;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.13.17.36.17;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.5
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="InitBorderLayoutDataGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.graphdef.codegen.*"%>
<%
GraphDefDispatcher.LayoutArgs argsBundle = (GraphDefDispatcher.LayoutArgs) argument;
final BorderLayoutData gmfLayoutData = (BorderLayoutData) argsBundle.getData();
final GraphDefDispatcher dispatcher = argsBundle.getDispatcher();
%>

<%
Alignment alignment = gmfLayoutData.getAlignment();
if (alignment == null){
	alignment = Alignment.CENTER_LITERAL;
}
final String constantName;
switch(alignment.getValue()){
	case Alignment.CENTER: 
	case Alignment.FILL: 
		constantName = "CENTER";
		break;
	case Alignment.BEGINNING:
		if (gmfLayoutData.isVertical()){
			constantName = "TOP";
		} else {
			constantName = "LEFT";
		}
		break;
	case Alignment.END:
		if (gmfLayoutData.isVertical()){
			constantName = "BOTTOM";
		} else {
			constantName = "RIGHT";
		}
		break;
	default:
		throw new IllegalArgumentException("Unknown Alignment: " + gmfLayoutData.getAlignment());
}
%>
	Object <%=argsBundle.getConstraintVariableName()%> = <%=dispatcher.getImportManager().getImportedName("org.eclipse.draw2d.BorderLayout")%>.<%=constantName%>;

@


1.4
log
@unused code removed
@
text
@@


1.3
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@a5 1
final String figureVarName = argsBundle.getVariableName();
@


1.2
log
@[mgolubev] #127252 layout support
@
text
@d39 1
a39 1
		<%=argsBundle.getManagerVariableName()%>.setConstraint(<%=figureVarName%>, <%=dispatcher.getImportManager().getImportedName("org.eclipse.draw2d.BorderLayout")%>.<%=constantName%>);
@


1.1
log
@[mgolubev] #127252 layout support
@
text
@d39 1
a39 1
		<%=figureVarName%>.getParent().getLayoutManager().setConstraint(<%=figureVarName%>, <%=dispatcher.getImportManager().getImportedName("org.eclipse.draw2d.BorderLayout")%>.<%=constantName%>);
@

