head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080731-1520:1.3
	v20061027-1200:1.2
	v20061013-1330:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	I20060505-1400:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.11.02.21.58.37;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.05.18.19.12.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.02.13.16.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.standalone.templates" class="PluginActivatorGenerator"
	imports="org.eclipse.gmf.graphdef.codegen.* org.eclipse.gmf.common.codegen.ImportAssistant"%>
<%
final Object[] passedArgs = (Object[]) argument;
final StandaloneGenerator.Config config = (StandaloneGenerator.Config) passedArgs[0];
final ImportAssistant importManager = (ImportAssistant) passedArgs[1];

importManager.emitPackageStatement(stringBuffer);
%>

import org.eclipse.core.runtime.Plugin;

<%
if (config.needsMapMode()){
%>
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeTypes;
<%
}
%>

import org.osgi.framework.BundleContext;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=importManager.getCompilationUnitName()%> extends Plugin {

<%
if (config.needsMapMode()){
%>
	private IMapMode myMapMode = MapModeTypes.IDENTITY_MM;
<%
}
%>

	/**
	 * @@generated
	 */
	public static final String ID = "<%=config.getPluginID()%>"; //$NON-NLS-1$

	/**
	 * @@generated
	 */
	private static <%=config.getPluginActivatorClassName()%> ourInstance;

	/**
	 * @@generated
	 */
	public <%=config.getPluginActivatorClassName()%>() {
	}

	/**
	 * @@generated
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
		if (ourInstance != null){
			throw new IllegalStateException("Plugin: " + ID + " already started");
		}
		ourInstance = this;
	}

	/**
	 * @@generated
	 */
	public void stop(BundleContext context) throws Exception {
		if (ourInstance == null){
			throw new IllegalStateException("Plugin: " + ID + " is not started");
		}
		ourInstance = null;
		super.stop(context);
	}
	
<%
if (config.needsMapMode()){
%>
	/**
	 * @@generated
	 */
	public void setMapMode(IMapMode mapMode) {
		myMapMode = mapMode;
		if (myMapMode == null){
			myMapMode = MapModeTypes.IDENTITY_MM;
		}
	}

	/**
	 * @@generated
	 */
	public IMapMode getMapMode() {
		return myMapMode;
	}

<%
}
%>

	/**
	 * @@generated
	 */
	public static <%=config.getPluginActivatorClassName()%> getDefault() {
		return ourInstance;
	}
}
<%importManager.emitSortedImports();%>
@


1.2
log
@Emitter became top-level entity (TextEmitter), oddness of JetAdapter and Emitter api were cleared.
GeneratorBase lost knowledge about JET.
Parts of gmf.common made internal to avoid possible API issues.
ImportAssistant refactored to know name of compilation unit to avoid problems like #134506.
FigureGenerator's reuse of ImportAssistant removed.
[mgolubev] Tests for #134506 and 142553
@
text
@@


1.1
log
@[mgolubev] #128779 generate figures as standalone plugin
#129362 - respect plug-in dependencies imposed by figure fqn switch
@
text
@d28 1
a28 1
public class <%=config.getPluginActivatorClassName()%> extends Plugin {
@

