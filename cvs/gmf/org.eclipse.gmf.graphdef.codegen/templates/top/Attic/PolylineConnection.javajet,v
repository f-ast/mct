head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080731-1520:1.9
	v20061027-1200:1.6
	v20061013-1330:1.8
	v20060925-1700:1.6
	v20060919-0800:1.6
	M1_20:1.8
	v20060904-1500:1.8
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060616-1200:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	I20060505-1400:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2006.11.02.21.58.38;	author atikhomirov;	state dead;
branches;
next	1.8;

1.8
date	2006.08.24.15.38.54;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.24.13.13.37;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.26.16.49.27;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.18.19.12.40;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.13.17.53.19;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.24.18.50.22;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.06.22.21.42;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.06.18.10.22;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="TopConnectionGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.* org.eclipse.emf.ecore.* java.util.Iterator org.eclipse.emf.ecore.util.EcoreUtil org.eclipse.emf.codegen.util.CodeGenUtil;"%>
<%
final GraphDefDispatcher.Args innerArgs = (GraphDefDispatcher.Args) ((Object[]) argument)[0];
final PolylineConnection figure = (PolylineConnection)innerArgs.getFigure();
final GraphDefDispatcher dispatcher = innerArgs.getDispatcher();
final ImportAssistant importManager = dispatcher.getImportManager();
final FigureQualifiedNameSwitch fqnSwitch = dispatcher.getFQNSwitch();
%>

<%@@ include file="customBorderFactoryMethods.jetinc"%>

	/**
	 * @@generated
	 */
	public <%=figure.getName()%>() {
<%=dispatcher.dispatch("Shape", dispatcher.create(figure, "this"))%>
<%if (figure.getSourceDecoration() != null) {%>
		setSourceDecoration(createSourceDecoration());
<%}
if (figure.getTargetDecoration() != null) {%>
		setTargetDecoration(createTargetDecoration());
<%}%>
	}

<%if (figure.getSourceDecoration() != null) {
	final String className = fqnSwitch.get(figure.getSourceDecoration(), importManager);%>
	/**
	 * @@generated
	 */
	private <%=className%> createSourceDecoration() {
<%=dispatcher.dispatch("instantiate", dispatcher.create(figure.getSourceDecoration(), "df"))%>
		return df;
	}
<%} /*if sourceDecoration != null */ %>

<%if (figure.getTargetDecoration() != null) {
	final String className = fqnSwitch.get(figure.getTargetDecoration(), importManager);%>
	/**
	 * @@generated
	 */
	private <%=className%> createTargetDecoration() {
<%=dispatcher.dispatch("instantiate", dispatcher.create(figure.getTargetDecoration(), "df"))%>
		return df;
	}
<%}%>
@


1.8
log
@[154687] mgolubev - Support scalable polygons
@
text
@@


1.7
log
@[154683] mgolubev - Handle custom borders.
@
text
@d4 5
a8 6
Object[] args = (Object[]) argument;
PolylineConnection figure = (PolylineConnection) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];
final FigureQualifiedNameSwitch fqnSwitch = (FigureQualifiedNameSwitch) args[2];
final GraphDefDispatcher dispatcher = (GraphDefDispatcher) args[3];
final boolean isInnerClass = ((Boolean) args[4]).booleanValue();
a9 1
<%importManager.emitPackageStatement(stringBuffer);%>
d11 1
a11 8
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=importManager.getCompilationUnitName()%> extends <%=fqnSwitch.get(figure, importManager)%> {

<%@@ include file="../customBorderFactoryMethods.jetinc"%>
a46 2
<%@@ include file="classFooter.jetinc"%>
<%importManager.emitSortedImports();%>
@


1.6
log
@[mgolubev] #148402 Do not create unlimited number of font/color resources.
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.* java.util.Iterator"%>
d20 2
@


1.5
log
@Emitter became top-level entity (TextEmitter), oddness of JetAdapter and Emitter api were cleared.
GeneratorBase lost knowledge about JET.
Parts of gmf.common made internal to avoid possible API issues.
ImportAssistant refactored to know name of compilation unit to avoid problems like #134506.
FigureGenerator's reuse of ImportAssistant removed.
[mgolubev] Tests for #134506 and 142553
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.GraphDefDispatcher"%>
d9 1
d54 2
a55 1
}<%importManager.emitSortedImports();%>@


1.4
log
@explicit method names for fqn switch to better reflect it's intention
@
text
@d10 1
d17 1
a17 1
public class <%=figure.getName()%> extends <%=fqnSwitch.get(figure, importManager)%> {
@


1.3
log
@[mgolubev] #129362 move runtime-specific fqn out from templates to external switch
@
text
@d7 1
a7 1
final GMFGraphSwitch fqnSwitch = (GMFGraphSwitch) args[2];
d16 1
a16 1
public class <%=figure.getName()%> extends <%=importManager.getImportedName((String) fqnSwitch.doSwitch(figure))%> {
d32 1
a32 1
	final String className = importManager.getImportedName((String) fqnSwitch.doSwitch(figure.getSourceDecoration()));%>
d43 1
a43 1
	final String className = importManager.getImportedName((String) fqnSwitch.doSwitch(figure.getTargetDecoration()));%>
@


1.2
log
@refactor - moved EmitterFactory/Dispatcher infrastructure to gmf.common to enable its use in oeg.codegen
@
text
@d16 1
a16 1
public class <%=figure.getName()%> extends <%=importManager.getImportedName("org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx")%> {
@


1.1
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.Dispatcher"%>
d7 2
a8 2
final GMFGraphSwitch fqnSwitch = new FigureQualifiedNameSwitch();
final Dispatcher dispatcher = (Dispatcher) args[2];
d22 1
a22 1
<%=dispatcher.dispatch("Shape", dispatcher.create(figure, "this", importManager, fqnSwitch))%>
d37 1
a37 1
<%=dispatcher.dispatch("instantiate", dispatcher.create(figure.getSourceDecoration(), "df", importManager, fqnSwitch))%>
d48 1
a48 1
<%=dispatcher.dispatch("instantiate", dispatcher.create(figure.getTargetDecoration(), "df", importManager, fqnSwitch))%>
@

