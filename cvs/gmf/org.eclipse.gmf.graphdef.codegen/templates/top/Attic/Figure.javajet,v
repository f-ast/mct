head	1.14;
access;
symbols
	v20080813-1520:1.14
	v20080806-1520:1.14
	v20080731-1520:1.14
	v20061027-1200:1.11
	v20061013-1330:1.13
	v20060925-1700:1.11
	v20060919-0800:1.11
	M1_20:1.13
	v20060904-1500:1.13
	v20060713-1700:1.11
	R1_0_maintenance:1.11.0.2
	R1_0:1.11
	v20060627-1200:1.11
	v20060626-1420:1.11
	v20060616-1200:1.10
	v20060531-1730:1.10
	v20060530-1930:1.10
	v20060526-1200:1.10
	v20060519-1300:1.10
	v20060519-0800:1.10
	I20060505-1400:1.9
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.6
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.14
date	2006.11.02.21.58.37;	author atikhomirov;	state dead;
branches;
next	1.13;

1.13
date	2006.08.24.15.38.54;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2006.08.24.13.13.37;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.26.16.49.27;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.18.19.12.40;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.02.15.05.35;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.02.11.44.18;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.21.17.47.10;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.13.15.03.34;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.30.22.39.09;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.13.17.53.19;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.27.17.40.11;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.06.22.21.42;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.06.18.10.22;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.14
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="TopFigureGenerator" 
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.* org.eclipse.emf.ecore.* java.util.Iterator org.eclipse.emf.ecore.util.EcoreUtil org.eclipse.emf.codegen.util.CodeGenUtil; "%>
<%
final GraphDefDispatcher.Args innerArgs = (GraphDefDispatcher.Args) ((Object[]) argument)[0];
final Figure figure = innerArgs.getFigure();
final GraphDefDispatcher dispatcher = innerArgs.getDispatcher();
final ImportAssistant importManager = dispatcher.getImportManager();
%>

<%@@ include file="customBorderFactoryMethods.jetinc"%>
<%if (figure instanceof ScalablePolygon) {%>
<%@@ include file="scalablePolygonBehavior.jetinc"%>
<%}%>

	/**
	 * @@generated
	 */
	public <%=figure.getName()%>() {
<%
GraphDefDispatcher.LayoutArgs dispatcherArgs = dispatcher.createLayoutArgs(figure, "this", "myGenLayoutManager", null);
%>
		<%=dispatcher.dispatch("createLayout", dispatcherArgs)%>
		<%=dispatcher.dispatch(figure, dispatcherArgs)%>
		createContents();
	}

<%=dispatcher.dispatch("Children", dispatcherArgs)%>

<%if (false == figure instanceof Polyline) {/*no much sense to define useLocalCoordinates for polyline and its descendants*/%>
<%@@ include file="localCoordinates.jetinc"%>
<%}%>@


1.13
log
@[154687] mgolubev - Support scalable polygons
@
text
@@


1.12
log
@[154683] mgolubev - Handle custom borders.
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.* org.eclipse.emf.ecore.* java.util.Iterator org.eclipse.emf.ecore.util.EcoreUtil org.eclipse.emf.codegen.util.CodeGenUtil; "%>
d4 4
a7 8
Object[] args = (Object[]) argument;
Figure figure = (Figure) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];
final FigureQualifiedNameSwitch fqnSwitch = (FigureQualifiedNameSwitch) args[2];
final GraphDefDispatcher dispatcher = (GraphDefDispatcher) args[3];

//[MG] FIXME: Why we need this? Is it in use somewhere?
final boolean isInnerClass = ((Boolean) args[4]).booleanValue();
a8 1
<%importManager.emitPackageStatement(stringBuffer);%>
d10 4
a13 8
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=importManager.getCompilationUnitName()%> extends <%=fqnSwitch.get(figure, importManager)%> {

<%@@ include file="../customBorderFactoryMethods.jetinc"%>
d31 1
a31 3
<%}%>
<%@@ include file="classFooter.jetinc"%>
<%importManager.emitSortedImports();%>
@


1.11
log
@[mgolubev] #148402 Do not create unlimited number of font/color resources.
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.* java.util.Iterator;"%>
d9 2
d22 2
d30 1
a30 1
%>	
@


1.10
log
@Emitter became top-level entity (TextEmitter), oddness of JetAdapter and Emitter api were cleared.
GeneratorBase lost knowledge about JET.
Parts of gmf.common made internal to avoid possible API issues.
ImportAssistant refactored to know name of compilation unit to avoid problems like #134506.
FigureGenerator's reuse of ImportAssistant removed.
[mgolubev] Tests for #134506 and 142553
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.*"%>
d9 1
d37 2
a38 1
}<%importManager.emitSortedImports();%>
@


1.9
log
@unused code removed
@
text
@d10 1
d17 1
a17 1
public class <%=figure.getName()%> extends <%=fqnSwitch.get(figure, importManager)%> {
@


1.8
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.* java.util.*"%>
@


1.7
log
@#137840 uncompiliable code if CustomFigure contains Label  - gmfgen expects getters generated for figure's children; besides, it makes no much sense to keep both Figure.javajet and Shape.javajet, with sole difference in the way they process children
@
text
@d27 1
a27 28
<%
for (Iterator it = figure.getChildren().iterator(); it.hasNext();) {
		Figure next = (Figure) it.next();
		final String childVarName = "child" + next.getName();%>
		
		<%=fqnSwitch.get(next, importManager)%> <%=childVarName%> = createFigure<%=next.getName()%>();
		setFigure<%=next.getName()%>(<%=childVarName%>);
		add(<%=childVarName%>);
		<%=dispatcher.dispatch("createLayoutData", dispatcher.createLayoutArgs(next, childVarName, dispatcherArgs.getManagerVariableName(), "layoutData" + next.getName()))%>		
<%}%>
	}

<%
int fc = 0;
for (Iterator it = figure.getChildren().iterator(); it.hasNext(); fc++) {
	Figure next = (Figure) it.next();
	final String nextClassName = fqnSwitch.get(next, importManager);%>

	/**
	 * @@generated
	 */
	private <%=nextClassName%> f<%=next.getName()%>; 

	/**
	 * @@generated
	 */
	public <%=nextClassName%> getFigure<%=next.getName()%>() {
		return f<%=next.getName()%>;
d30 1
a30 18
	/**
	 * @@generated
	 */
	protected void setFigure<%=next.getName()%>(<%=nextClassName%> figure) {
		f<%=next.getName()%> = figure;
	}

	/**
	 * @@generated
	 */
	private <%=nextClassName%> createFigure<%=next.getName()%>() {
<% GraphDefDispatcher.LayoutArgs childFigureArgs = dispatcher.createLayoutArgs(next, next.getName(), "layoutManager" + next.getName(), null);%>
<%=dispatcher.dispatch("instantiate", childFigureArgs)%>
<%=dispatcher.dispatch("Children", new Object[] {next.getChildren(), dispatcher, childFigureArgs})%>
		return <%=next.getName()%>;
	}

<%}%>
@


1.6
log
@#135015 some heuristic to provide valid default useLocalCoordinates.
@
text
@d1 2
a2 2
<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="TopFigureGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.GraphDefDispatcher"%>
d23 3
a25 3
GraphDefDispatcher.LayoutArgs dispatcherArgs = dispatcher.createLayoutArgs(figure, "this", "genLayoutManager", null);
%>
		<%=dispatcher.dispatch("createLayout", dispatcherArgs)%>	
d27 28
a54 1
		<%=dispatcher.dispatch("Children", new Object[] {figure.getChildren(), dispatcher, dispatcherArgs})%>
d56 20
@


1.5
log
@[mgolubev] #134097 Invalid code is generated for the node figure with XYLayout
@
text
@a20 5
	private boolean myUseLocalCoordinates;

	/**
	 * @@generated
	 */
d29 3
a31 15
	
	/**
	 * @@generated
	 */
	protected boolean useLocalCoordinates() {
		return myUseLocalCoordinates;
	}

	/**
	 * @@generated
	 */
	protected void setUseLocalCoordinates(boolean useLocalCoordinates) {
		myUseLocalCoordinates = useLocalCoordinates;
	}

@


1.4
log
@explicit method names for fqn switch to better reflect it's intention
@
text
@d27 6
a32 2
		<%=dispatcher.dispatch(figure, dispatcher.create(figure, "this"))%>
		<%=dispatcher.dispatch("Children", new Object[] {figure.getChildren(), dispatcher, "this"})%>
@


1.3
log
@Adding "setUseLocalCoordinates" method.
Useful for inner shape-figures located outside of compartment.
@
text
@d7 1
a7 1
final GMFGraphSwitch fqnSwitch = (GMFGraphSwitch) args[2];
d16 1
a16 1
public class <%=figure.getName()%> extends <%=importManager.getImportedName((String) fqnSwitch.doSwitch(figure))%> {
@


1.2
log
@refactor - moved EmitterFactory/Dispatcher infrastructure to gmf.common to enable its use in oeg.codegen
@
text
@d17 6
d30 15
@


1.1
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.Dispatcher"%>
d7 2
a8 2
final GMFGraphSwitch fqnSwitch = new FigureQualifiedNameSwitch();
final Dispatcher dispatcher = (Dispatcher) args[2];
d21 2
a22 2
		<%=dispatcher.dispatch(figure, dispatcher.create(figure, "this", importManager, fqnSwitch))%>
		<%=dispatcher.dispatch("Children", new Object[] {figure.getChildren(), importManager, fqnSwitch, dispatcher, "this"})%>
@

