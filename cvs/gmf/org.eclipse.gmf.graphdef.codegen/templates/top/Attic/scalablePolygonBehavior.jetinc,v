head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080731-1520:1.3
	v20061013-1330:1.1
	M1_20:1.1
	v20060904-1500:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.11.02.21.58.38;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.11.01.12.49.44;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.24.15.38.54;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@	/**
	 * @@generated
	 */
	private final org.eclipse.draw2d.geometry.PointList myTemplate = new org.eclipse.draw2d.geometry.PointList();
	/**
	 * @@generated
	 */
	private org.eclipse.draw2d.geometry.Rectangle myTemplateBounds;
	
	/**
	 * @@generated
	 */
	public void addPoint(org.eclipse.draw2d.geometry.Point point){
		myTemplate.addPoint(point);
		myTemplateBounds = null;
	}
	
	/**
	 * @@generated
	 */
	protected void fillShape(org.eclipse.draw2d.Graphics graphics) {
		org.eclipse.draw2d.geometry.Rectangle bounds = getBounds();
		graphics.pushState();
		graphics.translate(bounds.x, bounds.y);
		graphics.fillPolygon(scalePointList());
		graphics.popState();
	}
	
	/**
	 * @@generated
	 */
	protected void outlineShape(org.eclipse.draw2d.Graphics graphics) {
		org.eclipse.draw2d.geometry.Rectangle bounds = getBounds();
		graphics.pushState();
		graphics.translate(bounds.x, bounds.y);
		graphics.drawPolygon(scalePointList());
		graphics.popState();
	}
	
	/**
	 * @@generated
	 */
	private org.eclipse.draw2d.geometry.Rectangle getTemplateBounds(){
		if (myTemplateBounds == null) {
			myTemplateBounds = myTemplate.getBounds().getCopy().union(0, 0);
			//just safety -- we are going to use this as divider 
			if (myTemplateBounds.width < 1){
				myTemplateBounds.width = 1;
			}
			if (myTemplateBounds.height < 1){
				myTemplateBounds.height = 1;
			}
		}
		return myTemplateBounds;
	}
	
	/**
	 * @@generated
	 */
	private int[] scalePointList() {
		org.eclipse.draw2d.geometry.Rectangle pointsBounds = getTemplateBounds();
		org.eclipse.draw2d.geometry.Rectangle actualBounds = getBounds();

		float xScale = ((float) actualBounds.width) / pointsBounds.width;
		float yScale = ((float) actualBounds.height) / pointsBounds.height;

		if (xScale == 1 && yScale == 1) {
			return myTemplate.toIntArray();
		}
		int[] scaled = (int[]) myTemplate.toIntArray().clone();
		for (int i = 0; i < scaled.length; i += 2) {
			scaled[i] = (int) Math.floor(scaled[i] * xScale);
			scaled[i + 1] = (int) Math.floor(scaled[i + 1] * yScale);
		}
		return scaled;
	}
@


1.2
log
@do not modify original template when calculating bounds
@
text
@@


1.1
log
@[154687] mgolubev - Support scalable polygons
@
text
@d44 2
a45 3
		if (myTemplateBounds == null){
			myTemplateBounds = new org.eclipse.draw2d.geometry.Rectangle();
			myTemplateBounds = myTemplate.getBounds().union(0, 0);
@

