head	1.4;
access;
symbols
	v20080813-1520:1.4
	v20080807-1333:1.4
	v20080806-1520:1.4
	v20080731-1520:1.4
	v20080722-1827:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080528-1052:1.4
	v20080417-1610:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.4
	v20071214-1111:1.4
	v20071108-0000:1.4
	v20071003-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070518-1300:1.2
	v20070330-1300:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.06.20.11.39.51;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	95e467912074567;

1.3
date	2007.05.28.13.33.47;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	3e69465ada3a4567;

1.2
date	2007.05.17.22.14.20;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	640b464cd3bb4567;

1.1
date	2006.11.02.21.58.36;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[193180] not every child of a link deserves to be generated. Even labels are not that good, but decorations are even worse. Left labels for legacy reasons (users tend to edfine link's label as a child), omit every other child kind.
In addition, use field name right away as figure variable to minimize number of names introduced, fight potential name clashes
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2006/GraphicalDefinition"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION Util»

«DEFINE CreateChildren FOR gmfgraph::RealFigure-»
	/**
	 * @@generated
	 */
	private void createContents(){
«EXPAND instantiate(0, this, "this") FOREACH children»
	}
«ENDDEFINE»

«DEFINE instantiate(EInt count, gmfgraph::RealFigure parentFigure, String parentFigureVariable) FOR gmfgraph::Figure»
«ERROR "Abstract instantiate(int, RealFigure, String)"»
«ENDDEFINE»

«DEFINE instantiate(EInt count, gmfgraph::RealFigure parentFigure, EString parentFigureVariable) FOR gmfgraph::FigureRef-»
/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/
«EXPAND instantiate(count, parentFigure, parentFigureVariable) FOR figure-»
«ENDDEFINE»

«DEFINE instantiate(EInt count, gmfgraph::RealFigure parentFigure, EString parentFigureVariable) FOR gmfgraph::RealFigure»
«LET figureVariableName(count) AS figureVarName»
«EXPAND newFigureInstance(figureVarName)»
«EXPAND Attrs::Init(figureVarName)-»
«IF null == layoutData || null == parentFigure.layout-»«REM»Check for (parentLayout != null) to avoid generating data that won't be used. Not sure it's essential, but it was that way with old jet templates«ENDREM»
«parentFigureVariable».add(«figureVarName»);
«ELSE-»
«EXPAND LayoutData::Init(parentFigureVariable, figureVarName) FOR layoutData-»
«ENDIF-»
«EXPAND Layout::Init(figureVarName) FOR layout-»
«EXPAND instantiate(count + 1, this, figureVarName) FOREACH children-»
«ENDLET»
«ENDDEFINE»

«DEFINE newFigureInstance(String figureVarName) FOR gmfgraph::RealFigure»«IF needsField()»«figureVarName» = «EXPAND Runtime::newInstance»;«ELSE»«EXPAND Runtime::newInstance(figureVarName)»«ENDIF»«ENDDEFINE»

«DEFINE newFigureInstance(String figureVarName) FOR gmfgraph::ScalablePolygon-»
«LET figureVarName.toFirstUpper() + "Class" AS localClassName-»
class «localClassName» extends «EXPAND Runtime::fqn» {
«EXPAND xtras::ScalablePolygon::behaviour-»
};
«IF !needsField()»«localClassName» «ENDIF»«figureVarName» = new «localClassName»();
«ENDLET-»
«ENDDEFINE»
@


1.3
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@a43 1
«IF needsField()»«figureFieldName()» = «figureVarName»;«ENDIF-»
d49 1
a49 1
«DEFINE newFigureInstance(String figureVarName) FOR gmfgraph::Figure»«EXPAND Runtime::newInstance(figureVarName)»«ENDDEFINE»
d56 1
a56 1
«localClassName» «figureVarName» = new «localClassName»();
@


1.2
log
@moving towards not using fqnswitch and java to tell draw2d figure names; let toolsmith to control what draw2d classes are being used; fqnSwitch argument replaced with simple token indicator
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GraphicalDefinition"»
d17 1
a17 1
«DEFINE CreateChildren FOR gmfgraph::Figure-»
d22 1
a22 1
«EXPAND instantiate(0, this, "this") FOREACH children.typeSelect(gmfgraph::Figure)»
a23 1
«EXPAND accessors FOREACH children.typeSelect(gmfgraph::Figure)»
d26 2
a27 2
«DEFINE instantiate(EInt count, gmfgraph::Figure parentFigure, String parentFigureVariable) FOR gmfgraph::FigureMarker»
«ERROR "Placeholder, though should never get here as long as there\'s typeSelect above"»
d30 3
a32 2
«DEFINE accessors FOR gmfgraph::FigureMarker»
«ERROR "Placeholder, though should never get here as long as there\'s typeSelect above"»
d35 1
a35 1
«DEFINE instantiate(EInt count, gmfgraph::Figure parentFigure, EString parentFigureVariable) FOR gmfgraph::Figure»
d44 1
a44 1
«IF !referencingElements.isEmpty()»«figureFieldSetter()»(«figureVarName»);«ENDIF-»
d46 1
a46 1
«EXPAND instantiate(count + 1, this, figureVarName) FOREACH children.typeSelect(gmfgraph::Figure)-»
a59 25

«DEFINE accessors FOR gmfgraph::Figure-»
«IF !referencingElements.isEmpty()-»
	/**
	 * @@generated
	 */
	private «EXPAND Runtime::fqn» «figureFieldName()»; 

	/**
	 * @@generated
	 */
	public «EXPAND Runtime::fqn» «figureFieldGetter()»() {
		return «figureFieldName()»;
	}
	
	/**
	 * @@generated
	 */
	private void «figureFieldSetter()»(«EXPAND Runtime::fqn» fig){
		«figureFieldName()» = fig;
	}
«ENDIF-»
«EXPAND accessors FOREACH children.typeSelect(gmfgraph::Figure)»
«ENDDEFINE»

@


1.1
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d37 1
a37 1
«EXPAND newFigureInstance(figureVarName)-»
d50 1
a50 3
«DEFINE newFigureInstance(String figureVarName) FOR gmfgraph::Figure»
«qualifiedClassNameGEF()» «figureVarName» = new «qualifiedClassNameGEF()»();
«ENDDEFINE»
d52 1
a52 1
«DEFINE newFigureInstance(String figureVarName) FOR gmfgraph::ScalablePolygon»
d54 1
a54 1
class «localClassName» extends «qualifiedClassNameGEF()» {
d66 1
a66 1
	private «qualifiedClassNameGEF()» «figureFieldName()»; 
d71 1
a71 1
	public «qualifiedClassNameGEF()» «figureFieldGetter()»() {
d78 1
a78 1
	private void «figureFieldSetter()»(«qualifiedClassNameGEF()» fig){
@

