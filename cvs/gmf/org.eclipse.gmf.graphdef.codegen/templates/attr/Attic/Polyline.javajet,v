head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080806-1520:1.3
	v20080731-1520:1.3
	v20061027-1200:1.2
	v20061013-1330:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	I20060505-1400:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.11.02.21.58.36;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2006.02.06.22.21.41;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.06.18.10.22;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="PolylineAttrGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.GraphDefDispatcher"%>
<%
GraphDefDispatcher.Args args = (GraphDefDispatcher.Args) argument;
final Polyline figureInstance = (Polyline) args.getFigure();
final String figureVarName = args.getVariableName();
final GraphDefDispatcher dispatcher = args.getDispatcher();
final ImportAssistant importManager = dispatcher.getImportManager();
%>
<%=dispatcher.dispatch("Shape", args)%>
<%if (!figureInstance.getTemplate().isEmpty()) {
	final String pointClassName = importManager.getImportedName("org.eclipse.draw2d.geometry.Point");
	for (java.util.Iterator pointIt = figureInstance.getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();%>
		<%=figureVarName%>.addPoint(new <%=pointClassName%>(<%=p.getX()%>, <%=p.getY()%>));
<%}}%>@


1.2
log
@refactor - moved EmitterFactory/Dispatcher infrastructure to gmf.common to enable its use in oeg.codegen
@
text
@@


1.1
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.graphdef.codegen.Dispatcher"%>
d4 1
a4 1
Dispatcher.Args args = (Dispatcher.Args) argument;
d7 2
a8 2
final ImportAssistant importManager = args.getImportManager();
final Dispatcher dispatcher = args.getDispatcher();
@

