head	1.2;
access;
symbols
	v20080813-1520:1.2
	v20080806-1520:1.2
	v20080731-1520:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.02.06.18.10.23;	author atikhomirov;	state dead;
branches;
next	1.1;

1.1
date	2006.02.05.23.00.50;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@major refactoring of gmfgraph codegen utilizing dispatcher infrastructure
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="ShapeAttrsGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.common.codegen.* java.util.* org.eclipse.gmf.graphdef.codegen.Dispatcher"%>
<%
Dispatcher.Args args = (Dispatcher.Args) argument;
final Shape figureInstance = (Shape) args.getFigure();
final String figureVarName = args.getVariableName();
final ImportAssistant importManager = args.getImportManager();
%>
<%
// PERHAPS, do this with reflection?
%><%if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {%>
		<%=figureVarName%>.setFill(<%=figureInstance.isFill()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {%>
		<%=figureVarName%>.setOutline(<%=figureInstance.isOutline()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {%>
		<%=figureVarName%>.setLineWidth(<%=figureInstance.getLineWidth()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {%>
		<%=figureVarName%>.setLineStyle(<%=importManager.getImportedName("org.eclipse.draw2d.Graphics")%>.<%=figureInstance.getLineKind().getName()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {%>
		<%=figureVarName%>.setFillXOR(<%=figureInstance.isXorFill()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {%>
		<%=figureVarName%>.setOutlineXOR(<%=figureInstance.isXorOutline()%>);
<%} if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();%>
		<%=figureVarName%>.addPoint(new <%=importManager.getImportedName("org.eclipse.draw2d.geometry.Point")%>(<%=p.getX()%>, <%=p.getY()%>));
<%}%><%} else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;%>
		<%=figureVarName%>.setCornerDimensions(new <%=importManager.getImportedName("org.eclipse.draw2d.geometry.Dimension")%>(getMapMode().DPtoLP(<%=rrFigure.getCornerWidth()%>), getMapMode().DPtoLP(<%=rrFigure.getCornerHeight()%>)));
<%}%><%@@ include file="FigureAttrs.jetinc"%>@


1.1
log
@provisional framework that supports (double-)dispatch from templates to
a) avoid lengthy if instanceof elseif checks,
b) solve scope and name visibility issues when extracting common code into jetinc
@
text
@@

