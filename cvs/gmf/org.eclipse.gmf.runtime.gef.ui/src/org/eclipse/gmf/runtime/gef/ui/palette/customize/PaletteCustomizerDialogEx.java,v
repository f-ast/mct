head	1.1;
access;
symbols
	v20081020-0700:1.1
	v20080813-1510:1.1
	v20080811-1546:1.1
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.2
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080503-1740:1.1
	v20080425-1959:1.1
	v20080328-1605:1.1
	v20080222-1200:1.1
	v20080114-1111:1.1
	v20080107-1111:1.1
	v20071222-1111:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.12.20.22.47.40;	author crevells;	state Exp;
branches;
next	;
commitid	3e2f476af10c4567;


desc
@@


1.1
log
@[114117] gmf_head crevells 071220 [Palette] Expose the customize palette capability from GEF
@
text
@/******************************************************************************
 * Copyright (c) 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.gef.ui.palette.customize;

import java.util.Collections;
import java.util.List;

import org.eclipse.gef.palette.PaletteRoot;
import org.eclipse.gef.ui.palette.PaletteCustomizer;
import org.eclipse.gef.ui.palette.customize.PaletteCustomizerDialog;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Shell;

/**
 * GMF's version of the <code>PaletteCustomizerDialog</code> overridden to:
 * <li>Remove the toolbar items. We do not support creating new entries for the
 * palette, deleting entries (because there is no way the user can get them
 * back), and reordering entries (because how would we determine the order after
 * the entries changed based on capability enablement?).</li>
 * 
 * @@author crevells
 */
public class PaletteCustomizerDialogEx
    extends PaletteCustomizerDialog {

    public PaletteCustomizerDialogEx(Shell shell, PaletteCustomizer customizer,
            PaletteRoot root) {
        super(shell, customizer, root);
    }

    protected List createOutlineActions() {
        return Collections.EMPTY_LIST;
    }

    protected Control createOutlineToolBar(Composite parent) {
        if (createOutlineActions().isEmpty()) {
            return null;
        }
        return super.createOutlineToolBar(parent);
    }

}
@
