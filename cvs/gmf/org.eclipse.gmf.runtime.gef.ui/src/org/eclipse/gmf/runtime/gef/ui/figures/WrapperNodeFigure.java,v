head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080813-1510:1.2
	v20080811-1546:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080503-1740:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080222-1200:1.2
	v20080114-1111:1.2
	v20080107-1111:1.2
	v20071222-1111:1.2
	v20071214-1111:1.2
	v20071130-1111:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070330-1300:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	v20060907-1100:1.2
	M1_20:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.27.28;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.44;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2003, 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.gef.ui.figures;

import java.util.Iterator;
import java.util.ListIterator;

import org.eclipse.draw2d.Border;
import org.eclipse.draw2d.ConnectionAnchor;
import org.eclipse.draw2d.Figure;
import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.StackLayout;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.draw2d.geometry.Rectangle;

/**
 * Wrapper <code>NodeFigure</code> figure to contain other figures, which may have different borders.
 * 
 * @@author sshaw
 */
public class WrapperNodeFigure extends NodeFigure {

	private IFigure subFigure;

	/**
	 * Composite pattern for wrapping a template list compartment around any
	 * potential figure.
	 * 
	 * @@param subFigure the <code>IFigure</code> that is being wrapped.
	 */
	public WrapperNodeFigure(IFigure subFigure) {
		setLayoutManager(new StackLayout() {
			public boolean isObservingVisibility() {
				return true;
			}
		});
		add(subFigure);
		this.subFigure = subFigure;
	}
	
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.draw2d.IFigure#containsPoint(int, int)
	 */
	public boolean containsPoint(int x, int y) {
		
		Iterator iter = this.getChildren().iterator();
		while (iter.hasNext()){
			Figure figure = (Figure)iter.next();
			if (figure.containsPoint(x,y)){
				return true;
			}
		}
		return false;
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gef.handles.HandleBounds#getHandleBounds()
	 */
	public Rectangle getHandleBounds() {
		ListIterator li = getChildren().listIterator();
		Rectangle unionBounds = null;
		while (li.hasNext()) {
			IFigure fig = (IFigure) li.next();
			if (fig.isVisible()) {
				Rectangle figBounds = fig.getBounds();
				if (fig instanceof NodeFigure) {
					figBounds = ((NodeFigure) fig).getHandleBounds();
				}

				if (unionBounds == null)
					unionBounds = new Rectangle(figBounds);
				else
					unionBounds.union(figBounds);
			}
		}

		if (unionBounds != null)
			return unionBounds;

		return super.getHandleBounds();
	}

	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.draw2d.Figure#paintFigure(org.eclipse.draw2d.Graphics)
	 */
	protected void paintFigure(Graphics graphics) {
		// Do nothing
	}

	/**
	 * This will return null since we have override the setBorder(Border) api.
	 */
	public Border getBorder() {
		return super.getBorder();
	}

	/**
	 * Sets the subfigure border. We are not permitting them to update the
	 * wrapper border. We intepret it as setting the border of the subFigure
	 * instead.
	 */
	public void setBorder(Border border) {
		subFigure.setBorder(border);
	}
	
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure#getSourceConnectionAnchorAt(org.eclipse.draw2d.geometry.Point)
	 */
	public ConnectionAnchor getSourceConnectionAnchorAt(Point p) {
		if( subFigure instanceof NodeFigure )
			return ((NodeFigure)subFigure).getSourceConnectionAnchorAt(p);
		return super.getSourceConnectionAnchorAt(p);
	}
	
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure#getTargetConnectionAnchorAt(org.eclipse.draw2d.geometry.Point)
	 */
	public ConnectionAnchor getTargetConnectionAnchorAt(Point p) {
		if( subFigure instanceof NodeFigure )
			return ((NodeFigure)subFigure).getTargetConnectionAnchorAt(p);
		return super.getTargetConnectionAnchorAt(p);
	}
	
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure#getConnectionAnchor(java.lang.String)
	 */
	public ConnectionAnchor getConnectionAnchor(String terminal) {
		if( subFigure instanceof NodeFigure )
			return ((NodeFigure)subFigure).getConnectionAnchor(terminal);
		return super.getConnectionAnchor(terminal);
	}
	
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure#getConnectionAnchorTerminal(org.eclipse.draw2d.ConnectionAnchor)
	 */
	public String getConnectionAnchorTerminal(ConnectionAnchor c) {
		if( subFigure instanceof NodeFigure )
			return ((NodeFigure)subFigure).getConnectionAnchorTerminal(c);
		return super.getConnectionAnchorTerminal(c);		
	}


}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2003, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

