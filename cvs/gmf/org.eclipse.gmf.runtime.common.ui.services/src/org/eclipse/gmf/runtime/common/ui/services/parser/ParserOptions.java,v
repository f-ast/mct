head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080722-1827:1.2
	v20080718-1700:1.2
	v20080718-1731:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080612-1229:1.2
	v20080425-1959:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070420-1000:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	v20070105-1200:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061218-1500:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20061012-1100:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060831-1500:1.2
	v20060824-1600:1.2
	v20060803-1200:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.27.15;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.24;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.services.parser;

/**
 * This is a wrapper used for defining, setting, and retrieving flags that can 
 * be used for the parser operations that take a flags int as a parameter.
 *  
 * @@author chmahone, "unSet" method added by choang
 */
public final class ParserOptions {
    private int flags;

    /**
     * Default constructor to initialize ParserOptions with no custom flags.
     */
    public ParserOptions() {
        flags = 0;
    }

    /**
     * Constructor that takes flags in as a parameter.
     * 
     * @@param flags that describe how the text should be parsed.  Some flags
     * are defined in this class.
     */
    public ParserOptions(int flags) {
        this.flags = flags;
    }

    // Caution: When adding parser options be sure that there are
    // no overlapping options.  Some of the options are used by 
    // more than one parser.

    /**
     * Default.  No parser options.
     */
    public static final ParserOptions NONE = new ParserOptions(0);

    // ListItemParser options
    /**
     * Display the visibility of the item.
     */
    public static final ParserOptions VISIBILITY_STYLE_TEXT =
        new ParserOptions(1 << 1);

    /**
     * Display the Stereotype.
     */
    public static final ParserOptions STEREOTYPE_STYLE_TEXT =
        new ParserOptions(1 << 2);

    // NameParser options
    /**
     * Show parent name.
     */
    public static final ParserOptions SHOW_PARENT_NAME =
        new ParserOptions(1 << 3);

    // OperationParser options    
    /**
     * Show signature.
     */
    public static final ParserOptions SHOW_SIGNATURE =
        new ParserOptions(1 << 4);

    /**
     * Show type.
     */
    public static final ParserOptions SHOW_TYPE = new ParserOptions(1 << 5);

    /**
     * Show alias.
     */
    public static final ParserOptions SHOW_ALIAS = new ParserOptions(1 << 6);
    
    /**
     * Show that the element is derived.
     */
    public static final ParserOptions SHOW_DERIVED = new ParserOptions(1 << 7);
    
    // MessageParser options
    /**
     * Show number of the message.
     */
    public static final ParserOptions SHOW_SEQUENCE_NUMBER = new ParserOptions(1 << 8);

    // PatternsTemplateArgumentParser options
    /**
     * Show that there are bound arguments.
     */
    public static final ParserOptions BIND_STYLE_TEXT = new ParserOptions(1 << 9);
    
    /**
     * Show the type.
     */
    public static final ParserOptions TYPE_STYLE_TEXT = new ParserOptions(1 << 10);
    
    /**
     * Indicates that placeholders should be ignored - if there are no data, no
     * placeholder will be generated. An example would be guillemets for the
     * stereotype list. If there are no stereotypes, the guillemets would be the
     * placeholder.
     */
    public static final ParserOptions IGNORE_PLACEHOLDERS = new ParserOptions(1 << 11);
    
    /**
     * Indicates that message signatures should use the "<parameter name> = <value>" notation.
     */
    public static final ParserOptions USE_PARAMETER_NAMES = new ParserOptions(1 << 12);
    
    /**
     * Returns the options as an int so they can be passed to operations.
     * @@return int the options in int form
     */
    public int intValue() {
        return flags;
    }

    /**
     * Checks if the specified option is set in the flags supplied.
     * @@param flags     int representing the flags
     * @@param option    one of the defined ParserOptions
     * @@return boolean  true if this option is set; false otherwise
     */
    public static boolean isSet(int flags, ParserOptions option) {
        if ((flags & option.flags) != 0)
            return true;
        return false;
    }

    /**
     * Sets an option in this ParserOptions.
     * @@param option    one of the defined ParserOptions
     */
    public void set(ParserOptions option) {
        flags = flags | option.flags;
    }
    
    /**
     * UnSets an option in the this ParserOptions.
     * @@param option one of the defined ParserOptions
     */
    public void unSet(ParserOptions option){
    	flags = flags &~ option.intValue();
    }

}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

