head	1.1;
access;
symbols
	v20081020-0700:1.1
	v20080722-1827:1.1
	v20080718-1700:1.1
	v20080718-1731:1.1
	R2_1_maintenance:1.1.0.6
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080612-1229:1.1
	v20080425-1959:1.1
	v20080222-1200:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.4
	R2_0:1.1
	R4_20:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070420-1000:1.1
	v20070330-1300:1.1
	v20070208-1800:1.1
	v20070105-1200:1.1
	v20070103-0300:1.1
	M4_20:1.1
	v20061218-1500:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061013-1330:1.1
	v20061012-1100:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060831-1500:1.1
	v20060824-1600:1.1
	v20060803-1200:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060526-1200:1.1
	v20060519-0800:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2006.03.31.02.09.33;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.1
log
@[134197] gmf_head ahunter 060330 Element Selection Service should get results from multiple provider asynchronously
@
text
@/******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.common.ui.services.elementselection;

/**
 * Interface describing the type of the matching object event for the element
 * selection service.
 * 
 * @@author Anthony Hunter
 */
public class MatchingObjectEventType {

    /**
     * A matching object event that contains a matching object.
     */
    public static final MatchingObjectEventType MATCH = new MatchingObjectEventType();

    /**
     * A matching object event signaling that there are no more matching
     * objects. This event does not contain a matching object and there are no
     * further events to be received.
     */
    public static final MatchingObjectEventType END_OF_MATCHES = new MatchingObjectEventType();
}
@
