head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080722-1827:1.5
	v20080718-1700:1.5
	v20080718-1731:1.5
	R2_1_maintenance:1.5.0.6
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080612-1229:1.5
	v20080425-1959:1.5
	v20080222-1200:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	v20070504-1000:1.5
	v20070420-1000:1.5
	v20070330-1300:1.5
	v20070208-1800:1.5
	v20070105-1200:1.5
	v20070103-0300:1.5
	M4_20:1.5
	v20061218-1500:1.5
	v20061218-1200:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20061012-1100:1.5
	v20060925-1700:1.5
	v20060919-0800:1.5
	M1_20:1.5
	v20060831-1500:1.5
	v20060824-1600:1.5
	v20060803-1200:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	v20060519-0800:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060202-1415:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051124-2000:1.4
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2006.05.23.17.11.46;	author ldamus;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.21.18.25.08;	author mmostafa;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.04.20.18.22;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.27.15;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.19;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[134176] gmf_head ldamus 060523 NPE when Icon not available
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.services.icon;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy;
import org.eclipse.gmf.runtime.common.core.service.IOperation;
import org.eclipse.gmf.runtime.common.core.service.IProvider;
import org.eclipse.gmf.runtime.common.core.service.Service;
import org.eclipse.gmf.runtime.common.ui.services.internal.CommonUIServicesPlugin;
import org.eclipse.gmf.runtime.common.ui.services.internal.icon.IconServiceProviderConfiguration;
import org.eclipse.swt.graphics.Image;

/**
 * Service which handles icon operations.
 * 
 * @@author Michael Yee
 */
public class IconService extends Service implements IIconProvider {

	/** The singleton instance of the icon service. */
    private final static IconService _instance = new IconService();

    /**
	 * A descriptor for <code>IIconProvider</code> defined
	 * by a configuration element.
	 * 
	 * @@author chmahone
	 */
	protected static class ProviderDescriptor
		extends Service.ProviderDescriptor {

		/** the provider configuration parsed from XML */
		private IconServiceProviderConfiguration providerConfiguration;

		/**
		 * Constructs a <code>IIconProvider</code> descriptor for
		 * the specified configuration element.
		 * 
		 * @@param element The configuration element describing the provider.
		 */
		public ProviderDescriptor(IConfigurationElement element) {
			super(element);

			this.providerConfiguration =
				IconServiceProviderConfiguration.parse(element);
		}

		/**
		 * @@see org.eclipse.gmf.runtime.common.core.service.IProvider#provides(org.eclipse.gmf.runtime.common.core.service.IOperation)
		 */
		public boolean provides(IOperation operation) {
			if (!policyInitialized){
				policy = getPolicy();
				policyInitialized = true;
			}
			if (policy != null)
				return policy.provides(operation);
			if (provider == null) {
				if (isSupportedInExtention(operation)) {
					providerConfiguration = null;
					IProvider theProvider = getProvider();
					return theProvider != null ? theProvider.provides(operation) : false;
				}
				return false;
			}
			IProvider theProvider = getProvider();
			return theProvider != null ? theProvider.provides(operation) : false;
		}

		/**
		 * Checks if the operation is supported by the XML extension.
		 * 
		 * @@param operation
		 * @@return <code>true</code> if the operation is supported, <code>false</code> otherwise
		 */
		private boolean isSupportedInExtention(IOperation operation) {
			if (operation instanceof GetIconOperation
					&& providerConfiguration != null) {
				GetIconOperation o = (GetIconOperation) operation;
				return providerConfiguration.supports(o.getHint());
			}
			return false;
		}
	}
	
    /**
     * The IconService constructor
     */
    private IconService() {
		super();
		configureProviders(CommonUIServicesPlugin.getPluginId(), "iconProviders"); //$NON-NLS-1$
    }

    /**
     * Retrieves the singleton instance of the IconService.
     * 
     * @@return IconService the IconService singleton instance 
     */
    public static IconService getInstance() {
        return _instance;
    }

    /**
     * @@see org.eclipse.gmf.runtime.common.ui.services.icon.IIconProvider#getIcon(IAdaptable, int)
     */
    public Image getIcon(IAdaptable hint, int flags) {
        return (Image)executeUnique(ExecutionStrategy.FIRST, new GetIconOperation(hint, flags));
    }

    /**
     * Convenience method for getting an icon for an element.
     * 
     * @@param hint argument adaptable to IElement or IElementTypeInfo
     * @@return Image the image
     */
    public Image getIcon(IAdaptable hint) {
        return getIcon(hint, IconOptions.NONE.intValue());
    }

	/**
	 * @@see org.eclipse.gmf.runtime.common.core.service.Service#newProviderDescriptor(org.eclipse.core.runtime.IConfigurationElement)
	 */
	protected Service.ProviderDescriptor newProviderDescriptor(IConfigurationElement element) {
		return new ProviderDescriptor(element);
	}
}
@


1.4
log
@bugzilla 117343 gmf-head  mmostafa 051121 getPolicy on the Service class get called more than 500,000 times
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
d18 1
d72 2
a73 1
					return getProvider().provides(operation);
d77 2
a78 1
			return getProvider().provides(operation);
d88 2
a89 1
			if (operation instanceof GetIconOperation) {
@


1.3
log
@Bugzilla 110635 gmf_head keithc 051004 Delay configuration of services
@
text
@d62 6
a67 2
			if (getPolicy() != null)
				return getPolicy().provides(operation);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
a13 2
import java.util.List;

a15 2
import org.eclipse.swt.graphics.Image;

d19 1
a19 1
import org.eclipse.gmf.runtime.common.ui.services.internal.icon.IconOperation;
d21 1
d29 1
a29 1
	
d33 1
a33 1
	/**
a55 1
			assert null != element : "NULL configuration element"; //$NON-NLS-1$
d93 2
a94 1
		/* empty method body */
a106 11
     * Executes the operation using the FIRST strategy.
     * 
     * @@param operation the operation
     * @@return Object the result
     */
    private Object execute(IconOperation operation) {
        List results = execute(ExecutionStrategy.FIRST, operation);
        return results.isEmpty() ? null : results.get(0);
    }

    /**
d110 1
a110 1
        return (Image) execute(new GetIconOperation(hint, flags));
a128 1

@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

