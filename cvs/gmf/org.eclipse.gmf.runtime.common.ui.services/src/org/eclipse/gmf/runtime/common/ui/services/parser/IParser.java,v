head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080722-1827:1.2
	v20080718-1700:1.2
	v20080718-1731:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080612-1229:1.2
	v20080425-1959:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070420-1000:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	v20070105-1200:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061218-1500:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20061012-1100:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060831-1500:1.2
	v20060824-1600:1.2
	v20060803-1200:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.27.15;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.24;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.services.parser;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.jface.text.contentassist.IContentAssistProcessor;

import org.eclipse.gmf.runtime.common.core.command.ICommand;

/**
 * The interface for all parsers
 * 
 * @@author Michael Yee
 */
public interface IParser {

    /**
     * Gets the string that is a subject to edit.
     * 
     * @@param element	the element for which the edit string is requested
     * @@param flags  	the bitflag of parser options
     * @@return String	current contents of the edit string
     */
    public String getEditString(IAdaptable element, int flags);
    
    /**
     * Tests if the user-entered string is in a valid form that can be parsed
     * 
     * @@param element the element for which the edit string is applied to
     * @@param editString the user-entered string
     * @@return IParserEditStatus <code>EDITABLE_STATUS</code> if the edit string is valid, otherwise
     * 				  a status that includes information describing why it is an invalid edit string.
     */
    public IParserEditStatus isValidEditString(IAdaptable element, String editString);

    /**
     * Gets the command that applies the new edit string
     * 
     * @@param element		the element for which the parse command is requested
     * @@param newString	to be set by the command
     * @@param flags		the bitflag of parser options
     * @@return ICommand	command that when executed will result in
     * 					  	setting the newString
     */
    public ICommand getParseCommand(
        IAdaptable element,
        String newString,
        int flags);
        

    /**
     * Returns a string intended for display. That might be a different string that the one
     * returned by getEditString. E.g., for stereotypes, the print string will be adorned
     * with <<>> brackets while edit string will not be adorned. 
     * 
     * @@param element	the element for which the print string is requested
     * @@param flags	the bitflag of parser options
     * @@return String	the print string
     */
    public String getPrintString(IAdaptable element, int flags);

    /**
     * Determines if the event requires action from the parser point of view.
     * The action usually involves some visual refreshment.
     * 
     * @@param event	the event, an instance of IElementEvent
     * @@param flags	the bitflag of parser options
     * @@return boolean	<code>true</code> if the event affects the parser,
     * 					otherwise <code>false</code>.
     */
    public boolean isAffectingEvent(Object event, int flags);
    
    /**
     * Returns the parser's content assist processor
     *  
     * @@param element the element
     * @@return the content assist processor
     */
    public IContentAssistProcessor getCompletionProcessor(IAdaptable element);

}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

