head	1.3;
access;
symbols
	v20081020-0700:1.3
	v20080722-1827:1.3
	v20080718-1700:1.3
	v20080718-1731:1.3
	R2_1_maintenance:1.3.0.4
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080612-1229:1.3
	v20080425-1959:1.3
	v20080222-1200:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070420-1000:1.3
	v20070330-1300:1.3
	v20070208-1800:1.3
	v20070105-1200:1.2.2.1
	v20070103-0300:1.3
	M4_20:1.3
	v20061218-1500:1.2.2.1
	v20061218-1200:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20061012-1100:1.2.2.1
	v20060925-1700:1.2.2.1
	v20060919-0800:1.2.2.1
	M1_20:1.2
	v20060831-1500:1.2
	v20060824-1600:1.2
	v20060803-1200:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060202-1415:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2006.10.03.15.01.46;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.31.02.09.33;	author ahunter;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.09.23.14.43.53;	author ahunter;	state Exp;
branches;
next	;

1.2.2.1
date	2006.09.13.16.41.29;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/
package org.eclipse.gmf.runtime.common.ui.services.elementselection;

import org.eclipse.swt.graphics.Image;

/**
 * Abstract implementation of an IElementSelectionProvider.
 * 
 * @@author Anthony Hunter <a href="mailto:anthonyh@@ca.ibm.com">
 *         anthonyh@@ca.ibm.com </a>
 */
public class AbstractMatchingObject
	implements IMatchingObject {

	/**
	 * The dashes used to construct the display name.
	 */
	public static String DASHES = " - "; //$NON-NLS-1$

	/**
	 * The name of the matching object.
	 */
	private String name;

	/**
	 * The display name of the matching object.
	 * <p>
	 * The display name is the matching object name followed by dashes followed
	 * by a fully qualified name to distingish between objects with the same
	 * name.
	 */
	private String displayName;

	/**
	 * The image of the matching object.
	 */
	private Image image;

	/**
	 * The element selection provider that that provided this matching object.
	 */
	private IElementSelectionProvider provider;

	/**
	 * Constructor for an AbstractMatchingObject.
	 * 
	 * @@param name
	 *            the name of the matching object.
	 * @@param displayName
	 *            The display name of the matching object.
	 * @@param image
	 *            The image of the matching object.
	 * @@param provider
	 *            The element selection provider that that provided this
	 *            matching object.
	 */
	public AbstractMatchingObject(String name, String displayName, Image image,
			IElementSelectionProvider provider) {
		this.name = name;
		this.displayName = displayName;
		this.image = image;
		this.provider = provider;
	}

    /**
     * {@@inheritDoc}
     */
	public String getName() {
		return name;
	}

    /**
     * {@@inheritDoc}
     */
	public String getDisplayName() {
		return displayName;
	}

    /**
     * {@@inheritDoc}
     */
	public Image getImage() {
		return image;
	}

    /**
     * {@@inheritDoc}
     */
	public String toString() {
		return displayName != null ? displayName
			: super.toString();
	}

    /**
     * {@@inheritDoc}
     */
	public IElementSelectionProvider getProvider() {
		return provider;
	}
}
@


1.2
log
@[134197] gmf_head ahunter 060330 Element Selection Service should get results from multiple provider asynchronously
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.2.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.1
log
@gmf_head ahunter 050923 Element Selection Service Update
@
text
@d74 3
a76 3
	/**
	 * @@inheritDoc
	 */
d81 3
a83 3
	/**
	 * @@inheritDoc
	 */
d88 3
a90 3
	/**
	 * @@inheritDoc
	 */
d95 3
a97 3
	/**
	 * @@inheritDoc
	 */
d103 3
a105 3
	/**
	 * @@inheritDoc
	 */
@

