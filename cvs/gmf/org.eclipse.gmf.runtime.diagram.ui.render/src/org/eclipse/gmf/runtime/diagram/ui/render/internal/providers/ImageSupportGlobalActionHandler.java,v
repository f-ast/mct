head	1.8;
access;
symbols
	v20081020-0700:1.8
	v20080903-1520:1.8
	v20080903-1510:1.8
	v20080722-1827:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080603-1553:1.8
	v20080527-1255:1.8
	v20080512-1200:1.8
	v20080425-1959:1.8
	v20080328-1605:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080114-1111:1.7
	v20071124-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070601-1400:1.7
	v20070518-1300:1.7
	v20070330-1300:1.7
	v20060316-0600:1.7
	v20070208-1800:1.7
	v20070202-0200:1.6.2.1
	v20070105-1200:1.6.2.1
	M4_20:1.7
	v20061218-1500:1.6.2.1
	v20061218-1200:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061020-1000:1.6.2.1
	v20061013-1330:1.7
	v20061012-1100:1.6.2.1
	v20060919-0800:1.6.2.1
	M1_20:1.6
	v20060721-1130:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060616-1200:1.6
	v20060531-1730:1.6
	v20060519-0800:1.6
	I20060428-1300:1.6
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.2;
locks; strict;
comment	@# @;


1.8
date	2008.04.17.21.16.35;	author crevells;	state Exp;
branches;
next	1.7;
commitid	7f984807be324567;

1.7
date	2006.10.03.15.04.50;	author ahunter;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.26.21.39.49;	author sshaw;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2006.03.29.21.27.12;	author ldamus;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.13.19.12.22;	author ldamus;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.02.23.30.25;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.29.16;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.56;	author sshaw;	state Exp;
branches;
next	;

1.6.2.1
date	2006.09.13.16.43.32;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[227651] gmf_head crevells 080417 PasteViewRequest should be public
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.render.internal.providers;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.commands.operations.IUndoContext;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.common.core.command.ICommand;
import org.eclipse.gmf.runtime.common.ui.action.global.GlobalActionId;
import org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext;
import org.eclipse.gmf.runtime.common.ui.util.CustomData;
import org.eclipse.gmf.runtime.common.ui.util.ICustomData;
import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart;
import org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandler;
import org.eclipse.gmf.runtime.diagram.ui.render.clipboard.AWTClipboardHelper;
import org.eclipse.gmf.runtime.diagram.ui.render.internal.commands.CopyImageCommand;
import org.eclipse.gmf.runtime.diagram.ui.requests.PasteViewRequest;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.ui.IWorkbenchPart;

/**
 * Concrete class that implements the <code>IGlobalActionHandler</code>
 * interface and provides a command for <code>GlobalActionId.CUT</code>,
 * <code>GlobalActionId.COPY</code>, and <code>GlobalActionId.PASTE</code>.
 * 
 * @@author cmahoney
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.render.*
 */
public class ImageSupportGlobalActionHandler
	extends DiagramGlobalActionHandler {

	/**
	 * Constructor for CopyWithImageSupportGlobalActionHandler.
	 */
	public ImageSupportGlobalActionHandler() {
		super();
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.action.AbstractGlobalActionHandler#canHandle(IGlobalActionContext)
	 */
	public boolean canHandle(IGlobalActionContext cntxt) {

		/* Check if the active part is a IDiagramWorkbenchPart */
		IWorkbenchPart part = cntxt.getActivePart();
		if (!(part instanceof IDiagramWorkbenchPart)) {
			return false;
		}

		/* Check if the selection is a structured selection */
		if (!(cntxt.getSelection() instanceof IStructuredSelection)) {
			return false;
		}

		/* Check the action id */
		String actionId = cntxt.getActionId();
		if (actionId.equals(GlobalActionId.COPY)) {
			return canCopy(cntxt);
		} else if (actionId.equals(GlobalActionId.CUT)) {
			return canCut(cntxt);
		} else if (actionId.equals(GlobalActionId.PASTE)) {
			return canPaste(cntxt);
		}
		return false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandler#canPaste(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext)
	 */
	protected boolean canPaste(IGlobalActionContext cntxt) {
		if (!AWTClipboardHelper.getInstance().isImageCopySupported()) {
			return super.canPaste(cntxt);
		}
		
		/* Check if the clipboard has data for the drawing surface */
		return AWTClipboardHelper.getInstance().hasCustomData();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandler#getCopyCommand(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext,
	 *      org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart,
	 *      boolean)
	 */
	protected ICommand getCopyCommand(IGlobalActionContext cntxt,
			IDiagramWorkbenchPart diagramPart, final boolean isUndoable) {
		if (!AWTClipboardHelper.getInstance().isImageCopySupported()) {
			return super.getCopyCommand(cntxt, diagramPart, isUndoable);
		}
		
		return new CopyImageCommand(cntxt.getLabel(), diagramPart.getDiagram(),
			getSelectedViews(cntxt.getSelection()), diagramPart
				.getDiagramEditPart()) {

			public boolean canUndo() {
				return isUndoable;
			}

			public boolean canRedo() {
				return isUndoable;
			}

			protected CommandResult doUndoWithResult(
                    IProgressMonitor progressMonitor, IAdaptable info)
                throws ExecutionException {
                
				return isUndoable ? CommandResult.newOKCommandResult()
					: super.doUndoWithResult(progressMonitor, info);
			}

			protected CommandResult doRedoWithResult(
                    IProgressMonitor progressMonitor, IAdaptable info)
                throws ExecutionException {
                
				return isUndoable ? CommandResult.newOKCommandResult()
					: super.doRedoWithResult(progressMonitor, info);
			}
            
            public void addContext(IUndoContext context) {
                if (isUndoable) {
                    super.addContext(context);
                }
            }

            public void removeContext(IUndoContext context) {
               if (isUndoable) {
                   super.removeContext(context);
               }
            }
		};
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandler#createPasteViewRequest()
	 */
	protected PasteViewRequest createPasteViewRequest() {
		if (!AWTClipboardHelper.getInstance().isImageCopySupported()) {
			return super.createPasteViewRequest();
		}
		
		CustomData data = AWTClipboardHelper.getInstance().getCustomData();

		return new PasteViewRequest(new ICustomData[] {data});
	}
}@


1.7
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
a23 1
import org.eclipse.gmf.runtime.diagram.ui.internal.requests.PasteViewRequest;
d28 1
@


1.6
log
@bugzilla 138210 gmf-head sshaw 060425 Cut/copy/paste menus always disabled on Linux
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.6.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.5
log
@[133879] gmf_head ldamus 060329 Copying a shape on the diagram clears the undo history
@
text
@a80 20
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandler#canCopy(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext)
	 */
	protected boolean canCopy(IGlobalActionContext cntxt) {
		return AWTClipboardHelper.getInstance().isImageCopySupported()
			&& super.canCopy(cntxt);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandler#canCut(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext)
	 */
	protected boolean canCut(IGlobalActionContext cntxt) {
		return AWTClipboardHelper.getInstance().isImageCopySupported()
			&& super.canCut(cntxt);
	}

	/*
	 * (non-Javadoc)
	 * 
d84 4
d89 1
a89 2
		return AWTClipboardHelper.getInstance().isImageCopySupported()
			&& AWTClipboardHelper.getInstance().hasCustomData();
d101 4
d153 4
@


1.4
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@d15 1
d145 12
@


1.3
log
@Bugzilla#113157 gmf_head cmahoney 051102 GMF Diagram Layer Public API Name Changes
@
text
@d14 3
a16 3
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.ui.IWorkbenchPart;

d28 2
d121 1
a121 1
			public boolean isUndoable() {
d125 1
a125 1
			public boolean isRedoable() {
d129 6
a134 3
			protected CommandResult doUndo() {
				return isUndoable ? newOKCommandResult()
					: super.doUndo();
d137 6
a142 3
			protected CommandResult doRedo() {
				return isUndoable ? newOKCommandResult()
					: super.doRedo();
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d25 1
a25 1
import org.eclipse.gmf.runtime.diagram.ui.providers.PresentationGlobalActionHandler;
d38 1
a38 1
	extends PresentationGlobalActionHandler {
d78 1
a78 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.PresentationGlobalActionHandler#canCopy(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext)
d88 1
a88 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.PresentationGlobalActionHandler#canCut(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext)
d98 1
a98 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.PresentationGlobalActionHandler#canPaste(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext)
d109 1
a109 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.PresentationGlobalActionHandler#getCopyCommand(org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext,
d142 1
a142 1
	 * @@see org.eclipse.gmf.runtime.diagram.ui.providers.PresentationGlobalActionHandler#createPasteViewRequest()
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.          	       |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

