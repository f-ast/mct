head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080903-1520:1.2
	v20080903-1510:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080603-1553:1.2
	v20080527-1255:1.2
	v20080512-1200:1.2
	v20080425-1959:1.2
	v20080328-1605:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080114-1111:1.2
	v20071124-0000:1.2
	v20071108-0000:1.2
	v20071003-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070614-1400:1.2
	v20070601-1400:1.2
	v20070518-1300:1.2
	v20070330-1300:1.2
	v20060316-0600:1.2
	v20070208-1800:1.2
	v20070202-0200:1.1.2.1
	v20070105-1200:1.1.2.1
	M4_20:1.2
	v20061218-1500:1.1.2.1
	v20061218-1200:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061020-1000:1.1.2.1
	v20061013-1330:1.2
	v20061012-1100:1.1.2.1
	v20060919-0800:1.1.2.1
	M1_20:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060519-0800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.10.03.15.04.50;	author ahunter;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.15.15.25.59;	author cmahoney;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.09.13.16.43.32;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.render.editparts;

import java.net.MalformedURLException;
import java.net.URL;

import org.eclipse.core.runtime.Path;

import org.eclipse.gmf.runtime.common.ui.util.FileUtil;
import org.eclipse.gmf.runtime.draw2d.ui.render.RenderedImage;
import org.eclipse.gmf.runtime.draw2d.ui.render.factory.RenderedImageFactory;
import org.eclipse.gmf.runtime.notation.View;


/**
 * @@author sshaw
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.*
 *
 * Class for handling display of an image whose source is a URI.
 */
abstract public class URLImageEditPart
	extends AbstractImageEditPart {

	/**
	 * Default constructor
	 * @@param view
	 */
	public URLImageEditPart(View view) {
		super(view);
	}
	
	/**
	 * getImagePath
	 * Transient accessor to retrieve the file path representing the image
	 * file to be rendered.  
	 * 
	 * @@return String if valid, null otherwise.
	 */
	abstract protected String getImagePath();
	
	/**
	 * getPathImagePathIsRelativeTo
	 * getImagePath could return a relative path.  If so, this transient
	 * accessor method allows calculation of an absolute path from
	 * the image file and the return path of this method.
	 * 
	 * @@return String that is an absolute path that can be used
	 * to calculate the absolute path of a relative path URL.
	 */
	abstract protected String getPathImagePathIsRelativeTo();
	
	/**
	 * getURL
	 * Accessor method that calculates the URL expression based on the string returned
	 * by the method getImagePath.
	 * 
	 * @@return URL that can be streamed to retrieve the image data.
	 */
	protected URL getURL() {
		String urlExpression = getImagePath();
		if (urlExpression==null || urlExpression.length()==0)
			return null;
		URL url = null;		
		String launchPath = null;
		
		try {
			url = new URL(urlExpression);
		}

		// URL expression is invalid so convert the URL into a OS specific file
		// path.
		catch (MalformedURLException malformedUrl) {
			launchPath = calculateLaunchPath(urlExpression);
			try {
				url = new URL("file:" + launchPath);//$NON-NLS-1$
			}
			catch (MalformedURLException malformedUrl2) {
				// do nothing
			}
		}
	
		return url;
	}
	
	/**
	 * @@param urlExpression
	 * @@return
	 */
	private String calculateLaunchPath(String urlExp) {
		String launchPath = null;
		String urlExpression = urlExp;
		String pathImageIsRelativeTo = getPathImagePathIsRelativeTo();
		Path path = new Path(urlExpression);
		if (path != null) {
			if(path.isAbsolute()) {
				urlExpression = path.toOSString();
			} else {
				if (pathImageIsRelativeTo != null && pathImageIsRelativeTo.length() > 0)
					urlExpression = FileUtil.getAbsolutePath(path.toOSString(), getPathImagePathIsRelativeTo());
			}
		}
		
		// Attempt to launch the default program that handles the URL
		// expression.
		final String urlPath = urlExpression;
		if (pathImageIsRelativeTo != null && pathImageIsRelativeTo.length() > 0)
			launchPath = FileUtil.getAbsolutePath(urlPath, getPathImagePathIsRelativeTo());
		
		return launchPath;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.diagram.ui.internal.editparts.AbstractImageEditPart#regenerateImageFromSource()
	 */
	final protected RenderedImage regenerateImageFromSource() {
		
		URL url = getURL();
		
		// read in the file source specified by the URI, otherwise return null;
		if (url != null)
			return RenderedImageFactory.getInstance(url);
		
		return null;
	}


}@


1.1
log
@Bugzilla#140166 gmf_head cmahoney 060515 Move necessary client accessed internal classes into public API
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
@


1.1.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@

