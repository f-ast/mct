head	1.7;
access;
symbols
	v20080813-1520:1.7
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080521:1.6
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080322-0000:1.6
	v20080222-1200:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070517-1200:1.5
	v20070504-1000:1.5
	v20070427-0600:1.3
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.08.13.13.51.01;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	454448a2e6ac4567;

1.6
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	160e47cc39234567;

1.5
date	2007.05.03.09.59.11;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	52284639b26b4567;

1.4
date	2007.04.27.11.23.42;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	109d4631dd3c4567;

1.3
date	2007.04.26.15.39.50;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	38914630c7c54567;

1.2
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	128545f7f1cb4567;

1.1
date	2006.10.19.15.21.56;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[231322] allow to specify editable features
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EAttribute;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Feature Label Mapping</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Label based on feature(s) from domain model
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getFeatures <em>Features</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditableFeatures <em>Editable Features</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getViewPattern <em>View Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditorPattern <em>Editor Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditPattern <em>Edit Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getViewMethod <em>View Method</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditMethod <em>Edit Method</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping()
 * @@model
 * @@generated
 */
public interface FeatureLabelMapping extends LabelMapping {
	/**
	 * Returns the value of the '<em><b>Features</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.ecore.EAttribute}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Features</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Features</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_Features()
	 * @@model required="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))' description='Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry'"
	 * @@generated
	 */
	EList<EAttribute> getFeatures();

	/**
	 * Returns the value of the '<em><b>Editable Features</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.ecore.EAttribute}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Editable Features</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Editable Features</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_EditableFeatures()
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='editableFeatures->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))' description='Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry'"
	 * @@generated
	 */
	EList<EAttribute> getEditableFeatures();

	/**
	 * Returns the value of the '<em><b>View Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern to produce label on diagram, depends on view method
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>View Pattern</em>' attribute.
	 * @@see #setViewPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_ViewPattern()
	 * @@model
	 * @@generated
	 */
	String getViewPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getViewPattern <em>View Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>View Pattern</em>' attribute.
	 * @@see #getViewPattern()
	 * @@generated
	 */
	void setViewPattern(String value);

	/**
	 * Returns the value of the '<em><b>Editor Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern to produce text for inplace editor, depends on view method; if not specified then viewPattern should be used
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Editor Pattern</em>' attribute.
	 * @@see #setEditorPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_EditorPattern()
	 * @@model
	 * @@generated
	 */
	String getEditorPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditorPattern <em>Editor Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Editor Pattern</em>' attribute.
	 * @@see #getEditorPattern()
	 * @@generated
	 */
	void setEditorPattern(String value);

	/**
	 * Returns the value of the '<em><b>View Method</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.mappings.LabelTextAccessMethod}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>View Method</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>View Method</em>' attribute.
	 * @@see org.eclipse.gmf.mappings.LabelTextAccessMethod
	 * @@see #setViewMethod(LabelTextAccessMethod)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_ViewMethod()
	 * @@model
	 * @@generated
	 */
	LabelTextAccessMethod getViewMethod();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getViewMethod <em>View Method</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>View Method</em>' attribute.
	 * @@see org.eclipse.gmf.mappings.LabelTextAccessMethod
	 * @@see #getViewMethod()
	 * @@generated
	 */
	void setViewMethod(LabelTextAccessMethod value);

	/**
	 * Returns the value of the '<em><b>Edit Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern to extract values from input text, depends on edit method; if not specified then viewPattern should be used
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #setEditPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_EditPattern()
	 * @@model
	 * @@generated
	 */
	String getEditPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditPattern <em>Edit Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #getEditPattern()
	 * @@generated
	 */
	void setEditPattern(String value);

	/**
	 * Returns the value of the '<em><b>Edit Method</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.mappings.LabelTextAccessMethod}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Edit Method</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Edit Method</em>' attribute.
	 * @@see org.eclipse.gmf.mappings.LabelTextAccessMethod
	 * @@see #setEditMethod(LabelTextAccessMethod)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getFeatureLabelMapping_EditMethod()
	 * @@model
	 * @@generated
	 */
	LabelTextAccessMethod getEditMethod();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditMethod <em>Edit Method</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Method</em>' attribute.
	 * @@see org.eclipse.gmf.mappings.LabelTextAccessMethod
	 * @@see #getEditMethod()
	 * @@generated
	 */
	void setEditMethod(LabelTextAccessMethod value);

} // FeatureLabelMapping@


1.6
log
@regenerated with EMF 2.4M5
@
text
@d25 1
d57 16
@


1.5
log
@refactor message format parser; introduce editor pattern
@
text
@d49 1
a49 1
	 * @@model type="org.eclipse.emf.ecore.EAttribute" required="true"
@


1.4
log
@combine label text access methods
@
text
@d26 2
a28 1
 *   <li>{@@link org.eclipse.gmf.mappings.FeatureLabelMapping#getEditPattern <em>Edit Pattern</em>}</li>
d81 25
d139 1
a139 1
	 * Pattern to produce text for inplace editor, depends on edit method; if not specified then viewPattern should be used
@


1.3
log
@additional methods to produce label text and parse user input
@
text
@d81 1
a81 1
	 * The literals are from the enumeration {@@link org.eclipse.gmf.mappings.LabelViewMethod}.
d89 2
a90 2
	 * @@see org.eclipse.gmf.mappings.LabelViewMethod
	 * @@see #setViewMethod(LabelViewMethod)
d95 1
a95 1
	LabelViewMethod getViewMethod();
d102 1
a102 1
	 * @@see org.eclipse.gmf.mappings.LabelViewMethod
d106 1
a106 1
	void setViewMethod(LabelViewMethod value);
d135 1
a135 1
	 * The literals are from the enumeration {@@link org.eclipse.gmf.mappings.LabelEditMethod}.
d143 2
a144 2
	 * @@see org.eclipse.gmf.mappings.LabelEditMethod
	 * @@see #setEditMethod(LabelEditMethod)
d149 1
a149 1
	LabelEditMethod getEditMethod();
d156 1
a156 1
	 * @@see org.eclipse.gmf.mappings.LabelEditMethod
d160 1
a160 1
	void setEditMethod(LabelEditMethod value);
@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d26 1
d28 1
d59 1
a59 1
	 * Pattern for java.text.MessageFormat to produce label text
d80 29
d113 1
a113 1
	 * Pattern for java.text.MessageFormat to produce text for inplace editor; if not specified then viewPattern should be used
d133 29
@


1.1
log
@[161380] Inroduce label mapping subclasses
@
text
@d10 1
d50 1
a50 1
	EList getFeatures();
@

