head	1.6;
access;
symbols
	v20080813-1520:1.6
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080521:1.6
	v20080425-1959:1.6
	v20080417-1610:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.6
	v20070518-1300:1.6
	v20070517-1200:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061013-1330:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.04.25.08.08.29;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	7004462f0c7a4567;

1.5
date	2007.03.14.13.00.04;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	128545f7f1cb4567;

1.4
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@regenerated
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.tooldef.MainMenu;
import org.eclipse.gmf.tooldef.Palette;
import org.eclipse.gmf.tooldef.Toolbar;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Canvas Mapping</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.CanvasMappingImpl#getDiagramCanvas <em>Diagram Canvas</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.CanvasMappingImpl#getDomainModel <em>Domain Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.CanvasMappingImpl#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.CanvasMappingImpl#getPalette <em>Palette</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.CanvasMappingImpl#getMenuContributions <em>Menu Contributions</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.CanvasMappingImpl#getToolbarContributions <em>Toolbar Contributions</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class CanvasMappingImpl extends EObjectImpl implements CanvasMapping {
	/**
	 * The cached value of the '{@@link #getDiagramCanvas() <em>Diagram Canvas</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramCanvas()
	 * @@generated
	 * @@ordered
	 */
	protected Canvas diagramCanvas;

	/**
	 * The cached value of the '{@@link #getDomainModel() <em>Domain Model</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainModel()
	 * @@generated
	 * @@ordered
	 */
	protected EPackage domainModel;

	/**
	 * The cached value of the '{@@link #getDomainMetaElement() <em>Domain Meta Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainMetaElement()
	 * @@generated
	 * @@ordered
	 */
	protected EClass domainMetaElement;

	/**
	 * The cached value of the '{@@link #getPalette() <em>Palette</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPalette()
	 * @@generated
	 * @@ordered
	 */
	protected Palette palette;

	/**
	 * The cached value of the '{@@link #getMenuContributions() <em>Menu Contributions</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMenuContributions()
	 * @@generated
	 * @@ordered
	 */
	protected EList<MainMenu> menuContributions;

	/**
	 * The cached value of the '{@@link #getToolbarContributions() <em>Toolbar Contributions</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getToolbarContributions()
	 * @@generated
	 * @@ordered
	 */
	protected EList<Toolbar> toolbarContributions;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected CanvasMappingImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getCanvasMapping();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Canvas getDiagramCanvas() {
		if (diagramCanvas != null && diagramCanvas.eIsProxy()) {
			InternalEObject oldDiagramCanvas = (InternalEObject)diagramCanvas;
			diagramCanvas = (Canvas)eResolveProxy(oldDiagramCanvas);
			if (diagramCanvas != oldDiagramCanvas) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CANVAS_MAPPING__DIAGRAM_CANVAS, oldDiagramCanvas, diagramCanvas));
			}
		}
		return diagramCanvas;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Canvas basicGetDiagramCanvas() {
		return diagramCanvas;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramCanvas(Canvas newDiagramCanvas) {
		Canvas oldDiagramCanvas = diagramCanvas;
		diagramCanvas = newDiagramCanvas;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CANVAS_MAPPING__DIAGRAM_CANVAS, oldDiagramCanvas, diagramCanvas));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EPackage getDomainModel() {
		if (domainModel != null && domainModel.eIsProxy()) {
			InternalEObject oldDomainModel = (InternalEObject)domainModel;
			domainModel = (EPackage)eResolveProxy(oldDomainModel);
			if (domainModel != oldDomainModel) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CANVAS_MAPPING__DOMAIN_MODEL, oldDomainModel, domainModel));
			}
		}
		return domainModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EPackage basicGetDomainModel() {
		return domainModel;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainModel(EPackage newDomainModel) {
		EPackage oldDomainModel = domainModel;
		domainModel = newDomainModel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CANVAS_MAPPING__DOMAIN_MODEL, oldDomainModel, domainModel));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDomainMetaElement() {
		if (domainMetaElement != null && domainMetaElement.eIsProxy()) {
			InternalEObject oldDomainMetaElement = (InternalEObject)domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy(oldDomainMetaElement);
			if (domainMetaElement != oldDomainMetaElement) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CANVAS_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
			}
		}
		return domainMetaElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass basicGetDomainMetaElement() {
		return domainMetaElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainMetaElement(EClass newDomainMetaElement) {
		EClass oldDomainMetaElement = domainMetaElement;
		domainMetaElement = newDomainMetaElement;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CANVAS_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Palette getPalette() {
		if (palette != null && palette.eIsProxy()) {
			InternalEObject oldPalette = (InternalEObject)palette;
			palette = (Palette)eResolveProxy(oldPalette);
			if (palette != oldPalette) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CANVAS_MAPPING__PALETTE, oldPalette, palette));
			}
		}
		return palette;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Palette basicGetPalette() {
		return palette;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPalette(Palette newPalette) {
		Palette oldPalette = palette;
		palette = newPalette;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CANVAS_MAPPING__PALETTE, oldPalette, palette));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<MainMenu> getMenuContributions() {
		if (menuContributions == null) {
			menuContributions = new EObjectResolvingEList<MainMenu>(MainMenu.class, this, GMFMapPackage.CANVAS_MAPPING__MENU_CONTRIBUTIONS);
		}
		return menuContributions;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<Toolbar> getToolbarContributions() {
		if (toolbarContributions == null) {
			toolbarContributions = new EObjectResolvingEList<Toolbar>(Toolbar.class, this, GMFMapPackage.CANVAS_MAPPING__TOOLBAR_CONTRIBUTIONS);
		}
		return toolbarContributions;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.CANVAS_MAPPING__DIAGRAM_CANVAS:
				if (resolve) return getDiagramCanvas();
				return basicGetDiagramCanvas();
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_MODEL:
				if (resolve) return getDomainModel();
				return basicGetDomainModel();
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_META_ELEMENT:
				if (resolve) return getDomainMetaElement();
				return basicGetDomainMetaElement();
			case GMFMapPackage.CANVAS_MAPPING__PALETTE:
				if (resolve) return getPalette();
				return basicGetPalette();
			case GMFMapPackage.CANVAS_MAPPING__MENU_CONTRIBUTIONS:
				return getMenuContributions();
			case GMFMapPackage.CANVAS_MAPPING__TOOLBAR_CONTRIBUTIONS:
				return getToolbarContributions();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.CANVAS_MAPPING__DIAGRAM_CANVAS:
				setDiagramCanvas((Canvas)newValue);
				return;
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_MODEL:
				setDomainModel((EPackage)newValue);
				return;
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)newValue);
				return;
			case GMFMapPackage.CANVAS_MAPPING__PALETTE:
				setPalette((Palette)newValue);
				return;
			case GMFMapPackage.CANVAS_MAPPING__MENU_CONTRIBUTIONS:
				getMenuContributions().clear();
				getMenuContributions().addAll((Collection<? extends MainMenu>)newValue);
				return;
			case GMFMapPackage.CANVAS_MAPPING__TOOLBAR_CONTRIBUTIONS:
				getToolbarContributions().clear();
				getToolbarContributions().addAll((Collection<? extends Toolbar>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.CANVAS_MAPPING__DIAGRAM_CANVAS:
				setDiagramCanvas((Canvas)null);
				return;
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_MODEL:
				setDomainModel((EPackage)null);
				return;
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)null);
				return;
			case GMFMapPackage.CANVAS_MAPPING__PALETTE:
				setPalette((Palette)null);
				return;
			case GMFMapPackage.CANVAS_MAPPING__MENU_CONTRIBUTIONS:
				getMenuContributions().clear();
				return;
			case GMFMapPackage.CANVAS_MAPPING__TOOLBAR_CONTRIBUTIONS:
				getToolbarContributions().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.CANVAS_MAPPING__DIAGRAM_CANVAS:
				return diagramCanvas != null;
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_MODEL:
				return domainModel != null;
			case GMFMapPackage.CANVAS_MAPPING__DOMAIN_META_ELEMENT:
				return domainMetaElement != null;
			case GMFMapPackage.CANVAS_MAPPING__PALETTE:
				return palette != null;
			case GMFMapPackage.CANVAS_MAPPING__MENU_CONTRIBUTIONS:
				return menuContributions != null && !menuContributions.isEmpty();
			case GMFMapPackage.CANVAS_MAPPING__TOOLBAR_CONTRIBUTIONS:
				return toolbarContributions != null && !toolbarContributions.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //CanvasMappingImpl
@


1.5
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d53 1
a53 1
	protected Canvas diagramCanvas = null;
d63 1
a63 1
	protected EPackage domainModel = null;
d73 1
a73 1
	protected EClass domainMetaElement = null;
d83 1
a83 1
	protected Palette palette = null;
d93 1
a93 1
	protected EList<MainMenu> menuContributions = null;
d103 1
a103 1
	protected EList<Toolbar> toolbarContributions = null;
@


1.4
log
@#114197 - tooling definition in place
@
text
@d93 1
a93 1
	protected EList menuContributions = null;
d103 1
a103 1
	protected EList toolbarContributions = null;
d119 1
d281 1
a281 1
	public EList getMenuContributions() {
d283 1
a283 1
			menuContributions = new EObjectResolvingEList(MainMenu.class, this, GMFMapPackage.CANVAS_MAPPING__MENU_CONTRIBUTIONS);
d293 1
a293 1
	public EList getToolbarContributions() {
d295 1
a295 1
			toolbarContributions = new EObjectResolvingEList(Toolbar.class, this, GMFMapPackage.CANVAS_MAPPING__TOOLBAR_CONTRIBUTIONS);
d305 1
d333 2
d351 1
a351 1
				getMenuContributions().addAll((Collection)newValue);
d355 1
a355 1
				getToolbarContributions().addAll((Collection)newValue);
d366 1
d396 1
@


1.3
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@d9 2
d12 1
d17 2
d22 3
d36 3
d44 1
a44 1
public class CanvasMappingImpl extends MappingEntryImpl implements CanvasMapping {
d76 30
d242 62
d315 7
d342 11
d373 9
d399 6
@


1.2
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@a11 1
import org.eclipse.emf.ecore.EStructuralFeature;
d89 2
a90 2
			Canvas oldDiagramCanvas = diagramCanvas;
			diagramCanvas = (Canvas)eResolveProxy((InternalEObject)diagramCanvas);
d127 2
a128 2
			EPackage oldDomainModel = domainModel;
			domainModel = (EPackage)eResolveProxy((InternalEObject)domainModel);
d165 2
a166 2
			EClass oldDomainMetaElement = domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy((InternalEObject)domainMetaElement);
d201 2
a202 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d213 1
a213 1
		return eDynamicGet(eFeature, resolve);
d221 2
a222 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d233 1
a233 1
		eDynamicSet(eFeature, newValue);
d241 2
a242 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d253 1
a253 1
		eDynamicUnset(eFeature);
d261 2
a262 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d270 1
a270 1
		return eDynamicIsSet(eFeature);
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: CanvasMappingImpl.java,v 1.3 2005/08/02 13:11:56 artem Exp $
d15 1
a15 1
import org.eclipse.gmf.diadef.Canvas;
@

