head	1.16;
access;
symbols
	v20080813-1520:1.16
	v20080722-1827:1.16
	v20080716-1642:1.16
	R2_1_maintenance:1.16.0.4
	Root_R2_1_maintenance:1.16
	R2_1_0:1.16
	v20080521:1.16
	v20080425-1959:1.16
	v20080417-1610:1.16
	v20080322-0000:1.16
	v20080222-1200:1.16
	v20070809-0000:1.16
	R2_0_maintenance:1.16.0.2
	R2_0:1.16
	R4_20:1.16
	v20070621-0000:1.16
	RC3_20:1.16
	v20070608-1300:1.16
	v20070605-1400:1.16
	v20070601-1400:1.16
	v20070525-1500:1.16
	v20070520-1200:1.16
	v20070518-1300:1.16
	v20070517-1200:1.16
	v20070504-1000:1.16
	v20070427-0600:1.16
	v20070330-1300:1.15
	v20070322-1100:1.15
	v20060316-0600:1.15
	v20070208-1800:1.14
	M4_20:1.14
	v20061214-0000:1.14
	M3_20:1.14
	v20061117-0800:1.14
	v20061013-1330:1.14
	M1_20:1.14
	v20060904-1500:1.14
	v20060713-1700:1.14
	R1_0_maintenance:1.14.0.2
	R1_0:1.14
	v20060627-1200:1.14
	v20060626-1420:1.14
	v20060616-1200:1.14
	v20060609-1400:1.14
	v20060531-1730:1.14
	v20060530-1930:1.14
	v20060519-1300:1.14
	v20060519-0800:1.14
	v20060512-1000:1.14
	I20060512-1000:1.14
	I20060505-1400:1.14
	I20060428-1300:1.14
	I20060424-0500:1.14
	I20060424-0300:1.14
	M6_10:1.14
	I20060407-1200:1.14
	I20060331-1000:1.14
	I20060324-0300:1.14
	I20060317-1300:1.14
	I20060317-1200:1.14
	I20060316-1300:1.14
	I20060309-1300:1.14
	M5_10:1.14
	S20060303-1600:1.14
	I20060227-1730:1.14
	I20060216-1945:1.12
	I20060210-1715:1.11
	I20060209-1815:1.11
	I20060203-0830:1.11
	I20060129-1145:1.11
	I20060127-0900:1.11
	I20060120-1530:1.11
	I20060113-1700:1.11
	M4_10:1.11
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.5
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2007.04.25.08.08.29;	author dstadnik;	state Exp;
branches;
next	1.15;
commitid	7004462f0c7a4567;

1.15
date	2007.03.14.13.00.04;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	128545f7f1cb4567;

1.14
date	2006.02.23.15.45.31;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.02.22.22.01.20;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2006.02.13.18.37.47;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.10.19.01.15;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.01.10.18.45.24;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.12.22.17.24.09;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.30.13.24.37;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.29.18.33.02;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.20.14.07.16;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.18.10.58.31;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.16
log
@regenerated
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.gmfgraph.Connection;
import org.eclipse.gmf.mappings.AppearanceSteward;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.LinkConstraints;
import org.eclipse.gmf.mappings.LinkMapping;
import org.eclipse.gmf.mappings.MenuOwner;
import org.eclipse.gmf.mappings.NeedsContainment;
import org.eclipse.gmf.mappings.ToolOwner;
import org.eclipse.gmf.tooldef.AbstractTool;
import org.eclipse.gmf.tooldef.ContextMenu;
import org.eclipse.gmf.tooldef.StyleSelector;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Link Mapping</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getContainmentFeature <em>Containment Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getContextMenu <em>Context Menu</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getTool <em>Tool</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getAppearanceStyle <em>Appearance Style</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getDiagramLink <em>Diagram Link</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getSourceMetaFeature <em>Source Meta Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getLinkMetaFeature <em>Link Meta Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getCreationConstraints <em>Creation Constraints</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class LinkMappingImpl extends MappingEntryImpl implements LinkMapping {
	/**
	 * The cached value of the '{@@link #getContainmentFeature() <em>Containment Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContainmentFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EReference containmentFeature;

	/**
	 * The cached value of the '{@@link #getContextMenu() <em>Context Menu</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContextMenu()
	 * @@generated
	 * @@ordered
	 */
	protected ContextMenu contextMenu;

	/**
	 * The cached value of the '{@@link #getTool() <em>Tool</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTool()
	 * @@generated
	 * @@ordered
	 */
	protected AbstractTool tool;

	/**
	 * The cached value of the '{@@link #getAppearanceStyle() <em>Appearance Style</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAppearanceStyle()
	 * @@generated
	 * @@ordered
	 */
	protected StyleSelector appearanceStyle;

	/**
	 * The cached value of the '{@@link #getDiagramLink() <em>Diagram Link</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramLink()
	 * @@generated
	 * @@ordered
	 */
	protected Connection diagramLink;

	/**
	 * The cached value of the '{@@link #getSourceMetaFeature() <em>Source Meta Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceMetaFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EStructuralFeature sourceMetaFeature;

	/**
	 * The cached value of the '{@@link #getLinkMetaFeature() <em>Link Meta Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLinkMetaFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EStructuralFeature linkMetaFeature;

	/**
	 * The cached value of the '{@@link #getCreationConstraints() <em>Creation Constraints</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCreationConstraints()
	 * @@generated
	 * @@ordered
	 */
	protected LinkConstraints creationConstraints;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LinkMappingImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getLinkMapping();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getContainmentFeature() {
		if (containmentFeature != null && containmentFeature.eIsProxy()) {
			InternalEObject oldContainmentFeature = (InternalEObject)containmentFeature;
			containmentFeature = (EReference)eResolveProxy(oldContainmentFeature);
			if (containmentFeature != oldContainmentFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
			}
		}
		return containmentFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference basicGetContainmentFeature() {
		return containmentFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContainmentFeature(EReference newContainmentFeature) {
		EReference oldContainmentFeature = containmentFeature;
		containmentFeature = newContainmentFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ContextMenu getContextMenu() {
		if (contextMenu != null && contextMenu.eIsProxy()) {
			InternalEObject oldContextMenu = (InternalEObject)contextMenu;
			contextMenu = (ContextMenu)eResolveProxy(oldContextMenu);
			if (contextMenu != oldContextMenu) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__CONTEXT_MENU, oldContextMenu, contextMenu));
			}
		}
		return contextMenu;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ContextMenu basicGetContextMenu() {
		return contextMenu;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContextMenu(ContextMenu newContextMenu) {
		ContextMenu oldContextMenu = contextMenu;
		contextMenu = newContextMenu;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__CONTEXT_MENU, oldContextMenu, contextMenu));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Connection getDiagramLink() {
		if (diagramLink != null && diagramLink.eIsProxy()) {
			InternalEObject oldDiagramLink = (InternalEObject)diagramLink;
			diagramLink = (Connection)eResolveProxy(oldDiagramLink);
			if (diagramLink != oldDiagramLink) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK, oldDiagramLink, diagramLink));
			}
		}
		return diagramLink;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Connection basicGetDiagramLink() {
		return diagramLink;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramLink(Connection newDiagramLink) {
		Connection oldDiagramLink = diagramLink;
		diagramLink = newDiagramLink;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK, oldDiagramLink, diagramLink));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature getSourceMetaFeature() {
		if (sourceMetaFeature != null && sourceMetaFeature.eIsProxy()) {
			InternalEObject oldSourceMetaFeature = (InternalEObject)sourceMetaFeature;
			sourceMetaFeature = (EStructuralFeature)eResolveProxy(oldSourceMetaFeature);
			if (sourceMetaFeature != oldSourceMetaFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__SOURCE_META_FEATURE, oldSourceMetaFeature, sourceMetaFeature));
			}
		}
		return sourceMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature basicGetSourceMetaFeature() {
		return sourceMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceMetaFeature(EStructuralFeature newSourceMetaFeature) {
		EStructuralFeature oldSourceMetaFeature = sourceMetaFeature;
		sourceMetaFeature = newSourceMetaFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__SOURCE_META_FEATURE, oldSourceMetaFeature, sourceMetaFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature getLinkMetaFeature() {
		if (linkMetaFeature != null && linkMetaFeature.eIsProxy()) {
			InternalEObject oldLinkMetaFeature = (InternalEObject)linkMetaFeature;
			linkMetaFeature = (EStructuralFeature)eResolveProxy(oldLinkMetaFeature);
			if (linkMetaFeature != oldLinkMetaFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__LINK_META_FEATURE, oldLinkMetaFeature, linkMetaFeature));
			}
		}
		return linkMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature basicGetLinkMetaFeature() {
		return linkMetaFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLinkMetaFeature(EStructuralFeature newLinkMetaFeature) {
		EStructuralFeature oldLinkMetaFeature = linkMetaFeature;
		linkMetaFeature = newLinkMetaFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__LINK_META_FEATURE, oldLinkMetaFeature, linkMetaFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public LinkConstraints getCreationConstraints() {
		return creationConstraints;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetCreationConstraints(LinkConstraints newCreationConstraints, NotificationChain msgs) {
		LinkConstraints oldCreationConstraints = creationConstraints;
		creationConstraints = newCreationConstraints;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, oldCreationConstraints, newCreationConstraints);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCreationConstraints(LinkConstraints newCreationConstraints) {
		if (newCreationConstraints != creationConstraints) {
			NotificationChain msgs = null;
			if (creationConstraints != null)
				msgs = ((InternalEObject)creationConstraints).eInverseRemove(this, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, LinkConstraints.class, msgs);
			if (newCreationConstraints != null)
				msgs = ((InternalEObject)newCreationConstraints).eInverseAdd(this, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, LinkConstraints.class, msgs);
			msgs = basicSetCreationConstraints(newCreationConstraints, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, newCreationConstraints, newCreationConstraints));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public AbstractTool getTool() {
		if (tool != null && tool.eIsProxy()) {
			InternalEObject oldTool = (InternalEObject)tool;
			tool = (AbstractTool)eResolveProxy(oldTool);
			if (tool != oldTool) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__TOOL, oldTool, tool));
			}
		}
		return tool;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public AbstractTool basicGetTool() {
		return tool;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTool(AbstractTool newTool) {
		AbstractTool oldTool = tool;
		tool = newTool;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__TOOL, oldTool, tool));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public StyleSelector getAppearanceStyle() {
		if (appearanceStyle != null && appearanceStyle.eIsProxy()) {
			InternalEObject oldAppearanceStyle = (InternalEObject)appearanceStyle;
			appearanceStyle = (StyleSelector)eResolveProxy(oldAppearanceStyle);
			if (appearanceStyle != oldAppearanceStyle) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE, oldAppearanceStyle, appearanceStyle));
			}
		}
		return appearanceStyle;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public StyleSelector basicGetAppearanceStyle() {
		return appearanceStyle;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setAppearanceStyle(StyleSelector newAppearanceStyle) {
		StyleSelector oldAppearanceStyle = appearanceStyle;
		appearanceStyle = newAppearanceStyle;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE, oldAppearanceStyle, appearanceStyle));
	}

	/**
	 * <!-- begin-user-doc -->
	 * This method was created to simplify transtofmation code.
	 * @@return getDomainMetaElement() if specified, and getLinkMetaFeature().getEContainingClass()  
	 * if link meta feature was specified. <code>null</code> otherwise.
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EClass getDomainContext() {
		if (getDomainMetaElement() != null) {
			return getDomainMetaElement();
		}
		if (getLinkMetaFeature() != null) {
			return getLinkMetaFeature().getEContainingClass();
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
				if (creationConstraints != null)
					msgs = ((InternalEObject)creationConstraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, null, msgs);
				return basicSetCreationConstraints((LinkConstraints)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
				return basicSetCreationConstraints(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				if (resolve) return getContainmentFeature();
				return basicGetContainmentFeature();
			case GMFMapPackage.LINK_MAPPING__CONTEXT_MENU:
				if (resolve) return getContextMenu();
				return basicGetContextMenu();
			case GMFMapPackage.LINK_MAPPING__TOOL:
				if (resolve) return getTool();
				return basicGetTool();
			case GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE:
				if (resolve) return getAppearanceStyle();
				return basicGetAppearanceStyle();
			case GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK:
				if (resolve) return getDiagramLink();
				return basicGetDiagramLink();
			case GMFMapPackage.LINK_MAPPING__SOURCE_META_FEATURE:
				if (resolve) return getSourceMetaFeature();
				return basicGetSourceMetaFeature();
			case GMFMapPackage.LINK_MAPPING__LINK_META_FEATURE:
				if (resolve) return getLinkMetaFeature();
				return basicGetLinkMetaFeature();
			case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
				return getCreationConstraints();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__CONTEXT_MENU:
				setContextMenu((ContextMenu)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__TOOL:
				setTool((AbstractTool)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE:
				setAppearanceStyle((StyleSelector)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK:
				setDiagramLink((Connection)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__SOURCE_META_FEATURE:
				setSourceMetaFeature((EStructuralFeature)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__LINK_META_FEATURE:
				setLinkMetaFeature((EStructuralFeature)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
				setCreationConstraints((LinkConstraints)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)null);
				return;
			case GMFMapPackage.LINK_MAPPING__CONTEXT_MENU:
				setContextMenu((ContextMenu)null);
				return;
			case GMFMapPackage.LINK_MAPPING__TOOL:
				setTool((AbstractTool)null);
				return;
			case GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE:
				setAppearanceStyle((StyleSelector)null);
				return;
			case GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK:
				setDiagramLink((Connection)null);
				return;
			case GMFMapPackage.LINK_MAPPING__SOURCE_META_FEATURE:
				setSourceMetaFeature((EStructuralFeature)null);
				return;
			case GMFMapPackage.LINK_MAPPING__LINK_META_FEATURE:
				setLinkMetaFeature((EStructuralFeature)null);
				return;
			case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
				setCreationConstraints((LinkConstraints)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				return containmentFeature != null;
			case GMFMapPackage.LINK_MAPPING__CONTEXT_MENU:
				return contextMenu != null;
			case GMFMapPackage.LINK_MAPPING__TOOL:
				return tool != null;
			case GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE:
				return appearanceStyle != null;
			case GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK:
				return diagramLink != null;
			case GMFMapPackage.LINK_MAPPING__SOURCE_META_FEATURE:
				return sourceMetaFeature != null;
			case GMFMapPackage.LINK_MAPPING__LINK_META_FEATURE:
				return linkMetaFeature != null;
			case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
				return creationConstraints != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == NeedsContainment.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE: return GMFMapPackage.NEEDS_CONTAINMENT__CONTAINMENT_FEATURE;
				default: return -1;
			}
		}
		if (baseClass == MenuOwner.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.LINK_MAPPING__CONTEXT_MENU: return GMFMapPackage.MENU_OWNER__CONTEXT_MENU;
				default: return -1;
			}
		}
		if (baseClass == ToolOwner.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.LINK_MAPPING__TOOL: return GMFMapPackage.TOOL_OWNER__TOOL;
				default: return -1;
			}
		}
		if (baseClass == AppearanceSteward.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE: return GMFMapPackage.APPEARANCE_STEWARD__APPEARANCE_STYLE;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == NeedsContainment.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.NEEDS_CONTAINMENT__CONTAINMENT_FEATURE: return GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE;
				default: return -1;
			}
		}
		if (baseClass == MenuOwner.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.MENU_OWNER__CONTEXT_MENU: return GMFMapPackage.LINK_MAPPING__CONTEXT_MENU;
				default: return -1;
			}
		}
		if (baseClass == ToolOwner.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.TOOL_OWNER__TOOL: return GMFMapPackage.LINK_MAPPING__TOOL;
				default: return -1;
			}
		}
		if (baseClass == AppearanceSteward.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.APPEARANCE_STEWARD__APPEARANCE_STYLE: return GMFMapPackage.LINK_MAPPING__APPEARANCE_STYLE;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

} //LinkMappingImpl
@


1.15
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d57 1
a57 1
	protected EReference containmentFeature = null;
d67 1
a67 1
	protected ContextMenu contextMenu = null;
d77 1
a77 1
	protected AbstractTool tool = null;
d87 1
a87 1
	protected StyleSelector appearanceStyle = null;
d97 1
a97 1
	protected Connection diagramLink = null;
d107 1
a107 1
	protected EStructuralFeature sourceMetaFeature = null;
d117 1
a117 1
	protected EStructuralFeature linkMetaFeature = null;
d127 1
a127 1
	protected LinkConstraints creationConstraints = null;
@


1.14
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d143 1
d480 1
d496 1
d510 1
d545 1
d581 1
d617 1
d645 2
a646 1
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
d679 2
a680 1
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
@


1.13
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@d12 1
d22 1
d35 1
d50 10
d152 38
d509 3
d543 3
d578 3
d613 2
d639 6
d672 6
@


1.12
log
@#127461 Support multiple labels definition in the mapping model
@
text
@a8 2
import java.util.Collection;

a10 3
import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EAttribute;
a14 3
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.InternalEList;

a18 1
import org.eclipse.gmf.mappings.LinkLabelMapping;
a36 3
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getLabelEditFeature <em>Label Edit Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getLabelDisplayFeature <em>Label Display Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getLabelMappings <em>Label Mappings</em>}</li>
a86 30
	 * The cached value of the '{@@link #getLabelEditFeature() <em>Label Edit Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelEditFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EAttribute labelEditFeature = null;

	/**
	 * The cached value of the '{@@link #getLabelDisplayFeature() <em>Label Display Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelDisplayFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EAttribute labelDisplayFeature = null;

	/**
	 * The cached value of the '{@@link #getLabelMappings() <em>Label Mappings</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelMappings()
	 * @@generated
	 * @@ordered
	 */
	protected EList labelMappings = null;

	/**
a214 96
	public EAttribute getLabelEditFeature() {
		if (labelEditFeature != null && labelEditFeature.eIsProxy()) {
			InternalEObject oldLabelEditFeature = (InternalEObject)labelEditFeature;
			labelEditFeature = (EAttribute)eResolveProxy(oldLabelEditFeature);
			if (labelEditFeature != oldLabelEditFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__LABEL_EDIT_FEATURE, oldLabelEditFeature, labelEditFeature));
			}
		}
		return labelEditFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute basicGetLabelEditFeature() {
		return labelEditFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLabelEditFeature(EAttribute newLabelEditFeature) {
		EAttribute oldLabelEditFeature = labelEditFeature;
		labelEditFeature = newLabelEditFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__LABEL_EDIT_FEATURE, oldLabelEditFeature, labelEditFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getLabelDisplayFeatureGen() {
		if (labelDisplayFeature != null && labelDisplayFeature.eIsProxy()) {
			InternalEObject oldLabelDisplayFeature = (InternalEObject)labelDisplayFeature;
			labelDisplayFeature = (EAttribute)eResolveProxy(oldLabelDisplayFeature);
			if (labelDisplayFeature != oldLabelDisplayFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__LABEL_DISPLAY_FEATURE, oldLabelDisplayFeature, labelDisplayFeature));
			}
		}
		return labelDisplayFeature;
	}

	public EAttribute getLabelDisplayFeature() {
		EAttribute rv = getLabelDisplayFeatureGen();
		if (rv != null) {
			return rv;
		}
		return getLabelEditFeature();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute basicGetLabelDisplayFeature() {
		return labelDisplayFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLabelDisplayFeature(EAttribute newLabelDisplayFeature) {
		EAttribute oldLabelDisplayFeature = labelDisplayFeature;
		labelDisplayFeature = newLabelDisplayFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__LABEL_DISPLAY_FEATURE, oldLabelDisplayFeature, labelDisplayFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList getLabelMappings() {
		if (labelMappings == null) {
			labelMappings = new EObjectContainmentWithInverseEList(LinkLabelMapping.class, this, GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS, GMFMapPackage.LINK_LABEL_MAPPING__LINK_MAPPING);
		}
		return labelMappings;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a429 2
			case GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS:
				return ((InternalEList)getLabelMappings()).basicAdd(otherEnd, msgs);
a444 2
			case GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS:
				return ((InternalEList)getLabelMappings()).basicRemove(otherEnd, msgs);
a469 8
			case GMFMapPackage.LINK_MAPPING__LABEL_EDIT_FEATURE:
				if (resolve) return getLabelEditFeature();
				return basicGetLabelEditFeature();
			case GMFMapPackage.LINK_MAPPING__LABEL_DISPLAY_FEATURE:
				if (resolve) return getLabelDisplayFeature();
				return basicGetLabelDisplayFeature();
			case GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS:
				return getLabelMappings();
a500 10
			case GMFMapPackage.LINK_MAPPING__LABEL_EDIT_FEATURE:
				setLabelEditFeature((EAttribute)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__LABEL_DISPLAY_FEATURE:
				setLabelDisplayFeature((EAttribute)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS:
				getLabelMappings().clear();
				getLabelMappings().addAll((Collection)newValue);
				return;
a532 9
			case GMFMapPackage.LINK_MAPPING__LABEL_EDIT_FEATURE:
				setLabelEditFeature((EAttribute)null);
				return;
			case GMFMapPackage.LINK_MAPPING__LABEL_DISPLAY_FEATURE:
				setLabelDisplayFeature((EAttribute)null);
				return;
			case GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS:
				getLabelMappings().clear();
				return;
a560 6
			case GMFMapPackage.LINK_MAPPING__LABEL_EDIT_FEATURE:
				return labelEditFeature != null;
			case GMFMapPackage.LINK_MAPPING__LABEL_DISPLAY_FEATURE:
				return labelDisplayFeature != null;
			case GMFMapPackage.LINK_MAPPING__LABEL_MAPPINGS:
				return labelMappings != null && !labelMappings.isEmpty();
@


1.11
log
@#114197 - tooling definition in place
@
text
@d9 2
d13 2
d20 3
d27 1
d48 1
d119 10
d341 12
d568 2
d585 2
d618 2
d657 4
d699 3
d734 2
@


1.10
log
@Method renamed. Clearly (hah :) express intention of the method - it's merely describes surroundings/location of the element in the domain, rather then represent a metaClass
@
text
@a12 1
import org.eclipse.emf.ecore.EReference;
d17 1
a17 2
import org.eclipse.gmf.mappings.Constraint;
import org.eclipse.gmf.mappings.ElementInitializer;
d21 5
a25 1
import org.eclipse.gmf.mappings.Tool;
d34 3
a37 4
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getDomainSpecialization <em>Domain Specialization</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getDomainInitializer <em>Domain Initializer</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getContainmentFeature <em>Containment Feature</em>}</li>
a42 1
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkMappingImpl#getTool <em>Tool</em>}</li>
d50 1
a50 1
	 * The cached value of the '{@@link #getDiagramLink() <em>Diagram Link</em>}' reference.
d53 1
a53 1
	 * @@see #getDiagramLink()
d57 1
a57 1
	protected Connection diagramLink = null;
d60 1
a60 1
	 * The cached value of the '{@@link #getDomainMetaElement() <em>Domain Meta Element</em>}' reference.
d63 1
a63 1
	 * @@see #getDomainMetaElement()
d67 1
a67 1
	protected EClass domainMetaElement = null;
d70 1
a70 1
	 * The cached value of the '{@@link #getDomainSpecialization() <em>Domain Specialization</em>}' containment reference.
d73 1
a73 1
	 * @@see #getDomainSpecialization()
d77 1
a77 1
	protected Constraint domainSpecialization = null;
d80 1
a80 1
	 * The cached value of the '{@@link #getDomainInitializer() <em>Domain Initializer</em>}' containment reference.
d83 1
a83 1
	 * @@see #getDomainInitializer()
d87 1
a87 11
	protected ElementInitializer domainInitializer = null;

	/**
	 * The cached value of the '{@@link #getContainmentFeature() <em>Containment Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContainmentFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EReference containmentFeature = null;
a139 10
	 * The cached value of the '{@@link #getTool() <em>Tool</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTool()
	 * @@generated
	 * @@ordered
	 */
	protected Tool tool = null;

	/**
d162 5
a166 5
	public Connection getDiagramLink() {
		if (diagramLink != null && diagramLink.eIsProxy()) {
			InternalEObject oldDiagramLink = (InternalEObject)diagramLink;
			diagramLink = (Connection)eResolveProxy(oldDiagramLink);
			if (diagramLink != oldDiagramLink) {
d168 1
a168 1
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK, oldDiagramLink, diagramLink));
d171 1
a171 1
		return diagramLink;
d179 2
a180 2
	public Connection basicGetDiagramLink() {
		return diagramLink;
d188 3
a190 3
	public void setDiagramLink(Connection newDiagramLink) {
		Connection oldDiagramLink = diagramLink;
		diagramLink = newDiagramLink;
d192 1
a192 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK, oldDiagramLink, diagramLink));
d200 5
a204 5
	public EClass getDomainMetaElement() {
		if (domainMetaElement != null && domainMetaElement.eIsProxy()) {
			InternalEObject oldDomainMetaElement = (InternalEObject)domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy(oldDomainMetaElement);
			if (domainMetaElement != oldDomainMetaElement) {
d206 1
a206 1
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
d209 1
a209 1
		return domainMetaElement;
d217 2
a218 2
	public EClass basicGetDomainMetaElement() {
		return domainMetaElement;
d226 3
a228 3
	public void setDomainMetaElement(EClass newDomainMetaElement) {
		EClass oldDomainMetaElement = domainMetaElement;
		domainMetaElement = newDomainMetaElement;
d230 1
a230 125
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Constraint getDomainSpecialization() {
		return domainSpecialization;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainSpecialization(Constraint newDomainSpecialization, NotificationChain msgs) {
		Constraint oldDomainSpecialization = domainSpecialization;
		domainSpecialization = newDomainSpecialization;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION, oldDomainSpecialization, newDomainSpecialization);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainSpecialization(Constraint newDomainSpecialization) {
		if (newDomainSpecialization != domainSpecialization) {
			NotificationChain msgs = null;
			if (domainSpecialization != null)
				msgs = ((InternalEObject)domainSpecialization).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
			if (newDomainSpecialization != null)
				msgs = ((InternalEObject)newDomainSpecialization).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
			msgs = basicSetDomainSpecialization(newDomainSpecialization, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION, newDomainSpecialization, newDomainSpecialization));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ElementInitializer getDomainInitializer() {
		return domainInitializer;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainInitializer(ElementInitializer newDomainInitializer, NotificationChain msgs) {
		ElementInitializer oldDomainInitializer = domainInitializer;
		domainInitializer = newDomainInitializer;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER, oldDomainInitializer, newDomainInitializer);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainInitializer(ElementInitializer newDomainInitializer) {
		if (newDomainInitializer != domainInitializer) {
			NotificationChain msgs = null;
			if (domainInitializer != null)
				msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER, null, msgs);
			if (newDomainInitializer != null)
				msgs = ((InternalEObject)newDomainInitializer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER, null, msgs);
			msgs = basicSetDomainInitializer(newDomainInitializer, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER, newDomainInitializer, newDomainInitializer));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getContainmentFeature() {
		if (containmentFeature != null && containmentFeature.eIsProxy()) {
			InternalEObject oldContainmentFeature = (InternalEObject)containmentFeature;
			containmentFeature = (EReference)eResolveProxy(oldContainmentFeature);
			if (containmentFeature != oldContainmentFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
			}
		}
		return containmentFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference basicGetContainmentFeature() {
		return containmentFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContainmentFeature(EReference newContainmentFeature) {
		EReference oldContainmentFeature = containmentFeature;
		containmentFeature = newContainmentFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
d441 9
a449 1
	public Tool getTool() {
d458 11
a468 2
	public NotificationChain basicSetTool(Tool newTool, NotificationChain msgs) {
		Tool oldTool = tool;
d470 17
a486 3
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__TOOL, oldTool, newTool);
			if (msgs == null) msgs = notification; else msgs.add(notification);
d488 10
a497 1
		return msgs;
d505 5
a509 12
	public void setTool(Tool newTool) {
		if (newTool != tool) {
			NotificationChain msgs = null;
			if (tool != null)
				msgs = ((InternalEObject)tool).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__TOOL, null, msgs);
			if (newTool != null)
				msgs = ((InternalEObject)newTool).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__TOOL, null, msgs);
			msgs = basicSetTool(newTool, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_MAPPING__TOOL, newTool, newTool));
a551 4
			case GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION:
				return basicSetDomainSpecialization(null, msgs);
			case GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER:
				return basicSetDomainInitializer(null, msgs);
a553 2
			case GMFMapPackage.LINK_MAPPING__TOOL:
				return basicSetTool(null, msgs);
d565 9
a576 10
			case GMFMapPackage.LINK_MAPPING__DOMAIN_META_ELEMENT:
				if (resolve) return getDomainMetaElement();
				return basicGetDomainMetaElement();
			case GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION:
				return getDomainSpecialization();
			case GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER:
				return getDomainInitializer();
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				if (resolve) return getContainmentFeature();
				return basicGetContainmentFeature();
a590 2
			case GMFMapPackage.LINK_MAPPING__TOOL:
				return getTool();
d602 2
a603 2
			case GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK:
				setDiagramLink((Connection)newValue);
d605 2
a606 2
			case GMFMapPackage.LINK_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)newValue);
d608 2
a609 2
			case GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)newValue);
d611 2
a612 5
			case GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)newValue);
				return;
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)newValue);
a628 3
			case GMFMapPackage.LINK_MAPPING__TOOL:
				setTool((Tool)newValue);
				return;
d640 2
a641 2
			case GMFMapPackage.LINK_MAPPING__DIAGRAM_LINK:
				setDiagramLink((Connection)null);
d643 2
a644 2
			case GMFMapPackage.LINK_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)null);
d646 2
a647 2
			case GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)null);
d649 2
a650 5
			case GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)null);
				return;
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)null);
a666 3
			case GMFMapPackage.LINK_MAPPING__TOOL:
				setTool((Tool)null);
				return;
d678 6
a685 8
			case GMFMapPackage.LINK_MAPPING__DOMAIN_META_ELEMENT:
				return domainMetaElement != null;
			case GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION:
				return domainSpecialization != null;
			case GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER:
				return domainInitializer != null;
			case GMFMapPackage.LINK_MAPPING__CONTAINMENT_FEATURE:
				return containmentFeature != null;
a695 2
			case GMFMapPackage.LINK_MAPPING__TOOL:
				return tool != null;
d700 54
@


1.9
log
@actually, there's no need for getDomainMetaClass in the Link, and its former uses in namingStrategy/DGMT prove that.
@
text
@d626 1
a626 1
	 * @@return getDomainMetaElement() if specified, and getLinkMetaFeature().getEType()  
d631 1
a631 1
	public EClass getDomainMetaClass() {
d636 1
a636 1
			return (EClass) getLinkMetaFeature().getEType();
@


1.8
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@d626 2
a627 2
	 * @@return getDomainMetaElement() if specified or getContainmentFeature().getEReferenceType() 
	 * if containment feature was specified or null in case of "Reference only" link mapping
d635 2
a636 2
		if (getContainmentFeature() != null) {
			return getContainmentFeature().getEReferenceType();
@


1.7
log
@#115461 provide source feature in mapping
@
text
@d184 2
a185 2
			Connection oldDiagramLink = diagramLink;
			diagramLink = (Connection)eResolveProxy((InternalEObject)diagramLink);
d222 2
a223 2
			EClass oldDomainMetaElement = domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy((InternalEObject)domainMetaElement);
d346 2
a347 2
			EReference oldContainmentFeature = containmentFeature;
			containmentFeature = (EReference)eResolveProxy((InternalEObject)containmentFeature);
d384 2
a385 2
			EAttribute oldLabelEditFeature = labelEditFeature;
			labelEditFeature = (EAttribute)eResolveProxy((InternalEObject)labelEditFeature);
d422 2
a423 2
			EAttribute oldLabelDisplayFeature = labelDisplayFeature;
			labelDisplayFeature = (EAttribute)eResolveProxy((InternalEObject)labelDisplayFeature);
d468 2
a469 2
			EStructuralFeature oldSourceMetaFeature = sourceMetaFeature;
			sourceMetaFeature = (EStructuralFeature)eResolveProxy((InternalEObject)sourceMetaFeature);
d506 2
a507 2
			EStructuralFeature oldLinkMetaFeature = linkMetaFeature;
			linkMetaFeature = (EStructuralFeature)eResolveProxy((InternalEObject)linkMetaFeature);
d646 6
a651 10
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
					if (creationConstraints != null)
						msgs = ((InternalEObject)creationConstraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, null, msgs);
					return basicSetCreationConstraints((LinkConstraints)otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d653 1
a653 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d661 10
a670 14
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.LINK_MAPPING__DOMAIN_SPECIALIZATION:
					return basicSetDomainSpecialization(null, msgs);
				case GMFMapPackage.LINK_MAPPING__DOMAIN_INITIALIZER:
					return basicSetDomainInitializer(null, msgs);
				case GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS:
					return basicSetCreationConstraints(null, msgs);
				case GMFMapPackage.LINK_MAPPING__TOOL:
					return basicSetTool(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d672 1
a672 1
		return eBasicSetContainer(null, featureID, msgs);
d680 2
a681 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d712 1
a712 1
		return eDynamicGet(eFeature, resolve);
d720 2
a721 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d756 1
a756 1
		eDynamicSet(eFeature, newValue);
d764 2
a765 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d800 1
a800 1
		eDynamicUnset(eFeature);
d808 2
a809 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d833 1
a833 1
		return eDynamicIsSet(eFeature);
@


1.6
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d39 1
d120 10
d466 38
d711 3
d753 3
d797 3
d834 2
@


1.5
log
@Adding method to get DomainElementMetaClass for the transformation code.
@
text
@a10 1

d17 1
a17 1
import org.eclipse.gmf.diadef.Connection;
d23 1
d41 1
d139 10
d533 43
d627 2
d667 2
d707 3
d748 3
d780 2
@


1.4
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d522 18
@


1.3
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@d22 1
d40 1
d128 10
d482 64
d553 2
d591 2
d628 3
d666 3
d696 2
@


1.2
log
@[rdvorak] #112505 constraint specification in gmfmap
@
text
@d20 1
d34 1
d76 10
d267 43
d475 2
d499 2
d533 3
d568 3
d600 2
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: LinkMappingImpl.java,v 1.4 2005/08/02 13:11:56 artem Exp $
d10 2
d19 1
d32 1
d64 10
d212 43
d415 17
d440 2
d471 3
d503 3
d533 2
@

