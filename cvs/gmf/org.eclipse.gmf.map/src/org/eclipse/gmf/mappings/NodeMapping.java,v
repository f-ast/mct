head	1.16;
access;
symbols
	v20080813-1520:1.16
	v20080722-1827:1.16
	v20080716-1642:1.16
	R2_1_maintenance:1.16.0.2
	Root_R2_1_maintenance:1.16
	R2_1_0:1.16
	v20080521:1.16
	v20080425-1959:1.16
	v20080417-1610:1.16
	v20080322-0000:1.16
	v20080222-1200:1.15
	v20070809-0000:1.15
	R2_0_maintenance:1.15.0.2
	R2_0:1.15
	R4_20:1.15
	v20070621-0000:1.15
	RC3_20:1.15
	v20070608-1300:1.15
	v20070605-1400:1.15
	v20070601-1400:1.15
	v20070525-1500:1.15
	v20070520-1200:1.15
	v20070518-1300:1.15
	v20070517-1200:1.15
	v20070504-1000:1.15
	v20070427-0600:1.15
	v20070330-1300:1.15
	v20070322-1100:1.15
	v20060316-0600:1.15
	v20070208-1800:1.14
	M4_20:1.14
	v20061214-0000:1.14
	M3_20:1.14
	v20061117-0800:1.14
	v20061013-1330:1.14
	M1_20:1.14
	v20060904-1500:1.14
	v20060713-1700:1.14
	R1_0_maintenance:1.14.0.2
	R1_0:1.14
	v20060627-1200:1.14
	v20060626-1420:1.14
	v20060616-1200:1.14
	v20060609-1400:1.14
	v20060531-1730:1.14
	v20060530-1930:1.14
	v20060519-1300:1.14
	v20060519-0800:1.14
	v20060512-1000:1.13
	I20060512-1000:1.13
	I20060505-1400:1.11
	I20060428-1300:1.11
	I20060424-0500:1.11
	I20060424-0300:1.11
	M6_10:1.11
	I20060407-1200:1.11
	I20060331-1000:1.11
	I20060324-0300:1.11
	I20060317-1300:1.11
	I20060317-1200:1.11
	I20060316-1300:1.11
	I20060309-1300:1.10
	M5_10:1.10
	S20060303-1600:1.10
	I20060227-1730:1.10
	I20060216-1945:1.9
	I20060210-1715:1.9
	I20060209-1815:1.9
	I20060203-0830:1.9
	I20060129-1145:1.9
	I20060127-0900:1.9
	I20060120-1530:1.9
	I20060113-1700:1.9
	M4_10:1.9
	I20060107-1100:1.8
	I20060105-1630:1.8
	I20051230-1230:1.8
	I20051223-1100:1.8
	I20051217-0925:1.8
	I20051208-2000:1.8
	I20051201-1800:1.7
	I20051124-2000:1.4
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.16
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.15;
commitid	160e47cc39234567;

1.15
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.14;
commitid	128545f7f1cb4567;

1.14
date	2006.05.14.18.06.31;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.11.09.42.04;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.10.15.12.33;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.23.15.45.31;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.30.12.49.29;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.29.18.33.02;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.25.13.52.44;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.23.13.30.39;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.20.14.07.16;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.18.10.58.31;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.16
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;


import org.eclipse.emf.common.util.EList;

import org.eclipse.gmf.gmfgraph.Node;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Node Mapping</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Both top-level diagram node and any inner node
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getChildren <em>Children</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getCompartments <em>Compartments</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping()
 * @@model
 * @@generated
 */
public interface NodeMapping extends MappingEntry, MenuOwner, ToolOwner, AppearanceSteward {
	/**
	 * Returns the value of the '<em><b>Diagram Node</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Node</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Node</em>' reference.
	 * @@see #setDiagramNode(Node)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DiagramNode()
	 * @@model required="true"
	 * @@generated
	 */
	Node getDiagramNode();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Node</em>' reference.
	 * @@see #getDiagramNode()
	 * @@generated
	 */
	void setDiagramNode(Node value);

	/**
	 * Returns the value of the '<em><b>Children</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.ChildReference}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.ChildReference#getParentNode <em>Parent Node</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Children</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Children</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_Children()
	 * @@see org.eclipse.gmf.mappings.ChildReference#getParentNode
	 * @@model opposite="parentNode" containment="true"
	 * @@generated
	 */
	EList<ChildReference> getChildren();

	/**
	 * Returns the value of the '<em><b>Compartments</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.CompartmentMapping}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.CompartmentMapping#getParentNode <em>Parent Node</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Compartments</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Compartments</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_Compartments()
	 * @@see org.eclipse.gmf.mappings.CompartmentMapping#getParentNode
	 * @@model opposite="parentNode" containment="true"
	 * @@generated
	 */
	EList<CompartmentMapping> getCompartments();

} // NodeMapping
@


1.15
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d76 1
a76 1
	 * @@model type="org.eclipse.gmf.mappings.ChildReference" opposite="parentNode" containment="true"
d94 1
a94 1
	 * @@model type="org.eclipse.gmf.mappings.CompartmentMapping" opposite="parentNode" containment="true"
@


1.14
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@d79 1
a79 1
	EList getChildren();
d97 1
a97 1
	EList getCompartments();
@


1.13
log
@revert to gmfmap model compatibility
@
text
@d9 1
d26 1
a28 1
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}</li>
d38 26
a98 26
	/**
	 * Returns the value of the '<em><b>Diagram Node</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Node</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Node</em>' reference.
	 * @@see #setDiagramNode(Node)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DiagramNode()
	 * @@model
	 * @@generated
	 */
	Node getDiagramNode();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Node</em>' reference.
	 * @@see #getDiagramNode()
	 * @@generated
	 */
	void setDiagramNode(Node value);

@


1.12
log
@#133836 Creating a child node without a label causes error
@
text
@d11 2
d27 1
d32 1
a32 1
 * @@model abstract="true"
d72 26
@


1.11
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@a8 1

a10 2
import org.eclipse.gmf.gmfgraph.Node;

a22 1
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}</li>
d29 1
a29 1
 * @@model
a33 26
	 * Returns the value of the '<em><b>Diagram Node</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Node</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Node</em>' reference.
	 * @@see #setDiagramNode(Node)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DiagramNode()
	 * @@model required="true"
	 * @@generated
	 */
	Node getDiagramNode();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Node</em>' reference.
	 * @@see #getDiagramNode()
	 * @@generated
	 */
	void setDiagramNode(Node value);

	/**
@


1.10
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d33 1
a33 2
 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not (domainMetaElement.oclIsUndefined()  and containmentFeature.oclIsUndefined())' description='Either domain meta element or containment feature must be set in node mapping'"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not domainMetaElement.oclIsUndefined() implies containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)' description='\'Domain Element\' must be the same or extend the type referenced by \'Containment Feature\''"
@


1.9
log
@#114197 - tooling definition in place
@
text
@d10 2
d20 1
a20 1
 * Top-level diagram node
d27 2
d33 2
a34 1
 * @@model
d37 1
a37 1
public interface NodeMapping extends AbstractNodeMapping {
d64 36
@


1.8
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d17 4
d32 1
a32 1
public interface NodeMapping extends AbstractNodeMapping, MappingEntry{
@


1.7
log
@Adding method to get DomainElementMetaClass for the transformation code.
@
text
@d10 2
d17 6
d28 27
a54 1
public interface NodeMapping extends AbstractNodeMapping, MappingEntry {
@


1.6
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d20 1
a20 1
public interface NodeMapping extends MappingEntry, AbstractNodeMapping {
@


1.5
log
@#118053 update models
@
text
@a8 5
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.gmf.diadef.Node;
@


1.4
log
@[rdvorak] #115862 describe semantics of metamodel with annotations
@
text
@a19 12
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDomainSpecialization <em>Domain Specialization</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getDomainInitializer <em>Domain Initializer</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getContainmentFeature <em>Containment Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getEditFeature <em>Edit Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeMapping#getChildMappings <em>Child Mappings</em>}</li>
 * </ul>
 * </p>
d25 1
a25 176
public interface NodeMapping extends MappingEntry{
	/**
	 * Returns the value of the '<em><b>Diagram Node</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Node</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Node</em>' reference.
	 * @@see #setDiagramNode(Node)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DiagramNode()
	 * @@model required="true"
	 * @@generated
	 */
	Node getDiagramNode();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDiagramNode <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Node</em>' reference.
	 * @@see #getDiagramNode()
	 * @@generated
	 */
	void setDiagramNode(Node value);

	/**
	 * Returns the value of the '<em><b>Domain Meta Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Domain Meta Element</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Domain Meta Element</em>' reference.
	 * @@see #setDomainMetaElement(EClass)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DomainMetaElement()
	 * @@model required="true"
	 * @@generated
	 */
	EClass getDomainMetaElement();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDomainMetaElement <em>Domain Meta Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Meta Element</em>' reference.
	 * @@see #getDomainMetaElement()
	 * @@generated
	 */
	void setDomainMetaElement(EClass value);

	/**
	 * Returns the value of the '<em><b>Domain Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Specializes further the domain meta element EClass associated with this mapping and should be evaluated in this EClass context
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Domain Specialization</em>' containment reference.
	 * @@see #setDomainSpecialization(Constraint)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DomainSpecialization()
	 * @@model containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='domainMetaElement'"
	 * @@generated
	 */
	Constraint getDomainSpecialization();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDomainSpecialization <em>Domain Specialization</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Specialization</em>' containment reference.
	 * @@see #getDomainSpecialization()
	 * @@generated
	 */
	void setDomainSpecialization(Constraint value);

	/**
	 * Returns the value of the '<em><b>Domain Initializer</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Initializer for the domain model element associated with mapping
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Domain Initializer</em>' containment reference.
	 * @@see #setDomainInitializer(ElementInitializer)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_DomainInitializer()
	 * @@model containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='let i : FeatureSeqInitializer = domainInitializer.oclAsType( FeatureSeqInitializer) in i.oclIsUndefined() or i.initializers.feature.eContainingClass->forAll(c|c.isSuperTypeOf(domainMetaElement)) '"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='domainMetaElement'"
	 * @@generated
	 */
	ElementInitializer getDomainInitializer();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getDomainInitializer <em>Domain Initializer</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Initializer</em>' containment reference.
	 * @@see #getDomainInitializer()
	 * @@generated
	 */
	void setDomainInitializer(ElementInitializer value);

	/**
	 * Returns the value of the '<em><b>Containment Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Containment Feature</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Containment Feature</em>' reference.
	 * @@see #setContainmentFeature(EReference)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_ContainmentFeature()
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement) '"
	 * @@generated
	 */
	EReference getContainmentFeature();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getContainmentFeature <em>Containment Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Containment Feature</em>' reference.
	 * @@see #getContainmentFeature()
	 * @@generated
	 */
	void setContainmentFeature(EReference value);

	/**
	 * Returns the value of the '<em><b>Edit Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Edit Feature</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Edit Feature</em>' reference.
	 * @@see #setEditFeature(EAttribute)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_EditFeature()
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='editFeature.oclIsUndefined() or domainMetaElement.eAllAttributes->includes(editFeature)'"
	 * @@generated
	 */
	EAttribute getEditFeature();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeMapping#getEditFeature <em>Edit Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Feature</em>' reference.
	 * @@see #getEditFeature()
	 * @@generated
	 */
	void setEditFeature(EAttribute value);

	/**
	 * Returns the value of the '<em><b>Child Mappings</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.ChildNodeMapping}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.ChildNodeMapping#getParentNode <em>Parent Node</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Child Mappings</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Child Mappings</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeMapping_ChildMappings()
	 * @@see org.eclipse.gmf.mappings.ChildNodeMapping#getParentNode
	 * @@model type="org.eclipse.gmf.mappings.ChildNodeMapping" opposite="parentNode" containment="true"
	 * @@generated
	 */
	EList getChildMappings();

@


1.3
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@d101 1
d127 2
d154 1
a154 1
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='oclIsUndefined(containmentFeature) or domainMetaElement.eAllReferences->includes(containmentFeature)'"
d180 1
a180 1
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='oclIsUndefined(editFeature) or domainMetaElement.eAllAttributes->includes(editFeature)'"
d198 1
d207 2
a208 1
	 * @@model type="org.eclipse.gmf.mappings.ChildNodeMapping" containment="true"
@


1.2
log
@[rdvorak] #112505 constraint specification in gmfmap
@
text
@d26 1
d116 25
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: NodeMapping.java,v 1.4 2005/08/02 13:11:56 artem Exp $
d25 1
d90 25
@

