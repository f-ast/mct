head	1.10;
access;
symbols
	v20080813-1520:1.10
	R1_0_maintenance:1.10.0.2
	R1_0:1.10
	I20060216-1945:1.8
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051208-2000:1.4
	I20051201-1800:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2006.02.23.15.45.31;	author atikhomirov;	state dead;
branches;
next	1.9;

1.9
date	2006.02.22.22.01.20;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.13.18.37.47;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.10.19.01.15;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.10.18.35.29;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.07.19.23.17;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.30.12.49.30;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.25.13.52.44;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.10
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.mappings.AbstractNodeMapping;
import org.eclipse.gmf.mappings.AppearanceSteward;
import org.eclipse.gmf.mappings.ChildNodeMapping;
import org.eclipse.gmf.mappings.CompartmentMapping;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.MenuOwner;
import org.eclipse.gmf.mappings.ToolOwner;
import org.eclipse.gmf.tooldef.AbstractTool;
import org.eclipse.gmf.tooldef.ContextMenu;
import org.eclipse.gmf.tooldef.StyleSelector;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Abstract Node Mapping</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getContextMenu <em>Context Menu</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getTool <em>Tool</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getAppearanceStyle <em>Appearance Style</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getChildMappings <em>Child Mappings</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getCompartmentMappings <em>Compartment Mappings</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public abstract class AbstractNodeMappingImpl extends MappingEntryImpl implements AbstractNodeMapping {
	/**
	 * The cached value of the '{@@link #getContextMenu() <em>Context Menu</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContextMenu()
	 * @@generated
	 * @@ordered
	 */
	protected ContextMenu contextMenu = null;

	/**
	 * The cached value of the '{@@link #getTool() <em>Tool</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTool()
	 * @@generated
	 * @@ordered
	 */
	protected AbstractTool tool = null;

	/**
	 * The cached value of the '{@@link #getAppearanceStyle() <em>Appearance Style</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getAppearanceStyle()
	 * @@generated
	 * @@ordered
	 */
	protected StyleSelector appearanceStyle = null;

	/**
	 * The cached value of the '{@@link #getChildMappings() <em>Child Mappings</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getChildMappings()
	 * @@generated
	 * @@ordered
	 */
	protected EList childMappings = null;

	/**
	 * The cached value of the '{@@link #getCompartmentMappings() <em>Compartment Mappings</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCompartmentMappings()
	 * @@generated
	 * @@ordered
	 */
	protected EList compartmentMappings = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected AbstractNodeMappingImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getAbstractNodeMapping();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ContextMenu getContextMenu() {
		if (contextMenu != null && contextMenu.eIsProxy()) {
			InternalEObject oldContextMenu = (InternalEObject)contextMenu;
			contextMenu = (ContextMenu)eResolveProxy(oldContextMenu);
			if (contextMenu != oldContextMenu) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU, oldContextMenu, contextMenu));
			}
		}
		return contextMenu;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ContextMenu basicGetContextMenu() {
		return contextMenu;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContextMenu(ContextMenu newContextMenu) {
		ContextMenu oldContextMenu = contextMenu;
		contextMenu = newContextMenu;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU, oldContextMenu, contextMenu));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public AbstractTool getTool() {
		if (tool != null && tool.eIsProxy()) {
			InternalEObject oldTool = (InternalEObject)tool;
			tool = (AbstractTool)eResolveProxy(oldTool);
			if (tool != oldTool) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL, oldTool, tool));
			}
		}
		return tool;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public AbstractTool basicGetTool() {
		return tool;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTool(AbstractTool newTool) {
		AbstractTool oldTool = tool;
		tool = newTool;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL, oldTool, tool));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public StyleSelector getAppearanceStyle() {
		if (appearanceStyle != null && appearanceStyle.eIsProxy()) {
			InternalEObject oldAppearanceStyle = (InternalEObject)appearanceStyle;
			appearanceStyle = (StyleSelector)eResolveProxy(oldAppearanceStyle);
			if (appearanceStyle != oldAppearanceStyle) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE, oldAppearanceStyle, appearanceStyle));
			}
		}
		return appearanceStyle;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public StyleSelector basicGetAppearanceStyle() {
		return appearanceStyle;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setAppearanceStyle(StyleSelector newAppearanceStyle) {
		StyleSelector oldAppearanceStyle = appearanceStyle;
		appearanceStyle = newAppearanceStyle;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE, oldAppearanceStyle, appearanceStyle));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList getChildMappings() {
		if (childMappings == null) {
			childMappings = new EObjectContainmentWithInverseEList(ChildNodeMapping.class, this, GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS, GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE);
		}
		return childMappings;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList getCompartmentMappings() {
		if (compartmentMappings == null) {
			compartmentMappings = new EObjectContainmentWithInverseEList(CompartmentMapping.class, this, GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS, GMFMapPackage.COMPARTMENT_MAPPING__PARENT_NODE_MAPPING);
		}
		return compartmentMappings;
	}

	/**
	 * <!-- begin-user-doc -->
	 * This method was created to simplify transtofmation code.
	 * @@return getDomainMetaElement() if specified or getContainmentFeature().getEReferenceType()
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public EClass getDomainContext() {
		if (getDomainMetaElement() == null && getContainmentFeature() != null) {
			return getContainmentFeature().getEReferenceType();
		}
		return getDomainMetaElement();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
				return ((InternalEList)getChildMappings()).basicAdd(otherEnd, msgs);
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				return ((InternalEList)getCompartmentMappings()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
				return ((InternalEList)getChildMappings()).basicRemove(otherEnd, msgs);
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				return ((InternalEList)getCompartmentMappings()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU:
				if (resolve) return getContextMenu();
				return basicGetContextMenu();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				if (resolve) return getTool();
				return basicGetTool();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE:
				if (resolve) return getAppearanceStyle();
				return basicGetAppearanceStyle();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
				return getChildMappings();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				return getCompartmentMappings();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU:
				setContextMenu((ContextMenu)newValue);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				setTool((AbstractTool)newValue);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE:
				setAppearanceStyle((StyleSelector)newValue);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
				getChildMappings().clear();
				getChildMappings().addAll((Collection)newValue);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				getCompartmentMappings().clear();
				getCompartmentMappings().addAll((Collection)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU:
				setContextMenu((ContextMenu)null);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				setTool((AbstractTool)null);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE:
				setAppearanceStyle((StyleSelector)null);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
				getChildMappings().clear();
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				getCompartmentMappings().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU:
				return contextMenu != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				return tool != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE:
				return appearanceStyle != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
				return childMappings != null && !childMappings.isEmpty();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				return compartmentMappings != null && !compartmentMappings.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
		if (baseClass == MenuOwner.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU: return GMFMapPackage.MENU_OWNER__CONTEXT_MENU;
				default: return -1;
			}
		}
		if (baseClass == ToolOwner.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL: return GMFMapPackage.TOOL_OWNER__TOOL;
				default: return -1;
			}
		}
		if (baseClass == AppearanceSteward.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE: return GMFMapPackage.APPEARANCE_STEWARD__APPEARANCE_STYLE;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
		if (baseClass == MenuOwner.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.MENU_OWNER__CONTEXT_MENU: return GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTEXT_MENU;
				default: return -1;
			}
		}
		if (baseClass == ToolOwner.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.TOOL_OWNER__TOOL: return GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL;
				default: return -1;
			}
		}
		if (baseClass == AppearanceSteward.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.APPEARANCE_STEWARD__APPEARANCE_STYLE: return GMFMapPackage.ABSTRACT_NODE_MAPPING__APPEARANCE_STYLE;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

} //AbstractNodeMappingImpl
@


1.9
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@@


1.8
log
@#127461 Support multiple labels definition in the mapping model
@
text
@a13 1
import org.eclipse.emf.ecore.EAttribute;
a24 1
import org.eclipse.gmf.mappings.NodeLabelMapping;
a39 2
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getEditFeature <em>Edit Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getLabelMappings <em>Label Mappings</em>}</li>
a78 20
	 * The cached value of the '{@@link #getEditFeature() <em>Edit Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EAttribute editFeature = null;

	/**
	 * The cached value of the '{@@link #getLabelMappings() <em>Label Mappings</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelMappings()
	 * @@generated
	 * @@ordered
	 */
	protected EList labelMappings = null;

	/**
a234 50
	public EAttribute getEditFeature() {
		if (editFeature != null && editFeature.eIsProxy()) {
			InternalEObject oldEditFeature = (InternalEObject)editFeature;
			editFeature = (EAttribute)eResolveProxy(oldEditFeature);
			if (editFeature != oldEditFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE, oldEditFeature, editFeature));
			}
		}
		return editFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute basicGetEditFeature() {
		return editFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditFeature(EAttribute newEditFeature) {
		EAttribute oldEditFeature = editFeature;
		editFeature = newEditFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE, oldEditFeature, editFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList getLabelMappings() {
		if (labelMappings == null) {
			labelMappings = new EObjectContainmentWithInverseEList(NodeLabelMapping.class, this, GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS, GMFMapPackage.NODE_LABEL_MAPPING__NODE_MAPPING);
		}
		return labelMappings;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a274 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS:
				return ((InternalEList)getLabelMappings()).basicAdd(otherEnd, msgs);
a289 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS:
				return ((InternalEList)getLabelMappings()).basicRemove(otherEnd, msgs);
a313 5
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE:
				if (resolve) return getEditFeature();
				return basicGetEditFeature();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS:
				return getLabelMappings();
a337 7
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE:
				setEditFeature((EAttribute)newValue);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS:
				getLabelMappings().clear();
				getLabelMappings().addAll((Collection)newValue);
				return;
a365 6
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE:
				setEditFeature((EAttribute)null);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS:
				getLabelMappings().clear();
				return;
a388 4
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__EDIT_FEATURE:
				return editFeature != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__LABEL_MAPPINGS:
				return labelMappings != null && !labelMappings.isEmpty();
@


1.7
log
@#114197 - tooling definition in place
@
text
@d26 1
d43 1
d93 10
d297 12
d349 2
d366 2
d395 2
d424 4
d459 3
d487 2
@


1.6
log
@Method renamed. Clearly (hah :) express intention of the method - it's merely describes surroundings/location of the element in the domain, rather then represent a metaClass
@
text
@a15 1
import org.eclipse.emf.ecore.EReference;
a17 1
import org.eclipse.emf.ecore.impl.EObjectImpl;
d21 1
a23 2
import org.eclipse.gmf.mappings.Constraint;
import org.eclipse.gmf.mappings.ElementInitializer;
d25 5
a29 1
import org.eclipse.gmf.mappings.Tool;
d38 3
a40 4
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getDomainSpecialization <em>Domain Specialization</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getDomainInitializer <em>Domain Initializer</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getContainmentFeature <em>Containment Feature</em>}</li>
a43 1
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getTool <em>Tool</em>}</li>
d49 1
a49 1
public abstract class AbstractNodeMappingImpl extends EObjectImpl implements AbstractNodeMapping {
d51 1
a51 1
	 * The cached value of the '{@@link #getDomainMetaElement() <em>Domain Meta Element</em>}' reference.
d54 1
a54 1
	 * @@see #getDomainMetaElement()
d58 1
a58 1
	protected EClass domainMetaElement = null;
d61 1
a61 1
	 * The cached value of the '{@@link #getDomainSpecialization() <em>Domain Specialization</em>}' containment reference.
d64 1
a64 1
	 * @@see #getDomainSpecialization()
d68 1
a68 1
	protected Constraint domainSpecialization = null;
d71 1
a71 1
	 * The cached value of the '{@@link #getDomainInitializer() <em>Domain Initializer</em>}' containment reference.
d74 1
a74 1
	 * @@see #getDomainInitializer()
d78 1
a78 11
	protected ElementInitializer domainInitializer = null;

	/**
	 * The cached value of the '{@@link #getContainmentFeature() <em>Containment Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContainmentFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EReference containmentFeature = null;
a110 10
	 * The cached value of the '{@@link #getTool() <em>Tool</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTool()
	 * @@generated
	 * @@ordered
	 */
	protected Tool tool = null;

	/**
d133 5
a137 5
	public EClass getDomainMetaElement() {
		if (domainMetaElement != null && domainMetaElement.eIsProxy()) {
			InternalEObject oldDomainMetaElement = (InternalEObject)domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy(oldDomainMetaElement);
			if (domainMetaElement != oldDomainMetaElement) {
d139 1
a139 1
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
d142 1
a142 1
		return domainMetaElement;
d150 2
a151 2
	public EClass basicGetDomainMetaElement() {
		return domainMetaElement;
d159 3
a161 3
	public void setDomainMetaElement(EClass newDomainMetaElement) {
		EClass oldDomainMetaElement = domainMetaElement;
		domainMetaElement = newDomainMetaElement;
d163 1
a163 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
d171 8
a178 15
	public Constraint getDomainSpecialization() {
		return domainSpecialization;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainSpecialization(Constraint newDomainSpecialization, NotificationChain msgs) {
		Constraint oldDomainSpecialization = domainSpecialization;
		domainSpecialization = newDomainSpecialization;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION, oldDomainSpecialization, newDomainSpecialization);
			if (msgs == null) msgs = notification; else msgs.add(notification);
d180 1
a180 1
		return msgs;
d188 2
a189 12
	public void setDomainSpecialization(Constraint newDomainSpecialization) {
		if (newDomainSpecialization != domainSpecialization) {
			NotificationChain msgs = null;
			if (domainSpecialization != null)
				msgs = ((InternalEObject)domainSpecialization).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
			if (newDomainSpecialization != null)
				msgs = ((InternalEObject)newDomainSpecialization).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
			msgs = basicSetDomainSpecialization(newDomainSpecialization, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION, newDomainSpecialization, newDomainSpecialization));
d197 5
a201 36
	public ElementInitializer getDomainInitializer() {
		return domainInitializer;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainInitializer(ElementInitializer newDomainInitializer, NotificationChain msgs) {
		ElementInitializer oldDomainInitializer = domainInitializer;
		domainInitializer = newDomainInitializer;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER, oldDomainInitializer, newDomainInitializer);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainInitializer(ElementInitializer newDomainInitializer) {
		if (newDomainInitializer != domainInitializer) {
			NotificationChain msgs = null;
			if (domainInitializer != null)
				msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER, null, msgs);
			if (newDomainInitializer != null)
				msgs = ((InternalEObject)newDomainInitializer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER, null, msgs);
			msgs = basicSetDomainInitializer(newDomainInitializer, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER, newDomainInitializer, newDomainInitializer));
d209 5
a213 5
	public EReference getContainmentFeature() {
		if (containmentFeature != null && containmentFeature.eIsProxy()) {
			InternalEObject oldContainmentFeature = (InternalEObject)containmentFeature;
			containmentFeature = (EReference)eResolveProxy(oldContainmentFeature);
			if (containmentFeature != oldContainmentFeature) {
d215 1
a215 1
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
d218 1
a218 1
		return containmentFeature;
d226 2
a227 2
	public EReference basicGetContainmentFeature() {
		return containmentFeature;
d235 3
a237 3
	public void setContainmentFeature(EReference newContainmentFeature) {
		EReference oldContainmentFeature = containmentFeature;
		containmentFeature = newContainmentFeature;
d239 1
a239 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
a305 43
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Tool getTool() {
		return tool;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetTool(Tool newTool, NotificationChain msgs) {
		Tool oldTool = tool;
		tool = newTool;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL, oldTool, newTool);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTool(Tool newTool) {
		if (newTool != tool) {
			NotificationChain msgs = null;
			if (tool != null)
				msgs = ((InternalEObject)tool).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL, null, msgs);
			if (newTool != null)
				msgs = ((InternalEObject)newTool).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL, null, msgs);
			msgs = basicSetTool(newTool, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL, newTool, newTool));
	}

	/**
	 * <!-- begin-user-doc -->
a339 4
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				return basicSetDomainSpecialization(null, msgs);
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER:
				return basicSetDomainInitializer(null, msgs);
a343 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				return basicSetTool(null, msgs);
d355 9
a363 10
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT:
				if (resolve) return getDomainMetaElement();
				return basicGetDomainMetaElement();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				return getDomainSpecialization();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER:
				return getDomainInitializer();
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE:
				if (resolve) return getContainmentFeature();
				return basicGetContainmentFeature();
a370 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				return getTool();
d382 2
a383 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)newValue);
d385 2
a386 5
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)newValue);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)newValue);
d388 2
a389 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)newValue);
a401 3
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				setTool((Tool)newValue);
				return;
d413 2
a414 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)null);
d416 2
a417 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)null);
d419 2
a420 5
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)null);
				return;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)null);
a430 3
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				setTool((Tool)null);
				return;
d442 6
a447 8
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_META_ELEMENT:
				return domainMetaElement != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				return domainSpecialization != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER:
				return domainInitializer != null;
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__CONTAINMENT_FEATURE:
				return containmentFeature != null;
a453 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
				return tool != null;
d458 54
@


1.5
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@d423 1
a423 1
	public EClass getDomainMetaClass() {
@


1.4
log
@#119709
Adding Compartment mapping
@
text
@a16 1
import org.eclipse.emf.ecore.EStructuralFeature;
d156 2
a157 2
			EClass oldDomainMetaElement = domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy((InternalEObject)domainMetaElement);
d280 2
a281 2
			EReference oldContainmentFeature = containmentFeature;
			containmentFeature = (EReference)eResolveProxy((InternalEObject)containmentFeature);
d318 2
a319 2
			EAttribute oldEditFeature = editFeature;
			editFeature = (EAttribute)eResolveProxy((InternalEObject)editFeature);
d435 6
a440 10
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
					return ((InternalEList)getChildMappings()).basicAdd(otherEnd, msgs);
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
					return ((InternalEList)getCompartmentMappings()).basicAdd(otherEnd, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d442 1
a442 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d450 12
a461 16
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_SPECIALIZATION:
					return basicSetDomainSpecialization(null, msgs);
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__DOMAIN_INITIALIZER:
					return basicSetDomainInitializer(null, msgs);
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS:
					return ((InternalEList)getChildMappings()).basicRemove(otherEnd, msgs);
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__COMPARTMENT_MAPPINGS:
					return ((InternalEList)getCompartmentMappings()).basicRemove(otherEnd, msgs);
				case GMFMapPackage.ABSTRACT_NODE_MAPPING__TOOL:
					return basicSetTool(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d463 1
a463 1
		return eBasicSetContainer(null, featureID, msgs);
d471 2
a472 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d493 1
a493 1
		return eDynamicGet(eFeature, resolve);
d501 2
a502 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d530 1
a530 1
		eDynamicSet(eFeature, newValue);
d538 2
a539 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d565 1
a565 1
		eDynamicUnset(eFeature);
d573 2
a574 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d592 1
a592 1
		return eDynamicIsSet(eFeature);
@


1.3
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d25 1
d44 1
d113 10
d367 12
d425 1
a425 1
		if (getDomainMetaElement() == null) {
d441 2
d466 2
d499 2
d533 4
d569 3
d598 2
@


1.2
log
@Adding method to get DomainElementMetaClass for the transformation code.
@
text
@a12 1

a13 1

a18 1

a20 1

a22 3

import org.eclipse.gmf.diadef.Node;

d28 1
a36 1
 *   <li>{@@link org.eclipse.gmf.mappings.impl.AbstractNodeMappingImpl#getDiagramNode <em>Diagram Node</em>}</li>
d43 1
a50 10
	 * The cached value of the '{@@link #getDiagramNode() <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramNode()
	 * @@generated
	 * @@ordered
	 */
	protected Node diagramNode = null;

	/**
d111 1
d114 1
d116 1
d118 1
a118 3
	protected AbstractNodeMappingImpl() {
		super();
	}
d125 2
a126 2
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getAbstractNodeMapping();
d134 2
a135 31
	public Node getDiagramNode() {
		if (diagramNode != null && diagramNode.eIsProxy()) {
			Node oldDiagramNode = diagramNode;
			diagramNode = (Node)eResolveProxy((InternalEObject)diagramNode);
			if (diagramNode != oldDiagramNode) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
			}
		}
		return diagramNode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Node basicGetDiagramNode() {
		return diagramNode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramNode(Node newDiagramNode) {
		Node oldDiagramNode = diagramNode;
		diagramNode = newDiagramNode;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
d352 43
d440 2
a455 3
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE:
				if (resolve) return getDiagramNode();
				return basicGetDiagramNode();
d471 2
a483 3
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE:
				setDiagramNode((Node)newValue);
				return;
d503 3
a516 3
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE:
				setDiagramNode((Node)null);
				return;
d535 3
a548 2
			case GMFMapPackage.ABSTRACT_NODE_MAPPING__DIAGRAM_NODE:
				return diagramNode != null;
d561 2
@


1.1
log
@#118053 update models
@
text
@d396 14
@

