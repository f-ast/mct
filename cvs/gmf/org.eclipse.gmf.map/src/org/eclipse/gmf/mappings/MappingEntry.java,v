head	1.13;
access;
symbols
	v20080813-1520:1.13
	v20080722-1827:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.2
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080521:1.13
	v20080425-1959:1.13
	v20080417-1610:1.13
	v20080322-0000:1.13
	v20080222-1200:1.12
	v20070809-0000:1.12
	R2_0_maintenance:1.12.0.2
	R2_0:1.12
	R4_20:1.12
	v20070621-0000:1.12
	RC3_20:1.12
	v20070608-1300:1.12
	v20070605-1400:1.12
	v20070601-1400:1.12
	v20070525-1500:1.12
	v20070520-1200:1.12
	v20070518-1300:1.12
	v20070517-1200:1.12
	v20070504-1000:1.12
	v20070427-0600:1.12
	v20070330-1300:1.12
	v20070322-1100:1.12
	v20060316-0600:1.12
	v20070208-1800:1.11
	M4_20:1.11
	v20061214-0000:1.11
	M3_20:1.11
	v20061117-0800:1.11
	v20061013-1330:1.11
	M1_20:1.9
	v20060904-1500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.9
	v20060530-1930:1.9
	v20060519-1300:1.9
	v20060519-0800:1.9
	v20060512-1000:1.9
	I20060512-1000:1.9
	I20060505-1400:1.9
	I20060428-1300:1.9
	I20060424-0500:1.9
	I20060424-0300:1.9
	M6_10:1.9
	I20060407-1200:1.9
	I20060331-1000:1.9
	I20060324-0300:1.9
	I20060317-1300:1.9
	I20060317-1200:1.9
	I20060316-1300:1.9
	I20060309-1300:1.8
	M5_10:1.8
	S20060303-1600:1.8
	I20060227-1730:1.7
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.2
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	160e47cc39234567;

1.12
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	128545f7f1cb4567;

1.11
date	2006.10.03.18.11.04;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.09.28.18.20.40;	author radvorak;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.02.12.52.58;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.23.15.45.31;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.22.22.01.21;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.10.15.21.15;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.25.13.52.44;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.23.13.30.39;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.13
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Entry</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.MappingEntry#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.MappingEntry#getDomainSpecialization <em>Domain Specialization</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.MappingEntry#getDomainInitializer <em>Domain Initializer</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.MappingEntry#getLabelMappings <em>Label Mappings</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.MappingEntry#getRelatedDiagrams <em>Related Diagrams</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry()
 * @@model abstract="true"
 * @@generated
 */
public interface MappingEntry extends EObject {
	/**
	 * Returns the value of the '<em><b>Domain Meta Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Domain Meta Element</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Domain Meta Element</em>' reference.
	 * @@see #setDomainMetaElement(EClass)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry_DomainMetaElement()
	 * @@model
	 * @@generated
	 */
	EClass getDomainMetaElement();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.MappingEntry#getDomainMetaElement <em>Domain Meta Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Meta Element</em>' reference.
	 * @@see #getDomainMetaElement()
	 * @@generated
	 */
	void setDomainMetaElement(EClass value);

	/**
	 * Returns the value of the '<em><b>Domain Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Specializes further the domain meta element EClass associated with this mapping and should be evaluated in this EClass context
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Domain Specialization</em>' containment reference.
	 * @@see #setDomainSpecialization(Constraint)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry_DomainSpecialization()
	 * @@model containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='self.getDomainContext()'"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not domainSpecialization.oclIsUndefined() implies not domainMetaElement.oclIsUndefined()' description='Using \'Domain Specialization\' requires \'Domain Meta Element\' to be set'"
	 * @@generated
	 */
	Constraint getDomainSpecialization();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.MappingEntry#getDomainSpecialization <em>Domain Specialization</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Specialization</em>' containment reference.
	 * @@see #getDomainSpecialization()
	 * @@generated
	 */
	void setDomainSpecialization(Constraint value);

	/**
	 * Returns the value of the '<em><b>Domain Initializer</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Initializer for the domain model element associated with mapping
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Domain Initializer</em>' containment reference.
	 * @@see #setDomainInitializer(ElementInitializer)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry_DomainInitializer()
	 * @@model containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not domainInitializer.oclIsUndefined() implies not domainMetaElement.oclIsUndefined()' description='\'Domain Element\' must be set in mapping with \'Element Initializers\''"
	 * @@generated
	 */
	ElementInitializer getDomainInitializer();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.MappingEntry#getDomainInitializer <em>Domain Initializer</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Initializer</em>' containment reference.
	 * @@see #getDomainInitializer()
	 * @@generated
	 */
	void setDomainInitializer(ElementInitializer value);

	/**
	 * Returns the value of the '<em><b>Label Mappings</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.LabelMapping}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.LabelMapping#getMapEntry <em>Map Entry</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Label Mappings</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Label Mappings</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry_LabelMappings()
	 * @@see org.eclipse.gmf.mappings.LabelMapping#getMapEntry
	 * @@model opposite="mapEntry" containment="true"
	 * @@generated
	 */
	EList<LabelMapping> getLabelMappings();

	/**
	 * Returns the value of the '<em><b>Related Diagrams</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.CanvasMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Diagrams that may be associated with this diagram element. It's up to client application to define what this association means (e.g. open diagram)
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Related Diagrams</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry_RelatedDiagrams()
	 * @@model
	 * @@generated
	 */
	EList<CanvasMapping> getRelatedDiagrams();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * This method simplifies OCL expressions (makes it easy to write for both Node and Link).
	 * <!-- end-model-doc -->
	 * @@model kind="operation"
	 * @@generated
	 */
	EClass getDomainContext();

} // MappingEntry
@


1.12
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d126 1
a126 1
	 * @@model type="org.eclipse.gmf.mappings.LabelMapping" opposite="mapEntry" containment="true"
d141 1
a141 1
	 * @@model type="org.eclipse.gmf.mappings.CanvasMapping"
@


1.11
log
@[119465] support for diagram partitioning
@
text
@d129 1
a129 1
	EList getLabelMappings();
d144 1
a144 1
	EList getRelatedDiagrams();
@


1.10
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d25 1
d132 15
@


1.9
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@a87 1
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.ElementInitializer#getMappingEntry <em>Mapping Entry</em>}'.
d96 1
a96 3
	 * @@see org.eclipse.gmf.mappings.ElementInitializer#getMappingEntry
	 * @@model opposite="mappingEntry" containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints/meta def='context' ocl='self.getDomainContext()'"
@


1.8
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d71 1
@


1.7
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d135 3
@


1.6
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@a9 1

a11 1
import org.eclipse.emf.ecore.EReference;
a23 1
 *   <li>{@@link org.eclipse.gmf.mappings.MappingEntry#getContainmentFeature <em>Containment Feature</em>}</li>
a114 26
	 * Returns the value of the '<em><b>Containment Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Containment Feature</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Containment Feature</em>' reference.
	 * @@see #setContainmentFeature(EReference)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getMappingEntry_ContainmentFeature()
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not containmentFeature.oclIsUndefined() implies containmentFeature.containment' description='Containment EReference expected'"
	 * @@generated
	 */
	EReference getContainmentFeature();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.MappingEntry#getContainmentFeature <em>Containment Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Containment Feature</em>' reference.
	 * @@see #getContainmentFeature()
	 * @@generated
	 */
	void setContainmentFeature(EReference value);

	/**
@


1.5
log
@[rdvorak] #127256 Adjust gmfmap metamodel annotation constraints to the latest changes
@
text
@d9 2
d27 1
d144 18
@


1.4
log
@#114197 - tooling definition in place
@
text
@d87 1
d96 2
a97 2
	 * @@model containment="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='let i : FeatureSeqInitializer = domainInitializer.oclAsType( FeatureSeqInitializer) in i.oclIsUndefined() or i.initializers.feature.eContainingClass->forAll(c|c.isSuperTypeOf(domainMetaElement))'"
d99 1
d125 1
a125 1
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='containmentFeature.oclIsUndefined() or (containmentFeature.containment and containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement))'"
@


1.3
log
@#118053 update models
@
text
@d9 1
d11 1
d18 9
d32 114
a145 1
public interface MappingEntry extends EObject{
@


1.2
log
@[rdvorak] #115862 describe semantics of metamodel with annotations
@
text
@a18 1
 *        annotation="http://www.eclipse.org/emf/2004/EmfaticAnnotationMap constraints='http://www.eclipse.org/gmf/2005/constraints' constraintsMeta='http://www.eclipse.org/gmf/2005/constraints/meta'"
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: MappingEntry.java,v 1.3 2005/08/02 13:11:55 artem Exp $
d19 1
a19 1
 *        annotation="http://www.eclipse.org/emf/2004/EmfaticAnnotationMap constraints='http://www.eclipse.org/gmf/2005/constraints'"
@

