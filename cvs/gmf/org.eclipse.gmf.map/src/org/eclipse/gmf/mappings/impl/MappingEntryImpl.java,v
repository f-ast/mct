head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080722-1827:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.4
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080521:1.9
	v20080425-1959:1.9
	v20080417-1610:1.9
	v20080322-0000:1.9
	v20080222-1200:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070517-1200:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070208-1800:1.7
	M4_20:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061117-0800:1.7
	v20061013-1330:1.7
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2007.04.25.08.08.29;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	7004462f0c7a4567;

1.8
date	2007.03.14.13.00.04;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	128545f7f1cb4567;

1.7
date	2006.10.03.18.11.04;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.09.28.18.20.40;	author radvorak;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.23.15.45.31;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.22.22.01.20;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.10.15.21.15;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@regenerated
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.mappings.CanvasMapping;
import org.eclipse.gmf.mappings.Constraint;
import org.eclipse.gmf.mappings.ElementInitializer;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.LabelMapping;
import org.eclipse.gmf.mappings.MappingEntry;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entry</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.MappingEntryImpl#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.MappingEntryImpl#getDomainSpecialization <em>Domain Specialization</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.MappingEntryImpl#getDomainInitializer <em>Domain Initializer</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.MappingEntryImpl#getLabelMappings <em>Label Mappings</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.MappingEntryImpl#getRelatedDiagrams <em>Related Diagrams</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public abstract class MappingEntryImpl extends EObjectImpl implements MappingEntry {
	/**
	 * The cached value of the '{@@link #getDomainMetaElement() <em>Domain Meta Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainMetaElement()
	 * @@generated
	 * @@ordered
	 */
	protected EClass domainMetaElement;

	/**
	 * The cached value of the '{@@link #getDomainSpecialization() <em>Domain Specialization</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainSpecialization()
	 * @@generated
	 * @@ordered
	 */
	protected Constraint domainSpecialization;

	/**
	 * The cached value of the '{@@link #getDomainInitializer() <em>Domain Initializer</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainInitializer()
	 * @@generated
	 * @@ordered
	 */
	protected ElementInitializer domainInitializer;

	/**
	 * The cached value of the '{@@link #getLabelMappings() <em>Label Mappings</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLabelMappings()
	 * @@generated
	 * @@ordered
	 */
	protected EList<LabelMapping> labelMappings;

	/**
	 * The cached value of the '{@@link #getRelatedDiagrams() <em>Related Diagrams</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getRelatedDiagrams()
	 * @@generated
	 * @@ordered
	 */
	protected EList<CanvasMapping> relatedDiagrams;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected MappingEntryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getMappingEntry();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDomainMetaElement() {
		if (domainMetaElement != null && domainMetaElement.eIsProxy()) {
			InternalEObject oldDomainMetaElement = (InternalEObject)domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy(oldDomainMetaElement);
			if (domainMetaElement != oldDomainMetaElement) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.MAPPING_ENTRY__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
			}
		}
		return domainMetaElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass basicGetDomainMetaElement() {
		return domainMetaElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainMetaElement(EClass newDomainMetaElement) {
		EClass oldDomainMetaElement = domainMetaElement;
		domainMetaElement = newDomainMetaElement;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.MAPPING_ENTRY__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Constraint getDomainSpecialization() {
		return domainSpecialization;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainSpecialization(Constraint newDomainSpecialization, NotificationChain msgs) {
		Constraint oldDomainSpecialization = domainSpecialization;
		domainSpecialization = newDomainSpecialization;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION, oldDomainSpecialization, newDomainSpecialization);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainSpecialization(Constraint newDomainSpecialization) {
		if (newDomainSpecialization != domainSpecialization) {
			NotificationChain msgs = null;
			if (domainSpecialization != null)
				msgs = ((InternalEObject)domainSpecialization).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION, null, msgs);
			if (newDomainSpecialization != null)
				msgs = ((InternalEObject)newDomainSpecialization).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION, null, msgs);
			msgs = basicSetDomainSpecialization(newDomainSpecialization, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION, newDomainSpecialization, newDomainSpecialization));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ElementInitializer getDomainInitializer() {
		return domainInitializer;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainInitializer(ElementInitializer newDomainInitializer, NotificationChain msgs) {
		ElementInitializer oldDomainInitializer = domainInitializer;
		domainInitializer = newDomainInitializer;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, oldDomainInitializer, newDomainInitializer);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainInitializer(ElementInitializer newDomainInitializer) {
		if (newDomainInitializer != domainInitializer) {
			NotificationChain msgs = null;
			if (domainInitializer != null)
				msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, null, msgs);
			if (newDomainInitializer != null)
				msgs = ((InternalEObject)newDomainInitializer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, null, msgs);
			msgs = basicSetDomainInitializer(newDomainInitializer, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, newDomainInitializer, newDomainInitializer));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<LabelMapping> getLabelMappings() {
		if (labelMappings == null) {
			labelMappings = new EObjectContainmentWithInverseEList<LabelMapping>(LabelMapping.class, this, GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY);
		}
		return labelMappings;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<CanvasMapping> getRelatedDiagrams() {
		if (relatedDiagrams == null) {
			relatedDiagrams = new EObjectResolvingEList<CanvasMapping>(CanvasMapping.class, this, GMFMapPackage.MAPPING_ENTRY__RELATED_DIAGRAMS);
		}
		return relatedDiagrams;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated NOT
	 */
	public abstract EClass getDomainContext();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getLabelMappings()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION:
				return basicSetDomainSpecialization(null, msgs);
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER:
				return basicSetDomainInitializer(null, msgs);
			case GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS:
				return ((InternalEList<?>)getLabelMappings()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_META_ELEMENT:
				if (resolve) return getDomainMetaElement();
				return basicGetDomainMetaElement();
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION:
				return getDomainSpecialization();
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER:
				return getDomainInitializer();
			case GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS:
				return getLabelMappings();
			case GMFMapPackage.MAPPING_ENTRY__RELATED_DIAGRAMS:
				return getRelatedDiagrams();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)newValue);
				return;
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)newValue);
				return;
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)newValue);
				return;
			case GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS:
				getLabelMappings().clear();
				getLabelMappings().addAll((Collection<? extends LabelMapping>)newValue);
				return;
			case GMFMapPackage.MAPPING_ENTRY__RELATED_DIAGRAMS:
				getRelatedDiagrams().clear();
				getRelatedDiagrams().addAll((Collection<? extends CanvasMapping>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)null);
				return;
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)null);
				return;
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)null);
				return;
			case GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS:
				getLabelMappings().clear();
				return;
			case GMFMapPackage.MAPPING_ENTRY__RELATED_DIAGRAMS:
				getRelatedDiagrams().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_META_ELEMENT:
				return domainMetaElement != null;
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_SPECIALIZATION:
				return domainSpecialization != null;
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER:
				return domainInitializer != null;
			case GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS:
				return labelMappings != null && !labelMappings.isEmpty();
			case GMFMapPackage.MAPPING_ENTRY__RELATED_DIAGRAMS:
				return relatedDiagrams != null && !relatedDiagrams.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //MappingEntryImpl
@


1.8
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d54 1
a54 1
	protected EClass domainMetaElement = null;
d64 1
a64 1
	protected Constraint domainSpecialization = null;
d74 1
a74 1
	protected ElementInitializer domainInitializer = null;
d84 1
a84 1
	protected EList<LabelMapping> labelMappings = null;
d94 1
a94 1
	protected EList<CanvasMapping> relatedDiagrams = null;
@


1.7
log
@[119465] support for diagram partitioning
@
text
@d84 1
a84 1
	protected EList labelMappings = null;
d94 1
a94 1
	protected EList relatedDiagrams = null;
d110 1
d244 1
a244 1
	public EList getLabelMappings() {
d246 1
a246 1
			labelMappings = new EObjectContainmentWithInverseEList(LabelMapping.class, this, GMFMapPackage.MAPPING_ENTRY__LABEL_MAPPINGS, GMFMapPackage.LABEL_MAPPING__MAP_ENTRY);
d256 1
a256 1
	public EList getRelatedDiagrams() {
d258 1
a258 1
			relatedDiagrams = new EObjectResolvingEList(CanvasMapping.class, this, GMFMapPackage.MAPPING_ENTRY__RELATED_DIAGRAMS);
d275 2
d280 1
a280 1
				return ((InternalEList)getLabelMappings()).basicAdd(otherEnd, msgs);
d290 1
d298 1
a298 1
				return ((InternalEList)getLabelMappings()).basicRemove(otherEnd, msgs);
d308 1
d331 2
d346 1
a346 1
				getLabelMappings().addAll((Collection)newValue);
d350 1
a350 1
				getRelatedDiagrams().addAll((Collection)newValue);
d361 1
d388 1
@


1.6
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d19 1
d21 1
d39 1
d87 10
d253 12
d315 2
d341 4
d368 3
d390 2
@


1.5
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d215 1
a215 1
				msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, GMFMapPackage.ELEMENT_INITIALIZER__MAPPING_ENTRY, ElementInitializer.class, msgs);
d217 1
a217 1
				msgs = ((InternalEObject)newDomainInitializer).eInverseAdd(this, GMFMapPackage.ELEMENT_INITIALIZER__MAPPING_ENTRY, ElementInitializer.class, msgs);
a250 4
			case GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER:
				if (domainInitializer != null)
					msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, null, msgs);
				return basicSetDomainInitializer((ElementInitializer)otherEnd, msgs);
@


1.4
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@a13 1

a14 1
import org.eclipse.emf.ecore.EReference;
a19 1

a35 1
 *   <li>{@@link org.eclipse.gmf.mappings.impl.MappingEntryImpl#getContainmentFeature <em>Containment Feature</em>}</li>
a73 10
	 * The cached value of the '{@@link #getContainmentFeature() <em>Containment Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getContainmentFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EReference containmentFeature = null;

	/**
a229 38
	public EReference getContainmentFeature() {
		if (containmentFeature != null && containmentFeature.eIsProxy()) {
			InternalEObject oldContainmentFeature = (InternalEObject)containmentFeature;
			containmentFeature = (EReference)eResolveProxy(oldContainmentFeature);
			if (containmentFeature != oldContainmentFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.MAPPING_ENTRY__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
			}
		}
		return containmentFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference basicGetContainmentFeature() {
		return containmentFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setContainmentFeature(EReference newContainmentFeature) {
		EReference oldContainmentFeature = containmentFeature;
		containmentFeature = newContainmentFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.MAPPING_ENTRY__CONTAINMENT_FEATURE, oldContainmentFeature, containmentFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a291 3
			case GMFMapPackage.MAPPING_ENTRY__CONTAINMENT_FEATURE:
				if (resolve) return getContainmentFeature();
				return basicGetContainmentFeature();
a313 3
			case GMFMapPackage.MAPPING_ENTRY__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)newValue);
				return;
a337 3
			case GMFMapPackage.MAPPING_ENTRY__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)null);
				return;
a357 2
			case GMFMapPackage.MAPPING_ENTRY__CONTAINMENT_FEATURE:
				return containmentFeature != null;
@


1.3
log
@[rdvorak] #127256 Adjust gmfmap metamodel annotation constraints to the latest changes
@
text
@d9 2
d13 2
d20 3
d26 1
d40 1
d88 10
d280 12
d307 2
d324 2
d347 2
d372 4
d399 3
d421 2
@


1.2
log
@#114197 - tooling definition in place
@
text
@d210 1
a210 1
				msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, null, msgs);
d212 1
a212 1
				msgs = ((InternalEObject)newDomainInitializer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.MAPPING_ENTRY__DOMAIN_INITIALIZER, null, msgs);
d270 15
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: MappingEntryImpl.java,v 1.2 2005/08/02 13:11:56 artem Exp $
d9 2
d12 3
d16 2
d26 7
d39 40
d96 270
@

