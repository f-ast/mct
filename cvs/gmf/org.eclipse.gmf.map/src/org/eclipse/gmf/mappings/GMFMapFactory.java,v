head	1.19;
access;
symbols
	v20080813-1520:1.19
	v20080722-1827:1.19
	v20080716-1642:1.19
	R2_1_maintenance:1.19.0.4
	Root_R2_1_maintenance:1.19
	R2_1_0:1.19
	v20080521:1.19
	v20080425-1959:1.19
	v20080417-1610:1.19
	v20080322-0000:1.19
	v20080222-1200:1.19
	v20070809-0000:1.19
	R2_0_maintenance:1.19.0.2
	R2_0:1.19
	R4_20:1.19
	v20070621-0000:1.19
	RC3_20:1.19
	v20070608-1300:1.19
	v20070605-1400:1.19
	v20070601-1400:1.19
	v20070525-1500:1.19
	v20070520-1200:1.19
	v20070518-1300:1.19
	v20070517-1200:1.19
	v20070504-1000:1.19
	v20070427-0600:1.19
	v20070330-1300:1.19
	v20070322-1100:1.19
	v20060316-0600:1.19
	v20070208-1800:1.19
	M4_20:1.19
	v20061214-0000:1.19
	M3_20:1.19
	v20061117-0800:1.19
	v20061013-1330:1.18
	M1_20:1.17
	v20060904-1500:1.17
	v20060713-1700:1.17
	R1_0_maintenance:1.17.0.2
	R1_0:1.17
	v20060627-1200:1.17
	v20060626-1420:1.17
	v20060616-1200:1.17
	v20060609-1400:1.17
	v20060531-1730:1.17
	v20060530-1930:1.17
	v20060519-1300:1.17
	v20060519-0800:1.17
	v20060512-1000:1.16
	I20060512-1000:1.16
	I20060505-1400:1.14
	I20060428-1300:1.14
	I20060424-0500:1.13
	I20060424-0300:1.13
	M6_10:1.13
	I20060407-1200:1.13
	I20060331-1000:1.13
	I20060324-0300:1.13
	I20060317-1300:1.13
	I20060317-1200:1.13
	I20060316-1300:1.13
	I20060309-1300:1.13
	M5_10:1.13
	S20060303-1600:1.13
	I20060227-1730:1.11
	I20060216-1945:1.9
	I20060210-1715:1.8
	I20060209-1815:1.8
	I20060203-0830:1.8
	I20060129-1145:1.8
	I20060127-0900:1.8
	I20060120-1530:1.8
	I20060113-1700:1.8
	M4_10:1.8
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.4
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.19
date	2006.10.19.15.21.56;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.09.28.18.20.40;	author radvorak;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.14.18.06.32;	author atikhomirov;	state Exp;
branches;
next	1.16;

1.16
date	2006.05.11.09.42.05;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.05.10.15.12.33;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.25.19.15.49;	author radvorak;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.03.18.32.33;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.03.11.36.26;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2006.02.23.15.45.30;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.22.22.01.21;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.13.18.37.47;	author dstadnik;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.07.19.23.17;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.29.18.33.02;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.20.14.07.16;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.18.10.58.31;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.19
log
@[161380] Inroduce label mapping subclasses
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @@see org.eclipse.gmf.mappings.GMFMapPackage
 * @@generated
 */
public interface GMFMapFactory extends EFactory {
	/**
	 * The singleton instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	GMFMapFactory eINSTANCE = org.eclipse.gmf.mappings.impl.GMFMapFactoryImpl.init();

	/**
	 * Returns a new object of class '<em>Node Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Node Mapping</em>'.
	 * @@generated
	 */
	NodeMapping createNodeMapping();

	/**
	 * Returns a new object of class '<em>Compartment Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Compartment Mapping</em>'.
	 * @@generated
	 */
	CompartmentMapping createCompartmentMapping();

	/**
	 * Returns a new object of class '<em>Link Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Link Mapping</em>'.
	 * @@generated
	 */
	LinkMapping createLinkMapping();

	/**
	 * Returns a new object of class '<em>Canvas Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Canvas Mapping</em>'.
	 * @@generated
	 */
	CanvasMapping createCanvasMapping();

	/**
	 * Returns a new object of class '<em>Label Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Label Mapping</em>'.
	 * @@generated
	 */
	LabelMapping createLabelMapping();

	/**
	 * Returns a new object of class '<em>Feature Label Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Feature Label Mapping</em>'.
	 * @@generated
	 */
	FeatureLabelMapping createFeatureLabelMapping();

	/**
	 * Returns a new object of class '<em>Design Label Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Design Label Mapping</em>'.
	 * @@generated
	 */
	DesignLabelMapping createDesignLabelMapping();

	/**
	 * Returns a new object of class '<em>Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Mapping</em>'.
	 * @@generated
	 */
	Mapping createMapping();

	/**
	 * Returns a new object of class '<em>Child Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Child Reference</em>'.
	 * @@generated
	 */
	ChildReference createChildReference();

	/**
	 * Returns a new object of class '<em>Top Node Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Top Node Reference</em>'.
	 * @@generated
	 */
	TopNodeReference createTopNodeReference();

	/**
	 * Returns a new object of class '<em>Constraint</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Constraint</em>'.
	 * @@generated
	 */
	Constraint createConstraint();

	/**
	 * Returns a new object of class '<em>Link Constraints</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Link Constraints</em>'.
	 * @@generated
	 */
	LinkConstraints createLinkConstraints();

	/**
	 * Returns a new object of class '<em>Value Expression</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Value Expression</em>'.
	 * @@generated
	 */
	ValueExpression createValueExpression();

	/**
	 * Returns a new object of class '<em>Feature Seq Initializer</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Feature Seq Initializer</em>'.
	 * @@generated
	 */
	FeatureSeqInitializer createFeatureSeqInitializer();

	/**
	 * Returns a new object of class '<em>Feature Value Spec</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Feature Value Spec</em>'.
	 * @@generated
	 */
	FeatureValueSpec createFeatureValueSpec();

	/**
	 * Returns a new object of class '<em>Reference New Element Spec</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Reference New Element Spec</em>'.
	 * @@generated
	 */
	ReferenceNewElementSpec createReferenceNewElementSpec();

	/**
	 * Returns a new object of class '<em>Audit Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Audit Container</em>'.
	 * @@generated
	 */
	AuditContainer createAuditContainer();

	/**
	 * Returns a new object of class '<em>Audit Rule</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Audit Rule</em>'.
	 * @@generated
	 */
	AuditRule createAuditRule();

	/**
	 * Returns a new object of class '<em>Domain Element Target</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Domain Element Target</em>'.
	 * @@generated
	 */
	DomainElementTarget createDomainElementTarget();

	/**
	 * Returns a new object of class '<em>Domain Attribute Target</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Domain Attribute Target</em>'.
	 * @@generated
	 */
	DomainAttributeTarget createDomainAttributeTarget();

	/**
	 * Returns a new object of class '<em>Diagram Element Target</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Diagram Element Target</em>'.
	 * @@generated
	 */
	DiagramElementTarget createDiagramElementTarget();

	/**
	 * Returns a new object of class '<em>Notation Element Target</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Notation Element Target</em>'.
	 * @@generated
	 */
	NotationElementTarget createNotationElementTarget();

	/**
	 * Returns a new object of class '<em>Metric Container</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Metric Container</em>'.
	 * @@generated
	 */
	MetricContainer createMetricContainer();

	/**
	 * Returns a new object of class '<em>Metric Rule</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Metric Rule</em>'.
	 * @@generated
	 */
	MetricRule createMetricRule();

	/**
	 * Returns a new object of class '<em>Audited Metric Target</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Audited Metric Target</em>'.
	 * @@generated
	 */
	AuditedMetricTarget createAuditedMetricTarget();

	/**
	 * Returns the package supported by this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the package supported by this factory.
	 * @@generated
	 */
	GMFMapPackage getGMFMapPackage();

} //GMFMapFactory
@


1.18
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d74 18
@


1.17
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@d146 9
@


1.16
log
@revert to gmfmap model compatibility
@
text
@d29 9
a100 18
	 * Returns a new object of class '<em>Node Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Node Mapping</em>'.
	 * @@generated
	 */
	NodeMapping createNodeMapping();

	/**
	 * Returns a new object of class '<em>Label Node Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Label Node Mapping</em>'.
	 * @@generated
	 */
	LabelNodeMapping createLabelNodeMapping();

	/**
@


1.15
log
@#133836 Creating a child node without a label causes error
@
text
@d92 1
a92 1
	 * Returns a new object of class '<em>Shape Node Mapping</em>'.
d95 1
a95 1
	 * @@return a new object of class '<em>Shape Node Mapping</em>'.
d98 1
a98 1
	ShapeNodeMapping createShapeNodeMapping();
@


1.14
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@a28 9
	 * Returns a new object of class '<em>Node Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Node Mapping</em>'.
	 * @@generated
	 */
	NodeMapping createNodeMapping();

	/**
d92 18
@


1.13
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@d173 9
@


1.12
log
@#130009 Enable audit rules on diagram (notation model) elements in gmfmap model
@
text
@d191 27
@


1.11
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d164 27
@


1.10
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@a37 9
	 * Returns a new object of class '<em>Child Node Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Child Node Mapping</em>'.
	 * @@generated
	 */
	ChildNodeMapping createChildNodeMapping();

	/**
d83 18
@


1.9
log
@#127461 Support multiple labels definition in the mapping model
@
text
@d74 1
a74 1
	 * Returns a new object of class '<em>Node Label Mapping</em>'.
d77 1
a77 1
	 * @@return a new object of class '<em>Node Label Mapping</em>'.
d80 1
a80 10
	NodeLabelMapping createNodeLabelMapping();

	/**
	 * Returns a new object of class '<em>Link Label Mapping</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Link Label Mapping</em>'.
	 * @@generated
	 */
	LinkLabelMapping createLinkLabelMapping();
@


1.8
log
@#114197 - tooling definition in place
@
text
@d74 18
@


1.7
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@a82 27
	 * Returns a new object of class '<em>Tool Group</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Tool Group</em>'.
	 * @@generated
	 */
	ToolGroup createToolGroup();

	/**
	 * Returns a new object of class '<em>Creation Tool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>Creation Tool</em>'.
	 * @@generated
	 */
	CreationTool createCreationTool();

	/**
	 * Returns a new object of class '<em>New Action Tool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return a new object of class '<em>New Action Tool</em>'.
	 * @@generated
	 */
	NewActionTool createNewActionTool();

	/**
@


1.6
log
@#119709
Adding Compartment mapping
@
text
@d19 1
a19 1
public interface GMFMapFactory extends EFactory{
d26 1
a26 1
	GMFMapFactory eINSTANCE = new org.eclipse.gmf.mappings.impl.GMFMapFactoryImpl();
d155 18
@


1.5
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d47 9
@


1.4
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d74 27
@


1.3
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@d83 9
@


1.2
log
@[rdvorak] #112505 constraint specification in gmfmap
@
text
@d92 18
@


1.1
log
@*** empty log message ***
@
text
@d19 1
a19 1
public interface GMFMapFactory extends EFactory {
d74 18
@

