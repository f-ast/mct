head	1.5;
access;
symbols
	v20080813-1520:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080521:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080322-0000:1.5
	v20080222-1200:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070517-1200:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070208-1800:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3
	M1_20:1.3
	v20060904-1500:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060626-1420:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	160e47cc39234567;

1.4
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	128545f7f1cb4567;

1.3
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.5
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Audit Container</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Container for audit rules representing a hierarchical organization of audits in the constraint category hierarchy of emft.validation framework
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.AuditContainer#getId <em>Id</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.AuditContainer#getName <em>Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.AuditContainer#getDescription <em>Description</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.AuditContainer#getParentContainer <em>Parent Container</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.AuditContainer#getAudits <em>Audits</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.AuditContainer#getChildContainers <em>Child Containers</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer()
 * @@model
 * @@generated
 */
public interface AuditContainer extends EObject {
	/**
	 * Returns the value of the '<em><b>Id</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Identifier which is unique within the scope of its parent container.
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Id</em>' attribute.
	 * @@see #setId(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer_Id()
	 * @@model required="true"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not parentContainer.oclIsUndefined() implies parentContainer.childContainers->one(i | i.id = self.id)' description='Audit container with the same ID already exists'"
	 * @@generated
	 */
	String getId();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.AuditContainer#getId <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Id</em>' attribute.
	 * @@see #getId()
	 * @@generated
	 */
	void setId(String value);

	/**
	 * Returns the value of the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * A human readable name for the category of audits organized in this container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Name</em>' attribute.
	 * @@see #setName(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer_Name()
	 * @@model
	 * @@generated
	 */
	String getName();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.AuditContainer#getName <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Name</em>' attribute.
	 * @@see #getName()
	 * @@generated
	 */
	void setName(String value);

	/**
	 * Returns the value of the '<em><b>Description</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The detailed description of this audit container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Description</em>' attribute.
	 * @@see #setDescription(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer_Description()
	 * @@model
	 * @@generated
	 */
	String getDescription();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.AuditContainer#getDescription <em>Description</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Description</em>' attribute.
	 * @@see #getDescription()
	 * @@generated
	 */
	void setDescription(String value);

	/**
	 * Returns the value of the '<em><b>Parent Container</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.AuditContainer#getChildContainers <em>Child Containers</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Parent Container</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Parent Container</em>' container reference.
	 * @@see #setParentContainer(AuditContainer)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer_ParentContainer()
	 * @@see org.eclipse.gmf.mappings.AuditContainer#getChildContainers
	 * @@model opposite="childContainers" transient="false"
	 * @@generated
	 */
	AuditContainer getParentContainer();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.AuditContainer#getParentContainer <em>Parent Container</em>}' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Parent Container</em>' container reference.
	 * @@see #getParentContainer()
	 * @@generated
	 */
	void setParentContainer(AuditContainer value);

	/**
	 * Returns the value of the '<em><b>Audits</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.AuditRule}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.AuditRule#getContainer <em>Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * The audit rules organized in this container
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Audits</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer_Audits()
	 * @@see org.eclipse.gmf.mappings.AuditRule#getContainer
	 * @@model opposite="container" containment="true"
	 * @@generated
	 */
	EList<AuditRule> getAudits();

	/**
	 * Returns the value of the '<em><b>Child Containers</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.AuditContainer}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.AuditContainer#getParentContainer <em>Parent Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Child Containers</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Child Containers</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getAuditContainer_ChildContainers()
	 * @@see org.eclipse.gmf.mappings.AuditContainer#getParentContainer
	 * @@model opposite="parentContainer" containment="true"
	 * @@generated
	 */
	EList<AuditContainer> getChildContainers();

} // AuditContainer
@


1.4
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d127 1
a127 1
	 * @@model opposite="childContainers"
d154 1
a154 1
	 * @@model type="org.eclipse.gmf.mappings.AuditRule" opposite="container" containment="true"
d172 1
a172 1
	 * @@model type="org.eclipse.gmf.mappings.AuditContainer" opposite="parentContainer" containment="true"
@


1.3
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@d157 1
a157 1
	EList getAudits();
d175 1
a175 1
	EList getChildContainers();
@


1.2
log
@#114197 - tooling definition in place
@
text
@d49 1
@


1.1
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@a9 1

@

