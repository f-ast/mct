head	1.11;
access;
symbols
	v20080813-1520:1.11
	v20080722-1827:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080521:1.11
	v20080425-1959:1.11
	v20080417-1610:1.10
	v20080322-0000:1.10
	v20080222-1200:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.8
	v20070518-1300:1.8
	v20070517-1200:1.8
	v20070504-1000:1.8
	v20070427-0600:1.8
	v20070330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070208-1800:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061117-0800:1.8
	v20061013-1330:1.7
	M1_20:1.7
	v20060904-1500:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060626-1420:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060530-1930:1.7
	v20060519-1300:1.7
	v20060519-0800:1.7
	v20060512-1000:1.6
	I20060512-1000:1.6
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.4
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2008.04.18.14.43.25;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	2e3f4808b38b4567;

1.10
date	2008.03.04.16.50.29;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	5e4d47cd7dd44567;

1.9
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	160e47cc39234567;

1.8
date	2006.10.19.15.21.56;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.14.18.06.31;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.10.15.12.33;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.07.14.09.29;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.22.22.01.21;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.14.10.11.22;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.13.18.37.47;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.11
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.gmfgraph.DiagramLabel;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Label Mapping</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * Label definition; text is taken from the graph model; no editing support; user may contribute custom parser
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getDiagramLabel <em>Diagram Label</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#isReadOnly <em>Read Only</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getMapEntry <em>Map Entry</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping()
 * @@model
 * @@generated
 */
public interface LabelMapping extends EObject {
	/**
	 * Returns the value of the '<em><b>Diagram Label</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Label</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Label</em>' reference.
	 * @@see #setDiagramLabel(DiagramLabel)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_DiagramLabel()
	 * @@model required="true"
	 * @@generated
	 */
	DiagramLabel getDiagramLabel();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getDiagramLabel <em>Diagram Label</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Label</em>' reference.
	 * @@see #getDiagramLabel()
	 * @@generated
	 */
	void setDiagramLabel(DiagramLabel value);

	/**
	 * Returns the value of the '<em><b>Read Only</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Read Only</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Read Only</em>' attribute.
	 * @@see #setReadOnly(boolean)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_ReadOnly()
	 * @@model
	 * @@generated
	 */
	boolean isReadOnly();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#isReadOnly <em>Read Only</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Read Only</em>' attribute.
	 * @@see #isReadOnly()
	 * @@generated
	 */
	void setReadOnly(boolean value);

	/**
	 * Returns the value of the '<em><b>Map Entry</b></em>' container reference.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.MappingEntry#getLabelMappings <em>Label Mappings</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Map Entry</em>' container reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Map Entry</em>' container reference.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_MapEntry()
	 * @@see org.eclipse.gmf.mappings.MappingEntry#getLabelMappings
	 * @@model opposite="labelMappings" resolveProxies="false" required="true" transient="false" changeable="false"
	 * @@generated
	 */
	MappingEntry getMapEntry();

} // LabelMapping
@


1.10
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d100 1
a100 1
	 * @@model opposite="labelMappings" resolveProxies="false" required="true" transient="false" suppressedSetVisibility="true"
@


1.9
log
@regenerated with EMF 2.4M5
@
text
@d100 1
a100 1
	 * @@model opposite="labelMappings" required="true" transient="false" changeable="false"
@


1.8
log
@[161380] Inroduce label mapping subclasses
@
text
@d100 1
a100 1
	 * @@model opposite="labelMappings" required="true" changeable="false"
@


1.7
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@a8 2
import org.eclipse.emf.common.util.EList;

d19 1
a19 1
 * Label on diagram; either features or text should be specified
a25 1
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getFeatures <em>Features</em>}</li>
a26 2
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getViewPattern <em>View Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getEditPattern <em>Edit Pattern</em>}</li>
a62 17
	 * Returns the value of the '<em><b>Features</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.ecore.EAttribute}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Features</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Features</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_Features()
	 * @@model type="org.eclipse.emf.ecore.EAttribute"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))' description='Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry'"
	 * @@generated
	 */
	EList getFeatures();

	/**
a88 50
	 * Returns the value of the '<em><b>View Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern for java.text.MessageFormat to produce label on diagram
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>View Pattern</em>' attribute.
	 * @@see #setViewPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_ViewPattern()
	 * @@model
	 * @@generated
	 */
	String getViewPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getViewPattern <em>View Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>View Pattern</em>' attribute.
	 * @@see #getViewPattern()
	 * @@generated
	 */
	void setViewPattern(String value);

	/**
	 * Returns the value of the '<em><b>Edit Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern for java.text.MessageFormat to produce text for inplace editor; if not specified then viewPattern should be used
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #setEditPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_EditPattern()
	 * @@model
	 * @@generated
	 */
	String getEditPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getEditPattern <em>Edit Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #getEditPattern()
	 * @@generated
	 */
	void setEditPattern(String value);

	/**
@


1.6
log
@#133836 Creating a child node without a label causes error
@
text
@d9 6
d27 5
d40 120
a159 1
public interface LabelMapping extends LabelFlavour {
@


1.5
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@a8 6
import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.gmfgraph.DiagramLabel;

a20 5
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getDiagramLabel <em>Diagram Label</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getFeatures <em>Features</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#isReadOnly <em>Read Only</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getViewPattern <em>View Pattern</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getEditPattern <em>Edit Pattern</em>}</li>
d29 1
a29 120
public interface LabelMapping extends EObject {
	/**
	 * Returns the value of the '<em><b>Diagram Label</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Label</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Label</em>' reference.
	 * @@see #setDiagramLabel(DiagramLabel)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_DiagramLabel()
	 * @@model required="true"
	 * @@generated
	 */
	DiagramLabel getDiagramLabel();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getDiagramLabel <em>Diagram Label</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Label</em>' reference.
	 * @@see #getDiagramLabel()
	 * @@generated
	 */
	void setDiagramLabel(DiagramLabel value);

	/**
	 * Returns the value of the '<em><b>Features</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.emf.ecore.EAttribute}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Features</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Features</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_Features()
	 * @@model type="org.eclipse.emf.ecore.EAttribute"
	 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))' description='Label attributes must be available in \'Domain Element\' EClass of the labeled mapping entry'"
	 * @@generated
	 */
	EList getFeatures();

	/**
	 * Returns the value of the '<em><b>Read Only</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Read Only</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Read Only</em>' attribute.
	 * @@see #setReadOnly(boolean)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_ReadOnly()
	 * @@model
	 * @@generated
	 */
	boolean isReadOnly();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#isReadOnly <em>Read Only</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Read Only</em>' attribute.
	 * @@see #isReadOnly()
	 * @@generated
	 */
	void setReadOnly(boolean value);

	/**
	 * Returns the value of the '<em><b>View Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern for java.text.MessageFormat to produce label on diagram
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>View Pattern</em>' attribute.
	 * @@see #setViewPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_ViewPattern()
	 * @@model
	 * @@generated
	 */
	String getViewPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getViewPattern <em>View Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>View Pattern</em>' attribute.
	 * @@see #getViewPattern()
	 * @@generated
	 */
	void setViewPattern(String value);

	/**
	 * Returns the value of the '<em><b>Edit Pattern</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Pattern for java.text.MessageFormat to produce text for inplace editor; if not specified then viewPattern should be used
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #setEditPattern(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_EditPattern()
	 * @@model
	 * @@generated
	 */
	String getEditPattern();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getEditPattern <em>Edit Pattern</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Edit Pattern</em>' attribute.
	 * @@see #getEditPattern()
	 * @@generated
	 */
	void setEditPattern(String value);

@


1.4
log
@#130715 Use default label text defined in gmfgraph model
@
text
@d79 1
@


1.3
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@a28 1
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getText <em>Text</em>}</li>
a29 1
 *   <li>{@@link org.eclipse.gmf.mappings.LabelMapping#getDefaultText <em>Default Text</em>}</li>
a83 26
	 * Returns the value of the '<em><b>Text</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Text</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Text</em>' attribute.
	 * @@see #setText(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_Text()
	 * @@model
	 * @@generated
	 */
	String getText();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getText <em>Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Text</em>' attribute.
	 * @@see #getText()
	 * @@generated
	 */
	void setText(String value);

	/**
a109 25
	 * Returns the value of the '<em><b>Default Text</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Default text that should be displayed when produced text is an empty string
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Default Text</em>' attribute.
	 * @@see #setDefaultText(String)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getLabelMapping_DefaultText()
	 * @@model
	 * @@generated
	 */
	String getDefaultText();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.LabelMapping#getDefaultText <em>Default Text</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Default Text</em>' attribute.
	 * @@see #getDefaultText()
	 * @@generated
	 */
	void setDefaultText(String value);

	/**
@


1.2
log
@#127461 add label diagram element in gmfgraph model
@
text
@d34 1
d39 1
a39 1
 * @@model abstract="true"
d212 17
@


1.1
log
@#127461 Support multiple labels definition in the mapping model
@
text
@d13 2
d27 1
d43 26
@

