head	1.3;
access;
symbols
	v20080813-1520:1.3
	v20080722-1827:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.2
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080521:1.3
	v20080425-1959:1.3
	v20080417-1610:1.3
	v20080322-0000:1.3
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070525-1500:1.2
	v20070520-1200:1.2
	v20070518-1300:1.2
	v20070517-1200:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	160e47cc39234567;

1.2
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	128545f7f1cb4567;

1.1
date	2006.09.28.18.20.40;	author radvorak;	state Exp;
branches;
next	;


desc
@@


1.3
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id: ReferenceNewElementSpec.java,v 1.2 2007/03/14 13:00:05 atikhomirov Exp $
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Reference New Element Spec</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.ReferenceNewElementSpec#getNewElementInitializers <em>New Element Initializers</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getReferenceNewElementSpec()
 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='feature.many = false implies not (newElementInitializers->size() > 1)' description='FeatureInitializer for single element EReference can\'t contain multiple element initializers'"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='let r: ecore::EReference = feature.oclAsType(ecore::EReference) in feature <> null implies r.containment' description='\'feature\' of \'ReferenceNewElementSpec\' must refer to containment ecore::EReference'"
 * @@generated
 */
public interface ReferenceNewElementSpec extends FeatureInitializer {
	/**
	 * Returns the value of the '<em><b>New Element Initializers</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.mappings.FeatureSeqInitializer}.
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.mappings.FeatureSeqInitializer#getCreatingInitializer <em>Creating Initializer</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>New Element Initializers</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>New Element Initializers</em>' containment reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getReferenceNewElementSpec_NewElementInitializers()
	 * @@see org.eclipse.gmf.mappings.FeatureSeqInitializer#getCreatingInitializer
	 * @@model opposite="creatingInitializer" containment="true" required="true"
	 * @@generated
	 */
	EList<FeatureSeqInitializer> getNewElementInitializers();

} // ReferenceNewElementSpec@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d5 1
a5 1
 * $Id: ReferenceNewElementSpec.java,v 1.1 2006/09/28 18:20:40 radvorak Exp $
d42 1
a42 1
	 * @@model type="org.eclipse.gmf.mappings.FeatureSeqInitializer" opposite="creatingInitializer" containment="true" required="true"
@


1.1
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d5 1
a5 1
 * $Id$
d45 1
a45 1
	EList getNewElementInitializers();
@

