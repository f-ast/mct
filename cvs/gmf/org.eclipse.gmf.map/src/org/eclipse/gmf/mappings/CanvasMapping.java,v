head	1.7;
access;
symbols
	v20080813-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080521:1.7
	v20080425-1959:1.7
	v20080417-1610:1.7
	v20080322-0000:1.7
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070525-1500:1.6
	v20070520-1200:1.6
	v20070518-1300:1.6
	v20070517-1200:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061013-1330:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.03.03.17.45.08;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	160e47cc39234567;

1.6
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	128545f7f1cb4567;

1.5
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.02.12.52.58;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@regenerated with EMF 2.4M5
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.tooldef.MainMenu;
import org.eclipse.gmf.tooldef.Palette;
import org.eclipse.gmf.tooldef.Toolbar;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Canvas Mapping</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.CanvasMapping#getDiagramCanvas <em>Diagram Canvas</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.CanvasMapping#getDomainModel <em>Domain Model</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.CanvasMapping#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.CanvasMapping#getPalette <em>Palette</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.CanvasMapping#getMenuContributions <em>Menu Contributions</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.CanvasMapping#getToolbarContributions <em>Toolbar Contributions</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping()
 * @@model
 * @@generated
 */
public interface CanvasMapping extends EObject {
	/**
	 * Returns the value of the '<em><b>Diagram Canvas</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Diagram Canvas</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Diagram Canvas</em>' reference.
	 * @@see #setDiagramCanvas(Canvas)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping_DiagramCanvas()
	 * @@model required="true"
	 * @@generated
	 */
	Canvas getDiagramCanvas();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.CanvasMapping#getDiagramCanvas <em>Diagram Canvas</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Diagram Canvas</em>' reference.
	 * @@see #getDiagramCanvas()
	 * @@generated
	 */
	void setDiagramCanvas(Canvas value);

	/**
	 * Returns the value of the '<em><b>Domain Model</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Domain Model</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Domain Model</em>' reference.
	 * @@see #setDomainModel(EPackage)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping_DomainModel()
	 * @@model
	 * @@generated
	 */
	EPackage getDomainModel();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.CanvasMapping#getDomainModel <em>Domain Model</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Model</em>' reference.
	 * @@see #getDomainModel()
	 * @@generated
	 */
	void setDomainModel(EPackage value);

	/**
	 * Returns the value of the '<em><b>Domain Meta Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Domain Meta Element</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Domain Meta Element</em>' reference.
	 * @@see #setDomainMetaElement(EClass)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping_DomainMetaElement()
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not domainMetaElement.oclIsUndefined() implies not(domainMetaElement.abstract or domainMetaElement.interface)' description='Top-level diagram container must be concrete'"
	 * @@generated
	 */
	EClass getDomainMetaElement();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.CanvasMapping#getDomainMetaElement <em>Domain Meta Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Domain Meta Element</em>' reference.
	 * @@see #getDomainMetaElement()
	 * @@generated
	 */
	void setDomainMetaElement(EClass value);

	/**
	 * Returns the value of the '<em><b>Palette</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Palette</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Palette</em>' reference.
	 * @@see #setPalette(Palette)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping_Palette()
	 * @@model
	 * @@generated
	 */
	Palette getPalette();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.CanvasMapping#getPalette <em>Palette</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Palette</em>' reference.
	 * @@see #getPalette()
	 * @@generated
	 */
	void setPalette(Palette value);

	/**
	 * Returns the value of the '<em><b>Menu Contributions</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.tooldef.MainMenu}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Menu Contributions</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Menu Contributions</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping_MenuContributions()
	 * @@model
	 * @@generated
	 */
	EList<MainMenu> getMenuContributions();

	/**
	 * Returns the value of the '<em><b>Toolbar Contributions</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.tooldef.Toolbar}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Toolbar Contributions</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Toolbar Contributions</em>' reference list.
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getCanvasMapping_ToolbarContributions()
	 * @@model
	 * @@generated
	 */
	EList<Toolbar> getToolbarContributions();

} // CanvasMapping
@


1.6
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d155 1
a155 1
	 * @@model type="org.eclipse.gmf.tooldef.MainMenu"
d171 1
a171 1
	 * @@model type="org.eclipse.gmf.tooldef.Toolbar"
@


1.5
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@d14 1
d16 1
d158 1
a158 1
	EList getMenuContributions();
d174 1
a174 1
	EList getToolbarContributions();
@


1.4
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d101 1
a101 1
	 * @@model annotation="constraint ocl='not domainMetaElement.oclIsUndefined implies not(domainMetaElement.isAbstract or domainMetaElement.isInterface)' description='Top-level diagram container must be concrete'"
@


1.3
log
@#114197 - tooling definition in place
@
text
@d101 1
a101 1
	 * @@model
@


1.2
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d9 1
d11 1
d14 1
d27 3
d37 1
a37 1
public interface CanvasMapping extends MappingEntry{
d116 58
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: CanvasMapping.java,v 1.3 2005/08/02 13:11:56 artem Exp $
d11 1
a11 1
import org.eclipse.gmf.diadef.Canvas;
@

