head	1.7;
access;
symbols
	v20080813-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080521:1.7
	v20080425-1959:1.7
	v20080417-1610:1.6
	v20080322-0000:1.6
	v20080222-1200:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070517-1200:1.5
	v20070504-1000:1.5
	v20070427-0600:1.5
	v20070330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070208-1800:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3
	M1_20:1.3
	v20060904-1500:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060626-1420:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060519-1300:1.3
	v20060519-0800:1.3
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2008.04.18.14.43.25;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	2e3f4808b38b4567;

1.6
date	2008.03.04.16.50.29;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	5e4d47cd7dd44567;

1.5
date	2007.04.25.08.08.30;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	7004462f0c7a4567;

1.4
date	2007.03.14.13.00.04;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	128545f7f1cb4567;

1.3
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.29.18.33.02;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.gmf.mappings.Constraint;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.LinkConstraints;
import org.eclipse.gmf.mappings.LinkMapping;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Link Constraints</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkConstraintsImpl#getLinkMapping <em>Link Mapping</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkConstraintsImpl#getSourceEnd <em>Source End</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.LinkConstraintsImpl#getTargetEnd <em>Target End</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class LinkConstraintsImpl extends EObjectImpl implements LinkConstraints {
	/**
	 * The cached value of the '{@@link #getSourceEnd() <em>Source End</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSourceEnd()
	 * @@generated
	 * @@ordered
	 */
	protected Constraint sourceEnd;

	/**
	 * The cached value of the '{@@link #getTargetEnd() <em>Target End</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTargetEnd()
	 * @@generated
	 * @@ordered
	 */
	protected Constraint targetEnd;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LinkConstraintsImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getLinkConstraints();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public LinkMapping getLinkMapping() {
		if (eContainerFeatureID != GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING) return null;
		return (LinkMapping)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Constraint getSourceEnd() {
		return sourceEnd;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetSourceEnd(Constraint newSourceEnd, NotificationChain msgs) {
		Constraint oldSourceEnd = sourceEnd;
		sourceEnd = newSourceEnd;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END, oldSourceEnd, newSourceEnd);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSourceEnd(Constraint newSourceEnd) {
		if (newSourceEnd != sourceEnd) {
			NotificationChain msgs = null;
			if (sourceEnd != null)
				msgs = ((InternalEObject)sourceEnd).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END, null, msgs);
			if (newSourceEnd != null)
				msgs = ((InternalEObject)newSourceEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END, null, msgs);
			msgs = basicSetSourceEnd(newSourceEnd, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END, newSourceEnd, newSourceEnd));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Constraint getTargetEnd() {
		return targetEnd;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetTargetEnd(Constraint newTargetEnd, NotificationChain msgs) {
		Constraint oldTargetEnd = targetEnd;
		targetEnd = newTargetEnd;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__TARGET_END, oldTargetEnd, newTargetEnd);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setTargetEnd(Constraint newTargetEnd) {
		if (newTargetEnd != targetEnd) {
			NotificationChain msgs = null;
			if (targetEnd != null)
				msgs = ((InternalEObject)targetEnd).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_CONSTRAINTS__TARGET_END, null, msgs);
			if (newTargetEnd != null)
				msgs = ((InternalEObject)newTargetEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.LINK_CONSTRAINTS__TARGET_END, null, msgs);
			msgs = basicSetTargetEnd(newTargetEnd, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__TARGET_END, newTargetEnd, newTargetEnd));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				return eBasicSetContainer(null, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
			case GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END:
				return basicSetSourceEnd(null, msgs);
			case GMFMapPackage.LINK_CONSTRAINTS__TARGET_END:
				return basicSetTargetEnd(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				return eInternalContainer().eInverseRemove(this, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, LinkMapping.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				return getLinkMapping();
			case GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END:
				return getSourceEnd();
			case GMFMapPackage.LINK_CONSTRAINTS__TARGET_END:
				return getTargetEnd();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END:
				setSourceEnd((Constraint)newValue);
				return;
			case GMFMapPackage.LINK_CONSTRAINTS__TARGET_END:
				setTargetEnd((Constraint)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END:
				setSourceEnd((Constraint)null);
				return;
			case GMFMapPackage.LINK_CONSTRAINTS__TARGET_END:
				setTargetEnd((Constraint)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				return getLinkMapping() != null;
			case GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END:
				return sourceEnd != null;
			case GMFMapPackage.LINK_CONSTRAINTS__TARGET_END:
				return targetEnd != null;
		}
		return super.eIsSet(featureID);
	}

} //LinkConstraintsImpl
@


1.6
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a14 1
import org.eclipse.emf.ecore.util.EcoreUtil;
a89 31
	public NotificationChain basicSetLinkMapping(LinkMapping newLinkMapping, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newLinkMapping, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLinkMapping(LinkMapping newLinkMapping) {
		if (newLinkMapping != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING && newLinkMapping != null)) {
			if (EcoreUtil.isAncestor(this, newLinkMapping))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newLinkMapping != null)
				msgs = ((InternalEObject)newLinkMapping).eInverseAdd(this, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, LinkMapping.class, msgs);
			msgs = basicSetLinkMapping(newLinkMapping, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, newLinkMapping, newLinkMapping));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d182 1
a182 1
				return basicSetLinkMapping((LinkMapping)otherEnd, msgs);
d196 1
a196 1
				return basicSetLinkMapping(null, msgs);
a244 3
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				setLinkMapping((LinkMapping)newValue);
				return;
a262 3
			case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
				setLinkMapping((LinkMapping)null);
				return;
@


1.5
log
@regenerated
@
text
@d15 1
d91 31
d214 1
a214 1
				return eBasicSetContainer(otherEnd, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
d228 1
a228 1
				return eBasicSetContainer(null, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
d277 3
d298 3
@


1.4
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d44 1
a44 1
	protected Constraint sourceEnd = null;
d54 1
a54 1
	protected Constraint targetEnd = null;
@


1.3
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@d70 1
d176 1
d192 1
d210 1
d224 1
d242 1
d260 1
d278 1
@


1.2
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@a11 1
import org.eclipse.emf.ecore.EStructuralFeature;
d81 1
a81 1
		return (LinkMapping)eContainer;
d175 6
a180 10
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d182 1
a182 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d190 8
a197 12
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
					return eBasicSetContainer(null, GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING, msgs);
				case GMFMapPackage.LINK_CONSTRAINTS__SOURCE_END:
					return basicSetSourceEnd(null, msgs);
				case GMFMapPackage.LINK_CONSTRAINTS__TARGET_END:
					return basicSetTargetEnd(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d199 1
a199 1
		return eBasicSetContainer(null, featureID, msgs);
d207 4
a210 8
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFMapPackage.LINK_CONSTRAINTS__LINK_MAPPING:
					return eContainer.eInverseRemove(this, GMFMapPackage.LINK_MAPPING__CREATION_CONSTRAINTS, LinkMapping.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
d212 1
a212 1
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
d220 2
a221 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d229 1
a229 1
		return eDynamicGet(eFeature, resolve);
d237 2
a238 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d246 1
a246 1
		eDynamicSet(eFeature, newValue);
d254 2
a255 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d263 1
a263 1
		eDynamicUnset(eFeature);
d271 2
a272 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d280 1
a280 1
		return eDynamicIsSet(eFeature);
@


1.1
log
@[rdvorak] #117743 support for link creation constraints
@
text
@a10 1

a13 1

a15 1

@

