head	1.11;
access;
symbols
	v20080813-1520:1.11
	R1_0_maintenance:1.11.0.2
	R1_0:1.11
	I20060216-1945:1.10
	I20060210-1715:1.10
	I20060209-1815:1.10
	I20060203-0830:1.10
	I20060129-1145:1.10
	I20060127-0900:1.10
	I20060120-1530:1.10
	I20060113-1700:1.10
	M4_10:1.10
	I20060107-1100:1.9
	I20060105-1630:1.9
	I20051230-1230:1.9
	I20051223-1100:1.9
	I20051217-0925:1.9
	I20051208-2000:1.9
	I20051201-1800:1.7
	I20051124-2000:1.5
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.4
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2006.02.23.15.45.31;	author atikhomirov;	state dead;
branches;
next	1.10;

1.10
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.07.19.23.17;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.29.18.33.02;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.25.13.52.44;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.23.13.30.38;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.20.14.07.16;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.18.10.58.31;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.26.14.26.27;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.11
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.gmfgraph.Child;
import org.eclipse.gmf.mappings.AbstractNodeMapping;
import org.eclipse.gmf.mappings.ChildNodeMapping;
import org.eclipse.gmf.mappings.CompartmentMapping;
import org.eclipse.gmf.mappings.GMFMapPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Child Node Mapping</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getDiagramNode <em>Diagram Node</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getCompartment <em>Compartment</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getParentNode <em>Parent Node</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class ChildNodeMappingImpl extends AbstractNodeMappingImpl implements ChildNodeMapping {
	/**
	 * The cached value of the '{@@link #getDiagramNode() <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramNode()
	 * @@generated
	 * @@ordered
	 */
	protected Child diagramNode = null;

	/**
	 * The cached value of the '{@@link #getCompartment() <em>Compartment</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getCompartment()
	 * @@generated
	 * @@ordered
	 */
	protected CompartmentMapping compartment = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected ChildNodeMappingImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getChildNodeMapping();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Child getDiagramNode() {
		if (diagramNode != null && diagramNode.eIsProxy()) {
			InternalEObject oldDiagramNode = (InternalEObject)diagramNode;
			diagramNode = (Child)eResolveProxy(oldDiagramNode);
			if (diagramNode != oldDiagramNode) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
			}
		}
		return diagramNode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Child basicGetDiagramNode() {
		return diagramNode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramNode(Child newDiagramNode) {
		Child oldDiagramNode = diagramNode;
		diagramNode = newDiagramNode;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public CompartmentMapping getCompartment() {
		if (compartment != null && compartment.eIsProxy()) {
			InternalEObject oldCompartment = (InternalEObject)compartment;
			compartment = (CompartmentMapping)eResolveProxy(oldCompartment);
			if (compartment != oldCompartment) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT, oldCompartment, compartment));
			}
		}
		return compartment;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public CompartmentMapping basicGetCompartment() {
		return compartment;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetCompartment(CompartmentMapping newCompartment, NotificationChain msgs) {
		CompartmentMapping oldCompartment = compartment;
		compartment = newCompartment;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT, oldCompartment, newCompartment);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setCompartment(CompartmentMapping newCompartment) {
		if (newCompartment != compartment) {
			NotificationChain msgs = null;
			if (compartment != null)
				msgs = ((InternalEObject)compartment).eInverseRemove(this, GMFMapPackage.COMPARTMENT_MAPPING__CHILD_NODES, CompartmentMapping.class, msgs);
			if (newCompartment != null)
				msgs = ((InternalEObject)newCompartment).eInverseAdd(this, GMFMapPackage.COMPARTMENT_MAPPING__CHILD_NODES, CompartmentMapping.class, msgs);
			msgs = basicSetCompartment(newCompartment, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT, newCompartment, newCompartment));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public AbstractNodeMapping getParentNode() {
		if (eContainerFeatureID != GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE) return null;
		return (AbstractNodeMapping)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				if (compartment != null)
					msgs = ((InternalEObject)compartment).eInverseRemove(this, GMFMapPackage.COMPARTMENT_MAPPING__CHILD_NODES, CompartmentMapping.class, msgs);
				return basicSetCompartment((CompartmentMapping)otherEnd, msgs);
			case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				return basicSetCompartment(null, msgs);
			case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
				return eBasicSetContainer(null, GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
				return eInternalContainer().eInverseRemove(this, GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS, AbstractNodeMapping.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				if (resolve) return getDiagramNode();
				return basicGetDiagramNode();
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				if (resolve) return getCompartment();
				return basicGetCompartment();
			case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
				return getParentNode();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				setDiagramNode((Child)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				setCompartment((CompartmentMapping)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				setDiagramNode((Child)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				setCompartment((CompartmentMapping)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				return diagramNode != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				return compartment != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
				return getParentNode() != null;
		}
		return super.eIsSet(featureID);
	}

} //ChildNodeMappingImpl
@


1.10
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@@


1.9
log
@#119709
Adding Compartment mapping
@
text
@a8 2
import java.util.Collection;

a10 1
import org.eclipse.emf.ecore.EAttribute;
a11 2
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
a13 1
import org.eclipse.emf.ecore.util.InternalEList;
a17 2
import org.eclipse.gmf.mappings.Constraint;
import org.eclipse.gmf.mappings.ElementInitializer;
a18 1
import org.eclipse.gmf.mappings.Tool;
d81 2
a82 2
			Child oldDiagramNode = diagramNode;
			diagramNode = (Child)eResolveProxy((InternalEObject)diagramNode);
d119 2
a120 2
			CompartmentMapping oldCompartment = compartment;
			compartment = (CompartmentMapping)eResolveProxy((InternalEObject)compartment);
d179 1
a179 1
		return (AbstractNodeMapping)eContainer;
d187 10
a196 18
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.CHILD_NODE_MAPPING__CHILD_MAPPINGS:
					return ((InternalEList)getChildMappings()).basicAdd(otherEnd, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT_MAPPINGS:
					return ((InternalEList)getCompartmentMappings()).basicAdd(otherEnd, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
					if (compartment != null)
						msgs = ((InternalEObject)compartment).eInverseRemove(this, GMFMapPackage.COMPARTMENT_MAPPING__CHILD_NODES, CompartmentMapping.class, msgs);
					return basicSetCompartment((CompartmentMapping)otherEnd, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d198 1
a198 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d206 6
a211 20
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION:
					return basicSetDomainSpecialization(null, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER:
					return basicSetDomainInitializer(null, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__CHILD_MAPPINGS:
					return ((InternalEList)getChildMappings()).basicRemove(otherEnd, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT_MAPPINGS:
					return ((InternalEList)getCompartmentMappings()).basicRemove(otherEnd, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__TOOL:
					return basicSetTool(null, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
					return basicSetCompartment(null, msgs);
				case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
					return eBasicSetContainer(null, GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d213 1
a213 1
		return eBasicSetContainer(null, featureID, msgs);
d221 4
a224 8
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFMapPackage.CHILD_NODE_MAPPING__PARENT_NODE:
					return eContainer.eInverseRemove(this, GMFMapPackage.ABSTRACT_NODE_MAPPING__CHILD_MAPPINGS, AbstractNodeMapping.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
d226 1
a226 1
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
d234 2
a235 21
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_META_ELEMENT:
				if (resolve) return getDomainMetaElement();
				return basicGetDomainMetaElement();
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				return getDomainSpecialization();
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER:
				return getDomainInitializer();
			case GMFMapPackage.CHILD_NODE_MAPPING__CONTAINMENT_FEATURE:
				if (resolve) return getContainmentFeature();
				return basicGetContainmentFeature();
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				if (resolve) return getEditFeature();
				return basicGetEditFeature();
			case GMFMapPackage.CHILD_NODE_MAPPING__CHILD_MAPPINGS:
				return getChildMappings();
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				return getCompartmentMappings();
			case GMFMapPackage.CHILD_NODE_MAPPING__TOOL:
				return getTool();
d245 1
a245 1
		return eDynamicGet(eFeature, resolve);
d253 2
a254 28
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				setEditFeature((EAttribute)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__CHILD_MAPPINGS:
				getChildMappings().clear();
				getChildMappings().addAll((Collection)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				getCompartmentMappings().clear();
				getCompartmentMappings().addAll((Collection)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__TOOL:
				setTool((Tool)newValue);
				return;
d262 1
a262 1
		eDynamicSet(eFeature, newValue);
d270 2
a271 26
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_META_ELEMENT:
				setDomainMetaElement((EClass)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				setDomainSpecialization((Constraint)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER:
				setDomainInitializer((ElementInitializer)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__CONTAINMENT_FEATURE:
				setContainmentFeature((EReference)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				setEditFeature((EAttribute)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__CHILD_MAPPINGS:
				getChildMappings().clear();
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				getCompartmentMappings().clear();
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__TOOL:
				setTool((Tool)null);
				return;
d279 1
a279 1
		eDynamicUnset(eFeature);
d287 2
a288 18
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_META_ELEMENT:
				return domainMetaElement != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION:
				return domainSpecialization != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER:
				return domainInitializer != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__CONTAINMENT_FEATURE:
				return containmentFeature != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				return editFeature != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__CHILD_MAPPINGS:
				return childMappings != null && !childMappings.isEmpty();
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT_MAPPINGS:
				return compartmentMappings != null && !compartmentMappings.isEmpty();
			case GMFMapPackage.CHILD_NODE_MAPPING__TOOL:
				return tool != null;
d296 1
a296 1
		return eDynamicIsSet(eFeature);
@


1.8
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@a20 1
import org.eclipse.gmf.gmfgraph.Compartment;
d23 1
d63 1
a63 1
	protected Compartment compartment = null;
d126 1
a126 1
	public Compartment getCompartment() {
d128 2
a129 2
			Compartment oldCompartment = compartment;
			compartment = (Compartment)eResolveProxy((InternalEObject)compartment);
d143 1
a143 1
	public Compartment basicGetCompartment() {
d152 2
a153 2
	public void setCompartment(Compartment newCompartment) {
		Compartment oldCompartment = compartment;
d155 24
a178 2
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT, oldCompartment, compartment));
d201 6
d234 2
d238 2
d288 2
d330 4
d341 1
a341 1
				setCompartment((Compartment)newValue);
d372 3
d382 1
a382 1
				setCompartment((Compartment)null);
d407 2
@


1.7
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d20 2
a21 2
import org.eclipse.gmf.diadef.Compartment;
import org.eclipse.gmf.diadef.Node;
d27 1
d36 1
d46 10
d88 38
d206 2
a240 3
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				if (resolve) return getDiagramNode();
				return basicGetDiagramNode();
d256 5
a276 3
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				setDiagramNode((Node)newValue);
				return;
d296 6
a315 3
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				setDiagramNode((Node)null);
				return;
d334 6
a353 2
			case GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE:
				return diagramNode != null;
d366 4
@


1.6
log
@#118053 update models
@
text
@a12 1

a19 2

import org.eclipse.emf.ecore.impl.EObjectImpl;
a27 2
import org.eclipse.gmf.mappings.NodeMapping;

@


1.5
log
@[rdvorak] #115862 describe semantics of metamodel with annotations
@
text
@d9 2
d16 1
d20 2
d25 1
a40 6
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getDiagramNode <em>Diagram Node</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getDomainChildrenFeature <em>Domain Children Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getEditFeature <em>Edit Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getDomainMetaElement <em>Domain Meta Element</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getDomainSpecialization <em>Domain Specialization</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getDomainInitializer <em>Domain Initializer</em>}</li>
d47 1
a47 1
public class ChildNodeMappingImpl extends EObjectImpl implements ChildNodeMapping {
a58 60
	 * The cached value of the '{@@link #getDiagramNode() <em>Diagram Node</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDiagramNode()
	 * @@generated
	 * @@ordered
	 */
	protected Node diagramNode = null;

	/**
	 * The cached value of the '{@@link #getDomainChildrenFeature() <em>Domain Children Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainChildrenFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EStructuralFeature domainChildrenFeature = null;

	/**
	 * The cached value of the '{@@link #getEditFeature() <em>Edit Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getEditFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EAttribute editFeature = null;

	/**
	 * The cached value of the '{@@link #getDomainMetaElement() <em>Domain Meta Element</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainMetaElement()
	 * @@generated
	 * @@ordered
	 */
	protected EClass domainMetaElement = null;

	/**
	 * The cached value of the '{@@link #getDomainSpecialization() <em>Domain Specialization</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainSpecialization()
	 * @@generated
	 * @@ordered
	 */
	protected Constraint domainSpecialization = null;

	/**
	 * The cached value of the '{@@link #getDomainInitializer() <em>Domain Initializer</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDomainInitializer()
	 * @@generated
	 * @@ordered
	 */
	protected ElementInitializer domainInitializer = null;

	/**
d119 1
a119 239
	public Node getDiagramNode() {
		if (diagramNode != null && diagramNode.eIsProxy()) {
			Node oldDiagramNode = diagramNode;
			diagramNode = (Node)eResolveProxy((InternalEObject)diagramNode);
			if (diagramNode != oldDiagramNode) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
			}
		}
		return diagramNode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Node basicGetDiagramNode() {
		return diagramNode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDiagramNode(Node newDiagramNode) {
		Node oldDiagramNode = diagramNode;
		diagramNode = newDiagramNode;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature getDomainChildrenFeature() {
		if (domainChildrenFeature != null && domainChildrenFeature.eIsProxy()) {
			EStructuralFeature oldDomainChildrenFeature = domainChildrenFeature;
			domainChildrenFeature = (EStructuralFeature)eResolveProxy((InternalEObject)domainChildrenFeature);
			if (domainChildrenFeature != oldDomainChildrenFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_CHILDREN_FEATURE, oldDomainChildrenFeature, domainChildrenFeature));
			}
		}
		return domainChildrenFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EStructuralFeature basicGetDomainChildrenFeature() {
		return domainChildrenFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainChildrenFeature(EStructuralFeature newDomainChildrenFeature) {
		EStructuralFeature oldDomainChildrenFeature = domainChildrenFeature;
		domainChildrenFeature = newDomainChildrenFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_CHILDREN_FEATURE, oldDomainChildrenFeature, domainChildrenFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getEditFeature() {
		if (editFeature != null && editFeature.eIsProxy()) {
			EAttribute oldEditFeature = editFeature;
			editFeature = (EAttribute)eResolveProxy((InternalEObject)editFeature);
			if (editFeature != oldEditFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE, oldEditFeature, editFeature));
			}
		}
		return editFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute basicGetEditFeature() {
		return editFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEditFeature(EAttribute newEditFeature) {
		EAttribute oldEditFeature = editFeature;
		editFeature = newEditFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE, oldEditFeature, editFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDomainMetaElement() {
		if (domainMetaElement != null && domainMetaElement.eIsProxy()) {
			EClass oldDomainMetaElement = domainMetaElement;
			domainMetaElement = (EClass)eResolveProxy((InternalEObject)domainMetaElement);
			if (domainMetaElement != oldDomainMetaElement) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
			}
		}
		return domainMetaElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass basicGetDomainMetaElement() {
		return domainMetaElement;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainMetaElement(EClass newDomainMetaElement) {
		EClass oldDomainMetaElement = domainMetaElement;
		domainMetaElement = newDomainMetaElement;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_META_ELEMENT, oldDomainMetaElement, domainMetaElement));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Constraint getDomainSpecialization() {
		return domainSpecialization;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainSpecialization(Constraint newDomainSpecialization, NotificationChain msgs) {
		Constraint oldDomainSpecialization = domainSpecialization;
		domainSpecialization = newDomainSpecialization;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION, oldDomainSpecialization, newDomainSpecialization);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainSpecialization(Constraint newDomainSpecialization) {
		if (newDomainSpecialization != domainSpecialization) {
			NotificationChain msgs = null;
			if (domainSpecialization != null)
				msgs = ((InternalEObject)domainSpecialization).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
			if (newDomainSpecialization != null)
				msgs = ((InternalEObject)newDomainSpecialization).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION, null, msgs);
			msgs = basicSetDomainSpecialization(newDomainSpecialization, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_SPECIALIZATION, newDomainSpecialization, newDomainSpecialization));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ElementInitializer getDomainInitializer() {
		return domainInitializer;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetDomainInitializer(ElementInitializer newDomainInitializer, NotificationChain msgs) {
		ElementInitializer oldDomainInitializer = domainInitializer;
		domainInitializer = newDomainInitializer;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER, oldDomainInitializer, newDomainInitializer);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setDomainInitializer(ElementInitializer newDomainInitializer) {
		if (newDomainInitializer != domainInitializer) {
			NotificationChain msgs = null;
			if (domainInitializer != null)
				msgs = ((InternalEObject)domainInitializer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER, null, msgs);
			if (newDomainInitializer != null)
				msgs = ((InternalEObject)newDomainInitializer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER, null, msgs);
			msgs = basicSetDomainInitializer(newDomainInitializer, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_INITIALIZER, newDomainInitializer, newDomainInitializer));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NodeMapping getParentNode() {
d121 1
a121 1
		return (NodeMapping)eContainer;
d132 2
d159 2
d179 1
a179 1
					return eContainer.eInverseRemove(this, GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS, NodeMapping.class, msgs);
a193 3
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				if (resolve) return getCompartment();
				return basicGetCompartment();
a196 6
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_CHILDREN_FEATURE:
				if (resolve) return getDomainChildrenFeature();
				return basicGetDomainChildrenFeature();
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				if (resolve) return getEditFeature();
				return basicGetEditFeature();
d204 11
a227 3
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				setCompartment((Compartment)newValue);
				return;
a230 6
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_CHILDREN_FEATURE:
				setDomainChildrenFeature((EStructuralFeature)newValue);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				setEditFeature((EAttribute)newValue);
				return;
d240 13
a263 3
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				setCompartment((Compartment)null);
				return;
a266 6
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_CHILDREN_FEATURE:
				setDomainChildrenFeature((EStructuralFeature)null);
				return;
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				setEditFeature((EAttribute)null);
				return;
d276 12
a298 2
			case GMFMapPackage.CHILD_NODE_MAPPING__COMPARTMENT:
				return compartment != null;
a300 4
			case GMFMapPackage.CHILD_NODE_MAPPING__DOMAIN_CHILDREN_FEATURE:
				return domainChildrenFeature != null;
			case GMFMapPackage.CHILD_NODE_MAPPING__EDIT_FEATURE:
				return editFeature != null;
d307 8
@


1.4
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@d25 2
d41 1
d417 31
d455 2
d469 17
d507 2
d598 2
@


1.3
log
@[rdvorak] #112505 constraint specification in gmfmap
@
text
@d22 1
a34 1
 *   <li>{@@link org.eclipse.gmf.mappings.impl.ChildNodeMappingImpl#getConditionalFeature <em>Conditional Feature</em>}</li>
d38 1
a75 10
	 * The cached value of the '{@@link #getConditionalFeature() <em>Conditional Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getConditionalFeature()
	 * @@generated
	 * @@ordered
	 */
	protected EAttribute conditionalFeature = null;

	/**
d106 10
a251 38
	public EAttribute getConditionalFeature() {
		if (conditionalFeature != null && conditionalFeature.eIsProxy()) {
			EAttribute oldConditionalFeature = conditionalFeature;
			conditionalFeature = (EAttribute)eResolveProxy((InternalEObject)conditionalFeature);
			if (conditionalFeature != oldConditionalFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.CHILD_NODE_MAPPING__CONDITIONAL_FEATURE, oldConditionalFeature, conditionalFeature));
			}
		}
		return conditionalFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute basicGetConditionalFeature() {
		return conditionalFeature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setConditionalFeature(EAttribute newConditionalFeature) {
		EAttribute oldConditionalFeature = conditionalFeature;
		conditionalFeature = newConditionalFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.CHILD_NODE_MAPPING__CONDITIONAL_FEATURE, oldConditionalFeature, conditionalFeature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d371 43
d419 2
a443 3
			case GMFMapPackage.CHILD_NODE_MAPPING__CONDITIONAL_FEATURE:
				if (resolve) return getConditionalFeature();
				return basicGetConditionalFeature();
d452 2
a473 3
			case GMFMapPackage.CHILD_NODE_MAPPING__CONDITIONAL_FEATURE:
				setConditionalFeature((EAttribute)newValue);
				return;
d483 3
a505 3
			case GMFMapPackage.CHILD_NODE_MAPPING__CONDITIONAL_FEATURE:
				setConditionalFeature((EAttribute)null);
				return;
d515 3
a534 2
			case GMFMapPackage.CHILD_NODE_MAPPING__CONDITIONAL_FEATURE:
				return conditionalFeature != null;
d541 2
@


1.2
log
@[ashatalin] Should be possible to specify editable feature and domain element for child nodes.
@
text
@d10 2
d21 1
d37 1
d105 10
d365 60
d445 2
d476 3
d508 3
d534 2
@


1.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: ChildNodeMappingImpl.java,v 1.2 2005/08/02 13:11:56 artem Exp $
d32 2
d81 20
d275 76
d365 6
d394 6
d423 6
d448 4
@

