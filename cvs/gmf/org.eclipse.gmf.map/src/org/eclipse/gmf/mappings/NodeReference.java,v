head	1.4;
access;
symbols
	v20080813-1520:1.4
	v20080722-1827:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.6
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080521:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.4
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070517-1200:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061013-1330:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.05.19.10.12.04;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.10.16.56.21;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.23.15.45.31;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@#114175 Allow a diagram definition to be mapped to zero or more domain models.
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings;

import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Node Reference</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeReference#getChildrenFeature <em>Children Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.NodeReference#getChild <em>Child</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeReference()
 * @@model abstract="true"
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not containmentFeature.oclIsUndefined() implies containmentFeature.eReferenceType.isSuperTypeOf(child.domainMetaElement)' description='\'Containment Feature\' must reference the same class or super type of \'Domain Meta Element\' of the referenced node'"
 * @@generated
 */
public interface NodeReference extends NeedsContainment {
	/**
	 * Returns the value of the '<em><b>Children Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Children Feature</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Children Feature</em>' reference.
	 * @@see #setChildrenFeature(EReference)
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeReference_ChildrenFeature()
	 * @@model annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not childrenFeature.oclIsUndefined() implies childrenFeature.eReferenceType.isSuperTypeOf(child.domainMetaElement)' description='\'Children Feature\' must reference the same class or super type of \'Domain Meta Element\' of the referenced node'"
	 * @@generated
	 */
	EReference getChildrenFeature();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.mappings.NodeReference#getChildrenFeature <em>Children Feature</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Children Feature</em>' reference.
	 * @@see #getChildrenFeature()
	 * @@generated
	 */
	void setChildrenFeature(EReference value);

	/**
	 * Returns the value of the '<em><b>Child</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Child</em>' reference.
	 * @@see #isSetChild()
	 * @@see org.eclipse.gmf.mappings.GMFMapPackage#getNodeReference_Child()
	 * @@model resolveProxies="false" unsettable="true" transient="true" changeable="false" volatile="true" derived="true"
	 * @@generated
	 */
	NodeMapping getChild();

	/**
	 * Returns whether the value of the '{@@link org.eclipse.gmf.mappings.NodeReference#getChild <em>Child</em>}' reference is set.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@return whether the value of the '<em>Child</em>' reference is set.
	 * @@see #getChild()
	 * @@generated
	 */
	boolean isSetChild();

} // NodeReference
@


1.3
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@a25 1
 *        annotation="http://www.eclipse.org/gmf/2005/constraints ocl='not (child.domainMetaElement.oclIsUndefined() and containmentFeature.oclIsUndefined())' description='Either \'domainMetaElement\' or \'containmentFeature\' must be specified'"
@


1.2
log
@feature is better than operation
@
text
@d26 2
d42 1
a42 1
	 * @@model
@


1.1
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d20 1
d56 1
d59 4
a62 1
	 * @@model kind="operation"
d67 10
@

