head	1.10;
access;
symbols
	v20080813-1520:1.10
	v20080722-1827:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.2
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080521:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080322-0000:1.9
	v20080222-1200:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070525-1500:1.8
	v20070520-1200:1.8
	v20070518-1300:1.8
	v20070517-1200:1.8
	v20070504-1000:1.8
	v20070427-0600:1.8
	v20070330-1300:1.7
	v20070322-1100:1.7
	v20060316-0600:1.7
	v20070208-1800:1.6
	M4_20:1.6
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061013-1330:1.6
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060519-1300:1.5
	v20060519-0800:1.5
	v20060512-1000:1.5
	I20060512-1000:1.5
	I20060505-1400:1.5
	I20060428-1300:1.5
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2008.04.17.11.58.49;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	330848073b774567;

1.9
date	2008.03.04.16.50.29;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	5e4d47cd7dd44567;

1.8
date	2007.04.25.08.08.29;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	7004462f0c7a4567;

1.7
date	2007.03.14.13.00.04;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	128545f7f1cb4567;

1.6
date	2006.09.28.18.20.40;	author radvorak;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.25.19.15.49;	author radvorak;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.10.15.21.15;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.10.18.35.28;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.06.22.21.24;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.20.14.07.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.10
log
@[227505] Replace FeatureValueSpec generalization of ValueExpression with aggregation, as it's better approach to model such a concept
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.mappings.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.gmf.mappings.FeatureValueSpec;
import org.eclipse.gmf.mappings.GMFMapPackage;
import org.eclipse.gmf.mappings.ValueExpression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Feature Value Spec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.FeatureValueSpecImpl#getValue <em>Value</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class FeatureValueSpecImpl extends FeatureInitializerImpl implements FeatureValueSpec {
	/**
	 * The cached value of the '{@@link #getValue() <em>Value</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getValue()
	 * @@generated
	 * @@ordered
	 */
	protected ValueExpression value;
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FeatureValueSpecImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFMapPackage.eINSTANCE.getFeatureValueSpec();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public ValueExpression getValue() {
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetValue(ValueExpression newValue, NotificationChain msgs) {
		ValueExpression oldValue = value;
		value = newValue;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__VALUE, oldValue, newValue);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setValue(ValueExpression newValue) {
		if (newValue != value) {
			NotificationChain msgs = null;
			if (value != null)
				msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.FEATURE_VALUE_SPEC__VALUE, null, msgs);
			if (newValue != null)
				msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFMapPackage.FEATURE_VALUE_SPEC__VALUE, null, msgs);
			msgs = basicSetValue(newValue, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__VALUE, newValue, newValue));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__VALUE:
				return basicSetValue(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__VALUE:
				return getValue();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__VALUE:
				setValue((ValueExpression)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__VALUE:
				setValue((ValueExpression)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__VALUE:
				return value != null;
		}
		return super.eIsSet(featureID);
	}

} //FeatureValueSpecImpl
@


1.9
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@a11 1
import org.eclipse.emf.ecore.EStructuralFeature;
a13 3
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.gmf.mappings.FeatureInitializer;
import org.eclipse.gmf.mappings.FeatureSeqInitializer;
d16 1
d25 1
a25 2
 *   <li>{@@link org.eclipse.gmf.mappings.impl.FeatureValueSpecImpl#getFeature <em>Feature</em>}</li>
 *   <li>{@@link org.eclipse.gmf.mappings.impl.FeatureValueSpecImpl#getFeatureSeqInitializer <em>Feature Seq Initializer</em>}</li>
d31 1
a31 1
public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
d33 1
a33 1
	 * The cached value of the '{@@link #getFeature() <em>Feature</em>}' reference.
d36 1
a36 1
	 * @@see #getFeature()
d40 1
a40 2
	protected EStructuralFeature feature;

d65 2
a66 10
	public EStructuralFeature getFeature() {
		if (feature != null && feature.eIsProxy()) {
			InternalEObject oldFeature = (InternalEObject)feature;
			feature = (EStructuralFeature)eResolveProxy(oldFeature);
			if (feature != oldFeature) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE, oldFeature, feature));
			}
		}
		return feature;
d74 7
a80 33
	public EStructuralFeature basicGetFeature() {
		return feature;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setFeature(EStructuralFeature newFeature) {
		EStructuralFeature oldFeature = feature;
		feature = newFeature;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE, oldFeature, feature));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public FeatureSeqInitializer getFeatureSeqInitializer() {
		if (eContainerFeatureID != GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER) return null;
		return (FeatureSeqInitializer)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetFeatureSeqInitializer(FeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newFeatureSeqInitializer, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
d89 2
a90 4
	public void setFeatureSeqInitializer(FeatureSeqInitializer newFeatureSeqInitializer) {
		if (newFeatureSeqInitializer != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER && newFeatureSeqInitializer != null)) {
			if (EcoreUtil.isAncestor(this, newFeatureSeqInitializer))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
d92 5
a96 5
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newFeatureSeqInitializer != null)
				msgs = ((InternalEObject)newFeatureSeqInitializer).eInverseAdd(this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS, FeatureSeqInitializer.class, msgs);
			msgs = basicSetFeatureSeqInitializer(newFeatureSeqInitializer, msgs);
d100 1
a100 17
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, newFeatureSeqInitializer, newFeatureSeqInitializer));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return basicSetFeatureSeqInitializer((FeatureSeqInitializer)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
d111 2
a112 2
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				return basicSetFeatureSeqInitializer(null, msgs);
a122 14
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				return eInternalContainer().eInverseRemove(this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS, FeatureSeqInitializer.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
d125 2
a126 5
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE:
				if (resolve) return getFeature();
				return basicGetFeature();
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				return getFeatureSeqInitializer();
d139 2
a140 5
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE:
				setFeature((EStructuralFeature)newValue);
				return;
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				setFeatureSeqInitializer((FeatureSeqInitializer)newValue);
d154 2
a155 5
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE:
				setFeature((EStructuralFeature)null);
				return;
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				setFeatureSeqInitializer((FeatureSeqInitializer)null);
d169 2
a170 4
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE:
				return feature != null;
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				return getFeatureSeqInitializer() != null;
a174 34
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == FeatureInitializer.class) {
			switch (derivedFeatureID) {
				case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE: return GMFMapPackage.FEATURE_INITIALIZER__FEATURE;
				case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER: return GMFMapPackage.FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == FeatureInitializer.class) {
			switch (baseFeatureID) {
				case GMFMapPackage.FEATURE_INITIALIZER__FEATURE: return GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE;
				case GMFMapPackage.FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER: return GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

@


1.8
log
@regenerated
@
text
@d15 1
d118 31
d155 1
a155 1
				return eBasicSetContainer(otherEnd, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
d169 1
a169 1
				return eBasicSetContainer(null, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
d216 3
d234 3
@


1.7
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d43 1
a43 1
	protected EStructuralFeature feature = null;
@


1.6
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d59 1
d117 1
d133 1
d147 1
d161 1
d178 1
d193 1
d208 1
d224 2
a225 1
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
d241 2
a242 1
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
@


1.5
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@d15 1
a15 1
import org.eclipse.emf.ecore.util.EcoreUtil;
a115 31
	public NotificationChain basicSetFeatureSeqInitializer(FeatureSeqInitializer newFeatureSeqInitializer, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newFeatureSeqInitializer, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setFeatureSeqInitializer(FeatureSeqInitializer newFeatureSeqInitializer) {
		if (newFeatureSeqInitializer != eInternalContainer() || (eContainerFeatureID != GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER && newFeatureSeqInitializer != null)) {
			if (EcoreUtil.isAncestor(this, newFeatureSeqInitializer))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newFeatureSeqInitializer != null)
				msgs = ((InternalEObject)newFeatureSeqInitializer).eInverseAdd(this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS, FeatureSeqInitializer.class, msgs);
			msgs = basicSetFeatureSeqInitializer(newFeatureSeqInitializer, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, newFeatureSeqInitializer, newFeatureSeqInitializer));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d121 1
a121 1
				return basicSetFeatureSeqInitializer((FeatureSeqInitializer)otherEnd, msgs);
d134 1
a134 1
				return basicSetFeatureSeqInitializer(null, msgs);
a177 3
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				setFeatureSeqInitializer((FeatureSeqInitializer)newValue);
				return;
a191 3
			case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER:
				setFeatureSeqInitializer((FeatureSeqInitializer)null);
				return;
d211 32
@


1.4
log
@[rdvorak] #127256 Adjust gmfmap metamodel annotation constraints to the latest changes
@
text
@d116 10
d135 1
a135 1
			msgs = eBasicSetContainer((InternalEObject)newFeatureSeqInitializer, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
d152 1
a152 1
				return eBasicSetContainer(otherEnd, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
d165 1
a165 1
				return eBasicSetContainer(null, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER, msgs);
@


1.3
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@d10 1
d15 2
d28 1
d106 72
d183 2
d199 3
d216 3
d232 2
@


1.2
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d66 2
a67 2
			EStructuralFeature oldFeature = feature;
			feature = (EStructuralFeature)eResolveProxy((InternalEObject)feature);
d102 2
a103 6
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__BODY:
				return getBody();
			case GMFMapPackage.FEATURE_VALUE_SPEC__LANGUAGE:
				return getLanguage();
d108 1
a108 1
		return eDynamicGet(eFeature, resolve);
d116 2
a117 8
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__BODY:
				setBody((String)newValue);
				return;
			case GMFMapPackage.FEATURE_VALUE_SPEC__LANGUAGE:
				setLanguage((String)newValue);
				return;
d122 1
a122 1
		eDynamicSet(eFeature, newValue);
d130 2
a131 8
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__BODY:
				setBody(BODY_EDEFAULT);
				return;
			case GMFMapPackage.FEATURE_VALUE_SPEC__LANGUAGE:
				setLanguage(LANGUAGE_EDEFAULT);
				return;
d136 1
a136 1
		eDynamicUnset(eFeature);
d144 2
a145 6
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFMapPackage.FEATURE_VALUE_SPEC__BODY:
				return BODY_EDEFAULT == null ? body != null : !BODY_EDEFAULT.equals(body);
			case GMFMapPackage.FEATURE_VALUE_SPEC__LANGUAGE:
				return LANGUAGE_EDEFAULT == null ? language != null : !LANGUAGE_EDEFAULT.equals(language);
d149 1
a149 1
		return eDynamicIsSet(eFeature);
@


1.1
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@a9 1

a12 1

a13 1

@

