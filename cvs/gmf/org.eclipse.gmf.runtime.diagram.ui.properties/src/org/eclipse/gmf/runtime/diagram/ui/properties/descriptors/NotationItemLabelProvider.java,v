head	1.3;
access;
symbols
	v20081020-0700:1.3
	v20080813-1510:1.3
	v20080811-1546:1.3
	v20080722-1827:1.3
	v20080716-1600:1.3
	v20080716-1642:1.3
	R2_1_maintenance:1.3.0.8
	Root_R2_1_maintenance:1.3
	R2_1_0:1.3
	v20080603-1553:1.3
	v20080521:1.3
	v20080503-1740:1.3
	v20080425-1959:1.3
	v20080417-1610:1.3
	v20080409-1326:1.3
	v20080328-1605:1.3
	v20080222-1200:1.3
	v20080201-2010:1.3
	v20080118-1129:1.3
	v20080114-2222:1.3
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071207-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070915-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.6
	R2_0:1.3
	R4_20:1.3
	RC3_20:1.3
	v20070608-1300:1.3
	v20070601-1400:1.3
	v20070518-1300:1.3
	bugzilla111892_group_support:1.3.0.4
	Root_bugzilla111892_group_support:1.3
	v20070405-2000:1.3
	v20070330-1300:1.3
	v20070208-1800:1.3
	v20070202-0200:1.3
	v20070111-0800:1.3
	M4_20:1.3
	v20061218-1500:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061013-1330:1.3
	v20061012-1100:1.3
	v20060919-0800:1.3
	M1_20:1.3
	v20060824-1600:1.3
	v20060803-1200:1.3
	v20060721-1130:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060616-1200:1.3
	v20060609-1400:1.3
	v20060531-1730:1.3
	v20060530-1930:1.3
	I20060505-1400:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.3
	I20060209-1815:1.3
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.3
date	2005.09.12.21.24.46;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.37;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.55;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.properties.descriptors;

import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.jface.viewers.LabelProvider;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.graphics.ImageData;
import org.eclipse.swt.graphics.PaletteData;
import org.eclipse.swt.graphics.RGB;
import org.eclipse.swt.widgets.Display;

import org.eclipse.gmf.runtime.notation.NotationPackage;

/**
 * A label provider object used by the notation property descriptors.
 * 
 * @@author nbalaba
 * @@canBeSeenBy org.eclipse.gmf.runtime.diagram.ui.properties.*
 */
class NotationItemLabelProvider
	extends LabelProvider {

	/*
	 * IItemPropertyDescriptor label provider. We override some functionality - the rest will be
	 * forwarded back to the original provider.
	 */
	private ILabelProvider itemLabelProvider;

	/*
	 *  The feature that the descriptor is describing
	 */
	private EStructuralFeature feature;

	/**
	 * Create a new label provider given the IItemPropertyDescriptor label provider and
	 * structural feature for descriptor .
	 *  
	 * @@param provider - the IItemPropertyDescriptor label provider 
	 * @@param feature - descriptors feature
	 */
	public NotationItemLabelProvider(ILabelProvider provider,
			EStructuralFeature feature) {
		this.itemLabelProvider = provider;
		this.feature = feature;
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.jface.viewers.ILabelProvider#getText(java.lang.Object)
	 */
	public String getText(Object anObject) {
		if (getFeature().isMany())
			return ""; //$NON-NLS-1$
		if (getFeature() == NotationPackage.eINSTANCE
			.getNode_LayoutConstraint())
			return ""; //$NON-NLS-1$
		if (anObject instanceof RGB) {
			RGB rgb = (RGB) anObject;
			return "(" + rgb.red + "," + rgb.green + "," + rgb.blue + ")"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		}
		return itemLabelProvider.getText(anObject);
	}

	/* (non-Javadoc)
	 * @@see org.eclipse.jface.viewers.ILabelProvider#getImage(java.lang.Object)
	 */
	public Image getImage(Object anObject) {
		if (anObject instanceof RGB) {
			ImageData id = createColorImage((RGB) anObject);
			ImageData mask = id.getTransparencyMask();
			return new Image(Display.getCurrent(), id, mask);
		}
		return itemLabelProvider.getImage(anObject);
	}

	/**
	 * Creates and returns the color image data for the given control and RGB
	 * value. The image's size is either the control's item extent or the cell
	 * editor's default extent, which is 16 pixels square.
	 * 
	 * @@param w
	 *            the control
	 * @@param color
	 *            the color
	 */
	private ImageData createColorImage(RGB color) {

		int size = 10;
		int indent = 6;
		int extent = 16;

		if (size > extent)
			size = extent;
		
		int width = indent + size;
		int height = extent;

		int xoffset = indent;
		int yoffset = (height - size) / 2;

		RGB black = new RGB(0, 0, 0);
		PaletteData dataPalette = new PaletteData(new RGB[] {black, black,
			color});
		ImageData data = new ImageData(width, height, 4, dataPalette);
		data.transparentPixel = 0;

		int end = size - 1;
		for (int y = 0; y < size; y++) {
			for (int x = 0; x < size; x++) {
				if (x == 0 || y == 0 || x == end || y == end)
					data.setPixel(x + xoffset, y + yoffset, 1);
				else
					data.setPixel(x + xoffset, y + yoffset, 2);
			}
		}

		return data;
	}

	/**
	 * @@return Returns the feature.
	 */
	protected EStructuralFeature getFeature() {
		return feature;
	}
}@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              	   |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d21 1
a21 1
import com.ibm.xtools.notation.NotationPackage;
@

