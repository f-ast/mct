head	1.10;
access;
symbols
	v20081020-0700:1.10
	v20080813-1510:1.10
	v20080811-1546:1.10
	v20080722-1827:1.10
	v20080716-1600:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.6
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080603-1553:1.10
	v20080521:1.10
	v20080503-1740:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080409-1326:1.10
	v20080328-1605:1.10
	v20080222-1200:1.10
	v20080201-2010:1.10
	v20080118-1129:1.10
	v20080114-2222:1.10
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071207-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070915-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.4
	R2_0:1.10
	R4_20:1.10
	RC3_20:1.10
	v20070608-1300:1.10
	v20070601-1400:1.10
	v20070518-1300:1.10
	bugzilla111892_group_support:1.10.0.2
	Root_bugzilla111892_group_support:1.10
	v20070405-2000:1.10
	v20070330-1300:1.10
	v20070208-1800:1.10
	v20070202-0200:1.9.2.1
	v20070111-0800:1.9.2.1
	M4_20:1.10
	v20061218-1500:1.9.2.1
	v20061214-0000:1.10
	M3_20:1.10
	v20061013-1330:1.10
	v20061012-1100:1.9.2.1
	v20060919-0800:1.9.2.1
	M1_20:1.9
	v20060824-1600:1.9
	v20060803-1200:1.9
	v20060721-1130:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.9
	v20060530-1930:1.9
	I20060505-1400:1.9
	I20060428-1300:1.9
	I20060424-0500:1.9
	I20060424-0300:1.9
	M6_10:1.9
	I20060407-1200:1.9
	I20060331-1000:1.9
	I20060324-0300:1.9
	I20060317-1300:1.9
	I20060317-1200:1.9
	I20060316-1300:1.9
	I20060309-1300:1.9
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.8
	I20060209-1815:1.7
	I20060203-0830:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.6
	I20060113-1700:1.6
	M4_10:1.6
	I20060107-1100:1.6
	I20060105-1630:1.6
	I20051230-1230:1.6
	I20051223-1100:1.6
	I20051217-0925:1.6
	I20051201-1800:1.6
	I20051124-2000:1.6
	M3_10:1.6
	I20051118-1245:1.6
	I20051111-1800:1.6
	I20051106-0900:1.6
	v20051030:1.6;
locks; strict;
comment	@# @;


1.10
date	2006.10.03.15.02.59;	author ahunter;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.28.02.30.41;	author cmahoney;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.02.10.21.32.30;	author ahunter;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.07.15.19.17;	author mmostafa;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.14.19.37.46;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.10.12.20.55.09;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.23.18.37.31;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.21.24.46;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.37;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.50;	author sshaw;	state Exp;
branches;
next	;

1.9.2.1
date	2006.09.13.16.43.24;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.10
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance;

import java.util.ArrayList;
import java.util.Iterator;

import org.eclipse.emf.ecore.ENamedElement;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.gef.editparts.AbstractEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.properties.sections.AbstractNotationPropertiesSection;
import org.eclipse.gmf.runtime.emf.core.util.PackageUtil;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CLabel;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.views.properties.tabbed.TabbedPropertySheetPage;

/**
 * @@author dlander
 */
public abstract class AbstractLabeledCheckboxPropertySection
	extends AbstractNotationPropertiesSection {

	//	Abstract methods to provide us with basic data.
	// Command info. Visible to user in undo/redo
	public abstract String getCommandName();

	// Label string positioned left of control
	public abstract String getPrefixLabel();

	// ID to use in communicating with model
	public abstract String getNameLabel();

	// List of entries to populate with
	public abstract String getID();

	// Controls
	private Button checkbox;

	private CLabel leftLabel;

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.properties.view.ITabbedPropertySection#refresh()
	 */
	public void refresh() {

		try {
			executeAsReadAction(new Runnable() {

				public void run() {

					// Update display from model
					if (getSingleInput() instanceof GraphicalEditPart) {
						GraphicalEditPart ep = (GraphicalEditPart) getSingleInput();
						ENamedElement element = PackageUtil.getElement(getID());
						if (element instanceof EStructuralFeature){
							checkbox.setSelection(((Boolean)ep
								.getStructuralFeatureValue((EStructuralFeature)element)).booleanValue());
						}
					} else if (getSingleInput() instanceof ConnectionNodeEditPart) {
						ENamedElement element = PackageUtil.getElement(getID());
						ConnectionNodeEditPart ep = (ConnectionNodeEditPart) getSingleInput();
						if (element instanceof EStructuralFeature){
							checkbox.setSelection(((Boolean) ep
								.getStructuralFeatureValue((EStructuralFeature)element)).booleanValue());
						}
					}
				}
			});
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			//blank
		}
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.properties.ISection#createControls(org.eclipse.swt.widgets.Composite,
	 *      org.eclipse.gmf.runtime.common.ui.properties.TabbedPropertySheetPage)
	 */
	public void createControls(Composite parent,
			TabbedPropertySheetPage aTabbedPropertySheetPage) {
		super.createControls(parent, aTabbedPropertySheetPage);


		FormData data;

		// Create checkbox
		checkbox = getWidgetFactory().createButton(composite, getNameLabel(),
			SWT.CHECK);
		data = new FormData();
		data.left = new FormAttachment(0, getStandardLabelWidth(parent));
		data.top = new FormAttachment(0, 0);
		checkbox.setLayoutData(data);
		checkbox.addSelectionListener(new SelectionAdapter() {

			public void widgetSelected(SelectionEvent event) {

				if (isReadOnly()) {
					refresh();
					return;
				}

				ArrayList commands = new ArrayList();

				Iterator it = getInput().iterator();

				while (it.hasNext()) {
					final AbstractEditPart aep = (AbstractEditPart) it.next();

					Resource res = ((View)aep.getModel()).eResource();

					commands.add(createCommand(getCommandName(), res,
						new Runnable() {

							public void run() {
								if (aep instanceof GraphicalEditPart) {
									GraphicalEditPart ep = (GraphicalEditPart) aep;
									ENamedElement element = PackageUtil.getElement(getID());
									if (element instanceof EStructuralFeature)
										ep.setStructuralFeatureValue((EStructuralFeature)element, Boolean.valueOf(
											checkbox.getSelection()));
								} else if (aep instanceof ConnectionNodeEditPart) {
									ConnectionNodeEditPart ep = (ConnectionNodeEditPart) aep;
									ENamedElement element = PackageUtil.getElement(getID());
									if (element instanceof EStructuralFeature)
										ep.setStructuralFeatureValue((EStructuralFeature)element, Boolean.valueOf(
											checkbox.getSelection()));
								}
							}
						}));
				}

				executeAsCompositeCommand(getCommandName(), commands);
			}
		});

		// Create label
		leftLabel = getWidgetFactory()
			.createCLabel(composite, getPrefixLabel()); 
		data = new FormData();
		data.left = new FormAttachment(0, 0);
		data.top = new FormAttachment(checkbox, 0, SWT.CENTER);
		leftLabel.setLayoutData(data);

	}
}

@


1.9
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2005 IBM Corporation and others.
@


1.9.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.8
log
@gmf_head ahunter 060210 Migrate GMF usage of tabbed properties view from WTP to Eclipse Core (org.eclipse.wst.common.ui.properties to org.eclipse.ui.views.properties.tabbed)
@
text
@d24 1
a24 1
import org.eclipse.gmf.runtime.emf.core.util.MetaModelUtil;
d73 1
a73 1
						ENamedElement element = MetaModelUtil.getElement(getID());
d79 1
a79 1
						ENamedElement element = MetaModelUtil.getElement(getID());
d137 1
a137 1
									ENamedElement element = MetaModelUtil.getElement(getID());
d143 1
a143 1
									ENamedElement element = MetaModelUtil.getElement(getID());
@


1.7
log
@bugzilla 117592 gmf-head mmostafa 060207 Eroneous references to xtools in diagram plugins
@
text
@d34 1
a34 1
import org.eclipse.wst.common.ui.properties.internal.provisional.TabbedPropertySheetPage;
@


1.6
log
@bugzilla 112685 gmf-head sshaw 051014 Sweep code for creation of Boolean objects
@
text
@d108 1
a108 1
			SWT.CHECK); //$NON-NLS-1$
d158 1
a158 1
			.createCLabel(composite, getPrefixLabel()); //$NON-NLS-1$
@


1.5
log
@Bugzilla 110653 gmf_head ahunter 051012 Eroneous references to xtools in gmf common namespace
@
text
@d139 1
a139 1
										ep.setStructuralFeatureValue((EStructuralFeature)element, new Boolean(
d145 1
a145 1
										ep.setStructuralFeatureValue((EStructuralFeature)element, new Boolean(
@


1.4
log
@Bugzilla 109092: gmf_head sshaw 050923 : API Analysis: Diagram layer API.  Determine if all API is needed and/or has appropriate signatures
Contributed by Mohammed Mostafa
@
text
@a37 1
 * @@canBeSeenBy com.ibm.xtools.uml.ui.diagram.*
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d17 2
d21 5
a35 5
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;
import org.eclipse.gmf.runtime.diagram.ui.properties.sections.AbstractNotationPropertiesSection;
import org.eclipse.gmf.runtime.notation.View;

d74 5
a78 2
						checkbox.setSelection(((Boolean) ep
							.getPropertyValue(getID())).booleanValue());
d80 1
d82 4
a85 2
						checkbox.setSelection(((Boolean) ep
							.getPropertyValue(getID())).booleanValue());
d138 4
a141 2
									ep.setPropertyValue(getID(), new Boolean(
										checkbox.getSelection()));
d144 4
a147 2
									ep.setPropertyValue(getID(), new Boolean(
										checkbox.getSelection()));
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 8
/*+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d29 1
a29 1
import com.ibm.xtools.notation.View;
@

