head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080813-1510:1.2
	v20080811-1546:1.2
	v20080722-1827:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080603-1553:1.2
	v20080521:1.2
	v20080503-1740:1.2
	v20080425-1959:1.2
	v20080417-1610:1.2
	v20080409-1326:1.2
	v20080328-1605:1.2
	v20080222-1200:1.1
	v20080201-2010:1.1
	v20080118-1129:1.1
	v20080114-2222:1.1
	v20071222-1111:1.1
	v20071214-1111:1.1
	v20071207-1111:1.1
	v20071130-1111:1.1
	v20071124-0000:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070915-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.6
	R2_0:1.1
	R4_20:1.1
	RC3_20:1.1
	v20070608-1300:1.1
	v20070601-1400:1.1
	v20070518-1300:1.1
	bugzilla111892_group_support:1.1.0.4
	Root_bugzilla111892_group_support:1.1
	v20070405-2000:1.1
	v20070330-1300:1.1
	v20070208-1800:1.1
	v20070202-0200:1.1
	v20070111-0800:1.1
	M4_20:1.1
	v20061218-1500:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061013-1330:1.1
	v20061012-1100:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060824-1600:1.1
	v20060803-1200:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051201-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2008.03.27.21.11.10;	author ahunter;	state Exp;
branches;
next	1.1;
commitid	39ff47ec0d6d4567;

1.1
date	2005.11.25.19.38.18;	author cmahoney;	state Exp;
branches;
next	;


desc
@@


1.2
log
@[224473] gmf-head ahunter 080327 Text alignment enhancement
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n;

import org.eclipse.gmf.runtime.diagram.ui.properties.internal.DiagramPropertiesPlugin;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.swt.graphics.Image;
import org.eclipse.ui.plugin.AbstractUIPlugin;

/**
 * Bundle of all images used by this plugin. Image descriptors can be retrieved
 * by referencing the public image descriptor variable directly. The public
 * strings represent images that will be cached and can be retrieved using
 * {@@link #get(String)}.
 *
 * @@author cmahoney
 */
public class DiagramUIPropertiesImages {

	/**
	 * The icons root directory.
	 */
	private static final String PREFIX_ROOT = "icons/"; //$NON-NLS-1$
	
	/**
	 * Images that will be cached and can be retrieved using
	 * {@@link #get(String)}.
	 */
	public static final String IMG_FILL_COLOR = PREFIX_ROOT + "fill_color.gif"; //$NON-NLS-1$

	public static final String IMG_BOLD = PREFIX_ROOT + "bold.gif"; //$NON-NLS-1$

	public static final String IMG_ITALIC = PREFIX_ROOT + "italic.gif"; //$NON-NLS-1$

	public static final String IMG_FONT_COLOR = PREFIX_ROOT + "font_color.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_COLOR = PREFIX_ROOT + "line_color.gif"; //$NON-NLS-1$

	public static final String IMG_TEXT_ALIGNMENT_LEFT = PREFIX_ROOT
			+ "alignleft.gif"; //$NON-NLS-1$

	public static final String IMG_TEXT_ALIGNMENT_CENTER = PREFIX_ROOT
			+ "aligncenter.gif"; //$NON-NLS-1$

	public static final String IMG_TEXT_ALIGNMENT_RIGHT = PREFIX_ROOT
			+ "alignright.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_SOLID = PREFIX_ROOT
			+ "line_solid.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_DASH = PREFIX_ROOT
			+ "line_dash.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_DOT = PREFIX_ROOT
			+ "line_dot.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_DASH_DOT = PREFIX_ROOT
	+ "line_dash_dot.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_DASH_DOT_DOT = PREFIX_ROOT
	+ "line_dash_dot_dot.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_SOLID_BOTH = PREFIX_ROOT
	+ "arrow_solid_both.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_SOLID_SOURCE = PREFIX_ROOT
	+ "arrow_solid_source.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_SOLID_TARGET = PREFIX_ROOT
	+ "arrow_solid_target.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_OPEN_BOTH = PREFIX_ROOT
	+ "arrow_open_both.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_OPEN_SOURCE = PREFIX_ROOT
	+ "arrow_open_source.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_OPEN_TARGET = PREFIX_ROOT
	+ "arrow_open_target.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_NONE = PREFIX_ROOT
	+ "arrow_none.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_WIDTH = PREFIX_ROOT
	+ "line_width.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_TYPE = PREFIX_ROOT
	+ "line_type.gif"; //$NON-NLS-1$

	public static final String IMG_ARROW_TYPE = PREFIX_ROOT
	+ "arrow_type.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_WIDTH_ONE = PREFIX_ROOT
	+ "line_width_one.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_WIDTH_TWO = PREFIX_ROOT
	+ "line_width_two.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_WIDTH_THREE = PREFIX_ROOT
	+ "line_width_three.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_WIDTH_FOUR = PREFIX_ROOT
	+ "line_width_four.gif"; //$NON-NLS-1$

	public static final String IMG_LINE_WIDTH_FIVE = PREFIX_ROOT
	+ "line_width_five.gif"; //$NON-NLS-1$

	/**
	 * Image descriptors.
	 */
	public static final ImageDescriptor DESC_FILL_COLOR = createAndCache(IMG_FILL_COLOR);

	public static final ImageDescriptor DESC_BOLD = createAndCache(IMG_BOLD);

	public static final ImageDescriptor DESC_ITALIC = createAndCache(IMG_ITALIC);

	public static final ImageDescriptor DESC_FONT_COLOR = createAndCache(IMG_FONT_COLOR);

	public static final ImageDescriptor DESC_LINE_COLOR = createAndCache(IMG_LINE_COLOR);

	public static final ImageDescriptor DESC_TEXT_ALIGNMENT_LEFT = createAndCache(IMG_TEXT_ALIGNMENT_LEFT);

	public static final ImageDescriptor DESC_TEXT_ALIGNMENT_CENTER = createAndCache(IMG_TEXT_ALIGNMENT_CENTER);

	public static final ImageDescriptor DESC_TEXT_ALIGNMENT_RIGHT = createAndCache(IMG_TEXT_ALIGNMENT_RIGHT);

	public static final ImageDescriptor DESC_LINE_SOLID = createAndCache(IMG_LINE_SOLID);

	public static final ImageDescriptor DESC_LINE_DASH = createAndCache(IMG_LINE_DASH);

	public static final ImageDescriptor DESC_LINE_DOT = createAndCache(IMG_LINE_DOT);

	public static final ImageDescriptor DESC_LINE_DASH_DOT = createAndCache(IMG_LINE_DASH_DOT);

	public static final ImageDescriptor DESC_LINE_DASH_DOT_DOT = createAndCache(IMG_LINE_DASH_DOT_DOT);

	public static final ImageDescriptor DESC_ARROW_NONE = createAndCache(IMG_ARROW_NONE);

	public static final ImageDescriptor DESC_ARROW_SOLID_BOTH = createAndCache(IMG_ARROW_SOLID_BOTH);

	public static final ImageDescriptor DESC_ARROW_SOLID_SOURCE = createAndCache(IMG_ARROW_SOLID_SOURCE);

	public static final ImageDescriptor DESC_ARROW_SOLID_TARGET = createAndCache(IMG_ARROW_SOLID_TARGET);

	public static final ImageDescriptor DESC_ARROW_OPEN_BOTH = createAndCache(IMG_ARROW_OPEN_BOTH);

	public static final ImageDescriptor DESC_ARROW_OPEN_SOURCE = createAndCache(IMG_ARROW_OPEN_SOURCE);

	public static final ImageDescriptor DESC_ARROW_OPEN_TARGET = createAndCache(IMG_ARROW_OPEN_TARGET);

	public static final ImageDescriptor DESC_LINE_WIDTH = createAndCache(IMG_LINE_WIDTH);
	
	public static final ImageDescriptor DESC_LINE_TYPE = createAndCache(IMG_LINE_TYPE);
	
	public static final ImageDescriptor DESC_ARROW_TYPE = createAndCache(IMG_ARROW_TYPE);
	
	public static final ImageDescriptor DESC_LINE_WIDTH_ONE = createAndCache(IMG_LINE_WIDTH_ONE);
	
	public static final ImageDescriptor DESC_LINE_WIDTH_TWO = createAndCache(IMG_LINE_WIDTH_TWO);
	
	public static final ImageDescriptor DESC_LINE_WIDTH_THREE = createAndCache(IMG_LINE_WIDTH_THREE);
	
	public static final ImageDescriptor DESC_LINE_WIDTH_FOUR = createAndCache(IMG_LINE_WIDTH_FOUR);
	
	public static final ImageDescriptor DESC_LINE_WIDTH_FIVE = createAndCache(IMG_LINE_WIDTH_FIVE);
	
	/**
	 * Creates the image descriptor from the filename given.
	 * 
	 * @@param imageName
	 *            the full filename of the image
	 * @@return the new image descriptor
	 */
	private static ImageDescriptor create(String imageName) {
		return AbstractUIPlugin.imageDescriptorFromPlugin(DiagramPropertiesPlugin
			.getPluginId(), imageName);
	}

	/**
	 * Creates the image descriptor from the filename given and caches it in the
	 * plugin's image registry.
	 * 
	 * @@param imageName
	 *            the full filename of the image
	 * @@return the new image descriptor
	 */
	private static ImageDescriptor createAndCache(String imageName) {
		ImageDescriptor result = create(imageName);
		DiagramPropertiesPlugin.getDefault().getImageRegistry().put(imageName, result);
		return result;
	}

	/**
	 * Gets an image from the image registry. This image should not be disposed
	 * of, that is handled in the image registry. The image descriptor must have
	 * previously been cached in the image registry. The cached images for the
	 * public image names defined in this file can be retrieved using this
	 * method.
	 * 
	 * @@param imageName
	 *            the full filename of the image
	 * @@return the image or null if it has not been cached in the registry
	 */
	public static Image get(String imageName) {
		return DiagramPropertiesPlugin.getDefault().getImageRegistry().get(imageName);
	}
}
@


1.1
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
d48 69
d130 46
@

