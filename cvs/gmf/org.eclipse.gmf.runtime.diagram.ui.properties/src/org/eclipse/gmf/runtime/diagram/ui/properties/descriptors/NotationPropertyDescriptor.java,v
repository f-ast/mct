head	1.5;
access;
symbols
	v20081020-0700:1.5
	v20080813-1510:1.5
	v20080811-1546:1.5
	v20080722-1827:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.6
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080603-1553:1.5
	v20080521:1.5
	v20080503-1740:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080409-1326:1.5
	v20080328-1605:1.5
	v20080222-1200:1.5
	v20080201-2010:1.5
	v20080118-1129:1.5
	v20080114-2222:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071207-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070915-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.4
	R2_0:1.5
	R4_20:1.5
	RC3_20:1.5
	v20070608-1300:1.5
	v20070601-1400:1.5
	v20070518-1300:1.5
	bugzilla111892_group_support:1.5.0.2
	Root_bugzilla111892_group_support:1.5
	v20070405-2000:1.5
	v20070330-1300:1.5
	v20070208-1800:1.5
	v20070202-0200:1.4.2.1
	v20070111-0800:1.4.2.1
	M4_20:1.5
	v20061218-1500:1.4.2.1
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20061012-1100:1.4.2.1
	v20060919-0800:1.4.2.1
	M1_20:1.4
	v20060824-1600:1.4
	v20060803-1200:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051217-0925:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2006.10.03.15.02.59;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.17.15.54.06;	author sshaw;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2005.09.12.21.24.46;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.30.18.48.37;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.55;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.16.43.23;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.properties.descriptors;

import java.util.Arrays;
import java.util.List;

import org.eclipse.emf.common.ui.celleditor.ExtendedComboBoxCellEditor;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.jface.viewers.CellEditor;
import org.eclipse.jface.viewers.ColorCellEditor;
import org.eclipse.jface.viewers.ICellEditorValidator;
import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.graphics.RGB;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;

import org.eclipse.gmf.runtime.diagram.ui.internal.util.FontHelper;
import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesMessages;
import org.eclipse.gmf.runtime.draw2d.ui.figures.FigureUtilities;
import org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositeSourcePropertyDescriptor;
import org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EObjectContainmentListPropertyValue;
import org.eclipse.gmf.runtime.notation.NotationPackage;

/**
 * A property descriptor for notation elements (graphical edit parts, views and
 * styles), wrapper aroubd an EMF property descriptor.
 * 
 * @@author nbalaba
 */
public class NotationPropertyDescriptor extends
        EMFCompositeSourcePropertyDescriptor {

    /**
     * Create and instance of the <code>NotationPropertyDescriptor</code>.
     * 
     * @@param object -
     *            notation element (graphical edit part, view or style)
     * @@param itemPropertyDescriptor -
     *            EMF property descriptor
     * @@param category -
     *            property category
     */
    public NotationPropertyDescriptor(Object object,
            IItemPropertyDescriptor itemPropertyDescriptor, String category) {
        super(object, itemPropertyDescriptor, category);

    }

    /**
     * Create a cell editor for a data value.
     * 
     * @@param composite - parent composite @@return - cell editor to edit
     * property value
     * 
     * @@see <code> createPropertyEditor </code>
     */  
    protected CellEditor createDataTypeCellEditor(Composite composite) {

        if (isColor())
            return new ColorCellEditor(composite);
        
        CellEditor cellEditor = super.createDataTypeCellEditor(composite);
        
        if (isFontHeight()) {
        	cellEditor.setValidator(getPositiveIntegerValidator());
        }
        	
        return cellEditor;
    }

    /**
     * Create a cell validator that ensures positive integers
     * @@return positive integer cell editor validator
     */
    private ICellEditorValidator getPositiveIntegerValidator() {
		ICellEditorValidator cellValidator = new ICellEditorValidator() {
			public String isValid(Object value) {
				String error = null;
				if (value instanceof String) {
					String strValue = (String) value;
					try {
						if (Integer.parseInt(strValue) <= 0) {
								throw new NumberFormatException();
						}
					} catch (NumberFormatException e) {
							error = DiagramUIPropertiesMessages.Positive_Number_Error;
					}
				}
				return error;
			}
		};
		return cellValidator;
    }
    
    private boolean isFontHeight() {
        return getFeature() == NotationPackage.eINSTANCE.getFontStyle_FontHeight();
	}

	/**
     * Create combo box cell editor
     * 
     * @@param composite - parent composite @@return - cell editor to edit
     * property value
     * 
     * @@see <code> createPropertyEditor </code>
     */
    protected CellEditor createComboBoxCellEditor(Composite composite) {

        propertyEditor = new ExtendedComboBoxCellEditor(composite,
                getChoiceOfValues(), getLabelProvider(), false, SWT.NONE);

        propertyEditor.setValidator(getValidator());

        return propertyEditor;

    }

    /**
     * Gets this property value
     * @@return - value of the property stored in the EMF descriptor
     */
    public Object getPropertyValue() {

        if (getFeature() == NotationPackage.eINSTANCE.getView_Styles()) {
            EObjectContainmentEList list = (EObjectContainmentEList) getEditableValue();
            EObjectContainmentListPropertyValue value = new FlattenedContainmentListPropertyValue(
                    list);
            //value.setLabelProvider(getLabelProvider());
            return value;

        }

        if (isColor()) {
            Integer color = (Integer) getEditableValue();
            return FigureUtilities.integerToRGB(color);
        }

        return getEditableValue();
    }

    /*
     * (non-Javadoc)
     * 
     * @@see org.eclipse.ui.views.properties.IPropertyDescriptor#getLabelProvider()
     */
    public ILabelProvider getLabelProvider() {

        return new NotationItemLabelProvider(super.getLabelProvider(),
                (EStructuralFeature) getFeature());
    }

    /*
     * (non-Javadoc)
     * 
     * @@see org.eclipse.gmf.runtime.common.ui.internal.properties.emf.EMFCompositeSourcePropertyDescriptor#setPropertyValue(java.lang.Object)
     */
    public void setPropertyValue(Object value) {
        if (value instanceof EObjectContainmentListPropertyValue) {
            super
                    .setPropertyValue(((EObjectContainmentListPropertyValue) value)
                            .getTarget());
            return;
        }

        if (isColor()) {
            RGB rgb = (RGB) value;
            super.setPropertyValue(FigureUtilities.colorToInteger(new Color(
                    Display.getCurrent(), rgb)));
            return;
        }

        super.setPropertyValue(value);
    }

    /*
     * Test if the descriptor describes a color @@return - true if the descriptor
     * describes a color, false otherwise
     */
    private boolean isColor() {

        return (getFeature() == NotationPackage.eINSTANCE
                .getFillStyle_FillColor()
                || getFeature() == NotationPackage.eINSTANCE
                        .getLineStyle_LineColor() || getFeature() == NotationPackage.eINSTANCE
                .getFontStyle_FontColor());
    }

    /*
     * (non-Javadoc)
     * 
     * @@see org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositeSourcePropertyDescriptor#getChoiceOfValues()
     */
    public List getChoiceOfValues() {
        if (getFeature() == NotationPackage.eINSTANCE.getFontStyle_FontName()) {
            return Arrays.asList(FontHelper.getFontNames());

        }
        return super.getChoiceOfValues();
    }
}@


1.4
log
@[121077] gmf_head tmacdoug 060117 Exceptions when enter negative number in Font Height Value in Property View. Diagram corrupted when Closed and reopened
@
text
@d2 1
a2 1
 * Copyright (c) 2004 IBM Corporation and others.
@


1.4.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2006 IBM Corporation and others.
@


1.3
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d23 1
d32 1
d75 8
a82 2

        return super.createDataTypeCellEditor(composite);
d86 28
@


1.2
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004.  All Rights Reserved.              	   |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d32 1
a32 1
import com.ibm.xtools.notation.NotationPackage;
@

