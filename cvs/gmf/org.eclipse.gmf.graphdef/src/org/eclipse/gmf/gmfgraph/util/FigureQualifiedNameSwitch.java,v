head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080807-1333:1.9
	v20080806-1520:1.9
	v20080731-1520:1.9
	v20080722-1827:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080528-1052:1.9
	v20080521:1.8
	v20080425-1959:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.8
	v20071214-1111:1.8
	v20071003-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.4
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070605-1400:1.8
	v20070601-1400:1.8
	v20070420-1000:1.8
	v20070330-1300:1.8
	v20070322-1100:1.8
	v20060316-0600:1.8
	v20070208-1800:1.8
	M4_20:1.8
	v20061214-0000:1.8
	M3_20:1.8
	v20061013-1330:1.8
	v20060919-0800:1.8
	M1_20:1.8
	v20060904-1500:1.8
	v20060713-1700:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	v20060627-1200:1.8
	v20060626-1420:1.8
	v20060616-1200:1.8
	v20060609-1400:1.8
	v20060531-1730:1.8
	v20060530-1930:1.8
	v20060526-1200:1.8
	v20060519-0800:1.8
	RC2_10:1.8
	I20060505-1400:1.8
	I20060424-0500:1.8
	I20060424-0300:1.8
	M6_10:1.8
	I20060407-1200:1.8
	I20060331-1000:1.8
	I20060324-0300:1.8
	I20060317-1300:1.8
	I20060317-1200:1.8
	I20060316-1300:1.8
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6
	I20060227-1730:1.5
	I20060216-1945:1.4
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.1
	I20051223-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2008.05.21.17.10.17;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	b0d483457794567;

1.8
date	2006.03.13.17.59.56;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.13.17.53.14;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.01.20.18.29;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.24.18.50.23;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.15.14.44.43;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.13.17.36.31;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.05.17.33.08;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.9
log
@[139126] respect implementation bundle of custom borders and layouts: documenting, depreciating FQNSwitch as it's only use is to detect dependencies which doesn't require rest of the code to be there (figure fqns)
@
text
@/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.gmfgraph.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.common.codegen.ImportAssistant;
import org.eclipse.gmf.gmfgraph.FigureGallery;

/**
 * FigureQualifiedNameSwitch serves to substitute base implementation class names for 
 * figures defined in GMFGraph. Namely, we use this switch to provide different
 * implementation for some classes available in gmf-runtime (e.g. {@@link RuntimeFQNSwitch})
 * @@author artem
 * @@deprecated this switch is no longer necessary, the only method being used now, 
 * 	           {@@link #getDependencies(FigureGallery)}, should move elsewhere 
 */
@@Deprecated
public interface FigureQualifiedNameSwitch {


	/**
	 * (XXX) tell about/change behavior with wrong arguments - exception?
	 * @@return fully-qualified class name corresponding to object, or <code>null</code> if it's not suitable graphical object 
	 */
	String get(EObject gmfgraphObject);

	/**
	 * Handy addition to {@@link #get(EObject)}, with return value passed through {@@link ImportAssistant#getImportedName(String)} 
	 * @@return qualified or imported class name
	 */
	String get(EObject gmfgraphObject, ImportAssistant importManager);

	/**
	 * (XXX) decide whether org.eclipse.draw2d should be included there.
	 * @@return symbolic names of plug-ins. Figures of the gallery may need these in classpath. 
	 */
	String[] getDependencies(FigureGallery gallery);
}
@


1.8
log
@javadoc updated
@
text
@d23 2
d26 1
@


1.7
log
@explicit method names for fqn switch to better reflect it's intention
@
text
@a21 7
 * This is (almost) marker for GMFGraphSwitch that imposes additional obligations:
 * <ul>
 * <li> doSwitch(FigureGallery) provides String[] of additional plug-ins figure classes depend on
 * (XXX) decide whether org.eclipse.draw2d should be included there.
 * <li> doSwitch(any other GMFGraph object) returns fully-qualified class name, if known.
 * (XXX) tell about behavior with wrong arguments
 * </ul>
d26 5
d32 5
d38 5
@


1.6
log
@Split FQNSwitch into interface and rt-specific implementation
New requirement on the switch - to provide additional requiremens
@
text
@d15 2
d33 3
a35 1
	Object doSwitch(EObject theEObject);
@


1.5
log
@[mgolubev] #129362 move runtime-specific fqn out from templates to external switch
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
d14 1
a14 18
import org.eclipse.gmf.gmfgraph.BorderLayout;
import org.eclipse.gmf.gmfgraph.CustomClass;
import org.eclipse.gmf.gmfgraph.Ellipse;
import org.eclipse.gmf.gmfgraph.FlowLayout;
import org.eclipse.gmf.gmfgraph.GridLayout;
import org.eclipse.gmf.gmfgraph.GridLayoutData;
import org.eclipse.gmf.gmfgraph.Label;
import org.eclipse.gmf.gmfgraph.LabeledContainer;
import org.eclipse.gmf.gmfgraph.Polygon;
import org.eclipse.gmf.gmfgraph.PolygonDecoration;
import org.eclipse.gmf.gmfgraph.Polyline;
import org.eclipse.gmf.gmfgraph.PolylineConnection;
import org.eclipse.gmf.gmfgraph.PolylineDecoration;
import org.eclipse.gmf.gmfgraph.Rectangle;
import org.eclipse.gmf.gmfgraph.RoundedRectangle;
import org.eclipse.gmf.gmfgraph.StackLayout;
import org.eclipse.gmf.gmfgraph.XYLayout;
import org.eclipse.gmf.gmfgraph.XYLayoutData;
d17 10
a27 1
 *
d29 1
a29 69
public class FigureQualifiedNameSwitch extends GMFGraphSwitch {

	public Object caseCustomClass(CustomClass object) {
		return object.getQualifiedClassName();
	}

	public Object caseGridLayout(GridLayout object) {
		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayout";
	}

	public Object caseGridLayoutData(GridLayoutData object) {
		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayoutData";
	}
	
	public Object caseFlowLayout(FlowLayout object) {
		return object.isForceSingleLine() ? "org.eclipse.draw2d.ToolbarLayout" : "org.eclipse.draw2d.FlowLayout";
	}
	
	public Object caseXYLayout(XYLayout object) {
		return "org.eclipse.draw2d.XYLayout";
	}
	
	public Object caseXYLayoutData(XYLayoutData object) {
		return "org.eclipse.draw2d.geometry.Rectangle";
	}
	
	public Object caseStackLayout(StackLayout object) {
		return "org.eclipse.draw2d.StackLayout";
	}

	public Object caseBorderLayout(BorderLayout object) {
		return "org.eclipse.draw2d.BorderLayout";
	}

	public Object caseLabel(Label object) {
		return "org.eclipse.draw2d.Label"; //$NON-NLS-1$
	}

	public Object caseLabeledContainer(LabeledContainer object) {
		return "org.eclipse.draw2d.LabeledContainer"; //$NON-NLS-1$
	}

	public Object caseRectangle(Rectangle object) {
		return "org.eclipse.draw2d.RectangleFigure"; //$NON-NLS-1$
	}

	public Object caseRoundedRectangle(RoundedRectangle object) {
		return "org.eclipse.draw2d.RoundedRectangle"; //$NON-NLS-1$
	}

	public Object caseEllipse(Ellipse object) {
		return "org.eclipse.draw2d.Ellipse"; //$NON-NLS-1$
	}

	public Object casePolygon(Polygon object) {
		return "org.eclipse.draw2d.Polygon"; //$NON-NLS-1$
	}

	public Object casePolygonDecoration(PolygonDecoration object) {
		return "org.eclipse.draw2d.PolygonDecoration"; //$NON-NLS-1$
	}

	public Object casePolyline(Polyline object) {
		return "org.eclipse.draw2d.Polyline"; //$NON-NLS-1$
	}

	public Object casePolylineDecoration(PolylineDecoration object) {
		return "org.eclipse.draw2d.PolylineDecoration"; //$NON-NLS-1$
	}
d31 1
a31 3
	public Object casePolylineConnection(PolylineConnection object) {
		return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx"; //$NON-NLS-1$
	}
@


1.4
log
@[mgolubev] #127252 layout support
@
text
@d108 1
a108 1
		return "org.eclipse.draw2d.PolylineConnection"; //$NON-NLS-1$
@


1.3
log
@[mgolubev] #127252 layout support
@
text
@d17 1
d29 3
d50 16
@


1.2
log
@move towards more draw2d-like model
@
text
@d14 1
d17 2
d39 12
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d14 1
a14 1
import org.eclipse.gmf.gmfgraph.CustomFigure;
d32 1
a32 1
	public Object caseCustomFigure(CustomFigure object) {
@

