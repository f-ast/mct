head	1.41;
access;
symbols
	v20080813-1520:1.41
	v20080807-1333:1.39
	v20080806-1520:1.38
	v20080731-1520:1.36
	v20080722-1827:1.35
	v20080716-1642:1.35
	R2_1_maintenance:1.35.0.2
	Root_R2_1_maintenance:1.35
	R2_1_0:1.35
	v20080528-1052:1.35
	v20080521:1.34
	v20080425-1959:1.34
	v20080322-0000:1.33
	v20080222-1200:1.30
	v20080215-1500:1.30
	v20080207-0207:1.30
	v20071214-1111:1.30
	v20071003-0000:1.30
	v20070809-0000:1.30
	R2_0_maintenance:1.30.0.2
	R2_0:1.30
	R4_20:1.30
	v20070621-0000:1.30
	RC3_20:1.30
	v20070605-1400:1.30
	v20070601-1400:1.29
	v20070420-1000:1.28
	v20070330-1300:1.28
	v20070322-1100:1.28
	v20060316-0600:1.28
	v20070208-1800:1.27
	M4_20:1.27
	v20061214-0000:1.27
	M3_20:1.27
	v20061013-1330:1.25
	v20060919-0800:1.22
	M1_20:1.25
	v20060904-1500:1.25
	v20060713-1700:1.22
	R1_0_maintenance:1.22.0.2
	R1_0:1.22
	v20060627-1200:1.22
	v20060626-1420:1.22
	v20060616-1200:1.22
	v20060609-1400:1.22
	v20060531-1730:1.21
	v20060530-1930:1.21
	v20060526-1200:1.21
	v20060519-0800:1.20
	RC2_10:1.17
	I20060505-1400:1.17
	I20060424-0500:1.16
	I20060424-0300:1.16
	M6_10:1.14
	I20060407-1200:1.13
	I20060331-1000:1.12
	I20060324-0300:1.12
	I20060317-1300:1.12
	I20060317-1200:1.12
	I20060316-1300:1.12
	I20060309-1300:1.12
	M5_10:1.11
	S20060303-1600:1.11
	I20060227-1730:1.11
	I20060216-1945:1.8
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.3
	I20051223-1100:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.41
date	2008.08.12.13.56.28;	author dstadnik;	state Exp;
branches;
next	1.40;
commitid	9c048a195f54567;

1.40
date	2008.08.08.13.10.05;	author dstadnik;	state Exp;
branches;
next	1.39;
commitid	7ab0489c45454567;

1.39
date	2008.08.07.13.30.05;	author dstadnik;	state Exp;
branches;
next	1.38;
commitid	6568489af8d04567;

1.38
date	2008.08.05.12.42.36;	author dstadnik;	state Exp;
branches;
next	1.37;
commitid	18be48984a924567;

1.37
date	2008.08.04.12.45.55;	author dstadnik;	state Exp;
branches;
next	1.36;
commitid	6c424896f9ea4567;

1.36
date	2008.07.31.12.17.13;	author dstadnik;	state Exp;
branches;
next	1.35;
commitid	4bcc4891ad0b4567;

1.35
date	2008.05.21.16.42.10;	author atikhomirov;	state Exp;
branches;
next	1.34;
commitid	6f3c483450df4567;

1.34
date	2008.04.18.14.43.28;	author atikhomirov;	state Exp;
branches;
next	1.33;
commitid	2e444808b38e4567;

1.33
date	2008.03.04.16.50.41;	author atikhomirov;	state Exp;
branches;
next	1.32;
commitid	5e5b47cd7de04567;

1.32
date	2008.03.03.17.46.16;	author atikhomirov;	state Exp;
branches;
next	1.31;
commitid	169647cc39684567;

1.31
date	2008.03.03.17.45.12;	author atikhomirov;	state Exp;
branches;
next	1.30;
commitid	161547cc39274567;

1.30
date	2007.06.04.18.05.38;	author atikhomirov;	state Exp;
branches;
next	1.29;
commitid	1832466454714567;

1.29
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.28;
commitid	3de9465ada274567;

1.28
date	2007.03.14.12.59.17;	author atikhomirov;	state Exp;
branches;
next	1.27;
commitid	109645f7f19c4567;

1.27
date	2006.11.02.22.50.22;	author atikhomirov;	state Exp;
branches;
next	1.26;

1.26
date	2006.10.31.14.09.32;	author atikhomirov;	state Exp;
branches;
next	1.25;

1.25
date	2006.09.01.17.49.34;	author atikhomirov;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.25.18.33.02;	author atikhomirov;	state Exp;
branches;
next	1.23;

1.23
date	2006.08.24.15.38.45;	author atikhomirov;	state Exp;
branches;
next	1.22;

1.22
date	2006.06.05.14.26.30;	author ashatalin;	state Exp;
branches;
next	1.21;

1.21
date	2006.05.23.21.09.56;	author atikhomirov;	state Exp;
branches;
next	1.20;

1.20
date	2006.05.17.14.22.56;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.05.17.11.30.50;	author atikhomirov;	state Exp;
branches;
next	1.18;

1.18
date	2006.05.14.18.06.37;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.02.11.44.15;	author atikhomirov;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.20.13.59.38;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.20.12.16.51;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.10.12.14.11;	author atikhomirov;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.31.18.08.33;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.07.18.39.24;	author atikhomirov;	state Exp;
branches;
next	1.11;

1.11
date	2006.02.24.13.52.14;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.22.22.01.35;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.17.14.38.53;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.15.14.44.43;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.14.10.11.40;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.13.17.36.31;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.04.23.36.21;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.05.17.33.07;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.12.16.01;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.12.19.15.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.41
log
@[243879] allow to constrain canavs size
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.impl.EPackageImpl;
import org.eclipse.gmf.gmfgraph.AbstractFigure;
import org.eclipse.gmf.gmfgraph.AbstractNode;
import org.eclipse.gmf.gmfgraph.Alignment;
import org.eclipse.gmf.gmfgraph.AlignmentFacet;
import org.eclipse.gmf.gmfgraph.BasicFont;
import org.eclipse.gmf.gmfgraph.Border;
import org.eclipse.gmf.gmfgraph.BorderLayout;
import org.eclipse.gmf.gmfgraph.BorderLayoutData;
import org.eclipse.gmf.gmfgraph.BorderRef;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.gmfgraph.ChildAccess;
import org.eclipse.gmf.gmfgraph.Color;
import org.eclipse.gmf.gmfgraph.ColorConstants;
import org.eclipse.gmf.gmfgraph.Compartment;
import org.eclipse.gmf.gmfgraph.CompoundBorder;
import org.eclipse.gmf.gmfgraph.Connection;
import org.eclipse.gmf.gmfgraph.ConnectionFigure;
import org.eclipse.gmf.gmfgraph.ConstantColor;
import org.eclipse.gmf.gmfgraph.CustomAttribute;
import org.eclipse.gmf.gmfgraph.CustomBorder;
import org.eclipse.gmf.gmfgraph.CustomClass;
import org.eclipse.gmf.gmfgraph.CustomConnection;
import org.eclipse.gmf.gmfgraph.CustomDecoration;
import org.eclipse.gmf.gmfgraph.CustomFigure;
import org.eclipse.gmf.gmfgraph.CustomLayout;
import org.eclipse.gmf.gmfgraph.CustomLayoutData;
import org.eclipse.gmf.gmfgraph.DecorationFigure;
import org.eclipse.gmf.gmfgraph.DefaultSizeFacet;
import org.eclipse.gmf.gmfgraph.DiagramElement;
import org.eclipse.gmf.gmfgraph.DiagramLabel;
import org.eclipse.gmf.gmfgraph.Dimension;
import org.eclipse.gmf.gmfgraph.Direction;
import org.eclipse.gmf.gmfgraph.Ellipse;
import org.eclipse.gmf.gmfgraph.Figure;
import org.eclipse.gmf.gmfgraph.FigureAccessor;
import org.eclipse.gmf.gmfgraph.FigureDescriptor;
import org.eclipse.gmf.gmfgraph.FigureGallery;
import org.eclipse.gmf.gmfgraph.FigureRef;
import org.eclipse.gmf.gmfgraph.FlowLayout;
import org.eclipse.gmf.gmfgraph.Font;
import org.eclipse.gmf.gmfgraph.FontStyle;
import org.eclipse.gmf.gmfgraph.GMFGraphFactory;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.GeneralFacet;
import org.eclipse.gmf.gmfgraph.GradientFacet;
import org.eclipse.gmf.gmfgraph.GridLayout;
import org.eclipse.gmf.gmfgraph.GridLayoutData;
import org.eclipse.gmf.gmfgraph.Identity;
import org.eclipse.gmf.gmfgraph.Insets;
import org.eclipse.gmf.gmfgraph.Label;
import org.eclipse.gmf.gmfgraph.LabelOffsetFacet;
import org.eclipse.gmf.gmfgraph.LabeledContainer;
import org.eclipse.gmf.gmfgraph.Layout;
import org.eclipse.gmf.gmfgraph.LayoutData;
import org.eclipse.gmf.gmfgraph.LayoutRef;
import org.eclipse.gmf.gmfgraph.Layoutable;
import org.eclipse.gmf.gmfgraph.LineBorder;
import org.eclipse.gmf.gmfgraph.LineKind;
import org.eclipse.gmf.gmfgraph.MarginBorder;
import org.eclipse.gmf.gmfgraph.Node;
import org.eclipse.gmf.gmfgraph.Point;
import org.eclipse.gmf.gmfgraph.Polygon;
import org.eclipse.gmf.gmfgraph.PolygonDecoration;
import org.eclipse.gmf.gmfgraph.Polyline;
import org.eclipse.gmf.gmfgraph.PolylineConnection;
import org.eclipse.gmf.gmfgraph.PolylineDecoration;
import org.eclipse.gmf.gmfgraph.RGBColor;
import org.eclipse.gmf.gmfgraph.RealFigure;
import org.eclipse.gmf.gmfgraph.Rectangle;
import org.eclipse.gmf.gmfgraph.Rectangle2D;
import org.eclipse.gmf.gmfgraph.RoundedRectangle;
import org.eclipse.gmf.gmfgraph.SVGFigure;
import org.eclipse.gmf.gmfgraph.SVGProperty;
import org.eclipse.gmf.gmfgraph.SVGPropertyType;
import org.eclipse.gmf.gmfgraph.ScalablePolygon;
import org.eclipse.gmf.gmfgraph.Shape;
import org.eclipse.gmf.gmfgraph.StackLayout;
import org.eclipse.gmf.gmfgraph.VisualFacet;
import org.eclipse.gmf.gmfgraph.XYLayout;
import org.eclipse.gmf.gmfgraph.XYLayoutData;
import org.eclipse.gmf.gmfgraph.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @@generated
 */
public class GMFGraphPackageImpl extends EPackageImpl implements GMFGraphPackage {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass canvasEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass figureGalleryEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass identityEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass diagramElementEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass abstractNodeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass nodeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass childAccessEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass realFigureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass connectionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass compartmentEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass diagramLabelEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass visualFacetEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass generalFacetEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass alignmentFacetEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass gradientFacetEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass labelOffsetFacetEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass defaultSizeFacetEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass figureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass figureDescriptorEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass abstractFigureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass figureRefEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass connectionFigureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass decorationFigureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass shapeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass labelEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass labeledContainerEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass rectangleEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass roundedRectangleEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass ellipseEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass polylineEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass polygonEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass scalablePolygonEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass polylineConnectionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass polylineDecorationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass polygonDecorationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customClassEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customFigureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customDecorationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customConnectionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass colorEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass rgbColorEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass constantColorEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass fontEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass basicFontEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass pointEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass dimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass insetsEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass borderEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass borderRefEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass lineBorderEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass marginBorderEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass compoundBorderEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customBorderEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass layoutDataEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customLayoutDataEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass gridLayoutDataEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass borderLayoutDataEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass layoutableEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass layoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass layoutRefEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customLayoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass gridLayoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass borderLayoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass customAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass figureAccessorEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass flowLayoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass xyLayoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass xyLayoutDataEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass stackLayoutEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass svgFigureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass svgPropertyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EClass rectangle2DEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EEnum colorConstantsEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EEnum fontStyleEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EEnum directionEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EEnum lineKindEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EEnum alignmentEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private EEnum svgPropertyTypeEEnum = null;

	/**
	 * Creates an instance of the model <b>Package</b>, registered with
	 * {@@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
	 * package URI value.
	 * <p>Note: the correct way to create the package is via the static
	 * factory method {@@link #init init()}, which also performs
	 * initialization of the package, or returns the registered package,
	 * if one already exists.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see org.eclipse.emf.ecore.EPackage.Registry
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#eNS_URI
	 * @@see #init()
	 * @@generated
	 */
	private GMFGraphPackageImpl() {
		super(eNS_URI, GMFGraphFactory.eINSTANCE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private static boolean isInited = false;

	/**
	 * Creates, registers, and initializes the <b>Package</b> for this
	 * model, and for any others upon which it depends.  Simple
	 * dependencies are satisfied by calling this method on all
	 * dependent packages before doing anything else.  This method drives
	 * initialization for interdependent packages directly, in parallel
	 * with this package, itself.
	 * <p>Of this package and its interdependencies, all packages which
	 * have not yet been registered by their URI values are first created
	 * and registered.  The packages are then initialized in two steps:
	 * meta-model objects for all of the packages are created before any
	 * are initialized, since one package's meta-model objects may refer to
	 * those of another.
	 * <p>Invocation of this method will not affect any packages that have
	 * already been initialized.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #eNS_URI
	 * @@see #createPackageContents()
	 * @@see #initializePackageContents()
	 * @@generated
	 */
	public static GMFGraphPackage init() {
		if (isInited) return (GMFGraphPackage)EPackage.Registry.INSTANCE.getEPackage(GMFGraphPackage.eNS_URI);

		// Obtain or create and register package
		GMFGraphPackageImpl theGMFGraphPackage = (GMFGraphPackageImpl)(EPackage.Registry.INSTANCE.getEPackage(eNS_URI) instanceof GMFGraphPackageImpl ? EPackage.Registry.INSTANCE.getEPackage(eNS_URI) : new GMFGraphPackageImpl());

		isInited = true;

		// Create package meta-data objects
		theGMFGraphPackage.createPackageContents();

		// Initialize created meta-data
		theGMFGraphPackage.initializePackageContents();

		// Mark meta-data to indicate it can't be changed
		theGMFGraphPackage.freeze();

		return theGMFGraphPackage;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCanvas() {
		return canvasEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCanvas_Figures() {
		return (EReference)canvasEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCanvas_Nodes() {
		return (EReference)canvasEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCanvas_Connections() {
		return (EReference)canvasEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCanvas_Compartments() {
		return (EReference)canvasEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCanvas_Labels() {
		return (EReference)canvasEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFigureGallery() {
		return figureGalleryEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureGallery_Figures() {
		return (EReference)figureGalleryEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureGallery_Descriptors() {
		return (EReference)figureGalleryEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureGallery_Borders() {
		return (EReference)figureGalleryEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureGallery_Layouts() {
		return (EReference)figureGalleryEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFigureGallery_ImplementationBundle() {
		return (EAttribute)figureGalleryEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getIdentity() {
		return identityEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getIdentity_Name() {
		return (EAttribute)identityEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDiagramElement() {
		return diagramElementEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getDiagramElement_Figure() {
		return (EReference)diagramElementEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getDiagramElement_Facets() {
		return (EReference)diagramElementEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getAbstractNode() {
		return abstractNodeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getNode() {
		return nodeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getNode_ResizeConstraint() {
		return (EAttribute)nodeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getNode_AffixedParentSide() {
		return (EAttribute)nodeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getNode_ContentPane() {
		return (EReference)nodeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getChildAccess() {
		return childAccessEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getChildAccess_Owner() {
		return (EReference)childAccessEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getChildAccess_Accessor() {
		return (EAttribute)childAccessEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getChildAccess_Figure() {
		return (EReference)childAccessEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getRealFigure() {
		return realFigureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRealFigure_Name() {
		return (EAttribute)realFigureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getRealFigure_Children() {
		return (EReference)realFigureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getConnection() {
		return connectionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCompartment() {
		return compartmentEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCompartment_Collapsible() {
		return (EAttribute)compartmentEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCompartment_NeedsTitle() {
		return (EAttribute)compartmentEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCompartment_Accessor() {
		return (EReference)compartmentEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDiagramLabel() {
		return diagramLabelEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getDiagramLabel_ElementIcon() {
		return (EAttribute)diagramLabelEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getDiagramLabel_Accessor() {
		return (EReference)diagramLabelEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getDiagramLabel_Container() {
		return (EReference)diagramLabelEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getDiagramLabel_External() {
		return (EAttribute)diagramLabelEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getVisualFacet() {
		return visualFacetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getGeneralFacet() {
		return generalFacetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGeneralFacet_Identifier() {
		return (EAttribute)generalFacetEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGeneralFacet_Data() {
		return (EAttribute)generalFacetEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getAlignmentFacet() {
		return alignmentFacetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getAlignmentFacet_Alignment() {
		return (EAttribute)alignmentFacetEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getGradientFacet() {
		return gradientFacetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGradientFacet_Direction() {
		return (EAttribute)gradientFacetEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLabelOffsetFacet() {
		return labelOffsetFacetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getLabelOffsetFacet_X() {
		return (EAttribute)labelOffsetFacetEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getLabelOffsetFacet_Y() {
		return (EAttribute)labelOffsetFacetEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDefaultSizeFacet() {
		return defaultSizeFacetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getDefaultSizeFacet_DefaultSize() {
		return (EReference)defaultSizeFacetEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFigure() {
		return figureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_Descriptor() {
		return (EReference)figureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_ForegroundColor() {
		return (EReference)figureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_BackgroundColor() {
		return (EReference)figureEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_MaximumSize() {
		return (EReference)figureEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_MinimumSize() {
		return (EReference)figureEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_PreferredSize() {
		return (EReference)figureEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_Font() {
		return (EReference)figureEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_Insets() {
		return (EReference)figureEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_Border() {
		return (EReference)figureEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_Location() {
		return (EReference)figureEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigure_Size() {
		return (EReference)figureEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFigureDescriptor() {
		return figureDescriptorEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureDescriptor_ActualFigure() {
		return (EReference)figureDescriptorEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureDescriptor_Accessors() {
		return (EReference)figureDescriptorEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getAbstractFigure() {
		return abstractFigureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFigureRef() {
		return figureRefEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureRef_Figure() {
		return (EReference)figureRefEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getConnectionFigure() {
		return connectionFigureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDecorationFigure() {
		return decorationFigureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getShape() {
		return shapeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getShape_Outline() {
		return (EAttribute)shapeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getShape_Fill() {
		return (EAttribute)shapeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getShape_LineWidth() {
		return (EAttribute)shapeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getShape_LineKind() {
		return (EAttribute)shapeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getShape_XorFill() {
		return (EAttribute)shapeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getShape_XorOutline() {
		return (EAttribute)shapeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getShape_ResolvedChildren() {
		return (EReference)shapeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLabel() {
		return labelEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getLabel_Text() {
		return (EAttribute)labelEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLabeledContainer() {
		return labeledContainerEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getRectangle() {
		return rectangleEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getRoundedRectangle() {
		return roundedRectangleEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRoundedRectangle_CornerWidth() {
		return (EAttribute)roundedRectangleEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRoundedRectangle_CornerHeight() {
		return (EAttribute)roundedRectangleEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getEllipse() {
		return ellipseEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getPolyline() {
		return polylineEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getPolyline_Template() {
		return (EReference)polylineEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getPolygon() {
		return polygonEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getScalablePolygon() {
		return scalablePolygonEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getPolylineConnection() {
		return polylineConnectionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getPolylineConnection_SourceDecoration() {
		return (EReference)polylineConnectionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getPolylineConnection_TargetDecoration() {
		return (EReference)polylineConnectionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getPolylineDecoration() {
		return polylineDecorationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getPolygonDecoration() {
		return polygonDecorationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomClass() {
		return customClassEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCustomClass_QualifiedClassName() {
		return (EAttribute)customClassEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCustomClass_Attributes() {
		return (EReference)customClassEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomFigure() {
		return customFigureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCustomFigure_CustomChildren() {
		return (EReference)customFigureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomDecoration() {
		return customDecorationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomConnection() {
		return customConnectionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getColor() {
		return colorEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getRGBColor() {
		return rgbColorEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRGBColor_Red() {
		return (EAttribute)rgbColorEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRGBColor_Green() {
		return (EAttribute)rgbColorEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRGBColor_Blue() {
		return (EAttribute)rgbColorEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getConstantColor() {
		return constantColorEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getConstantColor_Value() {
		return (EAttribute)constantColorEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFont() {
		return fontEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getBasicFont() {
		return basicFontEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getBasicFont_FaceName() {
		return (EAttribute)basicFontEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getBasicFont_Height() {
		return (EAttribute)basicFontEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getBasicFont_Style() {
		return (EAttribute)basicFontEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EEnum getFontStyle() {
		return fontStyleEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getPoint() {
		return pointEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getPoint_X() {
		return (EAttribute)pointEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getPoint_Y() {
		return (EAttribute)pointEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getDimension() {
		return dimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getDimension_Dx() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getDimension_Dy() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getInsets() {
		return insetsEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getInsets_Top() {
		return (EAttribute)insetsEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getInsets_Left() {
		return (EAttribute)insetsEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getInsets_Bottom() {
		return (EAttribute)insetsEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getInsets_Right() {
		return (EAttribute)insetsEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getBorder() {
		return borderEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getBorderRef() {
		return borderRefEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getBorderRef_Actual() {
		return (EReference)borderRefEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLineBorder() {
		return lineBorderEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getLineBorder_Color() {
		return (EReference)lineBorderEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getLineBorder_Width() {
		return (EAttribute)lineBorderEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getMarginBorder() {
		return marginBorderEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getMarginBorder_Insets() {
		return (EReference)marginBorderEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCompoundBorder() {
		return compoundBorderEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCompoundBorder_Outer() {
		return (EReference)compoundBorderEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getCompoundBorder_Inner() {
		return (EReference)compoundBorderEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomBorder() {
		return customBorderEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLayoutData() {
		return layoutDataEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getLayoutData_Owner() {
		return (EReference)layoutDataEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomLayoutData() {
		return customLayoutDataEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getGridLayoutData() {
		return gridLayoutDataEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_GrabExcessHorizontalSpace() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_GrabExcessVerticalSpace() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_VerticalAlignment() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_HorizontalAlignment() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_VerticalSpan() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_HorizontalSpan() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayoutData_HorizontalIndent() {
		return (EAttribute)gridLayoutDataEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getGridLayoutData_SizeHint() {
		return (EReference)gridLayoutDataEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getBorderLayoutData() {
		return borderLayoutDataEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getBorderLayoutData_Alignment() {
		return (EAttribute)borderLayoutDataEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getBorderLayoutData_Vertical() {
		return (EAttribute)borderLayoutDataEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLayoutable() {
		return layoutableEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getLayoutable_LayoutData() {
		return (EReference)layoutableEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getLayoutable_Layout() {
		return (EReference)layoutableEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLayout() {
		return layoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getLayoutRef() {
		return layoutRefEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getLayoutRef_Actual() {
		return (EReference)layoutRefEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomLayout() {
		return customLayoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getGridLayout() {
		return gridLayoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayout_NumColumns() {
		return (EAttribute)gridLayoutEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getGridLayout_EqualWidth() {
		return (EAttribute)gridLayoutEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getGridLayout_Margins() {
		return (EReference)gridLayoutEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getGridLayout_Spacing() {
		return (EReference)gridLayoutEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getBorderLayout() {
		return borderLayoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getBorderLayout_Spacing() {
		return (EReference)borderLayoutEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getCustomAttribute() {
		return customAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCustomAttribute_Name() {
		return (EAttribute)customAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCustomAttribute_Value() {
		return (EAttribute)customAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCustomAttribute_DirectAccess() {
		return (EAttribute)customAttributeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getCustomAttribute_MultiStatementValue() {
		return (EAttribute)customAttributeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFigureAccessor() {
		return figureAccessorEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFigureAccessor_Accessor() {
		return (EAttribute)figureAccessorEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getFigureAccessor_TypedFigure() {
		return (EReference)figureAccessorEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getFlowLayout() {
		return flowLayoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_Vertical() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_MatchMinorSize() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_ForceSingleLine() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_MajorAlignment() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_MinorAlignment() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_MajorSpacing() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getFlowLayout_MinorSpacing() {
		return (EAttribute)flowLayoutEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getXYLayout() {
		return xyLayoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getXYLayoutData() {
		return xyLayoutDataEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getXYLayoutData_TopLeft() {
		return (EReference)xyLayoutDataEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getXYLayoutData_Size() {
		return (EReference)xyLayoutDataEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getStackLayout() {
		return stackLayoutEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getSVGFigure() {
		return svgFigureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGFigure_DocumentURI() {
		return (EAttribute)svgFigureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getSVGFigure_Properties() {
		return (EReference)svgFigureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EReference getSVGFigure_AreaOfInterest() {
		return (EReference)svgFigureEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGFigure_NoCanvasWidth() {
		return (EAttribute)svgFigureEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGFigure_NoCanvasHeight() {
		return (EAttribute)svgFigureEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getSVGProperty() {
		return svgPropertyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGProperty_Query() {
		return (EAttribute)svgPropertyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGProperty_Attribute() {
		return (EAttribute)svgPropertyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGProperty_Type() {
		return (EAttribute)svgPropertyEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGProperty_Getter() {
		return (EAttribute)svgPropertyEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGProperty_Setter() {
		return (EAttribute)svgPropertyEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getSVGProperty_CallSuper() {
		return (EAttribute)svgPropertyEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EClass getRectangle2D() {
		return rectangle2DEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRectangle2D_X() {
		return (EAttribute)rectangle2DEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRectangle2D_Y() {
		return (EAttribute)rectangle2DEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRectangle2D_Width() {
		return (EAttribute)rectangle2DEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EAttribute getRectangle2D_Height() {
		return (EAttribute)rectangle2DEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EEnum getColorConstants() {
		return colorConstantsEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EEnum getDirection() {
		return directionEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EEnum getLineKind() {
		return lineKindEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EEnum getAlignment() {
		return alignmentEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EEnum getSVGPropertyType() {
		return svgPropertyTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public GMFGraphFactory getGMFGraphFactory() {
		return (GMFGraphFactory)getEFactoryInstance();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private boolean isCreated = false;

	/**
	 * Creates the meta-model objects for the package.  This method is
	 * guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void createPackageContents() {
		if (isCreated) return;
		isCreated = true;

		// Create classes and their features
		canvasEClass = createEClass(CANVAS);
		createEReference(canvasEClass, CANVAS__FIGURES);
		createEReference(canvasEClass, CANVAS__NODES);
		createEReference(canvasEClass, CANVAS__CONNECTIONS);
		createEReference(canvasEClass, CANVAS__COMPARTMENTS);
		createEReference(canvasEClass, CANVAS__LABELS);

		figureGalleryEClass = createEClass(FIGURE_GALLERY);
		createEReference(figureGalleryEClass, FIGURE_GALLERY__FIGURES);
		createEReference(figureGalleryEClass, FIGURE_GALLERY__DESCRIPTORS);
		createEReference(figureGalleryEClass, FIGURE_GALLERY__BORDERS);
		createEReference(figureGalleryEClass, FIGURE_GALLERY__LAYOUTS);
		createEAttribute(figureGalleryEClass, FIGURE_GALLERY__IMPLEMENTATION_BUNDLE);

		identityEClass = createEClass(IDENTITY);
		createEAttribute(identityEClass, IDENTITY__NAME);

		diagramElementEClass = createEClass(DIAGRAM_ELEMENT);
		createEReference(diagramElementEClass, DIAGRAM_ELEMENT__FIGURE);
		createEReference(diagramElementEClass, DIAGRAM_ELEMENT__FACETS);

		abstractNodeEClass = createEClass(ABSTRACT_NODE);

		nodeEClass = createEClass(NODE);
		createEAttribute(nodeEClass, NODE__RESIZE_CONSTRAINT);
		createEAttribute(nodeEClass, NODE__AFFIXED_PARENT_SIDE);
		createEReference(nodeEClass, NODE__CONTENT_PANE);

		connectionEClass = createEClass(CONNECTION);

		compartmentEClass = createEClass(COMPARTMENT);
		createEAttribute(compartmentEClass, COMPARTMENT__COLLAPSIBLE);
		createEAttribute(compartmentEClass, COMPARTMENT__NEEDS_TITLE);
		createEReference(compartmentEClass, COMPARTMENT__ACCESSOR);

		diagramLabelEClass = createEClass(DIAGRAM_LABEL);
		createEAttribute(diagramLabelEClass, DIAGRAM_LABEL__ELEMENT_ICON);
		createEReference(diagramLabelEClass, DIAGRAM_LABEL__ACCESSOR);
		createEReference(diagramLabelEClass, DIAGRAM_LABEL__CONTAINER);
		createEAttribute(diagramLabelEClass, DIAGRAM_LABEL__EXTERNAL);

		visualFacetEClass = createEClass(VISUAL_FACET);

		generalFacetEClass = createEClass(GENERAL_FACET);
		createEAttribute(generalFacetEClass, GENERAL_FACET__IDENTIFIER);
		createEAttribute(generalFacetEClass, GENERAL_FACET__DATA);

		alignmentFacetEClass = createEClass(ALIGNMENT_FACET);
		createEAttribute(alignmentFacetEClass, ALIGNMENT_FACET__ALIGNMENT);

		gradientFacetEClass = createEClass(GRADIENT_FACET);
		createEAttribute(gradientFacetEClass, GRADIENT_FACET__DIRECTION);

		labelOffsetFacetEClass = createEClass(LABEL_OFFSET_FACET);
		createEAttribute(labelOffsetFacetEClass, LABEL_OFFSET_FACET__X);
		createEAttribute(labelOffsetFacetEClass, LABEL_OFFSET_FACET__Y);

		defaultSizeFacetEClass = createEClass(DEFAULT_SIZE_FACET);
		createEReference(defaultSizeFacetEClass, DEFAULT_SIZE_FACET__DEFAULT_SIZE);

		figureEClass = createEClass(FIGURE);
		createEReference(figureEClass, FIGURE__DESCRIPTOR);
		createEReference(figureEClass, FIGURE__FOREGROUND_COLOR);
		createEReference(figureEClass, FIGURE__BACKGROUND_COLOR);
		createEReference(figureEClass, FIGURE__MAXIMUM_SIZE);
		createEReference(figureEClass, FIGURE__MINIMUM_SIZE);
		createEReference(figureEClass, FIGURE__PREFERRED_SIZE);
		createEReference(figureEClass, FIGURE__FONT);
		createEReference(figureEClass, FIGURE__INSETS);
		createEReference(figureEClass, FIGURE__BORDER);
		createEReference(figureEClass, FIGURE__LOCATION);
		createEReference(figureEClass, FIGURE__SIZE);

		abstractFigureEClass = createEClass(ABSTRACT_FIGURE);

		figureDescriptorEClass = createEClass(FIGURE_DESCRIPTOR);
		createEReference(figureDescriptorEClass, FIGURE_DESCRIPTOR__ACTUAL_FIGURE);
		createEReference(figureDescriptorEClass, FIGURE_DESCRIPTOR__ACCESSORS);

		childAccessEClass = createEClass(CHILD_ACCESS);
		createEReference(childAccessEClass, CHILD_ACCESS__OWNER);
		createEAttribute(childAccessEClass, CHILD_ACCESS__ACCESSOR);
		createEReference(childAccessEClass, CHILD_ACCESS__FIGURE);

		realFigureEClass = createEClass(REAL_FIGURE);
		createEAttribute(realFigureEClass, REAL_FIGURE__NAME);
		createEReference(realFigureEClass, REAL_FIGURE__CHILDREN);

		figureRefEClass = createEClass(FIGURE_REF);
		createEReference(figureRefEClass, FIGURE_REF__FIGURE);

		connectionFigureEClass = createEClass(CONNECTION_FIGURE);

		decorationFigureEClass = createEClass(DECORATION_FIGURE);

		shapeEClass = createEClass(SHAPE);
		createEAttribute(shapeEClass, SHAPE__OUTLINE);
		createEAttribute(shapeEClass, SHAPE__FILL);
		createEAttribute(shapeEClass, SHAPE__LINE_WIDTH);
		createEAttribute(shapeEClass, SHAPE__LINE_KIND);
		createEAttribute(shapeEClass, SHAPE__XOR_FILL);
		createEAttribute(shapeEClass, SHAPE__XOR_OUTLINE);
		createEReference(shapeEClass, SHAPE__RESOLVED_CHILDREN);

		labelEClass = createEClass(LABEL);
		createEAttribute(labelEClass, LABEL__TEXT);

		labeledContainerEClass = createEClass(LABELED_CONTAINER);

		rectangleEClass = createEClass(RECTANGLE);

		roundedRectangleEClass = createEClass(ROUNDED_RECTANGLE);
		createEAttribute(roundedRectangleEClass, ROUNDED_RECTANGLE__CORNER_WIDTH);
		createEAttribute(roundedRectangleEClass, ROUNDED_RECTANGLE__CORNER_HEIGHT);

		ellipseEClass = createEClass(ELLIPSE);

		polylineEClass = createEClass(POLYLINE);
		createEReference(polylineEClass, POLYLINE__TEMPLATE);

		polygonEClass = createEClass(POLYGON);

		scalablePolygonEClass = createEClass(SCALABLE_POLYGON);

		polylineConnectionEClass = createEClass(POLYLINE_CONNECTION);
		createEReference(polylineConnectionEClass, POLYLINE_CONNECTION__SOURCE_DECORATION);
		createEReference(polylineConnectionEClass, POLYLINE_CONNECTION__TARGET_DECORATION);

		polylineDecorationEClass = createEClass(POLYLINE_DECORATION);

		polygonDecorationEClass = createEClass(POLYGON_DECORATION);

		customClassEClass = createEClass(CUSTOM_CLASS);
		createEAttribute(customClassEClass, CUSTOM_CLASS__QUALIFIED_CLASS_NAME);
		createEReference(customClassEClass, CUSTOM_CLASS__ATTRIBUTES);

		customAttributeEClass = createEClass(CUSTOM_ATTRIBUTE);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__NAME);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__VALUE);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__DIRECT_ACCESS);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__MULTI_STATEMENT_VALUE);

		figureAccessorEClass = createEClass(FIGURE_ACCESSOR);
		createEAttribute(figureAccessorEClass, FIGURE_ACCESSOR__ACCESSOR);
		createEReference(figureAccessorEClass, FIGURE_ACCESSOR__TYPED_FIGURE);

		customFigureEClass = createEClass(CUSTOM_FIGURE);
		createEReference(customFigureEClass, CUSTOM_FIGURE__CUSTOM_CHILDREN);

		customDecorationEClass = createEClass(CUSTOM_DECORATION);

		customConnectionEClass = createEClass(CUSTOM_CONNECTION);

		colorEClass = createEClass(COLOR);

		rgbColorEClass = createEClass(RGB_COLOR);
		createEAttribute(rgbColorEClass, RGB_COLOR__RED);
		createEAttribute(rgbColorEClass, RGB_COLOR__GREEN);
		createEAttribute(rgbColorEClass, RGB_COLOR__BLUE);

		constantColorEClass = createEClass(CONSTANT_COLOR);
		createEAttribute(constantColorEClass, CONSTANT_COLOR__VALUE);

		fontEClass = createEClass(FONT);

		basicFontEClass = createEClass(BASIC_FONT);
		createEAttribute(basicFontEClass, BASIC_FONT__FACE_NAME);
		createEAttribute(basicFontEClass, BASIC_FONT__HEIGHT);
		createEAttribute(basicFontEClass, BASIC_FONT__STYLE);

		pointEClass = createEClass(POINT);
		createEAttribute(pointEClass, POINT__X);
		createEAttribute(pointEClass, POINT__Y);

		dimensionEClass = createEClass(DIMENSION);
		createEAttribute(dimensionEClass, DIMENSION__DX);
		createEAttribute(dimensionEClass, DIMENSION__DY);

		insetsEClass = createEClass(INSETS);
		createEAttribute(insetsEClass, INSETS__TOP);
		createEAttribute(insetsEClass, INSETS__LEFT);
		createEAttribute(insetsEClass, INSETS__BOTTOM);
		createEAttribute(insetsEClass, INSETS__RIGHT);

		borderEClass = createEClass(BORDER);

		borderRefEClass = createEClass(BORDER_REF);
		createEReference(borderRefEClass, BORDER_REF__ACTUAL);

		lineBorderEClass = createEClass(LINE_BORDER);
		createEReference(lineBorderEClass, LINE_BORDER__COLOR);
		createEAttribute(lineBorderEClass, LINE_BORDER__WIDTH);

		marginBorderEClass = createEClass(MARGIN_BORDER);
		createEReference(marginBorderEClass, MARGIN_BORDER__INSETS);

		compoundBorderEClass = createEClass(COMPOUND_BORDER);
		createEReference(compoundBorderEClass, COMPOUND_BORDER__OUTER);
		createEReference(compoundBorderEClass, COMPOUND_BORDER__INNER);

		customBorderEClass = createEClass(CUSTOM_BORDER);

		layoutDataEClass = createEClass(LAYOUT_DATA);
		createEReference(layoutDataEClass, LAYOUT_DATA__OWNER);

		customLayoutDataEClass = createEClass(CUSTOM_LAYOUT_DATA);

		gridLayoutDataEClass = createEClass(GRID_LAYOUT_DATA);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__GRAB_EXCESS_HORIZONTAL_SPACE);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__GRAB_EXCESS_VERTICAL_SPACE);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__VERTICAL_ALIGNMENT);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__HORIZONTAL_ALIGNMENT);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__VERTICAL_SPAN);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__HORIZONTAL_SPAN);
		createEAttribute(gridLayoutDataEClass, GRID_LAYOUT_DATA__HORIZONTAL_INDENT);
		createEReference(gridLayoutDataEClass, GRID_LAYOUT_DATA__SIZE_HINT);

		borderLayoutDataEClass = createEClass(BORDER_LAYOUT_DATA);
		createEAttribute(borderLayoutDataEClass, BORDER_LAYOUT_DATA__ALIGNMENT);
		createEAttribute(borderLayoutDataEClass, BORDER_LAYOUT_DATA__VERTICAL);

		layoutableEClass = createEClass(LAYOUTABLE);
		createEReference(layoutableEClass, LAYOUTABLE__LAYOUT_DATA);
		createEReference(layoutableEClass, LAYOUTABLE__LAYOUT);

		layoutEClass = createEClass(LAYOUT);

		layoutRefEClass = createEClass(LAYOUT_REF);
		createEReference(layoutRefEClass, LAYOUT_REF__ACTUAL);

		customLayoutEClass = createEClass(CUSTOM_LAYOUT);

		gridLayoutEClass = createEClass(GRID_LAYOUT);
		createEAttribute(gridLayoutEClass, GRID_LAYOUT__NUM_COLUMNS);
		createEAttribute(gridLayoutEClass, GRID_LAYOUT__EQUAL_WIDTH);
		createEReference(gridLayoutEClass, GRID_LAYOUT__MARGINS);
		createEReference(gridLayoutEClass, GRID_LAYOUT__SPACING);

		borderLayoutEClass = createEClass(BORDER_LAYOUT);
		createEReference(borderLayoutEClass, BORDER_LAYOUT__SPACING);

		flowLayoutEClass = createEClass(FLOW_LAYOUT);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__VERTICAL);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__MATCH_MINOR_SIZE);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__FORCE_SINGLE_LINE);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__MAJOR_ALIGNMENT);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__MINOR_ALIGNMENT);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__MAJOR_SPACING);
		createEAttribute(flowLayoutEClass, FLOW_LAYOUT__MINOR_SPACING);

		xyLayoutEClass = createEClass(XY_LAYOUT);

		xyLayoutDataEClass = createEClass(XY_LAYOUT_DATA);
		createEReference(xyLayoutDataEClass, XY_LAYOUT_DATA__TOP_LEFT);
		createEReference(xyLayoutDataEClass, XY_LAYOUT_DATA__SIZE);

		stackLayoutEClass = createEClass(STACK_LAYOUT);

		svgFigureEClass = createEClass(SVG_FIGURE);
		createEAttribute(svgFigureEClass, SVG_FIGURE__DOCUMENT_URI);
		createEReference(svgFigureEClass, SVG_FIGURE__PROPERTIES);
		createEReference(svgFigureEClass, SVG_FIGURE__AREA_OF_INTEREST);
		createEAttribute(svgFigureEClass, SVG_FIGURE__NO_CANVAS_WIDTH);
		createEAttribute(svgFigureEClass, SVG_FIGURE__NO_CANVAS_HEIGHT);

		svgPropertyEClass = createEClass(SVG_PROPERTY);
		createEAttribute(svgPropertyEClass, SVG_PROPERTY__QUERY);
		createEAttribute(svgPropertyEClass, SVG_PROPERTY__ATTRIBUTE);
		createEAttribute(svgPropertyEClass, SVG_PROPERTY__TYPE);
		createEAttribute(svgPropertyEClass, SVG_PROPERTY__GETTER);
		createEAttribute(svgPropertyEClass, SVG_PROPERTY__SETTER);
		createEAttribute(svgPropertyEClass, SVG_PROPERTY__CALL_SUPER);

		rectangle2DEClass = createEClass(RECTANGLE2_D);
		createEAttribute(rectangle2DEClass, RECTANGLE2_D__X);
		createEAttribute(rectangle2DEClass, RECTANGLE2_D__Y);
		createEAttribute(rectangle2DEClass, RECTANGLE2_D__WIDTH);
		createEAttribute(rectangle2DEClass, RECTANGLE2_D__HEIGHT);

		// Create enums
		colorConstantsEEnum = createEEnum(COLOR_CONSTANTS);
		fontStyleEEnum = createEEnum(FONT_STYLE);
		directionEEnum = createEEnum(DIRECTION);
		lineKindEEnum = createEEnum(LINE_KIND);
		alignmentEEnum = createEEnum(ALIGNMENT);
		svgPropertyTypeEEnum = createEEnum(SVG_PROPERTY_TYPE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	private boolean isInitialized = false;

	/**
	 * Complete the initialization of the package and its meta-model.  This
	 * method is guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void initializePackageContents() {
		if (isInitialized) return;
		isInitialized = true;

		// Initialize package
		setName(eNAME);
		setNsPrefix(eNS_PREFIX);
		setNsURI(eNS_URI);

		// Create type parameters

		// Set bounds for type parameters

		// Add supertypes to classes
		canvasEClass.getESuperTypes().add(this.getIdentity());
		figureGalleryEClass.getESuperTypes().add(this.getIdentity());
		diagramElementEClass.getESuperTypes().add(this.getIdentity());
		abstractNodeEClass.getESuperTypes().add(this.getDiagramElement());
		nodeEClass.getESuperTypes().add(this.getAbstractNode());
		connectionEClass.getESuperTypes().add(this.getDiagramElement());
		compartmentEClass.getESuperTypes().add(this.getDiagramElement());
		diagramLabelEClass.getESuperTypes().add(this.getNode());
		generalFacetEClass.getESuperTypes().add(this.getVisualFacet());
		alignmentFacetEClass.getESuperTypes().add(this.getVisualFacet());
		gradientFacetEClass.getESuperTypes().add(this.getVisualFacet());
		labelOffsetFacetEClass.getESuperTypes().add(this.getVisualFacet());
		defaultSizeFacetEClass.getESuperTypes().add(this.getVisualFacet());
		figureEClass.getESuperTypes().add(this.getLayoutable());
		abstractFigureEClass.getESuperTypes().add(this.getFigure());
		figureDescriptorEClass.getESuperTypes().add(this.getIdentity());
		realFigureEClass.getESuperTypes().add(this.getAbstractFigure());
		figureRefEClass.getESuperTypes().add(this.getAbstractFigure());
		connectionFigureEClass.getESuperTypes().add(this.getRealFigure());
		decorationFigureEClass.getESuperTypes().add(this.getRealFigure());
		shapeEClass.getESuperTypes().add(this.getRealFigure());
		labelEClass.getESuperTypes().add(this.getRealFigure());
		labeledContainerEClass.getESuperTypes().add(this.getRealFigure());
		rectangleEClass.getESuperTypes().add(this.getShape());
		roundedRectangleEClass.getESuperTypes().add(this.getShape());
		ellipseEClass.getESuperTypes().add(this.getShape());
		polylineEClass.getESuperTypes().add(this.getShape());
		polygonEClass.getESuperTypes().add(this.getPolyline());
		scalablePolygonEClass.getESuperTypes().add(this.getPolygon());
		polylineConnectionEClass.getESuperTypes().add(this.getPolyline());
		polylineConnectionEClass.getESuperTypes().add(this.getConnectionFigure());
		polylineDecorationEClass.getESuperTypes().add(this.getPolyline());
		polylineDecorationEClass.getESuperTypes().add(this.getDecorationFigure());
		polygonDecorationEClass.getESuperTypes().add(this.getPolygon());
		polygonDecorationEClass.getESuperTypes().add(this.getDecorationFigure());
		customFigureEClass.getESuperTypes().add(this.getRealFigure());
		customFigureEClass.getESuperTypes().add(this.getCustomClass());
		customDecorationEClass.getESuperTypes().add(this.getCustomFigure());
		customDecorationEClass.getESuperTypes().add(this.getDecorationFigure());
		customConnectionEClass.getESuperTypes().add(this.getCustomFigure());
		customConnectionEClass.getESuperTypes().add(this.getConnectionFigure());
		rgbColorEClass.getESuperTypes().add(this.getColor());
		constantColorEClass.getESuperTypes().add(this.getColor());
		basicFontEClass.getESuperTypes().add(this.getFont());
		borderRefEClass.getESuperTypes().add(this.getBorder());
		lineBorderEClass.getESuperTypes().add(this.getBorder());
		marginBorderEClass.getESuperTypes().add(this.getBorder());
		compoundBorderEClass.getESuperTypes().add(this.getBorder());
		customBorderEClass.getESuperTypes().add(this.getBorder());
		customBorderEClass.getESuperTypes().add(this.getCustomClass());
		customLayoutDataEClass.getESuperTypes().add(this.getLayoutData());
		customLayoutDataEClass.getESuperTypes().add(this.getCustomClass());
		gridLayoutDataEClass.getESuperTypes().add(this.getLayoutData());
		borderLayoutDataEClass.getESuperTypes().add(this.getLayoutData());
		layoutRefEClass.getESuperTypes().add(this.getLayout());
		customLayoutEClass.getESuperTypes().add(this.getLayout());
		customLayoutEClass.getESuperTypes().add(this.getCustomClass());
		gridLayoutEClass.getESuperTypes().add(this.getLayout());
		borderLayoutEClass.getESuperTypes().add(this.getLayout());
		flowLayoutEClass.getESuperTypes().add(this.getLayout());
		xyLayoutEClass.getESuperTypes().add(this.getLayout());
		xyLayoutDataEClass.getESuperTypes().add(this.getLayoutData());
		stackLayoutEClass.getESuperTypes().add(this.getLayout());
		svgFigureEClass.getESuperTypes().add(this.getRealFigure());

		// Initialize classes and features; add operations and parameters
		initEClass(canvasEClass, Canvas.class, "Canvas", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCanvas_Figures(), this.getFigureGallery(), null, "figures", null, 0, -1, Canvas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCanvas_Nodes(), this.getNode(), null, "nodes", null, 0, -1, Canvas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCanvas_Connections(), this.getConnection(), null, "connections", null, 0, -1, Canvas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCanvas_Compartments(), this.getCompartment(), null, "compartments", null, 0, -1, Canvas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCanvas_Labels(), this.getDiagramLabel(), null, "labels", null, 0, -1, Canvas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(figureGalleryEClass, FigureGallery.class, "FigureGallery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFigureGallery_Figures(), this.getRealFigure(), null, "figures", null, 0, -1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigureGallery_Descriptors(), this.getFigureDescriptor(), null, "descriptors", null, 0, -1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigureGallery_Borders(), this.getBorder(), null, "borders", null, 0, -1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigureGallery_Layouts(), this.getLayout(), null, "layouts", null, 0, -1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFigureGallery_ImplementationBundle(), ecorePackage.getEString(), "implementationBundle", null, 0, 1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(identityEClass, Identity.class, "Identity", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getIdentity_Name(), ecorePackage.getEString(), "name", null, 1, 1, Identity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(diagramElementEClass, DiagramElement.class, "DiagramElement", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDiagramElement_Figure(), this.getFigureDescriptor(), null, "figure", null, 1, 1, DiagramElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDiagramElement_Facets(), this.getVisualFacet(), null, "facets", null, 0, -1, DiagramElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(abstractNodeEClass, AbstractNode.class, "AbstractNode", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(nodeEClass, Node.class, "Node", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getNode_ResizeConstraint(), this.getDirection(), "resizeConstraint", "NSEW", 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getNode_AffixedParentSide(), this.getDirection(), "affixedParentSide", "NONE", 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNode_ContentPane(), this.getChildAccess(), null, "contentPane", null, 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(connectionEClass, Connection.class, "Connection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(compartmentEClass, Compartment.class, "Compartment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCompartment_Collapsible(), ecorePackage.getEBoolean(), "collapsible", null, 0, 1, Compartment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCompartment_NeedsTitle(), ecorePackage.getEBoolean(), "needsTitle", null, 0, 1, Compartment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCompartment_Accessor(), this.getChildAccess(), null, "accessor", null, 0, 1, Compartment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(diagramLabelEClass, DiagramLabel.class, "DiagramLabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDiagramLabel_ElementIcon(), ecorePackage.getEBoolean(), "elementIcon", "true", 0, 1, DiagramLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDiagramLabel_Accessor(), this.getChildAccess(), null, "accessor", null, 0, 1, DiagramLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDiagramLabel_Container(), this.getChildAccess(), null, "container", null, 0, 1, DiagramLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDiagramLabel_External(), ecorePackage.getEBoolean(), "external", null, 0, 1, DiagramLabel.class, IS_TRANSIENT, IS_VOLATILE, !IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, IS_DERIVED, IS_ORDERED);

		initEClass(visualFacetEClass, VisualFacet.class, "VisualFacet", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(generalFacetEClass, GeneralFacet.class, "GeneralFacet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getGeneralFacet_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, GeneralFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGeneralFacet_Data(), ecorePackage.getEString(), "data", null, 0, 1, GeneralFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(alignmentFacetEClass, AlignmentFacet.class, "AlignmentFacet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAlignmentFacet_Alignment(), this.getAlignment(), "alignment", null, 0, 1, AlignmentFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(gradientFacetEClass, GradientFacet.class, "GradientFacet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getGradientFacet_Direction(), this.getDirection(), "direction", null, 0, 1, GradientFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(labelOffsetFacetEClass, LabelOffsetFacet.class, "LabelOffsetFacet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getLabelOffsetFacet_X(), ecorePackage.getEInt(), "x", null, 0, 1, LabelOffsetFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLabelOffsetFacet_Y(), ecorePackage.getEInt(), "y", null, 0, 1, LabelOffsetFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(defaultSizeFacetEClass, DefaultSizeFacet.class, "DefaultSizeFacet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDefaultSizeFacet_DefaultSize(), this.getDimension(), null, "defaultSize", null, 0, 1, DefaultSizeFacet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(figureEClass, Figure.class, "Figure", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFigure_Descriptor(), this.getFigureDescriptor(), null, "descriptor", null, 0, 1, Figure.class, IS_TRANSIENT, IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_ForegroundColor(), this.getColor(), null, "foregroundColor", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_BackgroundColor(), this.getColor(), null, "backgroundColor", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_MaximumSize(), this.getDimension(), null, "maximumSize", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_MinimumSize(), this.getDimension(), null, "minimumSize", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_PreferredSize(), this.getDimension(), null, "preferredSize", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_Font(), this.getFont(), null, "font", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_Insets(), this.getInsets(), null, "insets", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_Border(), this.getBorder(), null, "border", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_Location(), this.getPoint(), null, "location", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_Size(), this.getPoint(), null, "size", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(abstractFigureEClass, AbstractFigure.class, "AbstractFigure", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(figureDescriptorEClass, FigureDescriptor.class, "FigureDescriptor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFigureDescriptor_ActualFigure(), this.getFigure(), null, "actualFigure", null, 1, 1, FigureDescriptor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigureDescriptor_Accessors(), this.getChildAccess(), this.getChildAccess_Owner(), "accessors", null, 0, -1, FigureDescriptor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(childAccessEClass, ChildAccess.class, "ChildAccess", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getChildAccess_Owner(), this.getFigureDescriptor(), this.getFigureDescriptor_Accessors(), "owner", null, 1, 1, ChildAccess.class, !IS_TRANSIENT, !IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getChildAccess_Accessor(), ecorePackage.getEString(), "accessor", null, 0, 1, ChildAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getChildAccess_Figure(), this.getFigure(), null, "figure", null, 1, 1, ChildAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(realFigureEClass, RealFigure.class, "RealFigure", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRealFigure_Name(), ecorePackage.getEString(), "name", null, 0, 1, RealFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRealFigure_Children(), this.getFigure(), null, "children", null, 0, -1, RealFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(figureRefEClass, FigureRef.class, "FigureRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFigureRef_Figure(), this.getRealFigure(), null, "figure", null, 1, 1, FigureRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(connectionFigureEClass, ConnectionFigure.class, "ConnectionFigure", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(decorationFigureEClass, DecorationFigure.class, "DecorationFigure", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(shapeEClass, Shape.class, "Shape", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getShape_Outline(), ecorePackage.getEBoolean(), "outline", "true", 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getShape_Fill(), ecorePackage.getEBoolean(), "fill", "true", 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getShape_LineWidth(), ecorePackage.getEInt(), "lineWidth", "1", 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getShape_LineKind(), this.getLineKind(), "lineKind", null, 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getShape_XorFill(), ecorePackage.getEBoolean(), "xorFill", null, 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getShape_XorOutline(), ecorePackage.getEBoolean(), "xorOutline", null, 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getShape_ResolvedChildren(), this.getFigure(), null, "resolvedChildren", null, 0, -1, Shape.class, IS_TRANSIENT, IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);

		initEClass(labelEClass, Label.class, "Label", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getLabel_Text(), ecorePackage.getEString(), "text", null, 0, 1, Label.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(labeledContainerEClass, LabeledContainer.class, "LabeledContainer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(rectangleEClass, Rectangle.class, "Rectangle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(roundedRectangleEClass, RoundedRectangle.class, "RoundedRectangle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRoundedRectangle_CornerWidth(), ecorePackage.getEInt(), "cornerWidth", "8", 0, 1, RoundedRectangle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRoundedRectangle_CornerHeight(), ecorePackage.getEInt(), "cornerHeight", "8", 0, 1, RoundedRectangle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(ellipseEClass, Ellipse.class, "Ellipse", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(polylineEClass, Polyline.class, "Polyline", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPolyline_Template(), this.getPoint(), null, "template", null, 0, -1, Polyline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(polygonEClass, Polygon.class, "Polygon", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(scalablePolygonEClass, ScalablePolygon.class, "ScalablePolygon", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(polylineConnectionEClass, PolylineConnection.class, "PolylineConnection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPolylineConnection_SourceDecoration(), this.getDecorationFigure(), null, "sourceDecoration", null, 0, 1, PolylineConnection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPolylineConnection_TargetDecoration(), this.getDecorationFigure(), null, "targetDecoration", null, 0, 1, PolylineConnection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(polylineDecorationEClass, PolylineDecoration.class, "PolylineDecoration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(polygonDecorationEClass, PolygonDecoration.class, "PolygonDecoration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(customClassEClass, CustomClass.class, "CustomClass", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCustomClass_QualifiedClassName(), ecorePackage.getEString(), "qualifiedClassName", null, 0, 1, CustomClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCustomClass_Attributes(), this.getCustomAttribute(), null, "attributes", null, 0, -1, CustomClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customAttributeEClass, CustomAttribute.class, "CustomAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCustomAttribute_Name(), ecorePackage.getEString(), "name", null, 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomAttribute_Value(), ecorePackage.getEString(), "value", "null", 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomAttribute_DirectAccess(), ecorePackage.getEBoolean(), "directAccess", "false", 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomAttribute_MultiStatementValue(), ecorePackage.getEBoolean(), "multiStatementValue", "false", 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(figureAccessorEClass, FigureAccessor.class, "FigureAccessor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getFigureAccessor_Accessor(), ecorePackage.getEString(), "accessor", null, 1, 1, FigureAccessor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigureAccessor_TypedFigure(), this.getRealFigure(), null, "typedFigure", null, 1, 1, FigureAccessor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customFigureEClass, CustomFigure.class, "CustomFigure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCustomFigure_CustomChildren(), this.getFigureAccessor(), null, "customChildren", null, 0, -1, CustomFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customDecorationEClass, CustomDecoration.class, "CustomDecoration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(customConnectionEClass, CustomConnection.class, "CustomConnection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(colorEClass, Color.class, "Color", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(rgbColorEClass, RGBColor.class, "RGBColor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRGBColor_Red(), ecorePackage.getEInt(), "red", null, 1, 1, RGBColor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRGBColor_Green(), ecorePackage.getEInt(), "green", null, 1, 1, RGBColor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRGBColor_Blue(), ecorePackage.getEInt(), "blue", null, 1, 1, RGBColor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(constantColorEClass, ConstantColor.class, "ConstantColor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getConstantColor_Value(), this.getColorConstants(), "value", null, 1, 1, ConstantColor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(fontEClass, Font.class, "Font", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(basicFontEClass, BasicFont.class, "BasicFont", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBasicFont_FaceName(), ecorePackage.getEString(), "faceName", null, 0, 1, BasicFont.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBasicFont_Height(), ecorePackage.getEInt(), "height", "9", 0, 1, BasicFont.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBasicFont_Style(), this.getFontStyle(), "style", "NORMAL", 0, 1, BasicFont.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(pointEClass, Point.class, "Point", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPoint_X(), ecorePackage.getEInt(), "x", null, 0, 1, Point.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPoint_Y(), ecorePackage.getEInt(), "y", null, 0, 1, Point.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionEClass, Dimension.class, "Dimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDimension_Dx(), ecorePackage.getEInt(), "dx", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_Dy(), ecorePackage.getEInt(), "dy", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(insetsEClass, Insets.class, "Insets", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getInsets_Top(), ecorePackage.getEInt(), "top", null, 0, 1, Insets.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getInsets_Left(), ecorePackage.getEInt(), "left", null, 0, 1, Insets.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getInsets_Bottom(), ecorePackage.getEInt(), "bottom", null, 0, 1, Insets.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getInsets_Right(), ecorePackage.getEInt(), "right", null, 0, 1, Insets.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(borderEClass, Border.class, "Border", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(borderRefEClass, BorderRef.class, "BorderRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBorderRef_Actual(), this.getBorder(), null, "actual", null, 1, 1, BorderRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(lineBorderEClass, LineBorder.class, "LineBorder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLineBorder_Color(), this.getColor(), null, "color", null, 0, 1, LineBorder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLineBorder_Width(), ecorePackage.getEInt(), "width", "1", 0, 1, LineBorder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(marginBorderEClass, MarginBorder.class, "MarginBorder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMarginBorder_Insets(), this.getInsets(), null, "insets", null, 0, 1, MarginBorder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(compoundBorderEClass, CompoundBorder.class, "CompoundBorder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCompoundBorder_Outer(), this.getBorder(), null, "outer", null, 0, 1, CompoundBorder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCompoundBorder_Inner(), this.getBorder(), null, "inner", null, 0, 1, CompoundBorder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customBorderEClass, CustomBorder.class, "CustomBorder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(layoutDataEClass, LayoutData.class, "LayoutData", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLayoutData_Owner(), this.getLayoutable(), this.getLayoutable_LayoutData(), "owner", null, 1, 1, LayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customLayoutDataEClass, CustomLayoutData.class, "CustomLayoutData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(gridLayoutDataEClass, GridLayoutData.class, "GridLayoutData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getGridLayoutData_GrabExcessHorizontalSpace(), ecorePackage.getEBoolean(), "grabExcessHorizontalSpace", "false", 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayoutData_GrabExcessVerticalSpace(), ecorePackage.getEBoolean(), "grabExcessVerticalSpace", "false", 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayoutData_VerticalAlignment(), this.getAlignment(), "verticalAlignment", "CENTER", 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayoutData_HorizontalAlignment(), this.getAlignment(), "horizontalAlignment", "CENTER", 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayoutData_VerticalSpan(), ecorePackage.getEInt(), "verticalSpan", "1", 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayoutData_HorizontalSpan(), ecorePackage.getEInt(), "horizontalSpan", "1", 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayoutData_HorizontalIndent(), ecorePackage.getEInt(), "horizontalIndent", null, 1, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getGridLayoutData_SizeHint(), this.getDimension(), null, "sizeHint", null, 0, 1, GridLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(borderLayoutDataEClass, BorderLayoutData.class, "BorderLayoutData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBorderLayoutData_Alignment(), this.getAlignment(), "alignment", "CENTER", 1, 1, BorderLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBorderLayoutData_Vertical(), ecorePackage.getEBoolean(), "vertical", "false", 0, 1, BorderLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(layoutableEClass, Layoutable.class, "Layoutable", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLayoutable_LayoutData(), this.getLayoutData(), this.getLayoutData_Owner(), "layoutData", null, 0, 1, Layoutable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getLayoutable_Layout(), this.getLayout(), null, "layout", null, 0, 1, Layoutable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(layoutEClass, Layout.class, "Layout", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(layoutRefEClass, LayoutRef.class, "LayoutRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLayoutRef_Actual(), this.getLayout(), null, "actual", null, 1, 1, LayoutRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customLayoutEClass, CustomLayout.class, "CustomLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(gridLayoutEClass, GridLayout.class, "GridLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getGridLayout_NumColumns(), ecorePackage.getEInt(), "numColumns", "1", 1, 1, GridLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGridLayout_EqualWidth(), ecorePackage.getEBoolean(), "equalWidth", "true", 1, 1, GridLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getGridLayout_Margins(), this.getDimension(), null, "margins", null, 0, 1, GridLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getGridLayout_Spacing(), this.getDimension(), null, "spacing", null, 0, 1, GridLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(borderLayoutEClass, BorderLayout.class, "BorderLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBorderLayout_Spacing(), this.getDimension(), null, "spacing", null, 0, 1, BorderLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(flowLayoutEClass, FlowLayout.class, "FlowLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getFlowLayout_Vertical(), ecorePackage.getEBoolean(), "vertical", "false", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFlowLayout_MatchMinorSize(), ecorePackage.getEBoolean(), "matchMinorSize", "false", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFlowLayout_ForceSingleLine(), ecorePackage.getEBoolean(), "forceSingleLine", "false", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFlowLayout_MajorAlignment(), this.getAlignment(), "majorAlignment", "BEGINNING", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFlowLayout_MinorAlignment(), this.getAlignment(), "minorAlignment", "BEGINNING", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFlowLayout_MajorSpacing(), ecorePackage.getEInt(), "majorSpacing", "5", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFlowLayout_MinorSpacing(), ecorePackage.getEInt(), "minorSpacing", "5", 0, 1, FlowLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(xyLayoutEClass, XYLayout.class, "XYLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(xyLayoutDataEClass, XYLayoutData.class, "XYLayoutData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getXYLayoutData_TopLeft(), this.getPoint(), null, "topLeft", null, 1, 1, XYLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getXYLayoutData_Size(), this.getDimension(), null, "size", null, 1, 1, XYLayoutData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(stackLayoutEClass, StackLayout.class, "StackLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(svgFigureEClass, SVGFigure.class, "SVGFigure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getSVGFigure_DocumentURI(), ecorePackage.getEString(), "documentURI", null, 0, 1, SVGFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getSVGFigure_Properties(), this.getSVGProperty(), null, "properties", null, 0, -1, SVGFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getSVGFigure_AreaOfInterest(), this.getRectangle2D(), null, "areaOfInterest", null, 0, 1, SVGFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGFigure_NoCanvasWidth(), ecorePackage.getEBoolean(), "noCanvasWidth", null, 0, 1, SVGFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGFigure_NoCanvasHeight(), ecorePackage.getEBoolean(), "noCanvasHeight", null, 0, 1, SVGFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(svgPropertyEClass, SVGProperty.class, "SVGProperty", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getSVGProperty_Query(), ecorePackage.getEString(), "query", null, 0, 1, SVGProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGProperty_Attribute(), ecorePackage.getEString(), "attribute", null, 0, 1, SVGProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGProperty_Type(), this.getSVGPropertyType(), "type", null, 0, 1, SVGProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGProperty_Getter(), ecorePackage.getEString(), "getter", null, 0, 1, SVGProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGProperty_Setter(), ecorePackage.getEString(), "setter", null, 0, 1, SVGProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSVGProperty_CallSuper(), ecorePackage.getEBoolean(), "callSuper", null, 0, 1, SVGProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(rectangle2DEClass, Rectangle2D.class, "Rectangle2D", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRectangle2D_X(), ecorePackage.getEFloat(), "x", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRectangle2D_Y(), ecorePackage.getEFloat(), "y", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRectangle2D_Width(), ecorePackage.getEFloat(), "width", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRectangle2D_Height(), ecorePackage.getEFloat(), "height", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		// Initialize enums and add enum literals
		initEEnum(colorConstantsEEnum, ColorConstants.class, "ColorConstants");
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.WHITE_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.BLACK_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.LIGHT_GRAY_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.GRAY_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.DARK_GRAY_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.RED_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.ORANGE_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.YELLOW_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.GREEN_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.LIGHT_GREEN_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.DARK_GREEN_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.CYAN_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.LIGHT_BLUE_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.BLUE_LITERAL);
		addEEnumLiteral(colorConstantsEEnum, ColorConstants.DARK_BLUE_LITERAL);

		initEEnum(fontStyleEEnum, FontStyle.class, "FontStyle");
		addEEnumLiteral(fontStyleEEnum, FontStyle.NORMAL_LITERAL);
		addEEnumLiteral(fontStyleEEnum, FontStyle.BOLD_LITERAL);
		addEEnumLiteral(fontStyleEEnum, FontStyle.ITALIC_LITERAL);

		initEEnum(directionEEnum, Direction.class, "Direction");
		addEEnumLiteral(directionEEnum, Direction.NONE_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.NORTH_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.SOUTH_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.WEST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.EAST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.NORTH_EAST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.NORTH_WEST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.SOUTH_EAST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.SOUTH_WEST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.NORTH_SOUTH_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.EAST_WEST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.NSEW_LITERAL);

		initEEnum(lineKindEEnum, LineKind.class, "LineKind");
		addEEnumLiteral(lineKindEEnum, LineKind.LINE_SOLID_LITERAL);
		addEEnumLiteral(lineKindEEnum, LineKind.LINE_DASH_LITERAL);
		addEEnumLiteral(lineKindEEnum, LineKind.LINE_DOT_LITERAL);
		addEEnumLiteral(lineKindEEnum, LineKind.LINE_DASHDOT_LITERAL);
		addEEnumLiteral(lineKindEEnum, LineKind.LINE_DASHDOTDOT_LITERAL);
		addEEnumLiteral(lineKindEEnum, LineKind.LINE_CUSTOM_LITERAL);

		initEEnum(alignmentEEnum, Alignment.class, "Alignment");
		addEEnumLiteral(alignmentEEnum, Alignment.BEGINNING_LITERAL);
		addEEnumLiteral(alignmentEEnum, Alignment.CENTER_LITERAL);
		addEEnumLiteral(alignmentEEnum, Alignment.END_LITERAL);
		addEEnumLiteral(alignmentEEnum, Alignment.FILL_LITERAL);

		initEEnum(svgPropertyTypeEEnum, SVGPropertyType.class, "SVGPropertyType");
		addEEnumLiteral(svgPropertyTypeEEnum, SVGPropertyType.STRING);
		addEEnumLiteral(svgPropertyTypeEEnum, SVGPropertyType.COLOR);
		addEEnumLiteral(svgPropertyTypeEEnum, SVGPropertyType.FLOAT);

		// Create resource
		createResource(eNS_URI);
	}

} //GMFGraphPackageImpl
@


1.40
log
@[243571] always render using buffered image
@
text
@d2469 18
d2925 2
d3307 2
@


1.39
log
@[243403] support float properties
@
text
@a2459 9
	public EAttribute getSVGFigure_SafeRendering() {
		return (EAttribute)svgFigureEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d2461 1
a2461 1
		return (EReference)svgFigureEClass.getEStructuralFeatures().get(3);
a2905 1
		createEAttribute(svgFigureEClass, SVG_FIGURE__SAFE_RENDERING);
a3285 1
		initEAttribute(getSVGFigure_SafeRendering(), ecorePackage.getEBoolean(), "safeRendering", null, 0, 1, SVGFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.38
log
@[243050] support AOI in gmfgraph
@
text
@d3308 4
a3311 4
		initEAttribute(getRectangle2D_X(), ecorePackage.getEDouble(), "x", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRectangle2D_Y(), ecorePackage.getEDouble(), "y", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRectangle2D_Width(), ecorePackage.getEDouble(), "width", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRectangle2D_Height(), ecorePackage.getEDouble(), "height", null, 0, 1, Rectangle2D.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d3367 1
@


1.37
log
@[243052] add prop to force safe rendering
@
text
@d84 1
d606 7
d2469 9
d2541 45
d2916 1
d2926 6
d3297 1
d3307 6
@


1.36
log
@[234668] support svg figures in gmfgraph
@
text
@d2452 9
d2853 1
d3227 1
@


1.35
log
@[139126] respect implementation bundle of custom borders and layouts
@
text
@d15 79
d591 14
d636 7
d2425 90
d2551 9
d2841 12
d2859 1
d2953 1
d3214 12
d3277 4
@


1.34
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@d365 7
d442 7
d696 18
d715 1
a715 1
		return (EAttribute)figureGalleryEClass.getEStructuralFeatures().get(2);
d1776 18
d2046 18
d2394 2
d2570 3
d2611 3
d2722 1
d2732 1
d2753 2
d2929 3
d2970 3
@


1.33
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d2743 1
a2743 1
		initEReference(getChildAccess_Owner(), this.getFigureDescriptor(), this.getFigureDescriptor_Accessors(), "owner", null, 1, 1, ChildAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.32
log
@extra imports removed
@
text
@d2743 1
a2743 1
		initEReference(getChildAccess_Owner(), this.getFigureDescriptor(), this.getFigureDescriptor_Accessors(), "owner", null, 1, 1, ChildAccess.class, !IS_TRANSIENT, !IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.31
log
@regenerated with EMF 2.4M5
@
text
@a14 74
import org.eclipse.gmf.gmfgraph.AbstractFigure;
import org.eclipse.gmf.gmfgraph.AbstractNode;
import org.eclipse.gmf.gmfgraph.Alignment;
import org.eclipse.gmf.gmfgraph.AlignmentFacet;
import org.eclipse.gmf.gmfgraph.BasicFont;
import org.eclipse.gmf.gmfgraph.Border;
import org.eclipse.gmf.gmfgraph.BorderLayout;
import org.eclipse.gmf.gmfgraph.BorderLayoutData;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.gmfgraph.ChildAccess;
import org.eclipse.gmf.gmfgraph.Color;
import org.eclipse.gmf.gmfgraph.ColorConstants;
import org.eclipse.gmf.gmfgraph.Compartment;
import org.eclipse.gmf.gmfgraph.CompoundBorder;
import org.eclipse.gmf.gmfgraph.Connection;
import org.eclipse.gmf.gmfgraph.ConnectionFigure;
import org.eclipse.gmf.gmfgraph.ConstantColor;
import org.eclipse.gmf.gmfgraph.CustomAttribute;
import org.eclipse.gmf.gmfgraph.CustomBorder;
import org.eclipse.gmf.gmfgraph.CustomClass;
import org.eclipse.gmf.gmfgraph.CustomConnection;
import org.eclipse.gmf.gmfgraph.CustomDecoration;
import org.eclipse.gmf.gmfgraph.CustomFigure;
import org.eclipse.gmf.gmfgraph.CustomLayout;
import org.eclipse.gmf.gmfgraph.CustomLayoutData;
import org.eclipse.gmf.gmfgraph.DecorationFigure;
import org.eclipse.gmf.gmfgraph.DefaultSizeFacet;
import org.eclipse.gmf.gmfgraph.DiagramElement;
import org.eclipse.gmf.gmfgraph.DiagramLabel;
import org.eclipse.gmf.gmfgraph.Dimension;
import org.eclipse.gmf.gmfgraph.Direction;
import org.eclipse.gmf.gmfgraph.Ellipse;
import org.eclipse.gmf.gmfgraph.Figure;
import org.eclipse.gmf.gmfgraph.FigureAccessor;
import org.eclipse.gmf.gmfgraph.FigureDescriptor;
import org.eclipse.gmf.gmfgraph.FigureGallery;
import org.eclipse.gmf.gmfgraph.FigureRef;
import org.eclipse.gmf.gmfgraph.FlowLayout;
import org.eclipse.gmf.gmfgraph.Font;
import org.eclipse.gmf.gmfgraph.FontStyle;
import org.eclipse.gmf.gmfgraph.GMFGraphFactory;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.GeneralFacet;
import org.eclipse.gmf.gmfgraph.GradientFacet;
import org.eclipse.gmf.gmfgraph.GridLayout;
import org.eclipse.gmf.gmfgraph.GridLayoutData;
import org.eclipse.gmf.gmfgraph.Identity;
import org.eclipse.gmf.gmfgraph.Insets;
import org.eclipse.gmf.gmfgraph.Label;
import org.eclipse.gmf.gmfgraph.LabelOffsetFacet;
import org.eclipse.gmf.gmfgraph.LabeledContainer;
import org.eclipse.gmf.gmfgraph.Layout;
import org.eclipse.gmf.gmfgraph.LayoutData;
import org.eclipse.gmf.gmfgraph.Layoutable;
import org.eclipse.gmf.gmfgraph.LineBorder;
import org.eclipse.gmf.gmfgraph.LineKind;
import org.eclipse.gmf.gmfgraph.MarginBorder;
import org.eclipse.gmf.gmfgraph.Node;
import org.eclipse.gmf.gmfgraph.Point;
import org.eclipse.gmf.gmfgraph.Polygon;
import org.eclipse.gmf.gmfgraph.PolygonDecoration;
import org.eclipse.gmf.gmfgraph.Polyline;
import org.eclipse.gmf.gmfgraph.PolylineConnection;
import org.eclipse.gmf.gmfgraph.PolylineDecoration;
import org.eclipse.gmf.gmfgraph.RGBColor;
import org.eclipse.gmf.gmfgraph.RealFigure;
import org.eclipse.gmf.gmfgraph.Rectangle;
import org.eclipse.gmf.gmfgraph.RoundedRectangle;
import org.eclipse.gmf.gmfgraph.ScalablePolygon;
import org.eclipse.gmf.gmfgraph.Shape;
import org.eclipse.gmf.gmfgraph.StackLayout;
import org.eclipse.gmf.gmfgraph.VisualFacet;
import org.eclipse.gmf.gmfgraph.XYLayout;
import org.eclipse.gmf.gmfgraph.XYLayoutData;
@


1.30
log
@organized imports
@
text
@d15 74
@


1.29
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@a14 74
import org.eclipse.gmf.gmfgraph.AbstractFigure;
import org.eclipse.gmf.gmfgraph.AbstractNode;
import org.eclipse.gmf.gmfgraph.Alignment;
import org.eclipse.gmf.gmfgraph.AlignmentFacet;
import org.eclipse.gmf.gmfgraph.BasicFont;
import org.eclipse.gmf.gmfgraph.Border;
import org.eclipse.gmf.gmfgraph.BorderLayout;
import org.eclipse.gmf.gmfgraph.BorderLayoutData;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.gmfgraph.ChildAccess;
import org.eclipse.gmf.gmfgraph.Color;
import org.eclipse.gmf.gmfgraph.ColorConstants;
import org.eclipse.gmf.gmfgraph.Compartment;
import org.eclipse.gmf.gmfgraph.CompoundBorder;
import org.eclipse.gmf.gmfgraph.Connection;
import org.eclipse.gmf.gmfgraph.ConnectionFigure;
import org.eclipse.gmf.gmfgraph.ConstantColor;
import org.eclipse.gmf.gmfgraph.CustomAttribute;
import org.eclipse.gmf.gmfgraph.CustomBorder;
import org.eclipse.gmf.gmfgraph.CustomClass;
import org.eclipse.gmf.gmfgraph.CustomConnection;
import org.eclipse.gmf.gmfgraph.CustomDecoration;
import org.eclipse.gmf.gmfgraph.CustomFigure;
import org.eclipse.gmf.gmfgraph.CustomLayout;
import org.eclipse.gmf.gmfgraph.CustomLayoutData;
import org.eclipse.gmf.gmfgraph.DecorationFigure;
import org.eclipse.gmf.gmfgraph.DefaultSizeFacet;
import org.eclipse.gmf.gmfgraph.DiagramElement;
import org.eclipse.gmf.gmfgraph.DiagramLabel;
import org.eclipse.gmf.gmfgraph.Dimension;
import org.eclipse.gmf.gmfgraph.Direction;
import org.eclipse.gmf.gmfgraph.Ellipse;
import org.eclipse.gmf.gmfgraph.Figure;
import org.eclipse.gmf.gmfgraph.FigureAccessor;
import org.eclipse.gmf.gmfgraph.FigureDescriptor;
import org.eclipse.gmf.gmfgraph.FigureGallery;
import org.eclipse.gmf.gmfgraph.FigureRef;
import org.eclipse.gmf.gmfgraph.FlowLayout;
import org.eclipse.gmf.gmfgraph.Font;
import org.eclipse.gmf.gmfgraph.FontStyle;
import org.eclipse.gmf.gmfgraph.GMFGraphFactory;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.GeneralFacet;
import org.eclipse.gmf.gmfgraph.GradientFacet;
import org.eclipse.gmf.gmfgraph.GridLayout;
import org.eclipse.gmf.gmfgraph.GridLayoutData;
import org.eclipse.gmf.gmfgraph.Identity;
import org.eclipse.gmf.gmfgraph.Insets;
import org.eclipse.gmf.gmfgraph.Label;
import org.eclipse.gmf.gmfgraph.LabelOffsetFacet;
import org.eclipse.gmf.gmfgraph.LabeledContainer;
import org.eclipse.gmf.gmfgraph.Layout;
import org.eclipse.gmf.gmfgraph.LayoutData;
import org.eclipse.gmf.gmfgraph.Layoutable;
import org.eclipse.gmf.gmfgraph.LineBorder;
import org.eclipse.gmf.gmfgraph.LineKind;
import org.eclipse.gmf.gmfgraph.MarginBorder;
import org.eclipse.gmf.gmfgraph.Node;
import org.eclipse.gmf.gmfgraph.Point;
import org.eclipse.gmf.gmfgraph.Polygon;
import org.eclipse.gmf.gmfgraph.PolygonDecoration;
import org.eclipse.gmf.gmfgraph.Polyline;
import org.eclipse.gmf.gmfgraph.PolylineConnection;
import org.eclipse.gmf.gmfgraph.PolylineDecoration;
import org.eclipse.gmf.gmfgraph.RGBColor;
import org.eclipse.gmf.gmfgraph.RealFigure;
import org.eclipse.gmf.gmfgraph.Rectangle;
import org.eclipse.gmf.gmfgraph.RoundedRectangle;
import org.eclipse.gmf.gmfgraph.ScalablePolygon;
import org.eclipse.gmf.gmfgraph.Shape;
import org.eclipse.gmf.gmfgraph.StackLayout;
import org.eclipse.gmf.gmfgraph.VisualFacet;
import org.eclipse.gmf.gmfgraph.XYLayout;
import org.eclipse.gmf.gmfgraph.XYLayoutData;
@


1.28
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a11 1
import org.eclipse.emf.ecore.EOperation;
d15 2
d24 1
d49 1
a50 2
import org.eclipse.gmf.gmfgraph.FigureHandle;
import org.eclipse.gmf.gmfgraph.FigureMarker;
d80 1
d89 1
d131 7
d145 14
d222 1
a222 1
	private EClass figureMarkerEClass = null;
d229 1
a229 1
	private EClass figureHandleEClass = null;
d236 1
a236 1
	private EClass figureEClass = null;
d747 9
d757 1
a757 1
		return (EAttribute)figureGalleryEClass.getEStructuralFeatures().get(1);
d810 9
d828 2
a829 2
	public EReference getNode_NodeFigure() {
		return (EReference)nodeEClass.getEStructuralFeatures().get(0);
d837 1
a837 1
	public EAttribute getNode_ResizeConstraint() {
d846 56
a901 2
	public EAttribute getNode_AffixedParentSide() {
		return (EAttribute)nodeEClass.getEStructuralFeatures().get(2);
d909 2
a910 2
	public EClass getConnection() {
		return connectionEClass;
d918 2
a919 2
	public EReference getConnection_ConnectionFigure() {
		return (EReference)connectionEClass.getEStructuralFeatures().get(0);
d954 9
d981 27
d1125 2
a1126 2
	public EClass getFigureMarker() {
		return figureMarkerEClass;
d1134 2
a1135 2
	public EReference getFigureMarker_Parent() {
		return (EReference)figureMarkerEClass.getEStructuralFeatures().get(0);
d1143 2
a1144 2
	public EClass getFigureHandle() {
		return figureHandleEClass;
d1152 2
a1153 2
	public EReference getFigureHandle_ReferencingElements() {
		return (EReference)figureHandleEClass.getEStructuralFeatures().get(0);
d1161 2
a1162 2
	public EClass getFigure() {
		return figureEClass;
d1170 2
a1171 2
	public EReference getFigure_Children() {
		return (EReference)figureEClass.getEStructuralFeatures().get(0);
d1179 2
a1180 2
	public EReference getFigure_ForegroundColor() {
		return (EReference)figureEClass.getEStructuralFeatures().get(1);
d1188 2
a1189 2
	public EReference getFigure_BackgroundColor() {
		return (EReference)figureEClass.getEStructuralFeatures().get(2);
d1197 2
a1198 2
	public EReference getFigure_MaximumSize() {
		return (EReference)figureEClass.getEStructuralFeatures().get(3);
d1206 2
a1207 2
	public EReference getFigure_MinimumSize() {
		return (EReference)figureEClass.getEStructuralFeatures().get(4);
d1215 2
a1216 2
	public EReference getFigure_PreferredSize() {
		return (EReference)figureEClass.getEStructuralFeatures().get(5);
d1224 2
a1225 2
	public EReference getFigure_Font() {
		return (EReference)figureEClass.getEStructuralFeatures().get(6);
d1233 2
a1234 2
	public EReference getFigure_Insets() {
		return (EReference)figureEClass.getEStructuralFeatures().get(7);
d1242 2
a1243 2
	public EReference getFigure_Border() {
		return (EReference)figureEClass.getEStructuralFeatures().get(8);
d1251 2
a1252 2
	public EReference getFigure_Location() {
		return (EReference)figureEClass.getEStructuralFeatures().get(9);
d1260 2
a1261 2
	public EReference getFigure_Size() {
		return (EReference)figureEClass.getEStructuralFeatures().get(10);
a1547 9
	public EAttribute getCustomClass_BundleName() {
		return (EAttribute)customClassEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d1549 1
a1549 1
		return (EReference)customClassEClass.getEStructuralFeatures().get(2);
d2399 1
d2409 2
a2411 1
		createEReference(nodeEClass, NODE__NODE_FIGURE);
d2414 1
a2416 1
		createEReference(connectionEClass, CONNECTION__CONNECTION_FIGURE);
d2421 1
d2425 3
a2447 6
		figureMarkerEClass = createEClass(FIGURE_MARKER);
		createEReference(figureMarkerEClass, FIGURE_MARKER__PARENT);

		figureHandleEClass = createEClass(FIGURE_HANDLE);
		createEReference(figureHandleEClass, FIGURE_HANDLE__REFERENCING_ELEMENTS);

d2449 1
a2449 1
		createEReference(figureEClass, FIGURE__CHILDREN);
d2461 15
a2521 1
		createEAttribute(customClassEClass, CUSTOM_CLASS__BUNDLE_NAME);
d2679 2
a2680 1
		nodeEClass.getESuperTypes().add(this.getDiagramElement());
d2689 10
a2698 10
		figureMarkerEClass.getESuperTypes().add(this.getLayoutable());
		figureEClass.getESuperTypes().add(this.getFigureMarker());
		figureEClass.getESuperTypes().add(this.getFigureHandle());
		figureEClass.getESuperTypes().add(this.getIdentity());
		figureRefEClass.getESuperTypes().add(this.getFigureMarker());
		connectionFigureEClass.getESuperTypes().add(this.getFigure());
		decorationFigureEClass.getESuperTypes().add(this.getFigure());
		shapeEClass.getESuperTypes().add(this.getFigure());
		labelEClass.getESuperTypes().add(this.getFigure());
		labeledContainerEClass.getESuperTypes().add(this.getFigure());
d2711 1
a2711 2
		figureAccessorEClass.getESuperTypes().add(this.getFigureHandle());
		customFigureEClass.getESuperTypes().add(this.getFigure());
d2747 2
a2748 1
		initEReference(getFigureGallery_Figures(), this.getFigure(), null, "figures", null, 0, -1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2755 1
a2755 1
		initEReference(getDiagramElement_Figure(), this.getFigureHandle(), this.getFigureHandle_ReferencingElements(), "figure", null, 1, 1, DiagramElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2758 1
a2758 2
		EOperation op = addEOperation(diagramElementEClass, this.getVisualFacet(), "find", 0, 1);
		addEParameter(op, ecorePackage.getEJavaClass(), "facetClass", 0, 1);
a2760 1
		initEReference(getNode_NodeFigure(), this.getFigure(), null, "nodeFigure", null, 1, 1, Node.class, IS_TRANSIENT, IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
d2763 1
a2765 1
		initEReference(getConnection_ConnectionFigure(), this.getFigure(), null, "connectionFigure", null, 1, 1, Connection.class, IS_TRANSIENT, IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
d2770 1
d2774 3
a2796 6
		initEClass(figureMarkerEClass, FigureMarker.class, "FigureMarker", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFigureMarker_Parent(), this.getFigure(), this.getFigure_Children(), "parent", null, 0, 1, FigureMarker.class, !IS_TRANSIENT, !IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(figureHandleEClass, FigureHandle.class, "FigureHandle", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFigureHandle_ReferencingElements(), this.getDiagramElement(), this.getDiagramElement_Figure(), "referencingElements", null, 0, -1, FigureHandle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

d2798 1
a2798 1
		initEReference(getFigure_Children(), this.getFigureMarker(), this.getFigureMarker_Parent(), "children", null, 0, -1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2810 15
d2826 1
a2826 1
		initEReference(getFigureRef_Figure(), this.getFigure(), null, "figure", null, 1, 1, FigureRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
a2870 1
		initEAttribute(getCustomClass_BundleName(), ecorePackage.getEString(), "bundleName", null, 0, 1, CustomClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2881 1
a2881 1
		initEReference(getFigureAccessor_TypedFigure(), this.getCustomFigure(), null, "typedFigure", null, 0, 1, FigureAccessor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.27
log
@reverted explicit EObject superclass in the metamodel since it's not being utilized in new templates
@
text
@d2534 4
@


1.26
log
@explicit EObject superclass (needed for Xpand templates)
@
text
@a2547 1
		figureEClass.getESuperTypes().add(ecorePackage.getEObject());
a2568 1
		customAttributeEClass.getESuperTypes().add(ecorePackage.getEObject());
a2575 1
		colorEClass.getESuperTypes().add(ecorePackage.getEObject());
a2577 1
		fontEClass.getESuperTypes().add(ecorePackage.getEObject());
a2578 4
		pointEClass.getESuperTypes().add(ecorePackage.getEObject());
		dimensionEClass.getESuperTypes().add(ecorePackage.getEObject());
		insetsEClass.getESuperTypes().add(ecorePackage.getEObject());
		borderEClass.getESuperTypes().add(ecorePackage.getEObject());
a2583 1
		layoutDataEClass.getESuperTypes().add(ecorePackage.getEObject());
a2587 1
		layoutEClass.getESuperTypes().add(ecorePackage.getEObject());
@


1.25
log
@[155230] mgolubev - Provide means to specify default size for figure
@
text
@d2548 1
d2570 1
d2578 1
d2581 1
d2583 4
d2592 1
d2597 1
@


1.24
log
@[124826] mgolubev - Support nodes with border items
@
text
@d39 1
d191 7
d975 18
d2316 3
d2546 1
d2650 3
@


1.23
log
@[154687] mgolubev - Support scalable polygons
@
text
@d796 9
d2262 1
d2592 1
@


1.22
log
@Setting elementIcon attribute default value to "true".
@
text
@d80 1
d288 7
d1309 9
d2333 2
d2522 1
d2662 2
@


1.21
log
@#140887 Remove Child interface from GMFGraph.
Although the need to reference child figures persist, thus FigureHandle was introduced, to allow diagramElements to reference either *generateable* figures (Figure subclasses) or *just-use* figures (like CustomFigure and FigureAccessor).
Refactoring performed with #131365 "Mirror GMFGraph model when generating standalone figure plugin" in mind
@
text
@d2571 1
a2571 1
		initEAttribute(getDiagramLabel_ElementIcon(), ecorePackage.getEBoolean(), "elementIcon", null, 0, 1, DiagramLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.20
log
@#139127 Provide an option for labels to display node icon
@
text
@a22 1
import org.eclipse.gmf.gmfgraph.Child;
d45 1
d47 1
a82 1

a146 7
	private EClass childEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d196 7
d497 7
d680 1
a680 1
	public EReference getCanvas_Children() {
a688 9
	public EReference getCanvas_Labels() {
		return (EReference)canvasEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d770 9
d780 1
a780 1
		return (EAttribute)nodeEClass.getEStructuralFeatures().get(0);
d797 2
a798 2
	public EClass getCompartment() {
		return compartmentEClass;
d806 2
a807 2
	public EAttribute getCompartment_Collapsible() {
		return (EAttribute)compartmentEClass.getEStructuralFeatures().get(0);
d815 2
a816 2
	public EAttribute getCompartment_NeedsTitle() {
		return (EAttribute)compartmentEClass.getEStructuralFeatures().get(1);
d824 2
a825 2
	public EClass getChild() {
		return childEClass;
d968 18
a1093 9
	public EReference getFigure_ReferencingElements() {
		return (EReference)figureEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d1391 9
d2012 27
a2219 1
		createEReference(canvasEClass, CANVAS__CHILDREN);
d2234 1
d2238 1
a2243 2
		childEClass = createEClass(CHILD);

d2266 3
a2280 1
		createEReference(figureEClass, FIGURE__REFERENCING_ELEMENTS);
d2329 10
d2340 1
a2427 6
		customAttributeEClass = createEClass(CUSTOM_ATTRIBUTE);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__NAME);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__VALUE);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__DIRECT_ACCESS);
		createEAttribute(customAttributeEClass, CUSTOM_ATTRIBUTE__MULTI_STATEMENT_VALUE);

a2482 1
		childEClass.getESuperTypes().add(this.getDiagramElement());
d2490 1
d2509 1
a2542 1
		initEReference(getCanvas_Children(), this.getChild(), null, "children", null, 0, -1, Canvas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2553 1
a2553 1
		initEReference(getDiagramElement_Figure(), this.getFigure(), this.getFigure_ReferencingElements(), "figure", null, 1, 1, DiagramElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2560 1
d2564 1
a2569 2
		initEClass(childEClass, Child.class, "Child", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

d2592 3
a2606 1
		initEReference(getFigure_ReferencingElements(), this.getDiagramElement(), this.getDiagramElement_Figure(), "referencingElements", null, 0, -1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2655 10
d2666 1
a2753 6
		initEClass(customAttributeEClass, CustomAttribute.class, "CustomAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCustomAttribute_Name(), ecorePackage.getEString(), "name", null, 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomAttribute_Value(), ecorePackage.getEString(), "value", "null", 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomAttribute_DirectAccess(), ecorePackage.getEBoolean(), "directAccess", "false", 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomAttribute_MultiStatementValue(), ecorePackage.getEBoolean(), "multiStatementValue", "false", 1, 1, CustomAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

@


1.19
log
@[mgolubev] #140899 gmfgraph.BasicFont should have reasonable default values for faceName, style and height properties
@
text
@d835 9
d2194 1
d2513 1
@


1.18
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@d2604 2
a2605 2
		initEAttribute(getBasicFont_Height(), ecorePackage.getEInt(), "height", null, 0, 1, BasicFont.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBasicFont_Style(), this.getFontStyle(), "style", null, 0, 1, BasicFont.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.17
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@d2416 1
a2416 1
		diagramLabelEClass.getESuperTypes().add(this.getDiagramElement());
@


1.16
log
@#136877 Provide inital offset from the host link for the link label
@
text
@d1060 9
d2217 1
d2485 1
a2485 1
		initEReference(getDiagramElement_Figure(), this.getFigure(), null, "figure", null, 1, 1, DiagramElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2535 1
@


1.15
log
@#135017 use geographical constants from PositionConstants
@
text
@d61 1
d189 7
d907 27
d2189 4
d2410 1
d2506 4
@


1.14
log
@[mgolubev] #135017 Respect resize constraints defined in .gmfgraph
@
text
@d2442 1
a2442 1
		initEAttribute(getNode_ResizeConstraint(), this.getDirection(), "resizeConstraint", "ALL", 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2667 1
d2669 1
a2669 1
		addEEnumLiteral(directionEEnum, Direction.WEST_LITERAL);
d2671 1
a2671 1
		addEEnumLiteral(directionEEnum, Direction.NORTH_EAST_LITERAL);
d2673 3
a2675 4
		addEEnumLiteral(directionEEnum, Direction.SOUTH_EAST_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.VERTICAL_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.HORIZONTAL_LITERAL);
		addEEnumLiteral(directionEEnum, Direction.ALL_LITERAL);
@


1.13
log
@[mgolubev] 134249 Generate all Figure/Shape properties
@
text
@d2442 1
a2442 1
		initEAttribute(getNode_ResizeConstraint(), this.getDirection(), "resizeConstraint", null, 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2675 1
@


1.12
log
@BasicFont extends Font, finally ;)
@
text
@d2570 1
a2570 1
		initEAttribute(getLineBorder_Width(), ecorePackage.getEInt(), "width", null, 0, 1, LineBorder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.11
log
@need access to figure/figure ref's parent for DMGT's check of external label to work correctly
@
text
@d2399 1
@


1.10
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@d908 2
a909 2
	public EClass getFigure() {
		return figureEClass;
d917 2
a918 2
	public EReference getFigure_Children() {
		return (EReference)figureEClass.getEStructuralFeatures().get(0);
d926 2
a927 2
	public EReference getFigure_Parent() {
		return (EReference)figureEClass.getEStructuralFeatures().get(1);
d936 1
a936 1
		return (EReference)figureEClass.getEStructuralFeatures().get(2);
d945 1
a945 1
		return (EReference)figureEClass.getEStructuralFeatures().get(3);
d954 1
a954 1
		return (EReference)figureEClass.getEStructuralFeatures().get(4);
d963 1
a963 1
		return (EReference)figureEClass.getEStructuralFeatures().get(5);
d972 1
a972 1
		return (EReference)figureEClass.getEStructuralFeatures().get(6);
d981 1
a981 1
		return (EReference)figureEClass.getEStructuralFeatures().get(7);
d990 1
a990 1
		return (EReference)figureEClass.getEStructuralFeatures().get(8);
d999 1
a999 1
		return (EReference)figureEClass.getEStructuralFeatures().get(9);
d1008 1
a1008 1
		return (EReference)figureEClass.getEStructuralFeatures().get(10);
d1017 1
a1017 1
		return (EReference)figureEClass.getEStructuralFeatures().get(11);
d2155 1
a2158 1
		createEReference(figureEClass, FIGURE__PARENT);
d2466 1
d2469 1
a2469 2
		initEReference(getFigure_Children(), this.getFigureMarker(), null, "children", null, 0, -1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_Parent(), this.getFigure(), this.getFigure_Children(), "parent", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.9
log
@Changing default values for fill and outline Shape properties.
@
text
@d12 1
d17 1
d174 7
d863 18
d2148 3
d2369 1
d2437 3
d2459 3
@


1.8
log
@[mgolubev] #127252 layout support
@
text
@d2452 2
a2453 2
		initEAttribute(getShape_Outline(), ecorePackage.getEBoolean(), "outline", null, 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getShape_Fill(), ecorePackage.getEBoolean(), "fill", null, 0, 1, Shape.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.7
log
@#127461 add label diagram element in gmfgraph model
@
text
@d47 1
d77 1
d80 3
d480 28
d1907 117
d2281 17
d2381 4
d2563 1
a2563 1
		initEReference(getLayoutable_LayoutData(), this.getLayoutData(), this.getLayoutData_Owner(), "layoutData", "", 0, 1, Layoutable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2585 17
@


1.6
log
@[mgolubev] #127252 layout support
@
text
@d39 1
d146 7
d632 9
d776 9
d1939 1
d1963 2
d2170 1
d2222 1
d2246 2
@


1.5
log
@connection stoped own its decorations
@
text
@d15 1
d18 2
d29 1
d35 2
d52 2
d58 3
d397 70
d491 7
a938 9
	public EAttribute getFigure_LayoutManager() {
		return (EAttribute)figureEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d1218 9
d1560 288
d1875 9
a1959 1
		createEAttribute(figureEClass, FIGURE__LAYOUT_MANAGER);
d2006 1
d2060 42
d2107 1
d2143 1
d2176 8
a2238 1
		initEAttribute(getFigure_LayoutManager(), ecorePackage.getEString(), "layoutManager", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d2285 1
d2339 42
d2425 6
@


1.4
log
@move towards more draw2d-like model
@
text
@d1839 2
a1840 2
		initEReference(getPolylineConnection_SourceDecoration(), this.getDecorationFigure(), null, "sourceDecoration", null, 0, 1, PolylineConnection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPolylineConnection_TargetDecoration(), this.getDecorationFigure(), null, "targetDecoration", null, 0, 1, PolylineConnection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
@


1.3
log
@temporarily move resolvedChildren to shape only, need to come up with better way not to duplicate method implementation through the whole Figure descentants tree
@
text
@d15 2
d19 2
a20 1
import org.eclipse.gmf.gmfgraph.ColorStyle;
d22 1
d25 3
d33 1
d40 1
d47 1
d50 1
d52 1
d60 1
a63 1
import org.eclipse.gmf.gmfgraph.SizeStyle;
d267 7
d295 1
a295 1
	private EClass colorStyleEClass = null;
d302 1
a302 1
	private EClass sizeStyleEClass = null;
d309 15
a323 1
	private EClass fontStyleEClass = null;
d337 63
d761 1
a761 1
	public EReference getFigure_ColorStyle() {
d770 1
a770 1
	public EReference getFigure_SizeStyle() {
d779 1
a779 1
	public EReference getFigure_FontStyle() {
d788 45
d834 1
a834 1
		return (EReference)figureEClass.getEStructuralFeatures().get(5);
d843 1
a843 1
		return (EReference)figureEClass.getEStructuralFeatures().get(6);
d852 1
a852 1
		return (EAttribute)figureEClass.getEStructuralFeatures().get(7);
d1112 11
a1122 2
	public EClass getCustomFigure() {
		return customFigureEClass;
d1130 2
a1131 2
	public EAttribute getCustomFigure_QualifiedClassName() {
		return (EAttribute)customFigureEClass.getEStructuralFeatures().get(0);
d1139 2
a1140 2
	public EAttribute getCustomFigure_BundleName() {
		return (EAttribute)customFigureEClass.getEStructuralFeatures().get(1);
d1166 38
a1203 2
	public EClass getColorStyle() {
		return colorStyleEClass;
d1211 2
a1212 2
	public EAttribute getColorStyle_ForegroundColor() {
		return (EAttribute)colorStyleEClass.getEStructuralFeatures().get(0);
d1220 2
a1221 2
	public EAttribute getColorStyle_BackgroundColor() {
		return (EAttribute)colorStyleEClass.getEStructuralFeatures().get(1);
d1229 2
a1230 2
	public EClass getSizeStyle() {
		return sizeStyleEClass;
d1238 2
a1239 2
	public EReference getSizeStyle_MaxSize() {
		return (EReference)sizeStyleEClass.getEStructuralFeatures().get(0);
d1247 2
a1248 2
	public EReference getSizeStyle_MinSize() {
		return (EReference)sizeStyleEClass.getEStructuralFeatures().get(1);
d1256 2
a1257 2
	public EReference getSizeStyle_PrefSize() {
		return (EReference)sizeStyleEClass.getEStructuralFeatures().get(2);
d1265 2
a1266 2
	public EClass getFontStyle() {
		return fontStyleEClass;
d1274 2
a1275 2
	public EAttribute getFontStyle_FaceName() {
		return (EAttribute)fontStyleEClass.getEStructuralFeatures().get(0);
d1310 171
d1565 8
a1572 3
		createEReference(figureEClass, FIGURE__COLOR_STYLE);
		createEReference(figureEClass, FIGURE__SIZE_STYLE);
		createEReference(figureEClass, FIGURE__FONT_STYLE);
d1619 4
a1623 2
		createEAttribute(customFigureEClass, CUSTOM_FIGURE__QUALIFIED_CLASS_NAME);
		createEAttribute(customFigureEClass, CUSTOM_FIGURE__BUNDLE_NAME);
d1629 1
a1629 8
		colorStyleEClass = createEClass(COLOR_STYLE);
		createEAttribute(colorStyleEClass, COLOR_STYLE__FOREGROUND_COLOR);
		createEAttribute(colorStyleEClass, COLOR_STYLE__BACKGROUND_COLOR);

		sizeStyleEClass = createEClass(SIZE_STYLE);
		createEReference(sizeStyleEClass, SIZE_STYLE__MAX_SIZE);
		createEReference(sizeStyleEClass, SIZE_STYLE__MIN_SIZE);
		createEReference(sizeStyleEClass, SIZE_STYLE__PREF_SIZE);
d1631 14
a1644 2
		fontStyleEClass = createEClass(FONT_STYLE);
		createEAttribute(fontStyleEClass, FONT_STYLE__FACE_NAME);
d1650 25
d1676 2
d1735 1
d1740 7
d1792 8
a1799 3
		initEReference(getFigure_ColorStyle(), this.getColorStyle(), null, "colorStyle", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_SizeStyle(), this.getSizeStyle(), null, "sizeStyle", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getFigure_FontStyle(), this.getFontStyle(), null, "fontStyle", null, 0, 1, Figure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d1828 2
a1829 2
		initEAttribute(getRoundedRectangle_CornerWidth(), ecorePackage.getEInt(), "cornerWidth", null, 0, 1, RoundedRectangle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRoundedRectangle_CornerHeight(), ecorePackage.getEInt(), "cornerHeight", null, 0, 1, RoundedRectangle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d1846 4
a1850 2
		initEAttribute(getCustomFigure_QualifiedClassName(), ecorePackage.getEString(), "qualifiedClassName", null, 0, 1, CustomFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCustomFigure_BundleName(), ecorePackage.getEString(), "bundleName", null, 0, 1, CustomFigure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d1856 1
a1856 8
		initEClass(colorStyleEClass, ColorStyle.class, "ColorStyle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getColorStyle_ForegroundColor(), ecorePackage.getEString(), "foregroundColor", null, 0, 1, ColorStyle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColorStyle_BackgroundColor(), ecorePackage.getEString(), "backgroundColor", null, 0, 1, ColorStyle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(sizeStyleEClass, SizeStyle.class, "SizeStyle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getSizeStyle_MaxSize(), this.getPoint(), null, "maxSize", null, 0, 1, SizeStyle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getSizeStyle_MinSize(), this.getPoint(), null, "minSize", null, 0, 1, SizeStyle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getSizeStyle_PrefSize(), this.getPoint(), null, "prefSize", null, 0, 1, SizeStyle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d1858 14
a1871 2
		initEClass(fontStyleEClass, FontStyle.class, "FontStyle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getFontStyle_FaceName(), ecorePackage.getEString(), "faceName", null, 0, 1, FontStyle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d1877 25
d1903 22
@


1.2
log
@minor updates according to recent comments
single impl bundle per gallery
[+] Figure.getResolvedChildren to substitute figureRefs with actual figures they reference
@
text
@a718 9
	public EReference getFigure_ResolvedChildren() {
		return (EReference)figureEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d818 9
a1213 1
		createEReference(figureEClass, FIGURE__RESOLVED_CHILDREN);
d1229 1
a1393 1
		initEReference(getFigure_ResolvedChildren(), this.getFigure(), null, "resolvedChildren", null, 0, -1, Figure.class, IS_TRANSIENT, IS_VOLATILE, !IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
d1409 1
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d458 1
a458 1
	public EAttribute getFigureGallery_ImplBundles() {
d719 9
d809 18
d1174 1
a1174 1
		createEAttribute(figureGalleryEClass, FIGURE_GALLERY__IMPL_BUNDLES);
d1214 1
d1228 2
d1354 1
a1354 1
		initEAttribute(getFigureGallery_ImplBundles(), ecorePackage.getEString(), "implBundles", null, 0, -1, FigureGallery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
d1394 1
d1408 2
d1463 1
@

