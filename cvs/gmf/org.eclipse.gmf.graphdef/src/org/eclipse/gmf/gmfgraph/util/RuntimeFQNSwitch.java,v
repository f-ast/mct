head	1.9;
access;
symbols
	v20080813-1520:1.9
	v20080807-1333:1.9
	v20080806-1520:1.9
	v20080731-1520:1.9
	v20080722-1827:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080528-1052:1.9
	v20080521:1.8
	v20080425-1959:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.7
	v20071214-1111:1.8
	v20071003-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070420-1000:1.6
	v20070330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4.2.1
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	RC2_10:1.4
	I20060505-1400:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.9
date	2008.05.21.17.10.17;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	b0d483457794567;

1.8
date	2007.12.14.14.37.54;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	193476295424567;

1.7
date	2007.06.21.14.22.08;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	289f467a898f4567;

1.6
date	2007.04.17.14.04.40;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	20994624d3f84567;

1.5
date	2007.03.14.12.59.18;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	109645f7f19c4567;

1.4
date	2006.04.14.10.52.36;	author atikhomirov;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.03.30.13.38.05;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.13.17.53.14;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.01.20.18.29;	author atikhomirov;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.13.23.07.16;	author rgronback;	state Exp;
branches;
next	;


desc
@@


1.9
log
@[139126] respect implementation bundle of custom borders and layouts: documenting, depreciating FQNSwitch as it's only use is to detect dependencies which doesn't require rest of the code to be there (figure fqns)
@
text
@/*
 * Copyright (c) 2005, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.gmfgraph.util;

import java.util.Arrays;
import java.util.Iterator;

import org.eclipse.emf.common.util.UniqueEList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gmf.gmfgraph.FigureGallery;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.Label;
import org.eclipse.gmf.gmfgraph.PolylineConnection;

/**
 * FQNSwitch to use with figures utilizing power of GMF Runtime
 * @@author artem
 */
@@Deprecated
public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {

	protected void collectDependencies(FigureGallery gallery, UniqueEList<String> result) {
		super.collectDependencies(gallery, result);
		final String pluginRuntimeDraw2d = "org.eclipse.gmf.runtime.draw2d.ui"; //$NON-NLS-1$
		if (usesEClassWithID(gallery, new int[] {GMFGraphPackage.POLYLINE_CONNECTION, GMFGraphPackage.LABEL})) {
			result.add(pluginRuntimeDraw2d);
		}
	}

	private boolean usesEClassWithID(FigureGallery gallery, int[] ids) {
		// Perhaps, EcoreUtil.getAllContents(gallery, false) would be better - 
		// - e.g. if eClass().getClassifierID() works for proxies?
		Arrays.sort(ids);
		for (Iterator<EObject> it = gallery.eAllContents(); it.hasNext(); ) {
			EObject next = it.next();
			if (Arrays.binarySearch(ids, next.eClass().getClassifierID()) >= 0) {
				return true;
			}
		}
		return false;
	}

	public String casePolylineConnection(PolylineConnection object) {
		return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx"; //$NON-NLS-1$
	}

	public String caseLabel(Label object) {
		return "org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"; //$NON-NLS-1$
	}
}
@


1.8
log
@WrapLabel -> WrappingLabel
@
text
@d28 1
@


1.7
log
@fix copyright years
@
text
@d56 1
a56 1
		return "org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel"; //$NON-NLS-1$
@


1.6
log
@[133279] mgolubev - GridLayout generated code points to unavailable package.
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
@


1.5
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a20 2
import org.eclipse.gmf.gmfgraph.GridLayout;
import org.eclipse.gmf.gmfgraph.GridLayoutData;
a50 8
	public String caseGridLayout(GridLayout object) {
		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayout";
	}

	public String caseGridLayoutData(GridLayoutData object) {
		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayoutData";
	}
	
@


1.4
log
@refactor to facilitate reuse in codegen.lite
@
text
@d32 1
a32 1
	protected void collectDependencies(FigureGallery gallery, UniqueEList result) {
d44 3
a46 4
		for (Iterator it = gallery.eAllContents(); it.hasNext(); ) {
			Object next = it.next();
			assert next instanceof EObject;
			if (Arrays.binarySearch(ids, ((EObject) next).eClass().getClassifierID()) >= 0) {
d53 1
a53 1
	public Object caseGridLayout(GridLayout object) {
d57 1
a57 1
	public Object caseGridLayoutData(GridLayoutData object) {
d61 1
a61 1
	public Object casePolylineConnection(PolylineConnection object) {
d65 1
a65 1
	public Object caseLabel(Label object) {
@


1.4.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@


1.3
log
@[mgolubev] #131366 Check generated figures against originating gmfgraph model
@
text
@d14 1
a18 4
import org.eclipse.gmf.common.codegen.ImportAssistant;
import org.eclipse.gmf.gmfgraph.BorderLayout;
import org.eclipse.gmf.gmfgraph.CustomClass;
import org.eclipse.gmf.gmfgraph.Ellipse;
d20 1
a20 1
import org.eclipse.gmf.gmfgraph.FlowLayout;
a23 4
import org.eclipse.gmf.gmfgraph.LabeledContainer;
import org.eclipse.gmf.gmfgraph.Polygon;
import org.eclipse.gmf.gmfgraph.PolygonDecoration;
import org.eclipse.gmf.gmfgraph.Polyline;
a24 6
import org.eclipse.gmf.gmfgraph.PolylineDecoration;
import org.eclipse.gmf.gmfgraph.Rectangle;
import org.eclipse.gmf.gmfgraph.RoundedRectangle;
import org.eclipse.gmf.gmfgraph.StackLayout;
import org.eclipse.gmf.gmfgraph.XYLayout;
import org.eclipse.gmf.gmfgraph.XYLayoutData;
d27 1
a28 1
 *
d30 1
a30 1
public class RuntimeFQNSwitch extends GMFGraphSwitch implements FigureQualifiedNameSwitch {
d32 2
a33 14
	public String get(EObject gmfgraphObject) {
		return (String) doSwitch(gmfgraphObject);
	}

	public String get(EObject gmfgraphObject, ImportAssistant importManager) {
		return importManager.getImportedName(get(gmfgraphObject));
	}

	public String[] getDependencies(FigureGallery gallery) {
		return (String[]) caseFigureGallery(gallery);
	}

	public Object caseFigureGallery(FigureGallery gallery) {
		final String pluginBasicDraw2d = "org.eclipse.draw2d"; //$NON-NLS-1$
d35 2
a36 3
		UniqueEList rv = new UniqueEList();
		if (usesDraw2dFigures(gallery)) {
			rv.add(pluginBasicDraw2d);
a37 7
		if (usesPolylineConnections(gallery)) {
			rv.add(pluginRuntimeDraw2d);
		}
		if (gallery.getImplementationBundle() != null){
			rv.add(gallery.getImplementationBundle());
		}
		return rv.toArray(new String[rv.size()]);
d40 4
a43 1
	private boolean usesPolylineConnections(FigureGallery gallery) {
d45 3
a47 2
			// XXX switch eClass().getClassifierID()?
			if (it.next() instanceof PolylineConnection) {
a53 9
	private boolean usesDraw2dFigures(FigureGallery gallery) {
		// assume draw2d always used
		return !gallery.getFigures().isEmpty();
	}

	public Object caseCustomClass(CustomClass object) {
		return object.getQualifiedClassName();
	}

d62 2
a63 18
	public Object caseFlowLayout(FlowLayout object) {
		return object.isForceSingleLine() ? "org.eclipse.draw2d.ToolbarLayout" : "org.eclipse.draw2d.FlowLayout";
	}
	
	public Object caseXYLayout(XYLayout object) {
		return "org.eclipse.draw2d.XYLayout";
	}
	
	public Object caseXYLayoutData(XYLayoutData object) {
		return "org.eclipse.draw2d.geometry.Rectangle";
	}
	
	public Object caseStackLayout(StackLayout object) {
		return "org.eclipse.draw2d.StackLayout";
	}

	public Object caseBorderLayout(BorderLayout object) {
		return "org.eclipse.draw2d.BorderLayout";
d67 1
a67 37
		return "org.eclipse.draw2d.Label"; //$NON-NLS-1$
	}

	public Object caseLabeledContainer(LabeledContainer object) {
		return "org.eclipse.draw2d.LabeledContainer"; //$NON-NLS-1$
	}

	public Object caseRectangle(Rectangle object) {
		return "org.eclipse.draw2d.RectangleFigure"; //$NON-NLS-1$
	}

	public Object caseRoundedRectangle(RoundedRectangle object) {
		return "org.eclipse.draw2d.RoundedRectangle"; //$NON-NLS-1$
	}

	public Object caseEllipse(Ellipse object) {
		return "org.eclipse.draw2d.Ellipse"; //$NON-NLS-1$
	}

	public Object casePolygon(Polygon object) {
		return "org.eclipse.draw2d.Polygon"; //$NON-NLS-1$
	}

	public Object casePolygonDecoration(PolygonDecoration object) {
		return "org.eclipse.draw2d.PolygonDecoration"; //$NON-NLS-1$
	}

	public Object casePolyline(Polyline object) {
		return "org.eclipse.draw2d.Polyline"; //$NON-NLS-1$
	}

	public Object casePolylineDecoration(PolylineDecoration object) {
		return "org.eclipse.draw2d.PolylineDecoration"; //$NON-NLS-1$
	}

	public Object casePolylineConnection(PolylineConnection object) {
		return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx"; //$NON-NLS-1$
@


1.2
log
@explicit method names for fqn switch to better reflect it's intention
@
text
@a13 1
import java.util.ArrayList;
d16 1
d60 1
a60 1
		ArrayList rv = new ArrayList();
d67 3
@


1.1
log
@Split FQNSwitch into interface and rt-specific implementation
New requirement on the switch - to provide additional requiremens
@
text
@d17 2
d45 12
@

