head	1.5;
access;
symbols
	v20080813-1520:1.5
	v20080807-1333:1.5
	v20080806-1520:1.5
	v20080731-1520:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080425-1959:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071214-1111:1.5
	v20071003-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070420-1000:1.4
	v20070330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.3
	v20060530-1930:1.3
	v20060526-1200:1.3
	v20060519-0800:1.3
	RC2_10:1.1
	I20060505-1400:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	3de9465ada274567;

1.4
date	2006.06.05.14.26.30;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.17.14.22.56;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.14.18.06.38;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.14.10.11.40;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.5
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Diagram Label</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#isElementIcon <em>Element Icon</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#getAccessor <em>Accessor</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#getContainer <em>Container</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#isExternal <em>External</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramLabel()
 * @@model
 * @@generated
 */
public interface DiagramLabel extends Node {
	/**
	 * Returns the value of the '<em><b>Element Icon</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Element Icon</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Element Icon</em>' attribute.
	 * @@see #setElementIcon(boolean)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramLabel_ElementIcon()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isElementIcon();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#isElementIcon <em>Element Icon</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Element Icon</em>' attribute.
	 * @@see #isElementIcon()
	 * @@generated
	 */
	void setElementIcon(boolean value);

	/**
	 * Returns the value of the '<em><b>Accessor</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Accessor</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Accessor</em>' reference.
	 * @@see #setAccessor(ChildAccess)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramLabel_Accessor()
	 * @@model
	 * @@generated
	 */
	ChildAccess getAccessor();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#getAccessor <em>Accessor</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Accessor</em>' reference.
	 * @@see #getAccessor()
	 * @@generated
	 */
	void setAccessor(ChildAccess value);

	/**
	 * Returns the value of the '<em><b>Container</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Container</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Container</em>' reference.
	 * @@see #setContainer(ChildAccess)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramLabel_Container()
	 * @@model
	 * @@generated
	 */
	ChildAccess getContainer();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.DiagramLabel#getContainer <em>Container</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Container</em>' reference.
	 * @@see #getContainer()
	 * @@generated
	 */
	void setContainer(ChildAccess value);

	/**
	 * Returns the value of the '<em><b>External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>External</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>External</em>' attribute.
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramLabel_External()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 * @@generated
	 */
	boolean isExternal();

} // DiagramLabel
@


1.4
log
@Setting elementIcon attribute default value to "true".
@
text
@d19 3
d57 67
@


1.3
log
@#139127 Provide an option for labels to display node icon
@
text
@d29 1
d39 1
a39 1
	 * @@model
@


1.2
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@d15 6
d27 26
@


1.1
log
@#127461 add label diagram element in gmfgraph model
@
text
@d20 1
a20 1
public interface DiagramLabel extends DiagramElement {
@

