head	1.13;
access;
symbols
	v20080813-1520:1.13
	v20080807-1333:1.13
	v20080806-1520:1.13
	v20080731-1520:1.13
	v20080722-1827:1.13
	v20080716-1642:1.13
	R2_1_maintenance:1.13.0.4
	Root_R2_1_maintenance:1.13
	R2_1_0:1.13
	v20080528-1052:1.13
	v20080521:1.13
	v20080425-1959:1.13
	v20080322-0000:1.13
	v20080222-1200:1.13
	v20080215-1500:1.13
	v20080207-0207:1.13
	v20071214-1111:1.13
	v20071003-0000:1.13
	v20070809-0000:1.13
	R2_0_maintenance:1.13.0.2
	R2_0:1.13
	R4_20:1.13
	v20070621-0000:1.13
	RC3_20:1.13
	v20070605-1400:1.13
	v20070601-1400:1.13
	v20070420-1000:1.12
	v20070330-1300:1.12
	v20070322-1100:1.12
	v20060316-0600:1.12
	v20070208-1800:1.11
	M4_20:1.11
	v20061214-0000:1.11
	M3_20:1.11
	v20061013-1330:1.9
	v20060919-0800:1.9
	M1_20:1.9
	v20060904-1500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.9
	v20060530-1930:1.9
	v20060526-1200:1.9
	v20060519-0800:1.8
	RC2_10:1.8
	I20060505-1400:1.8
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.6
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.5
	I20060129-1145:1.5
	I20060127-0900:1.5
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.4
	I20051223-1100:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.12;
commitid	3de9465ada274567;

1.12
date	2007.03.14.12.59.17;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	109645f7f19c4567;

1.11
date	2006.11.02.22.50.22;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.31.14.09.32;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.23.21.09.56;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.02.11.44.15;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.24.13.52.14;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.13.17.36.31;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.05.17.33.07;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.28.16.10.30;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.12.16.01;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.12.19.15.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.13
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.LabeledContainer;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Labeled Container</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * </p>
 *
 * @@generated
 */
public class LabeledContainerImpl extends RealFigureImpl implements LabeledContainer {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected LabeledContainerImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGraphPackage.eINSTANCE.getLabeledContainer();
	}

} //LabeledContainerImpl
@


1.12
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a8 5
import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
a9 14
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.gmfgraph.Border;
import org.eclipse.gmf.gmfgraph.Color;
import org.eclipse.gmf.gmfgraph.DiagramElement;
import org.eclipse.gmf.gmfgraph.Dimension;
import org.eclipse.gmf.gmfgraph.Figure;
import org.eclipse.gmf.gmfgraph.FigureHandle;
import org.eclipse.gmf.gmfgraph.FigureMarker;
import org.eclipse.gmf.gmfgraph.Font;
a10 2
import org.eclipse.gmf.gmfgraph.Identity;
import org.eclipse.gmf.gmfgraph.Insets;
a11 3
import org.eclipse.gmf.gmfgraph.Layout;
import org.eclipse.gmf.gmfgraph.LayoutData;
import org.eclipse.gmf.gmfgraph.Point;
a17 19
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getLayoutData <em>Layout Data</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getLayout <em>Layout</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getParent <em>Parent</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getReferencingElements <em>Referencing Elements</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getName <em>Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getChildren <em>Children</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getForegroundColor <em>Foreground Color</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getBackgroundColor <em>Background Color</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getMaximumSize <em>Maximum Size</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getMinimumSize <em>Minimum Size</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getPreferredSize <em>Preferred Size</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getFont <em>Font</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getInsets <em>Insets</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getBorder <em>Border</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getLocation <em>Location</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getSize <em>Size</em>}</li>
 * </ul>
d22 1
a22 161
public class LabeledContainerImpl extends EObjectImpl implements LabeledContainer {
	/**
	 * The cached value of the '{@@link #getLayoutData() <em>Layout Data</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLayoutData()
	 * @@generated
	 * @@ordered
	 */
	protected LayoutData layoutData = null;

	/**
	 * The cached value of the '{@@link #getLayout() <em>Layout</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLayout()
	 * @@generated
	 * @@ordered
	 */
	protected Layout layout = null;

	/**
	 * The cached value of the '{@@link #getReferencingElements() <em>Referencing Elements</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReferencingElements()
	 * @@generated
	 * @@ordered
	 */
	protected EList<DiagramElement> referencingElements = null;

	/**
	 * The default value of the '{@@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getName()
	 * @@generated
	 * @@ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getChildren() <em>Children</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getChildren()
	 * @@generated
	 * @@ordered
	 */
	protected EList<FigureMarker> children = null;

	/**
	 * The cached value of the '{@@link #getForegroundColor() <em>Foreground Color</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getForegroundColor()
	 * @@generated
	 * @@ordered
	 */
	protected Color foregroundColor = null;

	/**
	 * The cached value of the '{@@link #getBackgroundColor() <em>Background Color</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBackgroundColor()
	 * @@generated
	 * @@ordered
	 */
	protected Color backgroundColor = null;

	/**
	 * The cached value of the '{@@link #getMaximumSize() <em>Maximum Size</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMaximumSize()
	 * @@generated
	 * @@ordered
	 */
	protected Dimension maximumSize = null;

	/**
	 * The cached value of the '{@@link #getMinimumSize() <em>Minimum Size</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMinimumSize()
	 * @@generated
	 * @@ordered
	 */
	protected Dimension minimumSize = null;

	/**
	 * The cached value of the '{@@link #getPreferredSize() <em>Preferred Size</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getPreferredSize()
	 * @@generated
	 * @@ordered
	 */
	protected Dimension preferredSize = null;

	/**
	 * The cached value of the '{@@link #getFont() <em>Font</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getFont()
	 * @@generated
	 * @@ordered
	 */
	protected Font font = null;

	/**
	 * The cached value of the '{@@link #getInsets() <em>Insets</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getInsets()
	 * @@generated
	 * @@ordered
	 */
	protected Insets insets = null;

	/**
	 * The cached value of the '{@@link #getBorder() <em>Border</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBorder()
	 * @@generated
	 * @@ordered
	 */
	protected Border border = null;

	/**
	 * The cached value of the '{@@link #getLocation() <em>Location</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLocation()
	 * @@generated
	 * @@ordered
	 */
	protected Point location = null;

	/**
	 * The cached value of the '{@@link #getSize() <em>Size</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSize()
	 * @@generated
	 * @@ordered
	 */
	protected Point size = null;

a41 917
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public LayoutData getLayoutData() {
		return layoutData;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetLayoutData(LayoutData newLayoutData, NotificationChain msgs) {
		LayoutData oldLayoutData = layoutData;
		layoutData = newLayoutData;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA, oldLayoutData, newLayoutData);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLayoutData(LayoutData newLayoutData) {
		if (newLayoutData != layoutData) {
			NotificationChain msgs = null;
			if (layoutData != null)
				msgs = ((InternalEObject)layoutData).eInverseRemove(this, GMFGraphPackage.LAYOUT_DATA__OWNER, LayoutData.class, msgs);
			if (newLayoutData != null)
				msgs = ((InternalEObject)newLayoutData).eInverseAdd(this, GMFGraphPackage.LAYOUT_DATA__OWNER, LayoutData.class, msgs);
			msgs = basicSetLayoutData(newLayoutData, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA, newLayoutData, newLayoutData));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Layout getLayout() {
		return layout;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetLayout(Layout newLayout, NotificationChain msgs) {
		Layout oldLayout = layout;
		layout = newLayout;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LAYOUT, oldLayout, newLayout);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLayout(Layout newLayout) {
		if (newLayout != layout) {
			NotificationChain msgs = null;
			if (layout != null)
				msgs = ((InternalEObject)layout).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__LAYOUT, null, msgs);
			if (newLayout != null)
				msgs = ((InternalEObject)newLayout).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__LAYOUT, null, msgs);
			msgs = basicSetLayout(newLayout, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LAYOUT, newLayout, newLayout));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<FigureMarker> getChildren() {
		if (children == null) {
			children = new EObjectContainmentWithInverseEList<FigureMarker>(FigureMarker.class, this, GMFGraphPackage.LABELED_CONTAINER__CHILDREN, GMFGraphPackage.FIGURE_MARKER__PARENT);
		}
		return children;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Figure getParent() {
		if (eContainerFeatureID != GMFGraphPackage.LABELED_CONTAINER__PARENT) return null;
		return (Figure)eContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Color getForegroundColor() {
		return foregroundColor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetForegroundColor(Color newForegroundColor, NotificationChain msgs) {
		Color oldForegroundColor = foregroundColor;
		foregroundColor = newForegroundColor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR, oldForegroundColor, newForegroundColor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setForegroundColor(Color newForegroundColor) {
		if (newForegroundColor != foregroundColor) {
			NotificationChain msgs = null;
			if (foregroundColor != null)
				msgs = ((InternalEObject)foregroundColor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR, null, msgs);
			if (newForegroundColor != null)
				msgs = ((InternalEObject)newForegroundColor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR, null, msgs);
			msgs = basicSetForegroundColor(newForegroundColor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR, newForegroundColor, newForegroundColor));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Color getBackgroundColor() {
		return backgroundColor;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetBackgroundColor(Color newBackgroundColor, NotificationChain msgs) {
		Color oldBackgroundColor = backgroundColor;
		backgroundColor = newBackgroundColor;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR, oldBackgroundColor, newBackgroundColor);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBackgroundColor(Color newBackgroundColor) {
		if (newBackgroundColor != backgroundColor) {
			NotificationChain msgs = null;
			if (backgroundColor != null)
				msgs = ((InternalEObject)backgroundColor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR, null, msgs);
			if (newBackgroundColor != null)
				msgs = ((InternalEObject)newBackgroundColor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR, null, msgs);
			msgs = basicSetBackgroundColor(newBackgroundColor, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR, newBackgroundColor, newBackgroundColor));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Dimension getMaximumSize() {
		return maximumSize;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetMaximumSize(Dimension newMaximumSize, NotificationChain msgs) {
		Dimension oldMaximumSize = maximumSize;
		maximumSize = newMaximumSize;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE, oldMaximumSize, newMaximumSize);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMaximumSize(Dimension newMaximumSize) {
		if (newMaximumSize != maximumSize) {
			NotificationChain msgs = null;
			if (maximumSize != null)
				msgs = ((InternalEObject)maximumSize).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE, null, msgs);
			if (newMaximumSize != null)
				msgs = ((InternalEObject)newMaximumSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE, null, msgs);
			msgs = basicSetMaximumSize(newMaximumSize, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE, newMaximumSize, newMaximumSize));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Dimension getMinimumSize() {
		return minimumSize;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetMinimumSize(Dimension newMinimumSize, NotificationChain msgs) {
		Dimension oldMinimumSize = minimumSize;
		minimumSize = newMinimumSize;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE, oldMinimumSize, newMinimumSize);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMinimumSize(Dimension newMinimumSize) {
		if (newMinimumSize != minimumSize) {
			NotificationChain msgs = null;
			if (minimumSize != null)
				msgs = ((InternalEObject)minimumSize).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE, null, msgs);
			if (newMinimumSize != null)
				msgs = ((InternalEObject)newMinimumSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE, null, msgs);
			msgs = basicSetMinimumSize(newMinimumSize, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE, newMinimumSize, newMinimumSize));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Dimension getPreferredSize() {
		return preferredSize;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetPreferredSize(Dimension newPreferredSize, NotificationChain msgs) {
		Dimension oldPreferredSize = preferredSize;
		preferredSize = newPreferredSize;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE, oldPreferredSize, newPreferredSize);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setPreferredSize(Dimension newPreferredSize) {
		if (newPreferredSize != preferredSize) {
			NotificationChain msgs = null;
			if (preferredSize != null)
				msgs = ((InternalEObject)preferredSize).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE, null, msgs);
			if (newPreferredSize != null)
				msgs = ((InternalEObject)newPreferredSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE, null, msgs);
			msgs = basicSetPreferredSize(newPreferredSize, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE, newPreferredSize, newPreferredSize));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Font getFont() {
		return font;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetFont(Font newFont, NotificationChain msgs) {
		Font oldFont = font;
		font = newFont;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__FONT, oldFont, newFont);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setFont(Font newFont) {
		if (newFont != font) {
			NotificationChain msgs = null;
			if (font != null)
				msgs = ((InternalEObject)font).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__FONT, null, msgs);
			if (newFont != null)
				msgs = ((InternalEObject)newFont).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__FONT, null, msgs);
			msgs = basicSetFont(newFont, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__FONT, newFont, newFont));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Insets getInsets() {
		return insets;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetInsets(Insets newInsets, NotificationChain msgs) {
		Insets oldInsets = insets;
		insets = newInsets;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__INSETS, oldInsets, newInsets);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setInsets(Insets newInsets) {
		if (newInsets != insets) {
			NotificationChain msgs = null;
			if (insets != null)
				msgs = ((InternalEObject)insets).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__INSETS, null, msgs);
			if (newInsets != null)
				msgs = ((InternalEObject)newInsets).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__INSETS, null, msgs);
			msgs = basicSetInsets(newInsets, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__INSETS, newInsets, newInsets));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Border getBorder() {
		return border;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetBorder(Border newBorder, NotificationChain msgs) {
		Border oldBorder = border;
		border = newBorder;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__BORDER, oldBorder, newBorder);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setBorder(Border newBorder) {
		if (newBorder != border) {
			NotificationChain msgs = null;
			if (border != null)
				msgs = ((InternalEObject)border).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__BORDER, null, msgs);
			if (newBorder != null)
				msgs = ((InternalEObject)newBorder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__BORDER, null, msgs);
			msgs = basicSetBorder(newBorder, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__BORDER, newBorder, newBorder));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Point getLocation() {
		return location;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetLocation(Point newLocation, NotificationChain msgs) {
		Point oldLocation = location;
		location = newLocation;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LOCATION, oldLocation, newLocation);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLocation(Point newLocation) {
		if (newLocation != location) {
			NotificationChain msgs = null;
			if (location != null)
				msgs = ((InternalEObject)location).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__LOCATION, null, msgs);
			if (newLocation != null)
				msgs = ((InternalEObject)newLocation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__LOCATION, null, msgs);
			msgs = basicSetLocation(newLocation, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LOCATION, newLocation, newLocation));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Point getSize() {
		return size;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetSize(Point newSize, NotificationChain msgs) {
		Point oldSize = size;
		size = newSize;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__SIZE, oldSize, newSize);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSize(Point newSize) {
		if (newSize != size) {
			NotificationChain msgs = null;
			if (size != null)
				msgs = ((InternalEObject)size).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__SIZE, null, msgs);
			if (newSize != null)
				msgs = ((InternalEObject)newSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__SIZE, null, msgs);
			msgs = basicSetSize(newSize, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__SIZE, newSize, newSize));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<DiagramElement> getReferencingElements() {
		if (referencingElements == null) {
			referencingElements = new EObjectWithInverseResolvingEList<DiagramElement>(DiagramElement.class, this, GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS, GMFGraphPackage.DIAGRAM_ELEMENT__FIGURE);
		}
		return referencingElements;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
				if (layoutData != null)
					msgs = ((InternalEObject)layoutData).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA, null, msgs);
				return basicSetLayoutData((LayoutData)otherEnd, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, GMFGraphPackage.LABELED_CONTAINER__PARENT, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getReferencingElements()).basicAdd(otherEnd, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getChildren()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
				return basicSetLayoutData(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT:
				return basicSetLayout(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return eBasicSetContainer(null, GMFGraphPackage.LABELED_CONTAINER__PARENT, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return ((InternalEList<?>)getReferencingElements()).basicRemove(otherEnd, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
				return ((InternalEList<?>)getChildren()).basicRemove(otherEnd, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR:
				return basicSetForegroundColor(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR:
				return basicSetBackgroundColor(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE:
				return basicSetMaximumSize(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE:
				return basicSetMinimumSize(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE:
				return basicSetPreferredSize(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__FONT:
				return basicSetFont(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__INSETS:
				return basicSetInsets(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__BORDER:
				return basicSetBorder(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
				return basicSetLocation(null, msgs);
			case GMFGraphPackage.LABELED_CONTAINER__SIZE:
				return basicSetSize(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID) {
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return eInternalContainer().eInverseRemove(this, GMFGraphPackage.FIGURE__CHILDREN, Figure.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
				return getLayoutData();
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT:
				return getLayout();
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return getParent();
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return getReferencingElements();
			case GMFGraphPackage.LABELED_CONTAINER__NAME:
				return getName();
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
				return getChildren();
			case GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR:
				return getForegroundColor();
			case GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR:
				return getBackgroundColor();
			case GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE:
				return getMaximumSize();
			case GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE:
				return getMinimumSize();
			case GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE:
				return getPreferredSize();
			case GMFGraphPackage.LABELED_CONTAINER__FONT:
				return getFont();
			case GMFGraphPackage.LABELED_CONTAINER__INSETS:
				return getInsets();
			case GMFGraphPackage.LABELED_CONTAINER__BORDER:
				return getBorder();
			case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
				return getLocation();
			case GMFGraphPackage.LABELED_CONTAINER__SIZE:
				return getSize();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
				setLayoutData((LayoutData)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT:
				setLayout((Layout)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				getReferencingElements().clear();
				getReferencingElements().addAll((Collection<? extends DiagramElement>)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__NAME:
				setName((String)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
				getChildren().clear();
				getChildren().addAll((Collection<? extends FigureMarker>)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR:
				setForegroundColor((Color)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR:
				setBackgroundColor((Color)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE:
				setMaximumSize((Dimension)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE:
				setMinimumSize((Dimension)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE:
				setPreferredSize((Dimension)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__FONT:
				setFont((Font)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__INSETS:
				setInsets((Insets)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__BORDER:
				setBorder((Border)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
				setLocation((Point)newValue);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__SIZE:
				setSize((Point)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
				setLayoutData((LayoutData)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT:
				setLayout((Layout)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				getReferencingElements().clear();
				return;
			case GMFGraphPackage.LABELED_CONTAINER__NAME:
				setName(NAME_EDEFAULT);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
				getChildren().clear();
				return;
			case GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR:
				setForegroundColor((Color)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR:
				setBackgroundColor((Color)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE:
				setMaximumSize((Dimension)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE:
				setMinimumSize((Dimension)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE:
				setPreferredSize((Dimension)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__FONT:
				setFont((Font)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__INSETS:
				setInsets((Insets)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__BORDER:
				setBorder((Border)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
				setLocation((Point)null);
				return;
			case GMFGraphPackage.LABELED_CONTAINER__SIZE:
				setSize((Point)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA:
				return layoutData != null;
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT:
				return layout != null;
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return getParent() != null;
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return referencingElements != null && !referencingElements.isEmpty();
			case GMFGraphPackage.LABELED_CONTAINER__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
				return children != null && !children.isEmpty();
			case GMFGraphPackage.LABELED_CONTAINER__FOREGROUND_COLOR:
				return foregroundColor != null;
			case GMFGraphPackage.LABELED_CONTAINER__BACKGROUND_COLOR:
				return backgroundColor != null;
			case GMFGraphPackage.LABELED_CONTAINER__MAXIMUM_SIZE:
				return maximumSize != null;
			case GMFGraphPackage.LABELED_CONTAINER__MINIMUM_SIZE:
				return minimumSize != null;
			case GMFGraphPackage.LABELED_CONTAINER__PREFERRED_SIZE:
				return preferredSize != null;
			case GMFGraphPackage.LABELED_CONTAINER__FONT:
				return font != null;
			case GMFGraphPackage.LABELED_CONTAINER__INSETS:
				return insets != null;
			case GMFGraphPackage.LABELED_CONTAINER__BORDER:
				return border != null;
			case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
				return location != null;
			case GMFGraphPackage.LABELED_CONTAINER__SIZE:
				return size != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == FigureHandle.class) {
			switch (derivedFeatureID) {
				case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS: return GMFGraphPackage.FIGURE_HANDLE__REFERENCING_ELEMENTS;
				default: return -1;
			}
		}
		if (baseClass == Identity.class) {
			switch (derivedFeatureID) {
				case GMFGraphPackage.LABELED_CONTAINER__NAME: return GMFGraphPackage.IDENTITY__NAME;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == FigureHandle.class) {
			switch (baseFeatureID) {
				case GMFGraphPackage.FIGURE_HANDLE__REFERENCING_ELEMENTS: return GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS;
				default: return -1;
			}
		}
		if (baseClass == Identity.class) {
			switch (baseFeatureID) {
				case GMFGraphPackage.IDENTITY__NAME: return GMFGraphPackage.LABELED_CONTAINER__NAME;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(')');
		return result.toString();
	}

@


1.11
log
@reverted explicit EObject superclass in the metamodel since it's not being utilized in new templates
@
text
@d94 1
a94 1
	protected EList referencingElements = null;
d124 1
a124 1
	protected EList children = null;
d240 1
d357 1
a357 1
	public EList getChildren() {
d359 1
a359 1
			children = new EObjectContainmentWithInverseEList(FigureMarker.class, this, GMFGraphPackage.LABELED_CONTAINER__CHILDREN, GMFGraphPackage.FIGURE_MARKER__PARENT);
d809 1
a809 1
	public EList getReferencingElements() {
d811 1
a811 1
			referencingElements = new EObjectWithInverseResolvingEList(DiagramElement.class, this, GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS, GMFGraphPackage.DIAGRAM_ELEMENT__FIGURE);
d821 2
d834 1
a834 1
				return ((InternalEList)getReferencingElements()).basicAdd(otherEnd, msgs);
d836 1
a836 1
				return ((InternalEList)getChildren()).basicAdd(otherEnd, msgs);
d846 1
d856 1
a856 1
				return ((InternalEList)getReferencingElements()).basicRemove(otherEnd, msgs);
d858 1
a858 1
				return ((InternalEList)getChildren()).basicRemove(otherEnd, msgs);
d888 1
d902 1
d946 2
d958 1
a958 1
				getReferencingElements().addAll((Collection)newValue);
d965 1
a965 1
				getChildren().addAll((Collection)newValue);
d1006 1
d1063 1
d1107 2
a1108 1
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class baseClass) {
d1129 2
a1130 1
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class baseClass) {
d1151 1
@


1.10
log
@explicit EObject superclass (needed for Xpand templates)
@
text
@a34 1
import org.eclipse.gmf.gmfgraph.Layoutable;
a1097 13
		if (baseClass == Layoutable.class) {
			switch (derivedFeatureID) {
				case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA: return GMFGraphPackage.LAYOUTABLE__LAYOUT_DATA;
				case GMFGraphPackage.LABELED_CONTAINER__LAYOUT: return GMFGraphPackage.LAYOUTABLE__LAYOUT;
				default: return -1;
			}
		}
		if (baseClass == FigureMarker.class) {
			switch (derivedFeatureID) {
				case GMFGraphPackage.LABELED_CONTAINER__PARENT: return GMFGraphPackage.FIGURE_MARKER__PARENT;
				default: return -1;
			}
		}
a1118 13
		if (baseClass == Layoutable.class) {
			switch (baseFeatureID) {
				case GMFGraphPackage.LAYOUTABLE__LAYOUT_DATA: return GMFGraphPackage.LABELED_CONTAINER__LAYOUT_DATA;
				case GMFGraphPackage.LAYOUTABLE__LAYOUT: return GMFGraphPackage.LABELED_CONTAINER__LAYOUT;
				default: return -1;
			}
		}
		if (baseClass == FigureMarker.class) {
			switch (baseFeatureID) {
				case GMFGraphPackage.FIGURE_MARKER__PARENT: return GMFGraphPackage.LABELED_CONTAINER__PARENT;
				default: return -1;
			}
		}
@


1.9
log
@#140887 Remove Child interface from GMFGraph.
Although the need to reference child figures persist, thus FigureHandle was introduced, to allow diagramElements to reference either *generateable* figures (Figure subclasses) or *just-use* figures (like CustomFigure and FigureAccessor).
Refactoring performed with #131365 "Mirror GMFGraph model when generating standalone figure plugin" in mind
@
text
@d35 1
d1099 13
d1133 13
@


1.8
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@d26 1
d47 1
a59 1
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getReferencingElements <em>Referencing Elements</em>}</li>
d87 10
a226 10
	 * The cached value of the '{@@link #getReferencingElements() <em>Referencing Elements</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getReferencingElements()
	 * @@generated
	 * @@ordered
	 */
	protected EList referencingElements = null;

	/**
d830 2
a833 2
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return ((InternalEList)getReferencingElements()).basicAdd(otherEnd, msgs);
d851 2
a874 2
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return ((InternalEList)getReferencingElements()).basicRemove(otherEnd, msgs);
d905 2
a930 2
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return getReferencingElements();
d948 4
a988 4
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				getReferencingElements().clear();
				getReferencingElements().addAll((Collection)newValue);
				return;
d1006 3
a1044 3
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				getReferencingElements().clear();
				return;
d1062 2
a1087 2
			case GMFGraphPackage.LABELED_CONTAINER__REFERENCING_ELEMENTS:
				return referencingElements != null && !referencingElements.isEmpty();
d1098 6
d1119 6
@


1.7
log
@need access to figure/figure ref's parent for DMGT's check of external label to work correctly
@
text
@d19 1
d23 1
d58 1
d216 10
d807 12
d831 2
d872 2
d928 2
d984 4
d1041 3
d1085 2
@


1.6
log
@[mgolubev] #127252 layout support
@
text
@d18 1
a18 1
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
d43 1
a45 1
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getParent <em>Parent</em>}</li>
d344 1
a344 1
			children = new EObjectContainmentEList(FigureMarker.class, this, GMFGraphPackage.LABELED_CONTAINER__CHILDREN);
d804 2
d821 2
a824 2
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return eBasicSetContainer(null, GMFGraphPackage.LABELED_CONTAINER__PARENT, msgs);
d873 2
a878 2
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return getParent();
d1021 2
a1026 2
			case GMFGraphPackage.LABELED_CONTAINER__PARENT:
				return getParent() != null;
@


1.5
log
@move towards more draw2d-like model
@
text
@d30 2
d41 2
a55 1
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getLayoutManager <em>Layout Manager</em>}</li>
d63 20
a212 1
	 * The default value of the '{@@link #getLayoutManager() <em>Layout Manager</em>}' attribute.
a214 1
	 * @@see #getLayoutManager()
a215 1
	 * @@ordered
d217 55
a271 1
	protected static final String LAYOUT_MANAGER_EDEFAULT = null;
a273 1
	 * The cached value of the '{@@link #getLayoutManager() <em>Layout Manager</em>}' attribute.
a275 1
	 * @@see #getLayoutManager()
a276 1
	 * @@ordered
d278 3
a280 1
	protected String layoutManager = LAYOUT_MANAGER_EDEFAULT;
d287 8
a294 2
	protected LabeledContainerImpl() {
		super();
d302 12
a313 2
	protected EClass eStaticClass() {
		return GMFGraphPackage.eINSTANCE.getLabeledContainer();
a793 21
	public String getLayoutManager() {
		return layoutManager;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setLayoutManager(String newLayoutManager) {
		String oldLayoutManager = layoutManager;
		layoutManager = newLayoutManager;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__LAYOUT_MANAGER, oldLayoutManager, layoutManager));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
d796 4
d815 4
d867 4
a896 2
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_MANAGER:
				return getLayoutManager();
d908 6
a950 3
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_MANAGER:
				setLayoutManager((String)newValue);
				return;
d962 6
a1003 3
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_MANAGER:
				setLayoutManager(LAYOUT_MANAGER_EDEFAULT);
				return;
d1015 4
a1044 2
			case GMFGraphPackage.LABELED_CONTAINER__LAYOUT_MANAGER:
				return LAYOUT_MANAGER_EDEFAULT == null ? layoutManager != null : !LAYOUT_MANAGER_EDEFAULT.equals(layoutManager);
a1089 2
		result.append(", layoutManager: ");
		result.append(layoutManager);
@


1.4
log
@removed unused imports
@
text
@a14 1
import org.eclipse.emf.ecore.EStructuralFeature;
d20 3
a22 1
import org.eclipse.gmf.gmfgraph.ColorStyle;
d25 1
a25 1
import org.eclipse.gmf.gmfgraph.FontStyle;
d28 1
a30 1
import org.eclipse.gmf.gmfgraph.SizeStyle;
d42 8
a49 3
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getColorStyle <em>Color Style</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getSizeStyle <em>Size Style</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getFontStyle <em>Font Style</em>}</li>
d90 1
a90 1
	 * The cached value of the '{@@link #getColorStyle() <em>Color Style</em>}' containment reference.
d93 1
a93 1
	 * @@see #getColorStyle()
d97 1
a97 1
	protected ColorStyle colorStyle = null;
d100 1
a100 1
	 * The cached value of the '{@@link #getSizeStyle() <em>Size Style</em>}' containment reference.
d103 1
a103 1
	 * @@see #getSizeStyle()
d107 1
a107 1
	protected SizeStyle sizeStyle = null;
d110 1
a110 1
	 * The cached value of the '{@@link #getFontStyle() <em>Font Style</em>}' containment reference.
d113 1
a113 1
	 * @@see #getFontStyle()
d117 51
a167 1
	protected FontStyle fontStyle = null;
d267 68
a334 1
		return (Figure)eContainer;
d342 12
a353 2
	public ColorStyle getColorStyle() {
		return colorStyle;
d361 12
a372 3
	public NotificationChain basicSetColorStyle(ColorStyle newColorStyle, NotificationChain msgs) {
		ColorStyle oldColorStyle = colorStyle;
		colorStyle = newColorStyle;
d374 1
a374 1
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE, oldColorStyle, newColorStyle);
d385 2
a386 2
	public void setColorStyle(ColorStyle newColorStyle) {
		if (newColorStyle != colorStyle) {
d388 5
a392 5
			if (colorStyle != null)
				msgs = ((InternalEObject)colorStyle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE, null, msgs);
			if (newColorStyle != null)
				msgs = ((InternalEObject)newColorStyle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE, null, msgs);
			msgs = basicSetColorStyle(newColorStyle, msgs);
d396 1
a396 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE, newColorStyle, newColorStyle));
d404 2
a405 2
	public SizeStyle getSizeStyle() {
		return sizeStyle;
d413 3
a415 3
	public NotificationChain basicSetSizeStyle(SizeStyle newSizeStyle, NotificationChain msgs) {
		SizeStyle oldSizeStyle = sizeStyle;
		sizeStyle = newSizeStyle;
d417 1
a417 1
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE, oldSizeStyle, newSizeStyle);
d428 2
a429 2
	public void setSizeStyle(SizeStyle newSizeStyle) {
		if (newSizeStyle != sizeStyle) {
d431 5
a435 5
			if (sizeStyle != null)
				msgs = ((InternalEObject)sizeStyle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE, null, msgs);
			if (newSizeStyle != null)
				msgs = ((InternalEObject)newSizeStyle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE, null, msgs);
			msgs = basicSetSizeStyle(newSizeStyle, msgs);
d439 1
a439 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE, newSizeStyle, newSizeStyle));
d447 2
a448 2
	public FontStyle getFontStyle() {
		return fontStyle;
d456 3
a458 3
	public NotificationChain basicSetFontStyle(FontStyle newFontStyle, NotificationChain msgs) {
		FontStyle oldFontStyle = fontStyle;
		fontStyle = newFontStyle;
d460 1
a460 1
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE, oldFontStyle, newFontStyle);
d471 2
a472 2
	public void setFontStyle(FontStyle newFontStyle) {
		if (newFontStyle != fontStyle) {
d474 5
a478 5
			if (fontStyle != null)
				msgs = ((InternalEObject)fontStyle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE, null, msgs);
			if (newFontStyle != null)
				msgs = ((InternalEObject)newFontStyle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE, null, msgs);
			msgs = basicSetFontStyle(newFontStyle, msgs);
d482 130
a611 1
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE, newFontStyle, newFontStyle));
d726 6
a731 10
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGraphPackage.LABELED_CONTAINER__PARENT:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFGraphPackage.LABELED_CONTAINER__PARENT, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
d733 1
a733 3
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
d741 26
a766 20
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGraphPackage.LABELED_CONTAINER__CHILDREN:
					return ((InternalEList)getChildren()).basicRemove(otherEnd, msgs);
				case GMFGraphPackage.LABELED_CONTAINER__PARENT:
					return eBasicSetContainer(null, GMFGraphPackage.LABELED_CONTAINER__PARENT, msgs);
				case GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE:
					return basicSetColorStyle(null, msgs);
				case GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE:
					return basicSetSizeStyle(null, msgs);
				case GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE:
					return basicSetFontStyle(null, msgs);
				case GMFGraphPackage.LABELED_CONTAINER__LOCATION:
					return basicSetLocation(null, msgs);
				case GMFGraphPackage.LABELED_CONTAINER__SIZE:
					return basicSetSize(null, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d768 1
a768 1
		return eBasicSetContainer(null, featureID, msgs);
d776 4
a779 8
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFGraphPackage.LABELED_CONTAINER__PARENT:
					return eContainer.eInverseRemove(this, GMFGraphPackage.FIGURE__CHILDREN, Figure.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
d781 1
a781 1
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
d789 2
a790 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d797 16
a812 6
			case GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE:
				return getColorStyle();
			case GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE:
				return getSizeStyle();
			case GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE:
				return getFontStyle();
d820 1
a820 1
		return eDynamicGet(eFeature, resolve);
d828 2
a829 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d837 14
a850 2
			case GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE:
				setColorStyle((ColorStyle)newValue);
d852 2
a853 2
			case GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE:
				setSizeStyle((SizeStyle)newValue);
d855 5
a859 2
			case GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE:
				setFontStyle((FontStyle)newValue);
d871 1
a871 1
		eDynamicSet(eFeature, newValue);
d879 2
a880 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d887 17
a903 2
			case GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE:
				setColorStyle((ColorStyle)null);
d905 2
a906 2
			case GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE:
				setSizeStyle((SizeStyle)null);
d908 2
a909 2
			case GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE:
				setFontStyle((FontStyle)null);
d921 1
a921 1
		eDynamicUnset(eFeature);
d929 2
a930 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d937 16
a952 6
			case GMFGraphPackage.LABELED_CONTAINER__COLOR_STYLE:
				return colorStyle != null;
			case GMFGraphPackage.LABELED_CONTAINER__SIZE_STYLE:
				return sizeStyle != null;
			case GMFGraphPackage.LABELED_CONTAINER__FONT_STYLE:
				return fontStyle != null;
d960 1
a960 1
		return eDynamicIsSet(eFeature);
@


1.3
log
@temporarily move resolvedChildren to shape only, need to come up with better way not to duplicate method implementation through the whole Figure descentants tree
@
text
@a19 1
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
@


1.2
log
@minor updates according to recent comments
single impl bundle per gallery
[+] Figure.getResolvedChildren to substitute figureRefs with actual figures they reference
@
text
@a47 1
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.LabeledContainerImpl#getResolvedChildren <em>Resolved Children</em>}</li>
a455 11
	public EList getResolvedChildren() {
		// TODO: implement this method to return the 'Resolved Children' reference list
		// Ensure that you remove @@generated or mark it @@generated NOT
		throw new UnsupportedOperationException();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
a542 2
			case GMFGraphPackage.LABELED_CONTAINER__RESOLVED_CHILDREN:
				return getResolvedChildren();
a642 2
			case GMFGraphPackage.LABELED_CONTAINER__RESOLVED_CHILDREN:
				return !getResolvedChildren().isEmpty();
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d20 1
d48 1
d457 11
d555 2
d657 2
@

