head	1.6;
access;
symbols
	v20080813-1520:1.6
	v20080807-1333:1.6
	v20080806-1520:1.6
	v20080731-1520:1.6
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080528-1052:1.6
	v20080521:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20080222-1200:1.6
	v20080215-1500:1.6
	v20080207-0207:1.6
	v20071214-1111:1.6
	v20071003-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070420-1000:1.5
	v20070330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070208-1800:1.4
	M4_20:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061013-1330:1.4
	v20060919-0800:1.4
	M1_20:1.4
	v20060904-1500:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060626-1420:1.4
	v20060616-1200:1.4
	v20060609-1400:1.4
	v20060531-1730:1.4
	v20060530-1930:1.4
	v20060526-1200:1.4
	v20060519-0800:1.4
	RC2_10:1.4
	I20060505-1400:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.3
	I20051223-1100:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	3de9465ada274567;

1.5
date	2007.03.14.12.59.17;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	109645f7f19c4567;

1.4
date	2006.01.05.17.33.08;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.12.16.01;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.12.19.15.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.6
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.Point;
import org.eclipse.gmf.gmfgraph.Polyline;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Polyline</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.PolylineImpl#getTemplate <em>Template</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class PolylineImpl extends ShapeImpl implements Polyline {
	/**
	 * The cached value of the '{@@link #getTemplate() <em>Template</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getTemplate()
	 * @@generated
	 * @@ordered
	 */
	protected EList<Point> template;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected PolylineImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGraphPackage.eINSTANCE.getPolyline();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<Point> getTemplate() {
		if (template == null) {
			template = new EObjectContainmentEList<Point>(Point.class, this, GMFGraphPackage.POLYLINE__TEMPLATE);
		}
		return template;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGraphPackage.POLYLINE__TEMPLATE:
				return ((InternalEList<?>)getTemplate()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGraphPackage.POLYLINE__TEMPLATE:
				return getTemplate();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGraphPackage.POLYLINE__TEMPLATE:
				getTemplate().clear();
				getTemplate().addAll((Collection<? extends Point>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.POLYLINE__TEMPLATE:
				getTemplate().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.POLYLINE__TEMPLATE:
				return template != null && !template.isEmpty();
		}
		return super.eIsSet(featureID);
	}

} //PolylineImpl
@


1.5
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d43 1
a43 1
	protected EList<Point> template = null;
@


1.4
log
@move towards more draw2d-like model
@
text
@d43 1
a43 1
	protected EList template = null;
d59 1
d69 1
a69 1
	public EList getTemplate() {
d71 1
a71 1
			template = new EObjectContainmentEList(Point.class, this, GMFGraphPackage.POLYLINE__TEMPLATE);
d81 1
d85 1
a85 1
				return ((InternalEList)getTemplate()).basicRemove(otherEnd, msgs);
d95 1
d109 2
d115 1
a115 1
				getTemplate().addAll((Collection)newValue);
d126 1
d141 1
@


1.3
log
@temporarily move resolvedChildren to shape only, need to come up with better way not to duplicate method implementation through the whole Figure descentants tree
@
text
@a13 1
import org.eclipse.emf.ecore.EStructuralFeature;
a16 3
import org.eclipse.gmf.gmfgraph.ColorStyle;
import org.eclipse.gmf.gmfgraph.Figure;
import org.eclipse.gmf.gmfgraph.FontStyle;
a17 1
import org.eclipse.gmf.gmfgraph.LineKind;
a19 1
import org.eclipse.gmf.gmfgraph.SizeStyle;
d80 4
a83 43
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGraphPackage.POLYLINE__PARENT:
					if (eContainer != null)
						msgs = eBasicRemoveFromContainer(msgs);
					return eBasicSetContainer(otherEnd, GMFGraphPackage.POLYLINE__PARENT, msgs);
				default:
					return eDynamicInverseAdd(otherEnd, featureID, baseClass, msgs);
			}
		}
		if (eContainer != null)
			msgs = eBasicRemoveFromContainer(msgs);
		return eBasicSetContainer(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGraphPackage.POLYLINE__CHILDREN:
					return ((InternalEList)getChildren()).basicRemove(otherEnd, msgs);
				case GMFGraphPackage.POLYLINE__PARENT:
					return eBasicSetContainer(null, GMFGraphPackage.POLYLINE__PARENT, msgs);
				case GMFGraphPackage.POLYLINE__COLOR_STYLE:
					return basicSetColorStyle(null, msgs);
				case GMFGraphPackage.POLYLINE__SIZE_STYLE:
					return basicSetSizeStyle(null, msgs);
				case GMFGraphPackage.POLYLINE__FONT_STYLE:
					return basicSetFontStyle(null, msgs);
				case GMFGraphPackage.POLYLINE__LOCATION:
					return basicSetLocation(null, msgs);
				case GMFGraphPackage.POLYLINE__SIZE:
					return basicSetSize(null, msgs);
				case GMFGraphPackage.POLYLINE__TEMPLATE:
					return ((InternalEList)getTemplate()).basicRemove(otherEnd, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d85 1
a85 1
		return eBasicSetContainer(null, featureID, msgs);
d93 2
a94 51
	public NotificationChain eBasicRemoveFromContainer(NotificationChain msgs) {
		if (eContainerFeatureID >= 0) {
			switch (eContainerFeatureID) {
				case GMFGraphPackage.POLYLINE__PARENT:
					return eContainer.eInverseRemove(this, GMFGraphPackage.FIGURE__CHILDREN, Figure.class, msgs);
				default:
					return eDynamicBasicRemoveFromContainer(msgs);
			}
		}
		return eContainer.eInverseRemove(this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGraphPackage.POLYLINE__NAME:
				return getName();
			case GMFGraphPackage.POLYLINE__CHILDREN:
				return getChildren();
			case GMFGraphPackage.POLYLINE__PARENT:
				return getParent();
			case GMFGraphPackage.POLYLINE__COLOR_STYLE:
				return getColorStyle();
			case GMFGraphPackage.POLYLINE__SIZE_STYLE:
				return getSizeStyle();
			case GMFGraphPackage.POLYLINE__FONT_STYLE:
				return getFontStyle();
			case GMFGraphPackage.POLYLINE__LOCATION:
				return getLocation();
			case GMFGraphPackage.POLYLINE__SIZE:
				return getSize();
			case GMFGraphPackage.POLYLINE__LAYOUT_MANAGER:
				return getLayoutManager();
			case GMFGraphPackage.POLYLINE__OUTLINE:
				return isOutline() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.POLYLINE__FILL:
				return isFill() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.POLYLINE__LINE_WIDTH:
				return new Integer(getLineWidth());
			case GMFGraphPackage.POLYLINE__LINE_KIND:
				return getLineKind();
			case GMFGraphPackage.POLYLINE__XOR_FILL:
				return isXorFill() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.POLYLINE__XOR_OUTLINE:
				return isXorOutline() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.POLYLINE__RESOLVED_CHILDREN:
				return getResolvedChildren();
d98 1
a98 1
		return eDynamicGet(eFeature, resolve);
d106 2
a107 45
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGraphPackage.POLYLINE__NAME:
				setName((String)newValue);
				return;
			case GMFGraphPackage.POLYLINE__CHILDREN:
				getChildren().clear();
				getChildren().addAll((Collection)newValue);
				return;
			case GMFGraphPackage.POLYLINE__COLOR_STYLE:
				setColorStyle((ColorStyle)newValue);
				return;
			case GMFGraphPackage.POLYLINE__SIZE_STYLE:
				setSizeStyle((SizeStyle)newValue);
				return;
			case GMFGraphPackage.POLYLINE__FONT_STYLE:
				setFontStyle((FontStyle)newValue);
				return;
			case GMFGraphPackage.POLYLINE__LOCATION:
				setLocation((Point)newValue);
				return;
			case GMFGraphPackage.POLYLINE__SIZE:
				setSize((Point)newValue);
				return;
			case GMFGraphPackage.POLYLINE__LAYOUT_MANAGER:
				setLayoutManager((String)newValue);
				return;
			case GMFGraphPackage.POLYLINE__OUTLINE:
				setOutline(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.POLYLINE__FILL:
				setFill(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.POLYLINE__LINE_WIDTH:
				setLineWidth(((Integer)newValue).intValue());
				return;
			case GMFGraphPackage.POLYLINE__LINE_KIND:
				setLineKind((LineKind)newValue);
				return;
			case GMFGraphPackage.POLYLINE__XOR_FILL:
				setXorFill(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.POLYLINE__XOR_OUTLINE:
				setXorOutline(((Boolean)newValue).booleanValue());
				return;
d113 1
a113 1
		eDynamicSet(eFeature, newValue);
d121 2
a122 44
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGraphPackage.POLYLINE__NAME:
				setName(NAME_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__CHILDREN:
				getChildren().clear();
				return;
			case GMFGraphPackage.POLYLINE__COLOR_STYLE:
				setColorStyle((ColorStyle)null);
				return;
			case GMFGraphPackage.POLYLINE__SIZE_STYLE:
				setSizeStyle((SizeStyle)null);
				return;
			case GMFGraphPackage.POLYLINE__FONT_STYLE:
				setFontStyle((FontStyle)null);
				return;
			case GMFGraphPackage.POLYLINE__LOCATION:
				setLocation((Point)null);
				return;
			case GMFGraphPackage.POLYLINE__SIZE:
				setSize((Point)null);
				return;
			case GMFGraphPackage.POLYLINE__LAYOUT_MANAGER:
				setLayoutManager(LAYOUT_MANAGER_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__OUTLINE:
				setOutline(OUTLINE_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__FILL:
				setFill(FILL_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__LINE_WIDTH:
				setLineWidth(LINE_WIDTH_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__LINE_KIND:
				setLineKind(LINE_KIND_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__XOR_FILL:
				setXorFill(XOR_FILL_EDEFAULT);
				return;
			case GMFGraphPackage.POLYLINE__XOR_OUTLINE:
				setXorOutline(XOR_OUTLINE_EDEFAULT);
				return;
d127 1
a127 1
		eDynamicUnset(eFeature);
d135 2
a136 34
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
			case GMFGraphPackage.POLYLINE__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case GMFGraphPackage.POLYLINE__CHILDREN:
				return children != null && !children.isEmpty();
			case GMFGraphPackage.POLYLINE__PARENT:
				return getParent() != null;
			case GMFGraphPackage.POLYLINE__COLOR_STYLE:
				return colorStyle != null;
			case GMFGraphPackage.POLYLINE__SIZE_STYLE:
				return sizeStyle != null;
			case GMFGraphPackage.POLYLINE__FONT_STYLE:
				return fontStyle != null;
			case GMFGraphPackage.POLYLINE__LOCATION:
				return location != null;
			case GMFGraphPackage.POLYLINE__SIZE:
				return size != null;
			case GMFGraphPackage.POLYLINE__LAYOUT_MANAGER:
				return LAYOUT_MANAGER_EDEFAULT == null ? layoutManager != null : !LAYOUT_MANAGER_EDEFAULT.equals(layoutManager);
			case GMFGraphPackage.POLYLINE__OUTLINE:
				return outline != OUTLINE_EDEFAULT;
			case GMFGraphPackage.POLYLINE__FILL:
				return fill != FILL_EDEFAULT;
			case GMFGraphPackage.POLYLINE__LINE_WIDTH:
				return lineWidth != LINE_WIDTH_EDEFAULT;
			case GMFGraphPackage.POLYLINE__LINE_KIND:
				return lineKind != LINE_KIND_EDEFAULT;
			case GMFGraphPackage.POLYLINE__XOR_FILL:
				return xorFill != XOR_FILL_EDEFAULT;
			case GMFGraphPackage.POLYLINE__XOR_OUTLINE:
				return xorOutline != XOR_OUTLINE_EDEFAULT;
			case GMFGraphPackage.POLYLINE__RESOLVED_CHILDREN:
				return !getResolvedChildren().isEmpty();
d140 1
a140 1
		return eDynamicIsSet(eFeature);
@


1.2
log
@minor updates according to recent comments
single impl bundle per gallery
[+] Figure.getResolvedChildren to substitute figureRefs with actual figures they reference
@
text
@a174 2
			case GMFGraphPackage.POLYLINE__RESOLVED_CHILDREN:
				return getResolvedChildren();
d187 2
a333 2
			case GMFGraphPackage.POLYLINE__RESOLVED_CHILDREN:
				return !getResolvedChildren().isEmpty();
d346 2
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d175 2
d185 4
d239 6
d296 6
d334 2
d344 4
@

