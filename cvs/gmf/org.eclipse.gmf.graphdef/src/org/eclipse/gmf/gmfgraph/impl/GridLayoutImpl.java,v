head	1.4;
access;
symbols
	v20080813-1520:1.4
	v20080807-1333:1.4
	v20080806-1520:1.4
	v20080731-1520:1.4
	v20080722-1827:1.4
	v20080716-1642:1.4
	R2_1_maintenance:1.4.0.4
	Root_R2_1_maintenance:1.4
	R2_1_0:1.4
	v20080528-1052:1.4
	v20080521:1.4
	v20080425-1959:1.4
	v20080322-0000:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20080207-0207:1.4
	v20071214-1111:1.4
	v20071003-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070420-1000:1.3
	v20070330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070208-1800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060904-1500:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060616-1200:1.2
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-0800:1.2
	RC2_10:1.2
	I20060505-1400:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	3de9465ada274567;

1.3
date	2007.03.14.12.59.17;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	109645f7f19c4567;

1.2
date	2006.04.18.18.29.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.13.17.36.31;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.gmf.gmfgraph.Dimension;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.GridLayout;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Grid Layout</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.GridLayoutImpl#getNumColumns <em>Num Columns</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.GridLayoutImpl#isEqualWidth <em>Equal Width</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.GridLayoutImpl#getMargins <em>Margins</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.GridLayoutImpl#getSpacing <em>Spacing</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class GridLayoutImpl extends EObjectImpl implements GridLayout {
	/**
	 * The default value of the '{@@link #getNumColumns() <em>Num Columns</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNumColumns()
	 * @@generated
	 * @@ordered
	 */
	protected static final int NUM_COLUMNS_EDEFAULT = 1;

	/**
	 * The cached value of the '{@@link #getNumColumns() <em>Num Columns</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getNumColumns()
	 * @@generated
	 * @@ordered
	 */
	protected int numColumns = NUM_COLUMNS_EDEFAULT;

	/**
	 * The default value of the '{@@link #isEqualWidth() <em>Equal Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isEqualWidth()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean EQUAL_WIDTH_EDEFAULT = true;

	/**
	 * The cached value of the '{@@link #isEqualWidth() <em>Equal Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isEqualWidth()
	 * @@generated
	 * @@ordered
	 */
	protected boolean equalWidth = EQUAL_WIDTH_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getMargins() <em>Margins</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMargins()
	 * @@generated
	 * @@ordered
	 */
	protected Dimension margins;

	/**
	 * The cached value of the '{@@link #getSpacing() <em>Spacing</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getSpacing()
	 * @@generated
	 * @@ordered
	 */
	protected Dimension spacing;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected GridLayoutImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGraphPackage.eINSTANCE.getGridLayout();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getNumColumns() {
		return numColumns;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setNumColumns(int newNumColumns) {
		int oldNumColumns = numColumns;
		numColumns = newNumColumns;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.GRID_LAYOUT__NUM_COLUMNS, oldNumColumns, numColumns));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isEqualWidth() {
		return equalWidth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setEqualWidth(boolean newEqualWidth) {
		boolean oldEqualWidth = equalWidth;
		equalWidth = newEqualWidth;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.GRID_LAYOUT__EQUAL_WIDTH, oldEqualWidth, equalWidth));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Dimension getMargins() {
		return margins;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetMargins(Dimension newMargins, NotificationChain msgs) {
		Dimension oldMargins = margins;
		margins = newMargins;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.GRID_LAYOUT__MARGINS, oldMargins, newMargins);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMargins(Dimension newMargins) {
		if (newMargins != margins) {
			NotificationChain msgs = null;
			if (margins != null)
				msgs = ((InternalEObject)margins).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.GRID_LAYOUT__MARGINS, null, msgs);
			if (newMargins != null)
				msgs = ((InternalEObject)newMargins).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.GRID_LAYOUT__MARGINS, null, msgs);
			msgs = basicSetMargins(newMargins, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.GRID_LAYOUT__MARGINS, newMargins, newMargins));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Dimension getSpacing() {
		return spacing;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public NotificationChain basicSetSpacing(Dimension newSpacing, NotificationChain msgs) {
		Dimension oldSpacing = spacing;
		spacing = newSpacing;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GMFGraphPackage.GRID_LAYOUT__SPACING, oldSpacing, newSpacing);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setSpacing(Dimension newSpacing) {
		if (newSpacing != spacing) {
			NotificationChain msgs = null;
			if (spacing != null)
				msgs = ((InternalEObject)spacing).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.GRID_LAYOUT__SPACING, null, msgs);
			if (newSpacing != null)
				msgs = ((InternalEObject)newSpacing).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.GRID_LAYOUT__SPACING, null, msgs);
			msgs = basicSetSpacing(newSpacing, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.GRID_LAYOUT__SPACING, newSpacing, newSpacing));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGraphPackage.GRID_LAYOUT__MARGINS:
				return basicSetMargins(null, msgs);
			case GMFGraphPackage.GRID_LAYOUT__SPACING:
				return basicSetSpacing(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGraphPackage.GRID_LAYOUT__NUM_COLUMNS:
				return new Integer(getNumColumns());
			case GMFGraphPackage.GRID_LAYOUT__EQUAL_WIDTH:
				return isEqualWidth() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.GRID_LAYOUT__MARGINS:
				return getMargins();
			case GMFGraphPackage.GRID_LAYOUT__SPACING:
				return getSpacing();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGraphPackage.GRID_LAYOUT__NUM_COLUMNS:
				setNumColumns(((Integer)newValue).intValue());
				return;
			case GMFGraphPackage.GRID_LAYOUT__EQUAL_WIDTH:
				setEqualWidth(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.GRID_LAYOUT__MARGINS:
				setMargins((Dimension)newValue);
				return;
			case GMFGraphPackage.GRID_LAYOUT__SPACING:
				setSpacing((Dimension)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.GRID_LAYOUT__NUM_COLUMNS:
				setNumColumns(NUM_COLUMNS_EDEFAULT);
				return;
			case GMFGraphPackage.GRID_LAYOUT__EQUAL_WIDTH:
				setEqualWidth(EQUAL_WIDTH_EDEFAULT);
				return;
			case GMFGraphPackage.GRID_LAYOUT__MARGINS:
				setMargins((Dimension)null);
				return;
			case GMFGraphPackage.GRID_LAYOUT__SPACING:
				setSpacing((Dimension)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.GRID_LAYOUT__NUM_COLUMNS:
				return numColumns != NUM_COLUMNS_EDEFAULT;
			case GMFGraphPackage.GRID_LAYOUT__EQUAL_WIDTH:
				return equalWidth != EQUAL_WIDTH_EDEFAULT;
			case GMFGraphPackage.GRID_LAYOUT__MARGINS:
				return margins != null;
			case GMFGraphPackage.GRID_LAYOUT__SPACING:
				return spacing != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (numColumns: ");
		result.append(numColumns);
		result.append(", equalWidth: ");
		result.append(equalWidth);
		result.append(')');
		return result.toString();
	}

} //GridLayoutImpl
@


1.3
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d84 1
a84 1
	protected Dimension margins = null;
d94 1
a94 1
	protected Dimension spacing = null;
@


1.2
log
@outdated methods removed
@
text
@d110 1
d248 1
d264 1
d284 1
d308 1
d332 1
d352 1
@


1.1
log
@[mgolubev] #127252 layout support
@
text
@a357 14
	/**
	 * @@generated NOT
	 */
	public String getQualifiedClassName() {
		return "org.eclipse.gmf.internal.codegen.draw2d.GridLayout";
	}

	/**
	 * @@generated NOT
	 */
	public void setQualifiedClassName(String newQualifiedClassName) {
		//throw new UnsupportedOperationException("You can not change predefined name of implementation class");
	}

@

