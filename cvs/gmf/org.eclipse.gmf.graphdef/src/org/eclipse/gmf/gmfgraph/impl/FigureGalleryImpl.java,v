head	1.8;
access;
symbols
	v20080813-1520:1.8
	v20080807-1333:1.8
	v20080806-1520:1.8
	v20080731-1520:1.8
	v20080722-1827:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080528-1052:1.8
	v20080521:1.7
	v20080425-1959:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080215-1500:1.7
	v20080207-0207:1.7
	v20071214-1111:1.7
	v20071003-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070420-1000:1.6
	v20070330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060919-0800:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.4
	RC2_10:1.4
	I20060505-1400:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.3
	I20051223-1100:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2008.05.21.16.42.10;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	6f3c483450df4567;

1.7
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	3de9465ada274567;

1.6
date	2007.03.14.12.59.17;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	109645f7f19c4567;

1.5
date	2006.05.25.14.52.48;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.05.17.33.07;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.28.16.10.30;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.12.19.15.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[139126] respect implementation bundle of custom borders and layouts
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.eclipse.gmf.gmfgraph.Border;
import org.eclipse.gmf.gmfgraph.FigureDescriptor;
import org.eclipse.gmf.gmfgraph.FigureGallery;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;
import org.eclipse.gmf.gmfgraph.Layout;
import org.eclipse.gmf.gmfgraph.RealFigure;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Figure Gallery</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getName <em>Name</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getFigures <em>Figures</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getDescriptors <em>Descriptors</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getBorders <em>Borders</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getLayouts <em>Layouts</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getImplementationBundle <em>Implementation Bundle</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
	/**
	 * The default value of the '{@@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getName()
	 * @@generated
	 * @@ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getName()
	 * @@generated
	 * @@ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@@link #getFigures() <em>Figures</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getFigures()
	 * @@generated
	 * @@ordered
	 */
	protected EList<RealFigure> figures;

	/**
	 * The cached value of the '{@@link #getDescriptors() <em>Descriptors</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getDescriptors()
	 * @@generated
	 * @@ordered
	 */
	protected EList<FigureDescriptor> descriptors;

	/**
	 * The cached value of the '{@@link #getBorders() <em>Borders</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getBorders()
	 * @@generated
	 * @@ordered
	 */
	protected EList<Border> borders;

	/**
	 * The cached value of the '{@@link #getLayouts() <em>Layouts</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getLayouts()
	 * @@generated
	 * @@ordered
	 */
	protected EList<Layout> layouts;

	/**
	 * The default value of the '{@@link #getImplementationBundle() <em>Implementation Bundle</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getImplementationBundle()
	 * @@generated
	 * @@ordered
	 */
	protected static final String IMPLEMENTATION_BUNDLE_EDEFAULT = null;

	/**
	 * The cached value of the '{@@link #getImplementationBundle() <em>Implementation Bundle</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getImplementationBundle()
	 * @@generated
	 * @@ordered
	 */
	protected String implementationBundle = IMPLEMENTATION_BUNDLE_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FigureGalleryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGraphPackage.eINSTANCE.getFigureGallery();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FIGURE_GALLERY__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<RealFigure> getFigures() {
		if (figures == null) {
			figures = new EObjectContainmentEList<RealFigure>(RealFigure.class, this, GMFGraphPackage.FIGURE_GALLERY__FIGURES);
		}
		return figures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<FigureDescriptor> getDescriptors() {
		if (descriptors == null) {
			descriptors = new EObjectContainmentEList<FigureDescriptor>(FigureDescriptor.class, this, GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS);
		}
		return descriptors;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<Border> getBorders() {
		if (borders == null) {
			borders = new EObjectContainmentEList<Border>(Border.class, this, GMFGraphPackage.FIGURE_GALLERY__BORDERS);
		}
		return borders;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public EList<Layout> getLayouts() {
		if (layouts == null) {
			layouts = new EObjectContainmentEList<Layout>(Layout.class, this, GMFGraphPackage.FIGURE_GALLERY__LAYOUTS);
		}
		return layouts;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public String getImplementationBundleGen() {
		return implementationBundle;
	}

	public String getImplementationBundle() {
		String value = getImplementationBundleGen();
		if (value != null && value.trim().length() > 0) {
			return value.trim();
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setImplementationBundle(String newImplementationBundle) {
		String oldImplementationBundle = implementationBundle;
		implementationBundle = newImplementationBundle;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE, oldImplementationBundle, implementationBundle));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case GMFGraphPackage.FIGURE_GALLERY__FIGURES:
				return ((InternalEList<?>)getFigures()).basicRemove(otherEnd, msgs);
			case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS:
				return ((InternalEList<?>)getDescriptors()).basicRemove(otherEnd, msgs);
			case GMFGraphPackage.FIGURE_GALLERY__BORDERS:
				return ((InternalEList<?>)getBorders()).basicRemove(otherEnd, msgs);
			case GMFGraphPackage.FIGURE_GALLERY__LAYOUTS:
				return ((InternalEList<?>)getLayouts()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGraphPackage.FIGURE_GALLERY__NAME:
				return getName();
			case GMFGraphPackage.FIGURE_GALLERY__FIGURES:
				return getFigures();
			case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS:
				return getDescriptors();
			case GMFGraphPackage.FIGURE_GALLERY__BORDERS:
				return getBorders();
			case GMFGraphPackage.FIGURE_GALLERY__LAYOUTS:
				return getLayouts();
			case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE:
				return getImplementationBundle();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@SuppressWarnings("unchecked")
		@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGraphPackage.FIGURE_GALLERY__NAME:
				setName((String)newValue);
				return;
			case GMFGraphPackage.FIGURE_GALLERY__FIGURES:
				getFigures().clear();
				getFigures().addAll((Collection<? extends RealFigure>)newValue);
				return;
			case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS:
				getDescriptors().clear();
				getDescriptors().addAll((Collection<? extends FigureDescriptor>)newValue);
				return;
			case GMFGraphPackage.FIGURE_GALLERY__BORDERS:
				getBorders().clear();
				getBorders().addAll((Collection<? extends Border>)newValue);
				return;
			case GMFGraphPackage.FIGURE_GALLERY__LAYOUTS:
				getLayouts().clear();
				getLayouts().addAll((Collection<? extends Layout>)newValue);
				return;
			case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE:
				setImplementationBundle((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.FIGURE_GALLERY__NAME:
				setName(NAME_EDEFAULT);
				return;
			case GMFGraphPackage.FIGURE_GALLERY__FIGURES:
				getFigures().clear();
				return;
			case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS:
				getDescriptors().clear();
				return;
			case GMFGraphPackage.FIGURE_GALLERY__BORDERS:
				getBorders().clear();
				return;
			case GMFGraphPackage.FIGURE_GALLERY__LAYOUTS:
				getLayouts().clear();
				return;
			case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE:
				setImplementationBundle(IMPLEMENTATION_BUNDLE_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.FIGURE_GALLERY__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case GMFGraphPackage.FIGURE_GALLERY__FIGURES:
				return figures != null && !figures.isEmpty();
			case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS:
				return descriptors != null && !descriptors.isEmpty();
			case GMFGraphPackage.FIGURE_GALLERY__BORDERS:
				return borders != null && !borders.isEmpty();
			case GMFGraphPackage.FIGURE_GALLERY__LAYOUTS:
				return layouts != null && !layouts.isEmpty();
			case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE:
				return IMPLEMENTATION_BUNDLE_EDEFAULT == null ? implementationBundle != null : !IMPLEMENTATION_BUNDLE_EDEFAULT.equals(implementationBundle);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", implementationBundle: ");
		result.append(implementationBundle);
		result.append(')');
		return result.toString();
	}

} //FigureGalleryImpl
@


1.7
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@d20 1
d24 1
d37 2
d87 20
d195 24
d255 4
d277 4
d307 8
d339 6
d366 4
@


1.6
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d20 1
a20 1
import org.eclipse.gmf.gmfgraph.Figure;
d23 1
d34 1
d70 11
a80 1
	protected EList<Figure> figures = null;
d147 1
a147 1
	public EList<Figure> getFigures() {
d149 1
a149 1
			figures = new EObjectContainmentEList<Figure>(Figure.class, this, GMFGraphPackage.FIGURE_GALLERY__FIGURES);
d159 12
d205 2
d223 2
d245 5
a249 1
				getFigures().addAll((Collection<? extends Figure>)newValue);
d272 3
d294 2
@


1.5
log
@Additional safety for #142491 - treat "" value as null
@
text
@d68 1
a68 1
	protected EList figures = null;
d104 1
d135 1
a135 1
	public EList getFigures() {
d137 1
a137 1
			figures = new EObjectContainmentEList(Figure.class, this, GMFGraphPackage.FIGURE_GALLERY__FIGURES);
d176 1
d180 1
a180 1
				return ((InternalEList)getFigures()).basicRemove(otherEnd, msgs);
d190 1
d208 2
d217 1
a217 1
				getFigures().addAll((Collection)newValue);
d231 1
d252 1
d270 1
@


1.4
log
@move towards more draw2d-like model
@
text
@d146 4
d151 5
a155 1
		return implementationBundle;
@


1.3
log
@removed unused imports
@
text
@a14 1
import org.eclipse.emf.ecore.EStructuralFeature;
d167 4
a170 8
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
		if (featureID >= 0) {
			switch (eDerivedStructuralFeatureID(featureID, baseClass)) {
				case GMFGraphPackage.FIGURE_GALLERY__FIGURES:
					return ((InternalEList)getFigures()).basicRemove(otherEnd, msgs);
				default:
					return eDynamicInverseRemove(otherEnd, featureID, baseClass, msgs);
			}
d172 1
a172 1
		return eBasicSetContainer(null, featureID, msgs);
d180 2
a181 2
	public Object eGet(EStructuralFeature eFeature, boolean resolve) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d189 1
a189 1
		return eDynamicGet(eFeature, resolve);
d197 2
a198 2
	public void eSet(EStructuralFeature eFeature, Object newValue) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d210 1
a210 1
		eDynamicSet(eFeature, newValue);
d218 2
a219 2
	public void eUnset(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d230 1
a230 1
		eDynamicUnset(eFeature);
d238 2
a239 2
	public boolean eIsSet(EStructuralFeature eFeature) {
		switch (eDerivedStructuralFeatureID(eFeature)) {
d247 1
a247 1
		return eDynamicIsSet(eFeature);
@


1.2
log
@minor updates according to recent comments
single impl bundle per gallery
[+] Figure.getResolvedChildren to substitute figureRefs with actual figures they reference
@
text
@a18 1
import org.eclipse.emf.ecore.util.EDataTypeUniqueEList;
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d35 1
a35 1
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FigureGalleryImpl#getImplBundles <em>Impl Bundles</em>}</li>
d73 1
a73 1
	 * The cached value of the '{@@link #getImplBundles() <em>Impl Bundles</em>}' attribute list.
d76 1
a76 1
	 * @@see #getImplBundles()
d80 11
a90 1
	protected EList implBundles = null;
d148 14
a161 5
	public EList getImplBundles() {
		if (implBundles == null) {
			implBundles = new EDataTypeUniqueEList(String.class, this, GMFGraphPackage.FIGURE_GALLERY__IMPL_BUNDLES);
		}
		return implBundles;
d192 2
a193 2
			case GMFGraphPackage.FIGURE_GALLERY__IMPL_BUNDLES:
				return getImplBundles();
d212 2
a213 3
			case GMFGraphPackage.FIGURE_GALLERY__IMPL_BUNDLES:
				getImplBundles().clear();
				getImplBundles().addAll((Collection)newValue);
d232 2
a233 2
			case GMFGraphPackage.FIGURE_GALLERY__IMPL_BUNDLES:
				getImplBundles().clear();
d250 2
a251 2
			case GMFGraphPackage.FIGURE_GALLERY__IMPL_BUNDLES:
				return implBundles != null && !implBundles.isEmpty();
d267 2
a268 2
		result.append(", implBundles: ");
		result.append(implBundles);
@

