head	1.8;
access;
symbols
	v20080813-1520:1.8
	v20080807-1333:1.8
	v20080806-1520:1.8
	v20080731-1520:1.8
	v20080722-1827:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080528-1052:1.8
	v20080521:1.8
	v20080425-1959:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.7
	v20071214-1111:1.8
	v20071003-0000:1.8
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070420-1000:1.6
	v20070330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060919-0800:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.5
	RC2_10:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.3
	I20051223-1100:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2007.09.28.16.09.43;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	77f446fd27454567;

1.7
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	3de9465ada274567;

1.6
date	2007.03.14.12.59.18;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	109645f7f19c4567;

1.5
date	2006.02.17.14.38.53;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.05.17.33.07;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.12.16.02;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.12.19.15.40;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[198290] - Update gmfgraph.genmodel and regenerate editor for .gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph;


import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Shape</b></em>'.
 * <!-- end-user-doc -->
 *
 * <!-- begin-model-doc -->
 * org.eclipse.draw2d.Shape
 * <!-- end-model-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#isOutline <em>Outline</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#isFill <em>Fill</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#getLineWidth <em>Line Width</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#getLineKind <em>Line Kind</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#isXorFill <em>Xor Fill</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#isXorOutline <em>Xor Outline</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.Shape#getResolvedChildren <em>Resolved Children</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape()
 * @@model abstract="true"
 * @@generated
 */
public interface Shape extends RealFigure {
	/**
	 * Returns the value of the '<em><b>Outline</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Outline</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Outline</em>' attribute.
	 * @@see #setOutline(boolean)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_Outline()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isOutline();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.Shape#isOutline <em>Outline</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Outline</em>' attribute.
	 * @@see #isOutline()
	 * @@generated
	 */
	void setOutline(boolean value);

	/**
	 * Returns the value of the '<em><b>Fill</b></em>' attribute.
	 * The default value is <code>"true"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Fill</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Fill</em>' attribute.
	 * @@see #setFill(boolean)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_Fill()
	 * @@model default="true"
	 * @@generated
	 */
	boolean isFill();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.Shape#isFill <em>Fill</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Fill</em>' attribute.
	 * @@see #isFill()
	 * @@generated
	 */
	void setFill(boolean value);

	/**
	 * Returns the value of the '<em><b>Line Width</b></em>' attribute.
	 * The default value is <code>"1"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Line Width</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Line Width</em>' attribute.
	 * @@see #setLineWidth(int)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_LineWidth()
	 * @@model default="1"
	 * @@generated
	 */
	int getLineWidth();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.Shape#getLineWidth <em>Line Width</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Line Width</em>' attribute.
	 * @@see #getLineWidth()
	 * @@generated
	 */
	void setLineWidth(int value);

	/**
	 * Returns the value of the '<em><b>Line Kind</b></em>' attribute.
	 * The literals are from the enumeration {@@link org.eclipse.gmf.gmfgraph.LineKind}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Line Kind</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Line Kind</em>' attribute.
	 * @@see org.eclipse.gmf.gmfgraph.LineKind
	 * @@see #setLineKind(LineKind)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_LineKind()
	 * @@model
	 * @@generated
	 */
	LineKind getLineKind();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.Shape#getLineKind <em>Line Kind</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Line Kind</em>' attribute.
	 * @@see org.eclipse.gmf.gmfgraph.LineKind
	 * @@see #getLineKind()
	 * @@generated
	 */
	void setLineKind(LineKind value);

	/**
	 * Returns the value of the '<em><b>Xor Fill</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Xor Fill</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Xor Fill</em>' attribute.
	 * @@see #setXorFill(boolean)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_XorFill()
	 * @@model
	 * @@generated
	 */
	boolean isXorFill();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.Shape#isXorFill <em>Xor Fill</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Xor Fill</em>' attribute.
	 * @@see #isXorFill()
	 * @@generated
	 */
	void setXorFill(boolean value);

	/**
	 * Returns the value of the '<em><b>Xor Outline</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Xor Outline</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Xor Outline</em>' attribute.
	 * @@see #setXorOutline(boolean)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_XorOutline()
	 * @@model
	 * @@generated
	 */
	boolean isXorOutline();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.Shape#isXorOutline <em>Xor Outline</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Xor Outline</em>' attribute.
	 * @@see #isXorOutline()
	 * @@generated
	 */
	void setXorOutline(boolean value);

	/**
	 * Returns the value of the '<em><b>Resolved Children</b></em>' reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.gmfgraph.Figure}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Resolved Children</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * Same as children, but resolves child FigureRefs, if any, to Figures
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Resolved Children</em>' reference list.
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getShape_ResolvedChildren()
	 * @@model transient="true" changeable="false" volatile="true" derived="true"
	 * @@generated
	 */
	EList<Figure> getResolvedChildren();

} // Shape
@


1.7
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@d215 1
a215 1
	 * @@model type="org.eclipse.gmf.gmfgraph.Figure" transient="true" changeable="false" volatile="true" derived="true"
@


1.6
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d38 1
a38 1
public interface Shape extends Figure {
@


1.5
log
@Changing default values for fill and outline Shape properties.
@
text
@d218 1
a218 1
	EList getResolvedChildren();
@


1.4
log
@move towards more draw2d-like model
@
text
@d41 1
d51 1
a51 1
	 * @@model
d68 1
d78 1
a78 1
	 * @@model
@


1.3
log
@temporarily move resolvedChildren to shape only, need to come up with better way not to duplicate method implementation through the whole Figure descentants tree
@
text
@d38 1
a38 1
public interface Shape extends Figure{
d208 3
@


1.2
log
@minor updates according to recent comments
single impl bundle per gallery
[+] Figure.getResolvedChildren to substitute figureRefs with actual figures they reference
@
text
@d10 2
d30 1
d199 16
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d26 2
d144 52
@

