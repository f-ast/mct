head	1.8;
access;
symbols
	v20080813-1520:1.8
	v20080807-1333:1.8
	v20080806-1520:1.8
	v20080731-1520:1.8
	v20080722-1827:1.8
	v20080716-1642:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080528-1052:1.8
	v20080521:1.8
	v20080425-1959:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.7
	v20071214-1111:1.8
	v20071003-0000:1.8
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070420-1000:1.6
	v20070330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070208-1800:1.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060919-0800:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-0800:1.4
	RC2_10:1.4
	I20060505-1400:1.4
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2007.09.28.16.09.43;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	77f446fd27454567;

1.7
date	2007.05.28.13.33.36;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	3de9465ada274567;

1.6
date	2007.03.14.12.59.18;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	109645f7f19c4567;

1.5
date	2006.05.23.21.09.56;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.02.11.44.16;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.24.13.52.14;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.22.22.01.35;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.22.12.16;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[198290] - Update gmfgraph.genmodel and regenerate editor for .gmfgraph
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Diagram Element</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.DiagramElement#getFigure <em>Figure</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.DiagramElement#getFacets <em>Facets</em>}</li>
 * </ul>
 * </p>
 *
 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramElement()
 * @@model abstract="true"
 * @@generated
 */
public interface DiagramElement extends Identity {
	/**
	 * Returns the value of the '<em><b>Figure</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Figure</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @@return the value of the '<em>Figure</em>' reference.
	 * @@see #setFigure(FigureDescriptor)
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramElement_Figure()
	 * @@model required="true"
	 * @@generated
	 */
	FigureDescriptor getFigure();

	/**
	 * Sets the value of the '{@@link org.eclipse.gmf.gmfgraph.DiagramElement#getFigure <em>Figure</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@param value the new value of the '<em>Figure</em>' reference.
	 * @@see #getFigure()
	 * @@generated
	 */
	void setFigure(FigureDescriptor value);

	/**
	 * Returns the value of the '<em><b>Facets</b></em>' containment reference list.
	 * The list contents are of type {@@link org.eclipse.gmf.gmfgraph.VisualFacet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * anything to further specify constraint or any other aspect of the element
	 * <!-- end-model-doc -->
	 * @@return the value of the '<em>Facets</em>' containment reference list.
	 * @@see org.eclipse.gmf.gmfgraph.GMFGraphPackage#getDiagramElement_Facets()
	 * @@model containment="true"
	 * @@generated
	 */
	EList<VisualFacet> getFacets();

} // DiagramElement
@


1.7
log
@FigureDescriptor with explicit means to access children introduced into gmfgraph
@
text
@d65 1
a65 1
	 * @@model type="org.eclipse.gmf.gmfgraph.VisualFacet" containment="true"
@


1.6
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@a30 1
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.gmfgraph.FigureHandle#getReferencingElements <em>Referencing Elements</em>}'.
d38 1
a38 1
	 * @@see #setFigure(FigureHandle)
d40 1
a40 2
	 * @@see org.eclipse.gmf.gmfgraph.FigureHandle#getReferencingElements
	 * @@model opposite="referencingElements" required="true"
d43 1
a43 1
	FigureHandle getFigure();
d53 1
a53 1
	void setFigure(FigureHandle value);
a69 11
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * <!-- begin-model-doc -->
	 * utility operation to get first visual facet assignable (in Java terms, {@@link Class#isAssignableFrom(Class)}) to variables of designated class. Argument can't be null
	 * <!-- end-model-doc -->
	 * @@model
	 * @@generated
	 */
	VisualFacet find(Class facetClass);

@


1.5
log
@#140887 Remove Child interface from GMFGraph.
Although the need to reference child figures persist, thus FigureHandle was introduced, to allow diagramElements to reference either *generateable* figures (Figure subclasses) or *just-use* figures (like CustomFigure and FigureAccessor).
Refactoring performed with #131365 "Mirror GMFGraph model when generating standalone figure plugin" in mind
@
text
@d70 1
a70 1
	EList getFacets();
@


1.4
log
@[mgolubev] #139139 Compilation error in the generated diagram code if DiagramLabel points to the deep Label
Add getters/setters for each figure that is being used by any diagram element
@
text
@d31 1
a31 1
	 * It is bidirectional and its opposite is '{@@link org.eclipse.gmf.gmfgraph.Figure#getReferencingElements <em>Referencing Elements</em>}'.
d39 1
a39 1
	 * @@see #setFigure(Figure)
d41 1
a41 1
	 * @@see org.eclipse.gmf.gmfgraph.Figure#getReferencingElements
d45 1
a45 1
	Figure getFigure();
d55 1
a55 1
	void setFigure(Figure value);
@


1.3
log
@need access to figure/figure ref's parent for DMGT's check of external label to work correctly
@
text
@d31 1
d41 2
a42 1
	 * @@model required="true"
@


1.2
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@d73 3
@


1.1
log
@#114177 gmfgraph model to replace diadef model
@
text
@d70 8
@

