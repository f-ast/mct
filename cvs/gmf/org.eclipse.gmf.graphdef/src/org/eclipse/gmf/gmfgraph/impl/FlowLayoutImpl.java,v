head	1.2;
access;
symbols
	v20080813-1520:1.2
	v20080807-1333:1.2
	v20080806-1520:1.2
	v20080731-1520:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080528-1052:1.2
	v20080521:1.2
	v20080425-1959:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071214-1111:1.2
	v20071003-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070420-1000:1.2
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061013-1330:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-0800:1.1
	RC2_10:1.1
	I20060505-1400:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.03.14.12.59.17;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	109645f7f19c4567;

1.1
date	2006.02.15.14.44.43;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.gmfgraph.Alignment;
import org.eclipse.gmf.gmfgraph.FlowLayout;
import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Flow Layout</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#isVertical <em>Vertical</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#isMatchMinorSize <em>Match Minor Size</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#isForceSingleLine <em>Force Single Line</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#getMajorAlignment <em>Major Alignment</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#getMinorAlignment <em>Minor Alignment</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#getMajorSpacing <em>Major Spacing</em>}</li>
 *   <li>{@@link org.eclipse.gmf.gmfgraph.impl.FlowLayoutImpl#getMinorSpacing <em>Minor Spacing</em>}</li>
 * </ul>
 * </p>
 *
 * @@generated
 */
public class FlowLayoutImpl extends EObjectImpl implements FlowLayout {
	/**
	 * The default value of the '{@@link #isVertical() <em>Vertical</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isVertical()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean VERTICAL_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isVertical() <em>Vertical</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isVertical()
	 * @@generated
	 * @@ordered
	 */
	protected boolean vertical = VERTICAL_EDEFAULT;

	/**
	 * The default value of the '{@@link #isMatchMinorSize() <em>Match Minor Size</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isMatchMinorSize()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean MATCH_MINOR_SIZE_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isMatchMinorSize() <em>Match Minor Size</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isMatchMinorSize()
	 * @@generated
	 * @@ordered
	 */
	protected boolean matchMinorSize = MATCH_MINOR_SIZE_EDEFAULT;

	/**
	 * The default value of the '{@@link #isForceSingleLine() <em>Force Single Line</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isForceSingleLine()
	 * @@generated
	 * @@ordered
	 */
	protected static final boolean FORCE_SINGLE_LINE_EDEFAULT = false;

	/**
	 * The cached value of the '{@@link #isForceSingleLine() <em>Force Single Line</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #isForceSingleLine()
	 * @@generated
	 * @@ordered
	 */
	protected boolean forceSingleLine = FORCE_SINGLE_LINE_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMajorAlignment() <em>Major Alignment</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMajorAlignment()
	 * @@generated
	 * @@ordered
	 */
	protected static final Alignment MAJOR_ALIGNMENT_EDEFAULT = Alignment.BEGINNING_LITERAL;

	/**
	 * The cached value of the '{@@link #getMajorAlignment() <em>Major Alignment</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMajorAlignment()
	 * @@generated
	 * @@ordered
	 */
	protected Alignment majorAlignment = MAJOR_ALIGNMENT_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMinorAlignment() <em>Minor Alignment</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMinorAlignment()
	 * @@generated
	 * @@ordered
	 */
	protected static final Alignment MINOR_ALIGNMENT_EDEFAULT = Alignment.BEGINNING_LITERAL;

	/**
	 * The cached value of the '{@@link #getMinorAlignment() <em>Minor Alignment</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMinorAlignment()
	 * @@generated
	 * @@ordered
	 */
	protected Alignment minorAlignment = MINOR_ALIGNMENT_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMajorSpacing() <em>Major Spacing</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMajorSpacing()
	 * @@generated
	 * @@ordered
	 */
	protected static final int MAJOR_SPACING_EDEFAULT = 5;

	/**
	 * The cached value of the '{@@link #getMajorSpacing() <em>Major Spacing</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMajorSpacing()
	 * @@generated
	 * @@ordered
	 */
	protected int majorSpacing = MAJOR_SPACING_EDEFAULT;

	/**
	 * The default value of the '{@@link #getMinorSpacing() <em>Minor Spacing</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMinorSpacing()
	 * @@generated
	 * @@ordered
	 */
	protected static final int MINOR_SPACING_EDEFAULT = 5;

	/**
	 * The cached value of the '{@@link #getMinorSpacing() <em>Minor Spacing</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@see #getMinorSpacing()
	 * @@generated
	 * @@ordered
	 */
	protected int minorSpacing = MINOR_SPACING_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	protected FlowLayoutImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	protected EClass eStaticClass() {
		return GMFGraphPackage.eINSTANCE.getFlowLayout();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isVertical() {
		return vertical;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setVertical(boolean newVertical) {
		boolean oldVertical = vertical;
		vertical = newVertical;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__VERTICAL, oldVertical, vertical));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isMatchMinorSize() {
		return matchMinorSize;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMatchMinorSize(boolean newMatchMinorSize) {
		boolean oldMatchMinorSize = matchMinorSize;
		matchMinorSize = newMatchMinorSize;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__MATCH_MINOR_SIZE, oldMatchMinorSize, matchMinorSize));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public boolean isForceSingleLine() {
		return forceSingleLine;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setForceSingleLine(boolean newForceSingleLine) {
		boolean oldForceSingleLine = forceSingleLine;
		forceSingleLine = newForceSingleLine;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__FORCE_SINGLE_LINE, oldForceSingleLine, forceSingleLine));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Alignment getMajorAlignment() {
		return majorAlignment;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMajorAlignment(Alignment newMajorAlignment) {
		Alignment oldMajorAlignment = majorAlignment;
		majorAlignment = newMajorAlignment == null ? MAJOR_ALIGNMENT_EDEFAULT : newMajorAlignment;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__MAJOR_ALIGNMENT, oldMajorAlignment, majorAlignment));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public Alignment getMinorAlignment() {
		return minorAlignment;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMinorAlignment(Alignment newMinorAlignment) {
		Alignment oldMinorAlignment = minorAlignment;
		minorAlignment = newMinorAlignment == null ? MINOR_ALIGNMENT_EDEFAULT : newMinorAlignment;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__MINOR_ALIGNMENT, oldMinorAlignment, minorAlignment));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getMajorSpacing() {
		return majorSpacing;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMajorSpacing(int newMajorSpacing) {
		int oldMajorSpacing = majorSpacing;
		majorSpacing = newMajorSpacing;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__MAJOR_SPACING, oldMajorSpacing, majorSpacing));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public int getMinorSpacing() {
		return minorSpacing;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	public void setMinorSpacing(int newMinorSpacing) {
		int oldMinorSpacing = minorSpacing;
		minorSpacing = newMinorSpacing;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, GMFGraphPackage.FLOW_LAYOUT__MINOR_SPACING, oldMinorSpacing, minorSpacing));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case GMFGraphPackage.FLOW_LAYOUT__VERTICAL:
				return isVertical() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.FLOW_LAYOUT__MATCH_MINOR_SIZE:
				return isMatchMinorSize() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.FLOW_LAYOUT__FORCE_SINGLE_LINE:
				return isForceSingleLine() ? Boolean.TRUE : Boolean.FALSE;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_ALIGNMENT:
				return getMajorAlignment();
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_ALIGNMENT:
				return getMinorAlignment();
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_SPACING:
				return new Integer(getMajorSpacing());
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_SPACING:
				return new Integer(getMinorSpacing());
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case GMFGraphPackage.FLOW_LAYOUT__VERTICAL:
				setVertical(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MATCH_MINOR_SIZE:
				setMatchMinorSize(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.FLOW_LAYOUT__FORCE_SINGLE_LINE:
				setForceSingleLine(((Boolean)newValue).booleanValue());
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_ALIGNMENT:
				setMajorAlignment((Alignment)newValue);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_ALIGNMENT:
				setMinorAlignment((Alignment)newValue);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_SPACING:
				setMajorSpacing(((Integer)newValue).intValue());
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_SPACING:
				setMinorSpacing(((Integer)newValue).intValue());
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.FLOW_LAYOUT__VERTICAL:
				setVertical(VERTICAL_EDEFAULT);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MATCH_MINOR_SIZE:
				setMatchMinorSize(MATCH_MINOR_SIZE_EDEFAULT);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__FORCE_SINGLE_LINE:
				setForceSingleLine(FORCE_SINGLE_LINE_EDEFAULT);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_ALIGNMENT:
				setMajorAlignment(MAJOR_ALIGNMENT_EDEFAULT);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_ALIGNMENT:
				setMinorAlignment(MINOR_ALIGNMENT_EDEFAULT);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_SPACING:
				setMajorSpacing(MAJOR_SPACING_EDEFAULT);
				return;
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_SPACING:
				setMinorSpacing(MINOR_SPACING_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case GMFGraphPackage.FLOW_LAYOUT__VERTICAL:
				return vertical != VERTICAL_EDEFAULT;
			case GMFGraphPackage.FLOW_LAYOUT__MATCH_MINOR_SIZE:
				return matchMinorSize != MATCH_MINOR_SIZE_EDEFAULT;
			case GMFGraphPackage.FLOW_LAYOUT__FORCE_SINGLE_LINE:
				return forceSingleLine != FORCE_SINGLE_LINE_EDEFAULT;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_ALIGNMENT:
				return majorAlignment != MAJOR_ALIGNMENT_EDEFAULT;
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_ALIGNMENT:
				return minorAlignment != MINOR_ALIGNMENT_EDEFAULT;
			case GMFGraphPackage.FLOW_LAYOUT__MAJOR_SPACING:
				return majorSpacing != MAJOR_SPACING_EDEFAULT;
			case GMFGraphPackage.FLOW_LAYOUT__MINOR_SPACING:
				return minorSpacing != MINOR_SPACING_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @@generated
	 */
	@@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (vertical: ");
		result.append(vertical);
		result.append(", matchMinorSize: ");
		result.append(matchMinorSize);
		result.append(", forceSingleLine: ");
		result.append(forceSingleLine);
		result.append(", majorAlignment: ");
		result.append(majorAlignment);
		result.append(", minorAlignment: ");
		result.append(minorAlignment);
		result.append(", majorSpacing: ");
		result.append(majorSpacing);
		result.append(", minorSpacing: ");
		result.append(minorSpacing);
		result.append(')');
		return result.toString();
	}

} //FlowLayoutImpl
@


1.1
log
@[mgolubev] #127252 layout support
@
text
@d194 1
d351 1
d377 1
d410 1
d443 1
d469 1
@

