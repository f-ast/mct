head	1.1;
access;
symbols
	v20080813-1520:1.1
	v20080812-2100:1.1
	ocl_qvt:1.1.0.6
	Root_ocl_qvt:1.1
	v20080722-1827:1.1
	v20080716-1600:1.1
	v20080716-1642:1.1
	R2_1_maintenance:1.1.0.4
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080425-1959:1.1
	v20071108-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070518-1300:1.1
	v20070330-1300:1.1
	v20070228-2000:1.1
	M4_20:1.1
	M3_20:1.1;
locks; strict;
comment	@# @;


1.1
date	2006.10.23.13.35.04;	author atikhomirov;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2008.08.19.15.56.03;	author atikhomirov;	state Exp;
branches;
next	;
commitid	746548aaed124567;


desc
@@


1.1
log
@refactor access to color preferences
@
text
@/*******************************************************************************
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
package org.eclipse.gmf.internal.xpand.editor.scan;

import org.eclipse.gmf.internal.xpand.editor.ColorProvider;
import org.eclipse.jface.text.TextAttribute;
import org.eclipse.jface.text.rules.Token;
import org.eclipse.swt.SWT;

/**
 * The only purpose of this class is to have all token definitions in a single
 * place, to be able to see them all at once. 
 * NOTE: Should be invoked in UI thread, as {@@link #setTokens(ColorProvider))} 
 * may ask for current display
 * 
 * @@author artem
 */
/*package*/ class XpandTokenFactory {

	private XpandTokenFactory() {
	}

	public static Token newTerminalsToken(final ColorProvider provider) {
		return new Token(new TextAttribute(provider.getTerminalsColor()));
	}

	public static Token newKeywordsToken(final ColorProvider provider) {
    	return new Token(new TextAttribute(provider.getKeywordsColor(), null, SWT.BOLD));
    }

	public static Token newStringToken(final ColorProvider provider) {
		return new Token(new TextAttribute(provider.getStringColor()));
	}

	public static Token newDefineToken(final ColorProvider provider) {
		return new Token(new TextAttribute(provider.getDefineColor(), null, SWT.BOLD));
	}

	public static Token newTextToken(final ColorProvider provider) {
		return new Token(new TextAttribute(provider.getTextColor()));
	}

	public static Token newCommentToken(final ColorProvider provider) {
		return new Token(new TextAttribute(provider.getCommentColor()));
	}

	public static Token newOtherToken(final ColorProvider provider) {
		return new Token(new TextAttribute(provider.getOtherColor()));
	}
}
@


1.1.6.1
log
@[243154] Use OCL instead of home-grown expression language - editor and its tests made compilable
@
text
@d1 2
a2 2
/*
 * Copyright (c) 2006 Borland Software Corporation
d8 1
a8 1
 */
d42 1
a42 1
		return new Token(new TextAttribute(provider.getDefineColor(), null, SWT.BOLD | SWT.ITALIC));
@

