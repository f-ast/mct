head	1.1;
access;
symbols
	ocl_qvt:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.10.07.14.44.37;	author ashatalin;	state dead;
branches
	1.1.2.1;
next	;
commitid	1997848eb75d34567;

1.1.2.1
date	2008.10.07.14.44.37;	author ashatalin;	state Exp;
branches;
next	1.1.2.2;
commitid	1997848eb75d34567;

1.1.2.2
date	2008.10.07.15.40.29;	author ashatalin;	state Exp;
branches;
next	;
commitid	1e9d648eb82eb4567;


desc
@@


1.1
log
@file ResourceCountingVisitor.java was initially added on branch ocl_qvt.
@
text
@@


1.1.2.1
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - Project-wide migrate action handling native extensions was added.
@
text
@a0 42
/**
 * Copyright (c) 2008 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.xpand.migration.ui;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IFolder;

public class ResourceCountingVisitor extends AbstractMigrationVisitor {

	// Steps necessary for creation native extensions source folder
	private int numberOfFiles = 2;

	public int getNumberOfFiles() {
		return numberOfFiles;
	}

	@@Override
	protected void visitFolder(IFolder resource) {
		numberOfFiles++;
	}

	@@Override
	protected void visitXpandResource(IFile resource) {
		numberOfFiles++;
	}

	@@Override
	protected void visitXtendResource(IFile resource) {
		// each xtend resource will be migrated in two steps
		numberOfFiles += 2;
	}

}
@


1.1.2.2
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - ProgressMonitor-related refactoring
@
text
@a15 2
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
a21 4
	public ResourceCountingVisitor(IProgressMonitor progressMonitor) {
		super(progressMonitor);
	}

d27 1
a27 1
	protected void visitFolder(IFolder resource) throws CoreException {
d32 1
a32 1
	protected void visitXpandResource(IFile resource) throws CoreException {
d37 1
a37 1
	protected void visitXtendResource(IFile resource) throws CoreException {
@


