head	1.1;
access;
symbols
	ocl_qvt:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.07.29.15.57.42;	author ashatalin;	state dead;
branches
	1.1.2.1;
next	;
commitid	33cb488f3dd14567;

1.1.2.1
date	2008.07.29.15.57.42;	author ashatalin;	state Exp;
branches;
next	1.1.2.2;
commitid	33cb488f3dd14567;

1.1.2.2
date	2008.08.05.19.27.01;	author ashatalin;	state Exp;
branches;
next	1.1.2.3;
commitid	2d344898a9834567;

1.1.2.3
date	2008.08.06.11.05.53;	author ashatalin;	state Exp;
branches;
next	1.1.2.4;
commitid	6b3c4899858e4567;

1.1.2.4
date	2008.08.28.15.51.00;	author ashatalin;	state Exp;
branches;
next	;
commitid	35c448b6c95d4567;


desc
@@


1.1
log
@file ConstructorCallExpression.java was initially added on branch ocl_qvt.
@
text
@@


1.1.2.1
log
@Xtend-based implementation of XPand extensions was separated into .migration plugin.
@
text
@a0 59
/*******************************************************************************
 * Copyright (c) 2005, 2006 committers of openArchitectureWare and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     committers of openArchitectureWare - initial API and implementation
 *******************************************************************************/
package org.eclipse.gmf.internal.xpand.expression.ast;

import java.util.Set;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.gmf.internal.xpand.BuiltinMetaModel;
import org.eclipse.gmf.internal.xpand.expression.AnalysationIssue;
import org.eclipse.gmf.internal.xpand.expression.EvaluationException;
import org.eclipse.gmf.internal.xpand.expression.ExecutionContext;

public class ConstructorCallExpression extends Expression {

    private Identifier type;

    public ConstructorCallExpression(final int i, final int end, final int j, final Identifier type) {
        super(i, end, j);
        this.type = type;
    }

    @@Override
    protected Object evaluateInternal(final ExecutionContext ctx) {
        final EClassifier t = ctx.getTypeForName(type.getValue());
        if (t != null) {
			return BuiltinMetaModel.newInstance(t);
		} else {
			throw new EvaluationException("Couldn't find type " + type, this);
		}
    }

    public EClassifier analyze(final ExecutionContext ctx, final Set<AnalysationIssue> issues) {
        final EClassifier t = ctx.getTypeForName(type.getValue());
        if (t == null) {
            issues.add(new AnalysationIssue(AnalysationIssue.Type.TYPE_NOT_FOUND, "Type not found : " + type, type));
            return null;
        }
        if (t instanceof EEnum) {
        	issues.add(new AnalysationIssue(AnalysationIssue.Type.INCOMPATIBLE_TYPES, "Can't instantiate enum " + type, type));
        	return null;
        }
        if ((t instanceof EClass) && (((EClass) t).isAbstract() || ((EClass) t).isInterface())) {
        	issues.add(new AnalysationIssue(AnalysationIssue.Type.INCOMPATIBLE_TYPES, "Can't instantiate abstract type " + type, type));
        	return null;
        }
        return t;
    }

}
@


1.1.2.2
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
@
text
@a57 4
    
    public Identifier getType() {
    	return type;
    }
@


1.1.2.3
log
@Copyrights updated.
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2008 committers of openArchitectureWare and others.
d10 1
a10 2
 *     Alexander Shatalin (Borland)
*******************************************************************************/
@


1.1.2.4
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 First step toward .xpt migration.
@
text
@d28 2
a29 2
    public ConstructorCallExpression(final int i, final int end, final int j, final int startOffset, final int endOffset, final Identifier type) {
        super(i, end, j, startOffset, endOffset);
@


