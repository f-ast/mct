head	1.1;
access;
symbols
	ocl_qvt:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.07.29.15.57.59;	author ashatalin;	state dead;
branches
	1.1.2.1;
next	;
commitid	33cb488f3dd14567;

1.1.2.1
date	2008.07.29.15.57.59;	author ashatalin;	state Exp;
branches;
next	1.1.2.2;
commitid	33cb488f3dd14567;

1.1.2.2
date	2008.08.28.15.51.00;	author ashatalin;	state Exp;
branches;
next	;
commitid	35c448b6c95d4567;


desc
@@


1.1
log
@file Definition.java was initially added on branch ocl_qvt.
@
text
@@


1.1.2.1
log
@Xtend-based implementation of XPand extensions was separated into .migration plugin.
@
text
@a0 63
/*
 * <copyright>
 *
 * Copyright (c) 2005-2006 Sven Efftinge and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Sven Efftinge - Initial API and implementation
 *
 * </copyright>
 */
package org.eclipse.gmf.internal.xpand.ast;

import org.eclipse.gmf.internal.xpand.expression.SyntaxConstants;
import org.eclipse.gmf.internal.xpand.expression.ast.DeclaredParameter;
import org.eclipse.gmf.internal.xpand.expression.ast.Identifier;
import org.eclipse.gmf.internal.xpand.model.XpandDefinition;

/**
 * @@author Sven Efftinge
 */
public class Definition extends AbstractDefinition implements XpandDefinition {
    private final Identifier name;

    public Definition(final int start, final int end, final int line, final Identifier name, final Identifier type,
            final DeclaredParameter[] params, final Statement[] body) {
        super(start, end, line, type, params, body);
        this.name = name;
    }

    public Identifier getDefName() {
        return name;
    }

    @@Override
    public String toString() {
        return getOwner().getFullyQualifiedName() + SyntaxConstants.NS_DELIM + getName() + getParamString() + " FOR "
                + getType().getValue();
    }

    private String getParamString() {
        if ((getParams() == null) || (getParams().length == 0)) {
			return "";
		}
        final StringBuffer buff = new StringBuffer("(");
        for (int i = 0; i < getParams().length; i++) {
            final DeclaredParameter p = getParams()[i];
            buff.append(p.getName().getValue()).append(" ").append(p.getType().getValue());
            if (i + 1 < getParams().length) {
                buff.append(",");
            }
        }
        return buff.toString();
    }

    public String getName() {
        return getDefName().getValue();
    }

}
@


1.1.2.2
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 First step toward .xpt migration.
@
text
@d28 1
a28 1
    public Definition(final int start, final int end, final int line, final int startOffset, final int endOffset, final Identifier name, final Identifier type,
d30 1
a30 1
        super(start, end, line, startOffset, endOffset, type, params, body);
@


