head	1.1;
access;
symbols
	ocl_qvt:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.07.29.15.57.46;	author ashatalin;	state dead;
branches
	1.1.2.1;
next	;
commitid	33cb488f3dd14567;

1.1.2.1
date	2008.07.29.15.57.46;	author ashatalin;	state Exp;
branches;
next	;
commitid	33cb488f3dd14567;


desc
@@


1.1
log
@file XpandIterator.java was initially added on branch ocl_qvt.
@
text
@@


1.1.2.1
log
@Xtend-based implementation of XPand extensions was separated into .migration plugin.
@
text
@a0 51
/*******************************************************************************
 * Copyright (c) 2005, 2006 committers of openArchitectureWare and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     committers of openArchitectureWare - initial API and implementation
 *******************************************************************************/
package org.eclipse.gmf.internal.xpand.model;

/**
 * FIXME [artem] does this look like good citizen? perhaps, having 
 * java.util.Iterator available instead would be better. Or just directly an []
 */
public class XpandIterator {

    private long counter = 0l;

    private long elementCount = 0l;

    public XpandIterator(final long elementCount) {
        this.elementCount = elementCount;
    }

    public Long counter() {
        return new Long(counter);
    }

    public Long elements() {
        return new Long(elementCount);
    }

    public void increment() {
        counter++;
    }

    public Boolean isLastIteration() {
        return Boolean.valueOf(counter + 1 == elementCount);
    }

    public Object isFirstIteration() {
        return Boolean.valueOf(counter == 0);
    }

    public Long counter1() {
        return new Long(counter + 1);
    }

}
@

