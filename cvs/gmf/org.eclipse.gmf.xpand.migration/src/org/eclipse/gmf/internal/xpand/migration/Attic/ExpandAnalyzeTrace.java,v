head	1.2;
access;
symbols
	ocl_qvt:1.1.0.2
	Root_ocl_qvt:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2008.09.26.18.25.21;	author ashatalin;	state dead;
branches;
next	1.1;
commitid	2a33048dd29104567;

1.1
date	2008.09.26.18.15.49;	author ashatalin;	state Exp;
branches;
next	;
commitid	2780148dd26d24567;


desc
@@


1.2
log
@Removing incorrectly commited resources
@
text
@/**
 * Copyright (c) 2008 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.xpand.migration;

import java.util.HashMap;
import java.util.Map;

import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.gmf.internal.xpand.expression.ast.Expression;

public class ExpandAnalyzeTrace extends ForEachAnalyzeTrace {

	private Map<Expression, EClassifier> parametersMap = new HashMap<Expression, EClassifier>();

	public ExpandAnalyzeTrace(Expression[] parameters, EClassifier[] parameterTypes, EClassifier separatorType, EClassifier targetType) {
		super(targetType, separatorType);
		assert parameters.length == parameterTypes.length;
		for (int i = 0; i < parameters.length; i++) {
			parametersMap.put(parameters[i], parameterTypes[i]);
		}
	}

	public EClassifier getParameterType(Expression parameter) {
		return parametersMap.get(parameter);
	}

}
@


1.1
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - more gentle collection operations migration implemented
@
text
@@

