head	1.1;
access;
symbols
	ocl_qvt:1.1.0.2;
locks; strict;
comment	@# @;
expand	@k@;


1.1
date	2008.08.01.09.16.53;	author ashatalin;	state dead;
branches
	1.1.2.1;
next	;
commitid	6e264892d4804567;

1.1.2.1
date	2008.08.01.09.16.53;	author ashatalin;	state Exp;
branches;
next	1.1.2.2;
commitid	6e264892d4804567;

1.1.2.2
date	2008.08.05.10.42.09;	author ashatalin;	state Exp;
branches;
next	1.1.2.3;
commitid	41ee48982e7f4567;

1.1.2.3
date	2008.08.05.19.27.01;	author ashatalin;	state Exp;
branches;
next	1.1.2.4;
commitid	2d344898a9834567;

1.1.2.4
date	2008.08.08.18.54.11;	author ashatalin;	state Exp;
branches;
next	1.1.2.5;
commitid	b5f489c96514567;

1.1.2.5
date	2008.08.13.09.24.39;	author ashatalin;	state Exp;
branches;
next	1.1.2.6;
commitid	1f3148a2a8554567;

1.1.2.6
date	2008.08.15.11.48.33;	author ashatalin;	state Exp;
branches;
next	1.1.2.7;
commitid	373748a56d0c4567;

1.1.2.7
date	2008.08.19.15.18.37;	author ashatalin;	state Exp;
branches;
next	1.1.2.8;
commitid	32fd48aae4494567;

1.1.2.8
date	2008.08.19.16.56.42;	author ashatalin;	state Exp;
branches;
next	1.1.2.9;
commitid	14b548aafb484567;

1.1.2.9
date	2008.08.20.12.22.01;	author ashatalin;	state Exp;
branches;
next	1.1.2.10;
commitid	697648ac0c684567;

1.1.2.10
date	2008.08.28.15.51.01;	author ashatalin;	state Exp;
branches;
next	1.1.2.11;
commitid	35c448b6c95d4567;

1.1.2.11
date	2008.09.17.15.26.52;	author ashatalin;	state Exp;
branches;
next	1.1.2.12;
commitid	1558348d121bc4567;

1.1.2.12
date	2008.09.17.17.15.26;	author ashatalin;	state Exp;
branches;
next	1.1.2.13;
commitid	1f33748d13b2e4567;

1.1.2.13
date	2008.09.19.12.58.41;	author ashatalin;	state Exp;
branches;
next	1.1.2.14;
commitid	e12648d3a2014567;

1.1.2.14
date	2008.09.26.18.15.49;	author ashatalin;	state Exp;
branches;
next	1.1.2.15;
commitid	2780148dd26d24567;

1.1.2.15
date	2008.10.01.17.10.23;	author ashatalin;	state Exp;
branches;
next	;
commitid	3bbdb48e3aefd4567;


desc
@@


1.1
log
@file MigrationException.java was initially added on branch ocl_qvt.
@
text
@@


1.1.2.1
log
@Migration implementation + unit-tests for basic extend elements.
@
text
@a0 79
/**
 * Copyright (c) 2008 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.xpand.migration;

import java.util.Set;

import org.eclipse.gmf.internal.xpand.expression.AnalysationIssue;
import org.eclipse.gmf.internal.xpand.expression.EvaluationException;

public class MigrationException extends Exception {

	private static final String LINE_SEPARATOR = "\n";

	public enum Type {

		RESOURCE_NOT_FOUND("Resource not found"),
		ANALYZATION_PROBLEMS("Analyzation problems"),
		INCORRECT_RESOURCE_NAME("Incorrect resource name"),
		UNSUPPORTED_EXTENSION("Incorrect extension"),
		METAMODEL_ALIAS_NOT_FOUND("Metamodel alias was not found"),
		EXTENSION_RETURN_TYPE_NOT_FOUND("Extension return type was not found"),
		UNSUPPORTED_EXPRESSION("Unsupported expression");

		private String name;

		private Type(String name) {
			this.name = name;
		}

		@@Override
		public String toString() {
			return name;
		}
	}

	private final Type type;

	private static final String getMessage(Set<AnalysationIssue> issues) {
		StringBuilder result = new StringBuilder("Following analyzation issues present");
		for (AnalysationIssue issue : issues) {
			result.append(LINE_SEPARATOR);
			result.append(issue.toString());
		}
		return result.toString();
	}

	public MigrationException(Type type, String message) {
		super(message);
		this.type = type;
	}

	public MigrationException(Set<AnalysationIssue> issues) {
		this(Type.ANALYZATION_PROBLEMS, getMessage(issues));
	}

	public MigrationException(Type type, EvaluationException e) {
		super(e);
		this.type = type;
	}

	public Type getType() {
		return type;
	}

	@@Override
	public String getMessage() {
		return "[" + getType().toString() + "] - " + super.getMessage();
	}

}
@


1.1.2.2
log
@Supporting:
- CollectionExpression
- FeatureCall
- OperationCall
- TypeSelect
@
text
@d30 1
a30 1
		TYPE_NOT_FOUND("Extension return type was not found"),
@


1.1.2.3
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
@
text
@d31 1
a31 3
		UNSUPPORTED_EXPRESSION("Unsupported expression"), 
		UNSUPPORTED_BOOLEAN_OPERATION("Unsupported boolean operation"), 
		UNSUPPORTED_INFIX_OPERATION_PARAMETER("Unsupported infix operation parameter");
@


1.1.2.4
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 Correctly transforming collection types on implicit collect operations for FeatureCall expression + unit-tests.
@
text
@d33 1
a33 3
		UNSUPPORTED_INFIX_OPERATION_PARAMETER("Unsupported infix operation parameter"),
		UNSUPPORTED_FEATURE_CALL_TRACE("Unsupported feature call trace"),
		UNSUPPORTED_FEATURE_CALL("Unsupported feature call");
@


1.1.2.5
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 Correctly transforming collection types on implicit collect operations for OperationCall expression + unit-tests.
@
text
@d35 1
a35 3
		UNSUPPORTED_FEATURE_CALL("Unsupported feature call"), 
		UNSUPPORTED_OPERATION_CALL_TRACE("Unsupported operation call trace"), 
		UNSUPPORTED_OPERATION_CALL("Unsupported operation call");
@


1.1.2.6
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 Supporting collection operation calls.
@
text
@d33 1
@


1.1.2.7
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 Transforming Collection type on CollectionExpression migration.
@
text
@d36 1
a36 3
		UNSUPPORTED_OPERATION_CALL("Unsupported operation call"), 
		UNSUPPORTED_COLLECTION_EXPRESSION_TRACE("Unsupported collection expression trace"), 
		UNSUPPORTED_COLLECTION_EXPRESSION("Unsupported collection expression");
@


1.1.2.8
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 Transforming Collection types on TypeSelectExpression migration.
@
text
@d38 1
a38 3
		UNSUPPORTED_COLLECTION_EXPRESSION("Unsupported collection expression"), 
		UNSUPPORTED_TYPE_SELECT_EXPRESSION_TRACE("Unsupported type select expression trace"), 
		UNSUPPORTED_TYPE_SELECT_EXPRESSION("Unsupported type select expression");
@


1.1.2.9
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 Migrate xtend resource pop-up menu action added.
@
text
@a13 1
import java.util.Collections;
d31 2
a32 2
		UNSUPPORTED_EXPRESSION("Unsupported expression"),
		UNSUPPORTED_BOOLEAN_OPERATION("Unsupported boolean operation"),
d34 6
a39 6
		UNSUPPORTED_FEATURE_CALL("Unsupported feature call"),
		UNSUPPORTED_OPERATION_CALL_TRACE("Unsupported operation call trace"),
		UNSUPPORTED_OPERATION_CALL("Unsupported operation call"),
		UNSUPPORTED_COLLECTION_EXPRESSION_TRACE("Unsupported collection expression trace"),
		UNSUPPORTED_COLLECTION_EXPRESSION("Unsupported collection expression"),
		UNSUPPORTED_TYPE_SELECT_EXPRESSION_TRACE("Unsupported type select expression trace"),
a55 2
	private Set<AnalysationIssue> issues = Collections.emptySet();

a71 1
		this.issues = issues;
a81 4
	
	public Set<AnalysationIssue> getIssues() {
		return issues;
	}
@


1.1.2.10
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 First step toward .xpt migration.
@
text
@d41 1
a41 5
		UNSUPPORTED_TYPE_SELECT_EXPRESSION("Unsupported type select expression"),
		
		UNSUPPORTED_ASPECT("Unsupported aspect migration"), 
		UNSUPPORTED_XPAND_RESOURCE("Unsupported xpand resource"), 
		UNABLE_TO_APPLY_EDIT("Unable to apply edit");
@


1.1.2.11
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - Error and Expand statements migration with unit-tests.
@
text
@d44 1
a44 4
		UNSUPPORTED_XPAND_RESOURCE("Unsupported xpand resource"),
		// TODO: remove this enum literal then all necessary statements are
		// supported by migration
		UNSUPPORTED_XPAND_STATEMENT("Unsupported xpand statement"),
@


1.1.2.12
log
@Removing unnecessary literal.
@
text
@d45 3
@


1.1.2.13
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - Problem with infix operation migration in expand corrected.
 - Skipping analyze warnings on migration.
@
text
@a14 1
import java.util.LinkedHashSet;
a21 2
	private static final long serialVersionUID = 8066639467181143331L;

d65 1
a65 1
		for (AnalysationIssue issue : getErrors(issues)) {
a70 14
	
	private static final Set<AnalysationIssue> getErrors(Set<AnalysationIssue> issues) {
		Set<AnalysationIssue> result = new LinkedHashSet<AnalysationIssue>();
		for (AnalysationIssue issue : issues) {
			if (!issue.isWarningNotError()) {
				result.add(issue);
			}
		}
		return result;
	}
	
	public static final boolean hasErrors(Set<AnalysationIssue> issues) {
		return getErrors(issues).size() > 0;
	}
@


1.1.2.14
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - more gentle collection operations migration implemented
@
text
@a42 1
		UNSUPPORTED_COLLECTION_OPERATION("Unsupported collection operation"),
@


1.1.2.15
log
@[243157] - Develop automatic migration tool creating QVTO/OCL constructions having Xtend as an input
 - Native library migration code added.
@
text
@d49 1
a49 3
		UNABLE_TO_APPLY_EDIT("Unable to apply edit"),
		UNABLE_TO_DETECT_NATIVE_LIBRARY_CLASS_NAME("Unable to detect native library class name"),
		UNSUPPORTED_NATIVE_EXTENSION_TYPE("Unsupported native extension type");
@


