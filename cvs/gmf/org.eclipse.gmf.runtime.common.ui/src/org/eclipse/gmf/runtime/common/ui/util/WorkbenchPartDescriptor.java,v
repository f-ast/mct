head	1.1;
access;
symbols
	v20081023-2107:1.1
	v20081022-1925:1.1
	v20081022-1104:1.1
	v20081020-0700:1.1
	v20080722-1827:1.1
	R2_1_maintenance:1.1.0.6
	Root_R2_1_maintenance:1.1
	R2_1_0:1.1
	v20080512-1200:1.1
	v20080503-1740:1.1
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080407-2250:1.1
	v20080222-1200:1.1
	v20080215-1500:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070915-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.4
	R2_0:1.1
	R4_20:1.1
	RC3_20:1.1
	v20070601-1400:1.1
	v20070504-1000:1.1
	v20070330-1300:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061218-1200:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061020-1000:1.1
	v20061013-1330:1.1
	v20061012-1100:1.1
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.1
	v20060824-1600:1.1
	v20060803-1200:1.1
	v20060728-0500:1.1
	v20060721-1130:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060616-1200:1.1
	v20060531-1730:1.1
	v20060526-1200:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1
	I20060210-1715:1.1
	I20060209-1815:1.1
	I20060203-0830:1.1
	I20060129-1145:1.1
	I20060127-0900:1.1
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051124-2000:1.1
	M3_10:1.1
	I20051118-1245:1.1
	I20051111-1800:1.1
	I20051106-0900:1.1
	v20051030:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.10.07.14.03.37;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Bugzilla 111651 gmf_head etworkow 051007 WorkbenchPartDescriptor is incorrectly spelled as WorkbenchPartDescirptor
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.util;

import org.eclipse.ui.IWorkbenchPage;

/**
 * A standard implementation of <code>IWorkbenchPartDescriptor</code> interface
 * @@author melaasar
 */
public class WorkbenchPartDescriptor implements IWorkbenchPartDescriptor {

	/** the part's id */
	private final String partId;
	/** the part's class */
	private final Class partClass;
	/** the part's page */
	private final IWorkbenchPage partPage;

	/**
	 * Creates a new instance of the workbench part descriptor
	 * 
	 * @@param partId The workbench part id
	 * @@param partClass The workbench part class
	 * @@param partPage The workbench part page
	 */
	public WorkbenchPartDescriptor(
		String partId,
		Class partClass,
		IWorkbenchPage partPage) {
		assert null != partId;
		assert null != partClass;
		assert null != partPage;
		this.partId = partId;
		this.partClass = partClass;
		this.partPage = partPage;
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.util.IWorkbenchPartDescriptor#getPartId()
	 */
	public String getPartId() {
		return partId;
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.util.IWorkbenchPartDescriptor#getPartClass()
	 */
	public Class getPartClass() {
		return partClass;
	}

	/**
	 * @@see org.eclipse.gmf.runtime.common.ui.util.IWorkbenchPartDescriptor#getPartPage()
	 */
	public IWorkbenchPage getPartPage() {
		return partPage;
	}

	/**
	 * @@see java.lang.Object#equals(java.lang.Object)
	 */
	public boolean equals(Object obj) {
		if (obj instanceof WorkbenchPartDescriptor) {
			WorkbenchPartDescriptor descriptor = (WorkbenchPartDescriptor) obj;
			return descriptor.getPartId().equals(getPartId())
				&& descriptor.getPartClass() == getPartClass()
				&& descriptor.getPartPage() == getPartPage();
		}
		return false;
	}

	/**
	 * @@see java.lang.Object#hashCode()
	 */
	public int hashCode() {
		int idCode = getPartId().hashCode();
		int classCode = getPartClass().hashCode();
		int pageCode = getPartPage().hashCode();
		return (idCode + classCode + pageCode)
			+ (idCode | ~classCode | ~pageCode);
	}

}
@
