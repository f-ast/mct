head	1.2;
access;
symbols
	v20081023-2107:1.2
	v20081022-1925:1.2
	v20081022-1104:1.2
	v20081020-0700:1.2
	v20080722-1827:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080512-1200:1.2
	v20080503-1740:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080407-2250:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20071003-0000:1.2
	v20070921-0000:1.2
	v20070915-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070504-1000:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	M4_20:1.2
	v20061218-1200:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061117-0800:1.2
	v20061020-1000:1.2
	v20061013-1330:1.2
	v20061012-1100:1.2
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060824-1600:1.2
	v20060803-1200:1.2
	v20060728-0500:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060526-1200:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.23.49;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.15;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2004, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.dialogs;

import java.util.ArrayList;
import java.util.List;

/**
 * Show Related Elements Preset
 * 
 * @@author Wayne Diu, wdiu
 */
public class ShowRelatedElementsPreset {

	/**
	 * True if it's a default query, false if it's user defined
	 */
	protected boolean isDefault;

	/**
	 * Name
	 */
	protected String name;

	/**
	 * Identifier
	 */
	protected String id;

	/**
	 * List of IDs
	 */
	protected List ids = new ArrayList();

	/**
	 * Optional custom data
	 */
	protected Object custom;

	/**
	 * See ExpansionType enumeration for values
	 */
	protected int expansionType;

	/**
	 * Levels of expansion, -1 means expand indefinitely
	 */
	protected int levels;

	/**
	 * Optional layout type to use for this preset if functionality is
	 * available.
	 */
	protected Object layoutType;

	/**
	 * Return true if it's the default query, false otherwise.
	 * 
	 * @@return true if it's the default query, false otherwise.
	 */
	public boolean isDefault() {
		return isDefault;
	}

	/**
	 * Return this preset's name
	 * 
	 * @@return String name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Set this preset's name
	 * 
	 * @@param newName
	 *            String name
	 */
	public void setName(String newName) {
		name = newName;
	}

	/**
	 * Retrieves the serializable non-language specific id of the preset.
	 * 
	 * @@return The identifier for the preset.
	 */
	public String getId() {
		return id;
	}

	/**
	 * Return custom data for this preset, which may be null
	 * 
	 * @@return custom data
	 */
	public Object getCustom() {
		return custom;
	}

	/**
	 * Set custom data
	 * 
	 * @@param newCustom
	 *            String with custom data
	 */
	public void setCustom(Object newCustom) {
		this.custom = newCustom;
	}

	/**
	 * Return List of serializable String ids
	 * 
	 * @@return List of serializable String ids
	 */
	public List getIds() {
		return ids;
	}

	/**
	 * Add an id to the ID List
	 * 
	 * @@param aID
	 *            String id to add to the ID List
	 */
	public void addId(String aID) {
		ids.add(aID);
	}

	/**
	 * Add a List of String ids to the ID List
	 * 
	 * @@param idList
	 *            List of String ids to add to the ID List
	 */
	public void addIds(List idList) {
		ids.addAll(idList);
	}

	/**
	 * Return the int number of levels to expand, -1 means to expand
	 * indefinitely.
	 * 
	 * @@return int number of levels to expand. -1 means to expand indefinitely.
	 */
	public int getLevels() {
		return levels;
	}

	/**
	 * Return the expansion type ordinal. See ExpansionType for more information
	 * 
	 * @@return the expansion type ordinal.
	 */
	public int getExpansionType() {
		return expansionType;
	}

	/**
	 * Return the optional layout type.
	 * 
	 * @@return A layout type or (null) if none set.
	 */
	public Object getLayoutType() {
		return layoutType;
	}

	/**
	 * Set the optional layout type.
	 * 
	 * @@param type
	 *            A layout type or (null) for unset.
	 */
	public void setLayoutType(Object type) {
		this.layoutType = type;
	}

	/**
	 * Constructor.
	 * 
	 * @@param newName
	 *            name of preset
	 * @@param newDefault
	 *            true it's a hardcoded query, false if it's a user defined
	 *            query
	 * @@param newType
	 *            expansion type. See ExpansionType.
	 * @@param newLevels
	 *            number of levels to expand, -1 for indefinite.
	 */
	public ShowRelatedElementsPreset(String newName, boolean newDefault,
			int newType, int newLevels) {
		name = newName;
		isDefault = newDefault;
		expansionType = newType;
		levels = newLevels;
		this.id = newName;
	}

	/**
	 * Constructor that allows for serialization of the preset.
	 * 
	 * @@param newName
	 *            name of preset
	 * @@param newID
	 *            serializable and non-language specific identifier for the
	 *            preset
	 * @@param newDefault
	 *            true it's a hardcoded query, false if it's a user defined
	 *            query
	 * @@param newType
	 *            expansion type. See ExpansionType.
	 * @@param newLevels
	 *            number of levels to expand, -1 for indefinite.
	 */
	public ShowRelatedElementsPreset(String newName, String newID,
			boolean newDefault, int newType, int newLevels) {
		name = newName;
		isDefault = newDefault;
		expansionType = newType;
		levels = newLevels;
		this.id = newID;
	}

	/**
	 * Constructor.
	 * 
	 * @@param newName
	 *            name of preset
	 * @@param newDefault
	 *            true it's a hardcoded query, false if it's a user defined
	 *            query
	 * @@param newType
	 *            expansion type. See ExpansionType.
	 * @@param newLevels
	 *            number of levels to expand, -1 for indefinite.
	 * @@param idList
	 *            list of IDs
	 * @@param newCustom
	 *            custom String data.
	 */
	public ShowRelatedElementsPreset(String newName, boolean newDefault,
			int newType, int newLevels, List idList, Object newCustom) {
		this(newName, newDefault, newType, newLevels);
		ids = idList;
		custom = newCustom;
	}

	/**
	 * Constructor that allows for serialization of the preset.
	 * 
	 * @@param newName
	 *            name of preset
	 * @@param newID
	 *            serializable and non-language specific identifier for the
	 *            preset
	 * @@param newDefault
	 *            true it's a hardcoded query, false if it's a user defined
	 *            query
	 * @@param newType
	 *            expansion type. See ExpansionType.
	 * @@param newLevels
	 *            number of levels to expand, -1 for indefinite.
	 * @@param idList
	 *            list of IDs
	 * @@param newCustom
	 *            custom String data.
	 */
	public ShowRelatedElementsPreset(String newName, String newID,
			boolean newDefault, int newType, int newLevels, List idList,
			Object newCustom) {
		this(newName, newID, newDefault, newType, newLevels);
		ids = idList;
		custom = newCustom;
	}
}@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2004, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

