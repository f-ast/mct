head	1.5;
access;
symbols
	v20081023-2107:1.5
	v20081022-1925:1.5
	v20081022-1104:1.5
	v20081020-0700:1.5
	v20080722-1827:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080512-1200:1.5
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.4
	v20080407-2250:1.4
	v20080222-1200:1.4
	v20080215-1500:1.4
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.4
	R2_0:1.4
	R4_20:1.4
	RC3_20:1.4
	v20070601-1400:1.4
	v20070504-1000:1.4
	v20070330-1300:1.4
	v20070208-1800:1.4
	M4_20:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061020-1000:1.4
	v20061013-1330:1.4
	v20061012-1100:1.4
	v20060925-1700:1.4
	v20060919-0800:1.4
	M1_20:1.4
	v20060824-1600:1.4
	v20060803-1200:1.4
	v20060728-0500:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060531-1730:1.4
	v20060526-1200:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.4
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2008.04.30.19.50.05;	author crevells;	state Exp;
branches;
next	1.4;
commitid	5cbb4818cd6d4567;

1.4
date	2005.11.02.19.43.06;	author ahunter;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.28.19.58.48;	author ahunter;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.23.49;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.16.15;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[229709] gmf_head mvrbaski 080430 Filtering dialog is missing mnemonic keys
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.common.ui.dialogs;

import org.eclipse.gmf.runtime.common.ui.internal.l10n.CommonUIMessages;
import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.jface.dialogs.IDialogConstants;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Shell;

/**
 * A dialog class that would be displayed to warn the user when adding an
 * element to the ME while the ME's filtering settings hide such element. It
 * allows the user to decide whether to override the filtering settings in order
 * to display the element.
 * 
 * @@author Yasser Lulu
 *  
 */
public class FilterWarningDialog
	extends Dialog {

	/**
	 * the ok button
	 */
	private Button ok_button;

	/**
	 * the modify filter settings checkbox
	 */
	private Button modify_checkbox;

	/**
	 * the don't show this filter dialog checkbox
	 */
	private Button dontshow_checkbox;

	/**
	 * a boolean that stores the checked status of the dontshow_checkbox
	 */
	private boolean dontshowAgain;

	/**
	 * a boolean that stores the checked status of the modify_checkbox
	 */
	private boolean modifyFilterSettings;

	/**
	 * constructor
	 * 
	 * @@param parentShell
	 *            thge dialog's parent shell
	 */
	public FilterWarningDialog(Shell parentShell) {
		super(parentShell);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)
	 */
	protected void configureShell(Shell newShell) {
		super.configureShell(newShell);
		newShell.setText(CommonUIMessages.FilterWarningDialog_title);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.jface.dialogs.Dialog#createButtonBar(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createButtonBar(Composite parent) {
		return parent;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.jface.dialogs.Dialog#createDialogArea(org.eclipse.swt.widgets.Composite)
	 */
	protected Control createDialogArea(Composite parent) {
		Composite outer = (Composite) super.createDialogArea(parent);
		outer.setSize(outer.computeSize(SWT.DEFAULT, SWT.DEFAULT));
		GridLayout layout = new GridLayout(4, true);
		outer.setLayout(layout);

		StyledText text = new StyledText(outer, SWT.MULTI | SWT.WRAP
			| SWT.READ_ONLY);
		text.setCaret(null);
		text.setFont(parent.getFont());
		GridData data = new GridData();
		data.horizontalAlignment = GridData.FILL;
		data.verticalAlignment = GridData.BEGINNING;
		data.grabExcessHorizontalSpace = true;
		data.horizontalSpan = 4;
		data.verticalSpan = 1;
		data.widthHint = convertWidthInCharsToPixels(60);
		data.heightHint = convertHeightInCharsToPixels(4);
		text.setText(CommonUIMessages.FilterWarningDialog_filteredOut);
		text.setLayoutData(data);
		text.setCursor(null);
		text.setBackground(outer.getBackground());
		

		modify_checkbox = new Button(outer, SWT.CHECK);
		modify_checkbox.setText(CommonUIMessages.FilterWarningDialog_modifyOptions);
		GridData modify_checkbox_data = new GridData();
		modify_checkbox_data.horizontalAlignment = GridData.FILL;
		modify_checkbox_data.verticalAlignment = GridData.BEGINNING;
		modify_checkbox_data.grabExcessHorizontalSpace = true;
		modify_checkbox_data.horizontalSpan = 4;
		modify_checkbox_data.verticalSpan = 1;
		modify_checkbox.setLayoutData(modify_checkbox_data);
		modify_checkbox.setSelection(true);
		modify_checkbox.setFont(parent.getFont());

		dontshow_checkbox = new Button(outer, SWT.CHECK);
		dontshow_checkbox.setText(CommonUIMessages.FilterWarningDialog_dontShowAgain);
		GridData dontshow_checkbox_data = new GridData();
		dontshow_checkbox_data.horizontalAlignment = GridData.FILL;
		dontshow_checkbox_data.verticalAlignment = GridData.BEGINNING;
		dontshow_checkbox_data.grabExcessHorizontalSpace = true;
		dontshow_checkbox_data.horizontalSpan = 4;
		dontshow_checkbox_data.verticalSpan = 1;
		dontshow_checkbox.setLayoutData(dontshow_checkbox_data);
		dontshow_checkbox.setFont(parent.getFont());
		
		ok_button = new Button(outer, SWT.PUSH);
		ok_button.setText(IDialogConstants.OK_LABEL);
		GridData ok_button_data = new GridData(GridData.HORIZONTAL_ALIGN_FILL
			| GridData.GRAB_HORIZONTAL);
		ok_button_data.horizontalAlignment = GridData.CENTER;
		ok_button_data.verticalAlignment = GridData.CENTER;
		ok_button_data.horizontalSpan = 4;
		ok_button_data.verticalSpan = 1;
		ok_button_data.widthHint = Math.max(
				convertHorizontalDLUsToPixels(IDialogConstants.BUTTON_WIDTH),
				ok_button.computeSize(SWT.DEFAULT, SWT.DEFAULT, true).x);
		

		ok_button.setLayoutData(ok_button_data);
		ok_button.addSelectionListener(new SelectionAdapter() {

			public void widgetSelected(SelectionEvent event) {
				okPressed();
			}
		});
		ok_button.setFont(parent.getFont());

		return outer;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.jface.dialogs.Dialog#okPressed()
	 */
	protected void okPressed() {
		dontshowAgain = dontshow_checkbox.getSelection();
		modifyFilterSettings = modify_checkbox.getSelection();
		super.okPressed();
	}

	/**
	 * Returns the dontshowAgain check-box status.
	 * 
	 * @@return boolean true if selected (checked) false otherwise
	 */
	public boolean isDontShowAgainSelected() {
		return dontshowAgain;
	}

	/**
	 * Returns the modifyFilterSettings check-box status.
	 * 
	 * @@return boolean true if selected (checked) false otherwise
	 */
	public boolean isModifyFilterSettingsSelected() {
		return modifyFilterSettings;
	}
}@


1.4
log
@Bugzilla Bug 110317 gmf_head ahunter 051102 Compiler warning count should be 0 - runtime foundation layer components
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
d113 2
a114 2
		data.horizontalSpan = 3;
		data.verticalSpan = 2;
d121 1
a121 18

		ok_button = new Button(outer, SWT.PUSH);
		ok_button.setText(IDialogConstants.OK_LABEL);
		GridData ok_button_data = new GridData(GridData.HORIZONTAL_ALIGN_FILL
			| GridData.GRAB_HORIZONTAL);
		ok_button_data.heightHint = convertVerticalDLUsToPixels(14);
		ok_button_data.widthHint = Math.max(
			convertHorizontalDLUsToPixels(IDialogConstants.BUTTON_WIDTH),
			ok_button.computeSize(SWT.DEFAULT, SWT.DEFAULT, true).x);

		ok_button.setLayoutData(ok_button_data);
		ok_button.addSelectionListener(new SelectionAdapter() {

			public void widgetSelected(SelectionEvent event) {
				okPressed();
			}
		});
		ok_button.setFont(parent.getFont());
d129 1
a129 1
		modify_checkbox_data.horizontalSpan = 3;
d141 1
a141 1
		dontshow_checkbox_data.horizontalSpan = 3;
d145 22
@


1.3
log
@Bugzilla Bug 109445 gmf_head etworkow 051028 New Eclipse Resources Bundles Should Be Used
@
text
@d126 1
a126 1
		ok_button_data.heightHint = convertVerticalDLUsToPixels(IDialogConstants.BUTTON_HEIGHT);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d14 1
a27 2
import org.eclipse.gmf.runtime.common.ui.internal.l10n.ResourceManager;

a40 24
	 * The dialog's title
	 */
	private static final String FILTER_WARNING_DLG_TITLE = ResourceManager
		.getI18NString("FilterWarningDialog.title"); //$NON-NLS-1$;

	/**
	 * Dialog message - modify filter options to show element
	 */
	private static final String MODIFY_FILTER_OPTIONS = ResourceManager
		.getI18NString("FilterWarningDialog.modifyOptions"); //$NON-NLS-1$

	/**
	 * Dialog message - don't show message again
	 */
	private static final String DONT_SHOW_FILTER_WARNING_DLG = ResourceManager
		.getI18NString("FilterWarningDialog.dontShowAgain"); //$NON-NLS-1$

	/**
	 * Dialog message - element filtered
	 */
	private static final String FILTER_WARNING_DLG_MESSAGE = ResourceManager
		.getI18NString("FilterWarningDialog.filteredOut"); //$NON-NLS-1$

	/**
d82 1
a82 1
		newShell.setText(FILTER_WARNING_DLG_TITLE);
d117 1
a117 1
		text.setText(FILTER_WARNING_DLG_MESSAGE);
d141 1
a141 1
		modify_checkbox.setText(MODIFY_FILTER_OPTIONS);
d153 1
a153 1
		dontshow_checkbox.setText(DONT_SHOW_FILTER_WARNING_DLG);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

