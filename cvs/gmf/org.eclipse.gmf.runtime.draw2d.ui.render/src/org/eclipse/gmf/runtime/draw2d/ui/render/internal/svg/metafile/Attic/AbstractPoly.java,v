head	1.3;
access;
symbols
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051208-2000:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.3
date	2006.02.10.19.18.29;	author sshaw;	state dead;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.38;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.41;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@bugzilla 119319 gmf-head sshaw 060210 Support extensibility for RenderedImageFactory
@
text
@/******************************************************************************
 * Copyright (c) 2003, 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.render.internal.svg.metafile;

import java.io.IOException;

/**  
 * @@author dhabib
 */
abstract class AbstractPoly implements IEmf2SvgConverter, IWmf2SvgConverter, IRenderToPath, ITraceMe
{
	private static final int	EMF_POINT_COUNT_OFFSET	= 16;
	private static final int	EMF_POINT_ARRAY_START	= 20;
	
	private static final int	WMF_POINT_COUNT_OFFSET	= 0;
	private static final int	WMF_POINT_ARRAY_START	= 2;

	private int					m_count = 0;
	private int[]				m_xPoints = null;
	private int[]				m_yPoints = null;
	private boolean				m_b16Bits = true;

	protected int[]				m_xPointsConv = null;
	protected int[]				m_yPointsConv = null;

	public AbstractPoly( boolean b16Bits )
	{
		m_b16Bits = b16Bits;
	}
	
	public void readWMFRecord( Record emr ) throws IOException
	{
		m_count = emr.getShortAt( WMF_POINT_COUNT_OFFSET );
		readPoly( emr, WMF_POINT_ARRAY_START );
	}

	public void readEMFRecord( Record emr ) throws IOException
	{
		m_count = emr.getIntAt( EMF_POINT_COUNT_OFFSET );
		readPoly( emr, EMF_POINT_ARRAY_START );
	}
	
	protected int getCount()
	{
		return m_count;
	}
	
	protected int[] getXPoints()
	{
		return m_xPoints;
	}
	
	protected int[] getYPoints()
	{
		return m_yPoints;
	}

	private boolean readPoly( Record emr, int pointOffset ) throws IOException
	{
		/*
		 * RECTL  rclBounds;	// Polygon boundary, in device units.
		 * DWORD  cptl; 		// number of points
		 * POINTL aptl[1]; 		// array of cptl points (each a pair of integers)
		 */
		
		m_xPoints = new int[ m_count ];
		m_yPoints = new int[ m_count ];
		
		int curPos = pointOffset;
		
		for( int i = 0; i < m_count; i++ )
		{
			// Read the points
			if( m_b16Bits )
			{
				m_xPoints[ i ] = emr.getShortAt( curPos );
				m_yPoints[ i ] = emr.getShortAt( curPos + 2 );
				curPos += 4;
			}
			else
			{	
				m_xPoints[ i ] = emr.getIntAt( curPos );
				m_yPoints[ i ] = emr.getIntAt( curPos + 4  );
				curPos += 8;
			}
		}
		 
		return true; 
	}

	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("cnt=" + m_count); //$NON-NLS-1$
		dumpPoints(sb, ", Converted:", m_xPointsConv, m_yPointsConv); //$NON-NLS-1$
		dumpPoints(sb, ", Original:", m_xPoints, m_yPoints); //$NON-NLS-1$
		return sb.toString();
	}

	private void dumpPoints(StringBuffer sb, String what, int[] x, int[] y) {
		sb.append(what);
		if (x == null || y == null) {
			sb.append(" (null)"); //$NON-NLS-1$
		} else {
			for (int ix = 0; ix < m_count; ++ix) {
				sb.append(" (" + x[ix] + ',' + y[ix] + ')'); //$NON-NLS-1$
			}
		}
	}
}
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2003, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

