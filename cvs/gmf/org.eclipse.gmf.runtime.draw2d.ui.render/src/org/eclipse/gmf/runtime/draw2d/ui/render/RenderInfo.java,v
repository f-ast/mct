head	1.6;
access;
symbols
	v20081020-0700:1.6
	v20080722-1827:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080507-2230:1.6
	v20080425-1959:1.6
	v20080331-1625:1.6
	v20080328-1605:1.6
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070614-1400:1.6
	v20070608-1300:1.6
	v20070605-1400:1.6
	v20070601-1400:1.6
	v20070330-1300:1.6
	v20070208-1800:1.6
	M4_20:1.6
	v20061218-1500:1.5.2.1
	v20061214-0000:1.6
	M3_20:1.6
	v20061013-1330:1.6
	v20060919-0800:1.5.2.1
	M1_20:1.5
	v20060721-1130:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060526-1200:1.5
	I20060505-1400:1.5
	I20060424-0500:1.5
	I20060424-0300:1.5
	M6_10:1.5
	I20060407-1200:1.5
	I20060331-1000:1.5
	I20060324-0300:1.5
	I20060317-1300:1.5
	I20060317-1200:1.5
	I20060316-1300:1.5
	I20060309-1300:1.5
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051208-2000:1.3
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.6
date	2006.10.03.15.05.23;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.10.19.18.31;	author sshaw;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.12.12.15.47.59;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.05.19.18.18;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.39;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.56;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.09.13.16.44.44;	author ahunter;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.render;

import org.eclipse.swt.graphics.RGB;

/**
 * @@author sshaw
 * 
 * Contains information needed by RenderedImage to perform the rendering of the
 * Vector graphics data.
 * 
 * IMPORTANT: This interface is <EM>not</EM> intended to be implemented by
 * clients. 
 * New methods may be added in the future.
 */
public interface RenderInfo {

	/**
	 * Accessor method to return the width of the rendered image.
	 * 
	 * @@return the width of the rendered image.
	 */
	public abstract int getWidth();

	/**
	 * Accessor method to return the height of the rendered image.
	 * 
	 * @@return the height of the rendered image.
	 */
	public abstract int getHeight();

	/**
	 * Accessor method to return the fill color of the rendered image.
	 * 
	 * @@return <code>RGB</code> value that is the fill color of the rendered
	 *         image. Note: a <code>null</code> return value is valid and
	 *         means that the fill color defaults to the values stored in the
	 *         vector graphics file.
	 */
	public abstract RGB getBackgroundColor();

	/**
	 * Accessor method to return the outline color of the rendered image.
	 * 
	 * @@return <code>RGB</code> value that is the outline color of the
	 *         rendered image. Note: a <code>null</code> return value is valid
	 *         and means that the outline color defaults to the values stored in
	 *         the vector graphics file.
	 */
	public abstract RGB getForegroundColor();

	/**
	 * Accessor method to return whether or not the aspect ratio is maintained.
	 * 
	 * @@return <code>boolean</code> <code>true</code> if aspect ratio of
	 *         original vector file is maintained, <code>false</code>
	 *         otherwise.
	 */
	public abstract boolean shouldMaintainAspectRatio();

	/**
	 * Accessor method to return whether or not the vector data is anti-aliased.
	 * 
	 * @@return <code>boolean</code> <code>true</code> if vector graphic is
	 *         to be rendered wih anti-aliasing, <code>false</code> otherwise.
	 */
	public abstract boolean shouldAntiAlias();

	/**
	 * Generic setter to set values in the RenderInfo data structure. This is
	 * useful when retrieving a RenderInfo structure from a RenderedImage object
	 * and then wishing to re-render the image with new values.
	 * 
	 * @@param width
	 *            the width of the rendered image to set
	 * @@param height
	 *            the height of the rendered image to set
	 * @@param maintainAspectRatio
	 *            <code>boolean</code> <code>true</code> if aspect ratio of
	 *            original vector file is maintained, <code>false</code>
	 *            otherwise
	 * @@param antialias
	 *            <code>boolean</code> <code>true</code> if vector graphic
	 *            is to be rendered wih anti-aliasing, <code>false</code>
	 *            otherwise.
	 * @@param background
	 *            <code>Color</code> fill color for the whole image: null
	 *            value defaults to stored values for each element in the vector
	 *            file.
	 * @@param outline
	 *            <code>Color</code> outline color for the whole image: null
	 *            value defaults to stored foreground for each element in the
	 *            vector file.
	 */
	public abstract void setValues(int width, int height,
			boolean maintainAspectRatio, boolean antialias, RGB background,
			RGB foreground);
}
@


1.5
log
@bugzilla 119319 gmf-head sshaw 060210 Support extensibility for RenderedImageFactory
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2003 IBM Corporation and others.
@


1.5.2.1
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
@


1.4
log
@bugzilla 110316 gmf-head 051212 Compiler warning count should be 0 - runtime diagram layer
@
text
@a62 22
	 * Accessor method to return the fill color of the rendered image.
	 * 
	 * @@return <code>Color</code> value that is the fill color of the rendered
	 *         image. Note: a <code>null</code> return value is valid and
	 *         means that the fill color defaults to the values stored in the
	 *         vector graphics file.
	 * @@deprecated use {@@link RenderInfo#getBackgroundColor()}
	 */
	public abstract java.awt.Color getFillColor();

	/**
	 * Accessor method to return the outline color of the rendered image.
	 * 
	 * @@return <code>Color</code> value that is the outline color of the
	 *         rendered image. Note: a <code>null</code> return value is valid
	 *         and means that the outline color defaults to the values stored in
	 *         the vector graphics file.
	 * @@deprecated use {@@link RenderInfo#getForegroundColor()}
	 */
	public abstract java.awt.Color getOutlineColor();

	/**
a107 32

	/**
	 * Generic setter to set values in the RenderInfo data structure. This is
	 * useful when retrieving a RenderInfo structure from a RenderedImage object
	 * and then wishing to re-render the image with new values.
	 * 
	 * @@param width
	 *            the width of the rendered image to set
	 * @@param height
	 *            the height of the rendered image to set
	 * @@param fill
	 *            <code>Color</code> fill color for the whole image: null
	 *            value defaults to stored values for each element in the vector
	 *            file.
	 * @@param outline
	 *            <code>Color</code> outline color for the whole image: null
	 *            value defaults to stored values for each element in the vector
	 *            file.
	 * @@param maintainAspectRatio
	 *            <code>boolean</code> <code>true</code> if aspect ratio of
	 *            original vector file is maintained, <code>false</code>
	 *            otherwise
	 * @@param antialias
	 *            <code>boolean</code> <code>true</code> if vector graphic
	 *            is to be rendered wih anti-aliasing, <code>false</code>
	 *            otherwise.
	 * @@deprecated use
	 *             {@@link RenderInfo#setValues(int, int, Color, Color, boolean, boolean)}
	 */
	public abstract void setValues(int width, int height, java.awt.Color fill,
			java.awt.Color outline, boolean maintainAspectRatio,
			boolean antialias);
@


1.3
log
@bugzilla 111436 gmf-head sshaw 051205 Improve performance of SVG transcoder
@
text
@a13 1
import org.eclipse.swt.graphics.Color;
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d14 2
a15 1
import java.awt.Color;
d19 2
a20 2
 *
 * Contains information needed by RenderedImage to perform the rendering of the 
d22 4
d30 4
a33 4
	* Accessor method to return the width of the rendered image.
	* 
	* @@return the width of the rendered image.
	*/
d46 25
a70 3
	 * @@return <code>Color</code> value that is the fill color of the rendered image.
	 * Note: a <code>null</code> return value is valid and means that the fill color defaults 
	 * to the values stored in the vector graphics file.
d72 2
a73 2
	public abstract Color getFillColor();
	
d77 5
a81 3
	 * @@return <code>Color</code> value that is the outline color of the rendered image.
	 * Note: a <code>null</code> return value is valid and means that the outline color defaults 
	 * to the values stored in the vector graphics file.
d83 2
a84 2
	public abstract Color getOutlineColor();
	
d88 3
a90 2
	 * @@return <code>boolean</code> <code>true</code> if aspect ratio of original vector file is maintained, 
	 * <code>false</code> otherwise.
d97 2
a98 2
	 * @@return <code>boolean</code> <code>true</code> if vector graphic is to be rendered wih anti-aliasing, 
	 * <code>false</code> otherwise.
d103 60
a162 21
	 * Generic setter to set values in the RenderInfo data structure.  This is useful
	 * when retrieving a RenderInfo structure from a RenderedImage object and then 
	 * wishing to re-render the image with new values.
	 * 
	 * @@param width the width of the rendered image to set
	 * @@param height the height of the rendered image to set
	 * @@param fill <code>Color</code> fill color for the whole image: null value defaults to 
	 * stored values for each element in the vector file.
	 * @@param outline <code>Color</code> outline color for the whole image: null value defaults to 
	 * stored values for each element in the vector file.
	 * @@param maintainAspectRatio <code>boolean</code> <code>true</code> if aspect ratio of original vector file 
	 * is maintained, <code>false</code> otherwise
	 * @@param antialias <code>boolean</code> <code>true</code> if vector graphic is to be rendered wih anti-aliasing, 
	 * <code>false</code> otherwise.
	 */
	public abstract void setValues(
		int width,
		int height,
		Color fill, Color outline,
		boolean maintainAspectRatio,
		boolean antialias);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2003.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

