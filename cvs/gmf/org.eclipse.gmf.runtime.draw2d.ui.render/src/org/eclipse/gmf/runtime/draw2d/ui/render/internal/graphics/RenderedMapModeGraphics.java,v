head	1.7;
access;
symbols
	v20081020-0700:1.7
	v20080722-1827:1.7
	R2_1_maintenance:1.7.0.6
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-2230:1.7
	v20080425-1959:1.7
	v20080331-1625:1.7
	v20080328-1605:1.7
	v20080222-1200:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.4
	R2_0:1.7
	R4_20:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.7
	v20070605-1400:1.7
	v20070601-1400:1.7
	v20070330-1300:1.7
	v20070208-1800:1.7
	M4_20:1.7
	v20061218-1500:1.7
	v20061214-0000:1.7
	M3_20:1.7
	v20061013-1330:1.7
	v20060919-0800:1.7
	M1_20:1.7
	v20060721-1130:1.7
	v20060713-1700:1.7
	R1_0_maintenance:1.7.0.2
	R1_0:1.7
	v20060627-1200:1.7
	v20060616-1200:1.7
	v20060609-1400:1.7
	v20060531-1730:1.7
	v20060526-1200:1.7
	I20060505-1400:1.7
	I20060424-0500:1.7
	I20060424-0300:1.7
	M6_10:1.7
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.7
	M5_10:1.7
	S20060303-1600:1.7
	I20060227-1730:1.7
	I20060216-1945:1.7
	I20060210-1715:1.7
	I20060209-1815:1.7
	I20060203-0830:1.7
	I20060129-1145:1.7
	I20060127-0900:1.7
	I20060120-1530:1.7
	I20060113-1700:1.7
	M4_10:1.7
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.7
	I20051208-2000:1.7
	I20051201-1800:1.6
	I20051124-2000:1.5
	M3_10:1.5
	I20051118-1245:1.5
	I20051111-1800:1.5
	I20051106-0900:1.4
	v20051030:1.4;
locks; strict;
comment	@# @;


1.7
date	2005.12.05.19.18.18;	author sshaw;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.29.16.33.56;	author sshaw;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.09.18.23.50;	author mmostafa;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.28.14.29.44;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.05.20.30.42;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.24.39;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.50;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bugzilla 111436 gmf-head sshaw 051205 Improve performance of SVG transcoder
@
text
@/******************************************************************************
 * Copyright (c) 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.draw2d.ui.render.internal.graphics;

import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.geometry.Dimension;
import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gmf.runtime.draw2d.ui.internal.graphics.MapModeGraphics;
import org.eclipse.gmf.runtime.draw2d.ui.internal.mapmode.DiagramMapModeUtil;
import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;
import org.eclipse.gmf.runtime.draw2d.ui.render.RenderedImage;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.DrawableRenderedImage;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.RenderHelper;
import org.eclipse.gmf.runtime.draw2d.ui.render.internal.RenderingListener;

/**
 * Overridden to implement DrawableRenderedImage interface
 * 
 * @@author sshaw
 */
public class RenderedMapModeGraphics
	extends MapModeGraphics
	implements DrawableRenderedImage {

	boolean allowDelayRender = false;
	Dimension maximumRenderSize = null;

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.render.internal.DrawableRenderedImage#allowDelayRender()
	 */
	public boolean shouldAllowDelayRender() {
		return allowDelayRender;
	}

	/**
	 * Constructor
	 * 
	 * @@param g
	 *            <code>Graphics</code> element to delegate render to
	 * @@param mm
	 *            <code>IMapMode</code> to retrieve the scale factor from.
	 */
	public RenderedMapModeGraphics(Graphics g, IMapMode mm) {
		this(g, mm, false, null);
	}

	/**
	 * Constructor
	 * 
	 * @@param g
	 *            <code>Graphics</code> element to delegate render to
	 * @@param mm
	 *            <code>IMapMode</code> to retrieve the scale factor from.
	 * @@param allowDelayRender
	 */
	public RenderedMapModeGraphics(Graphics g, IMapMode mm,
			boolean allowDelayRender, Dimension maximumRenderSize) {
		super(g, mm);
		this.allowDelayRender = allowDelayRender;
		this.maximumRenderSize = maximumRenderSize;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.render.internal.DrawableRenderedImage#drawRenderedImage(org.eclipse.gmf.runtime.draw2d.ui.render.RenderedImage,
	 *      org.eclipse.draw2d.geometry.Rectangle,
	 *      org.eclipse.gmf.runtime.draw2d.ui.render.RenderingListener)
	 */
	public RenderedImage drawRenderedImage(RenderedImage srcImage,
			Rectangle rect, RenderingListener listener) {
		return RenderHelper.getInstance(
			DiagramMapModeUtil.getScale(getMapMode()), true, shouldAllowDelayRender(), getMaximumRenderSize()).drawRenderedImage(getGraphics(),
			srcImage, rect, listener);
	}
	
	/* (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.render.internal.DrawableRenderedImage#getMaximumRenderSize()
	 */
	public Dimension getMaximumRenderSize() {
		// TODO Auto-generated method stub
		return maximumRenderSize;
	}
}
@


1.6
log
@bugzilla 111436 gmf-head sshaw 051128 Improve performance of SVG transcoder
@
text
@a11 1

d15 1
a16 2
import org.eclipse.swt.graphics.Image;

d18 1
a19 1
import org.eclipse.gmf.runtime.draw2d.ui.render.RenderInfo;
d22 2
a23 1

d27 1
a27 1
 *
d31 14
a44 1
	extends MapModeGraphics implements DrawableRenderedImage {
d48 5
a52 2
	 * @@param g <code>Graphics</code> element to delegate render to
	 * @@param mm <code>IMapMode</code> to retrieve the scale factor from.
d55 14
d70 16
d88 2
a89 3
	/* 
	 * (non-Javadoc)
	 * @@see org.eclipse.gmf.runtime.draw2d.ui.render.internal.DrawableRenderedImage#drawRenderedImage(org.eclipse.gmf.runtime.draw2d.ui.render.RenderedImage, int, int, int, int)
d91 3
a93 19
	public RenderedImage drawRenderedImage(RenderedImage srcImage, int x, int y, int width, int height) {
		if (getGraphics() instanceof DrawableRenderedImage) {
			Rectangle r = zoomRect(x, y, width, height);
			return ((DrawableRenderedImage)getGraphics()).drawRenderedImage(srcImage, r.x, r.y, r.width, r.height);
		}
		else {
			Rectangle r = zoomRect(x, y, width, height);
			RenderInfo info = srcImage.getRenderInfo();
			info.setValues(r.width, r.height, 
							info.getFillColor(), info.getOutlineColor(), 
							info.shouldMaintainAspectRatio(), info.shouldAntiAlias());
			
			RenderedImage img = srcImage.getNewRenderedImage(info);
			
			Image swtImg = img.getSWTImage();
			if (swtImg!=null)
				getGraphics().drawImage(swtImg, r.x, r.y + r.height - swtImg.getBounds().height);
			return img;
		}
@


1.5
log
@bugzilla 115644 : gmf-head mmostafa 051109 : Null pointer exception while trying to open a diagram using Sun VM
@
text
@d47 1
a47 1
	public void drawRenderedImage(RenderedImage srcImage, int x, int y, int width, int height) {
d50 1
a50 1
			((DrawableRenderedImage)getGraphics()).drawRenderedImage(srcImage, r.x, r.y, r.width, r.height);
d64 1
@


1.4
log
@bugzilla 112788 gmf-head sshaw 051029 API: Encapsulate MapMode / HiMetric coordinate system from clients

First phase delivery...
@
text
@d62 2
a63 1
			getGraphics().drawImage(swtImg, r.x, r.y + r.height - swtImg.getBounds().height);
@


1.3
log
@bugzilla 110242 gmf-head sshaw 051005 Inconsistencies in MapModeGraphics and IMapMode
@
text
@d20 1
d37 1
d39 2
a40 2
	public RenderedMapModeGraphics(Graphics g) {
		super(g);
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d47 1
a47 1
			Rectangle r = mapRect(x, y, width, height);
d51 1
a51 1
			Rectangle r = mapRect(x, y, width, height);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 7
/****************************************************************************
  Licensed Materials - Property of IBM
  (C) Copyright IBM Corp. 2005. All Rights Reserved.
 
  US Government Users Restricted Rights - Use, duplication or disclosure
  restricted by GSA ADP Schedule Contract with IBM Corp.
*****************************************************************************/
@

