head	1.5;
access;
symbols
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.4
	I20060129-1145:1.4
	I20060127-0900:1.4
	I20060120-1530:1.4
	I20060113-1700:1.4
	M4_10:1.4
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051201-1800:1.4
	I20051124-2000:1.4
	M3_10:1.4
	I20051118-1245:1.4
	I20051111-1800:1.3
	I20051106-0900:1.3
	v20051030:1.3;
locks; strict;
comment	@# @;


1.5
date	2006.04.18.20.51.19;	author cmahoney;	state dead;
branches;
next	1.4;

1.4
date	2005.11.14.16.52.28;	author sshaw;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.18.18.33.41;	author sshaw;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.26.19;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.54;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bugzilla#109422 gmf_head cmahoney 060418 Remove deprecated API
@
text
@/******************************************************************************
 * Copyright (c) 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.parts;



/**
 * Backward compatibility
 * @@deprecated use org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditorMatchingStrategy
 */
public abstract class DiagramDocumentEditorMatchingStrategy
	extends  org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditorMatchingStrategy {
	// Backward compatibility	
}
@


1.4
log
@Bugzilla 108928 gmf_head 051114 tmacdoug - org.eclipse.gmf.runtime.diagram.ui.resources.editor API issues
@
text
@@


1.3
log
@bugzilla 112950 gmf-head sshaw 051018 NPE in DiagramDocumentMatchingStrategy#matches
@
text
@a13 12
import org.eclipse.ui.IEditorInput;
import org.eclipse.ui.IEditorMatchingStrategy;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.IEditorReference;
import org.eclipse.ui.PartInitException;

import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DocumentProviderRegistry;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocumentProvider;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.MEditingDomainElement;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DocumentProviderRegistry.IDocumentProviderSelector;
import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;
d17 2
a18 3
 * An abstract matching strategy for <code>DiagramDocumentEditor</code>
 * @@author mgoyal
 *
d21 2
a22 48
	implements IEditorMatchingStrategy {

	/* (non-Javadoc)
	 * @@see org.eclipse.ui.IEditorMatchingStrategy#matches(org.eclipse.ui.IEditorReference, org.eclipse.ui.IEditorInput)
	 */
	public boolean matches(IEditorReference editorRef, IEditorInput input) {
		IEditorInput existingEditorInput;
		IEditorPart editor = editorRef.getEditor(false);
		// If the editor is not instanceof DiagramDocumentEditor
		// then don't match it, This indicates that the client shouldn't
		// use this strategy for non-DiagramDocumentEditor.
		if(!(editor instanceof DiagramDocumentEditor)) {
			return false;
		}
		
		try {
			existingEditorInput = editorRef.getEditorInput();
		} catch (PartInitException e) {
			return false;
		}

		// If the ExistingEditorInput is same as the passed input, 
		// return true
		if(existingEditorInput.equals(input))
			return true;
		else if(!(input instanceof MEditingDomainElement)) {
			// If the input isn't an instanceof MEditingDomainElement,
			// only then do it.
			IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider)DocumentProviderRegistry.getDefault().getDocumentProvider(input, new IDocumentProviderSelector() {
				public boolean select(String documentType) {
					// Only checking of the interface name
					return documentType.equals(IDiagramDocument.class.getName());
				}
			});
			
			if (docProvider != null) {
				IEditorInput editorInput = docProvider.createInputWithEditingDomain(input, getDefaultDomain());
				return editorInput.equals(existingEditorInput);
			}
		}
		return false;
	}

	/**
	 * Gets the default editing domain for this matching strategy.
	 * @@return <code>MEditingDomain</code>
	 */
	public abstract MEditingDomain getDefaultDomain();
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d69 4
a72 2
			IEditorInput editorInput = docProvider.createInputWithEditingDomain(input, getDefaultDomain());
			return editorInput.equals(existingEditorInput);
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

