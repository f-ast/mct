head	1.2;
access;
symbols
	v20081020-0700:1.2
	v20080722-1827:1.2
	v20080716-1600:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.6
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080425-1959:1.2
	v20080222-1200:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.4
	R2_0:1.2
	R4_20:1.2
	RC3_20:1.2
	v20070601-1400:1.2
	v20070330-1300:1.2
	v20070208-1800:1.2
	v20070111-0800:1.2
	M4_20:1.2
	v20061214-0000:1.2
	M3_20:1.2
	v20061013-1330:1.2
	v20060919-0800:1.2
	M1_20:1.2
	v20060831-1500:1.2
	v20060817-1500:1.2
	v20060803-1200:1.2
	v20060721-1130:1.2
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060519-0800:1.2
	I20060505-1400:1.2
	I20060428-1300:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.2
	I20060317-1300:1.2
	I20060317-1200:1.2
	I20060316-1300:1.2
	I20060309-1300:1.2
	M5_10:1.2
	S20060303-1600:1.2
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.09.12.21.26.19;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.47;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@/******************************************************************************
 * Copyright (c) 2000, 2005  IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.resources.editor.document;


/**
 * Interface for parties interested in standardized element changes. These
 * changes are:
 * <ul>
 * <li> dirty state changes
 * <li> content replacements
 * <li> moves
 * <li> deletions
 * </ul>
 * The notifications sent to the element state listeners inform about those standardized,
 * abstract changes. The concrete change applied might differ from the one the listeners
 * are notified about, but should be interpreted as the one the listeners receive.
 * <p>
 * In order to provided backward compatibility for clients of <code>IElementStateListener</code>,
 * extension interfaces are used to provide a means of evolution. The following extension interface
 * exists:
 * </p>
 */
public interface IElementStateListener {

	/**
	 * Notifies that the dirty state of the given element has changed.
	 *
	 * @@param element the element
	 * @@param isDirty the new dirty state
	 */
	void elementDirtyStateChanged(Object element, boolean isDirty);

	/**
	 * Notifies that the content of the given element is about to be replaced.
	 *
	 * @@param element the element
	 */
	void elementContentAboutToBeReplaced(Object element);

	/**
	 * Notifies that the content of the given element has been replaced.
	 *
	 * @@param element the element
	 */
	void elementContentReplaced(Object element);

	/**
	 * Notifies that the given element has been deleted.
	 *
	 * @@param element the element
	 */
	void elementDeleted(Object element);

	/**
	 * Notifies that the element has moved. If <code>movedElement</code>
	 * is <code>null</code> it is similar to <code>elementDeleted(originalElement)</code>.
	 *
	 * @@param originalElement the element before the move
	 * @@param movedElement the element after the move
	 */
	void elementMoved(Object originalElement, Object movedElement);

	/**
	 * Notifies that the state validation of the given element has changed.
	 *
	 * @@param element the element
	 * @@param isStateValidated the flag indicating whether state validation is done
	 */
	void elementStateValidationChanged(Object element, boolean isStateValidated);

	/**
	 * Notifies that the given element is currently being changed. This method may
	 * be sent from a non-ui thread.
	 *
	 * @@param element the element
	 */
	void elementStateChanging(Object element);

	/**
	 * Notifies that changing the given element has failed.
	 *
	 * @@param element the element
	 */
	void elementStateChangeFailed(Object element);
}
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 2
a2 2
/*******************************************************************************
 * Copyright (c) 2000, 2005 IBM Corporation and others.
d9 3
a11 2
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
@

