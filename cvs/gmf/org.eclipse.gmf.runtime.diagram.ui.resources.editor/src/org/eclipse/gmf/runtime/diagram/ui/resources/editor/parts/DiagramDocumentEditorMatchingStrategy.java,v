head	1.6;
access;
symbols
	v20081020-0700:1.6
	v20080722-1827:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.4
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080425-1959:1.6
	v20080222-1200:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	RC3_20:1.6
	v20070601-1400:1.6
	v20070330-1300:1.6
	v20070208-1800:1.6
	v20070111-0800:1.4.2.5
	M4_20:1.5
	v20061214-0000:1.5
	M3_20:1.5
	v20061013-1330:1.5
	v20060919-0800:1.4.2.4
	M1_20:1.4
	v20060831-1500:1.4
	v20060817-1500:1.4
	v20060803-1200:1.4
	v20060721-1130:1.4
	v20060713-1700:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	v20060627-1200:1.4
	v20060616-1200:1.4
	v20060531-1730:1.4
	v20060519-0800:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.2
	I20060216-1945:1.2
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	I20051217-0925:1.2
	I20051201-1800:1.2
	I20051124-2000:1.2
	M3_10:1.1
	I20051118-1245:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.01.09.21.23.50;	author ahunter;	state Exp;
branches;
next	1.5;
commitid	1df45a407e64567;

1.5
date	2006.10.03.15.04.48;	author ahunter;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.10.20.33.44;	author ldamus;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2006.02.28.02.31.07;	author cmahoney;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.24.18.55.32;	author cmahoney;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.14.16.52.28;	author sshaw;	state Exp;
branches;
next	;

1.4.2.1
date	2006.09.08.15.08.02;	author cmahoney;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2006.09.08.17.37.37;	author cmahoney;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2006.09.08.20.01.15;	author cmahoney;	state Exp;
branches;
next	1.4.2.4;

1.4.2.4
date	2006.09.13.16.43.31;	author ahunter;	state Exp;
branches;
next	1.4.2.5;

1.4.2.5
date	2007.01.09.21.22.05;	author ahunter;	state Exp;
branches;
next	;
commitid	7e6245a4077c4567;


desc
@@


1.6
log
@[163346] gmf_head ahunter 070109 NPE in DiagramDocumentEditorMatchingStrategy
@
text
@/******************************************************************************
 * Copyright (c) 2005, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts;

import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DocumentProviderRegistry;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocumentProvider;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.MEditingDomainElement;
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DocumentProviderRegistry.IDocumentProviderSelector;
import org.eclipse.ui.IEditorInput;
import org.eclipse.ui.IEditorMatchingStrategy;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.IEditorReference;
import org.eclipse.ui.PartInitException;

/**
 * A matching strategy for <code>DiagramDocumentEditor</code>
 * 
 * @@author mgoyal
 * 
 */
public class DiagramDocumentEditorMatchingStrategy
	implements IEditorMatchingStrategy {

	/*
	 * (non-Javadoc)
	 * 
	 * @@see org.eclipse.ui.IEditorMatchingStrategy#matches(org.eclipse.ui.IEditorReference,
	 *      org.eclipse.ui.IEditorInput)
	 */
	public boolean matches(IEditorReference editorRef, IEditorInput input) {
        IEditorInput existingEditorInput;
        IEditorPart editor = editorRef.getEditor(false);

        try {
            existingEditorInput = editorRef.getEditorInput();
        } catch (PartInitException e) {
            return false;
        }

        // If the ExistingEditorInput is same as the passed input,
        // return true
        if (existingEditorInput.equals(input))
            return true;
        else if (!(input instanceof MEditingDomainElement) && (editor instanceof DiagramDocumentEditor)) {
            // If the input isn't an instanceof MEditingDomainElement, and the editor is instanceof DiagramDocumentEditor
            // then don't match it, This indicates that the client shouldn't use this strategy for non-DiagramDocumentEditor.
            IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider) DocumentProviderRegistry
            .getDefault().getDocumentProvider(input,
                new IDocumentProviderSelector() {

                public boolean select(String documentType) {
                    // Only checking of the interface name
                    return documentType.equals(IDiagramDocument.class
                        .getName());
                }
            });

            if (docProvider != null) {
                IEditorInput editorInput = docProvider
                .createInputWithEditingDomain(input,
                    ((DiagramDocumentEditor) editor).getEditingDomain());
                return existingEditorInput.equals(editorInput);
            }
        }
        return false;
	}
}
@


1.5
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
d72 1
a72 1
                return editorInput.equals(existingEditorInput);
@


1.4
log
@[135584] gmf_head ldamus 060410 Classes and methods required by clients should be made public
@
text
@d2 1
a2 1
 * Copyright (c) 2005 IBM Corporation and others.
d41 35
a75 41
		IEditorInput existingEditorInput;
		IEditorPart editor = editorRef.getEditor(false);
		// If the editor is not instanceof DiagramDocumentEditor
		// then don't match it, This indicates that the client shouldn't
		// use this strategy for non-DiagramDocumentEditor.
		if (!(editor instanceof DiagramDocumentEditor)) {
			return false;
		}

		try {
			existingEditorInput = editorRef.getEditorInput();
		} catch (PartInitException e) {
			return false;
		}

		// If the ExistingEditorInput is same as the passed input,
		// return true
		if (existingEditorInput.equals(input))
			return true;
		else if (!(input instanceof MEditingDomainElement)) {
			// If the input isn't an instanceof MEditingDomainElement,
			// only then do it.
			IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider) DocumentProviderRegistry
				.getDefault().getDocumentProvider(input,
					new IDocumentProviderSelector() {

						public boolean select(String documentType) {
							// Only checking of the interface name
							return documentType.equals(IDiagramDocument.class
								.getName());
						}
					});

			if (docProvider != null) {
				IEditorInput editorInput = docProvider
					.createInputWithEditingDomain(input,
						((DiagramDocumentEditor) editor).getEditingDomain());
				return editorInput.equals(existingEditorInput);
			}
		}
		return false;
a76 1

@


1.4.2.1
log
@Bugzilla#155571 gmf_R1_0_maintenance cmahoney 060908 existing Logic Diagram editor Reference is not used
Contributed by: David Cummings <dcummin@@ca.ibm.com>
@
text
@a42 1
			
d46 3
a48 6
		if (editor != null) {
    		if (!(editor instanceof DiagramDocumentEditor)) {
    			return false;
    		}
        }
		
@


1.4.2.2
log
@Bugzilla#155571 gmf_R1_0_maintenance cmahoney 060908 Reverting to previous version after found issue with this fix
@
text
@d43 1
d47 6
a52 3
		if (!(editor instanceof DiagramDocumentEditor)) {
			return false;
		}
@


1.4.2.3
log
@Bugzilla#155571 gmf_R1_0_maintenance cmahoney 060908 existing Logic Diagram editor Reference is not used
Contributed by: David Cummings <dcummin@@ca.ibm.com>
@
text
@d41 8
a48 2
        IEditorInput existingEditorInput;
        IEditorPart editor = editorRef.getEditor(false);
d50 5
a54 5
        try {
            existingEditorInput = editorRef.getEditorInput();
        } catch (PartInitException e) {
            return false;
        }
d56 10
a65 10
        // If the ExistingEditorInput is same as the passed input,
        // return true
        if (existingEditorInput.equals(input))
            return true;
        else if (!(input instanceof MEditingDomainElement) && (editor instanceof DiagramDocumentEditor)) {
            // If the input isn't an instanceof MEditingDomainElement, and the editor is instanceof DiagramDocumentEditor
            // then don't match it, This indicates that the client shouldn't use this strategy for non-DiagramDocumentEditor.
            IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider) DocumentProviderRegistry
            .getDefault().getDocumentProvider(input,
                new IDocumentProviderSelector() {
d67 6
a72 6
                public boolean select(String documentType) {
                    // Only checking of the interface name
                    return documentType.equals(IDiagramDocument.class
                        .getName());
                }
            });
d74 8
a81 8
            if (docProvider != null) {
                IEditorInput editorInput = docProvider
                .createInputWithEditingDomain(input,
                    ((DiagramDocumentEditor) editor).getEditingDomain());
                return editorInput.equals(existingEditorInput);
            }
        }
        return false;
d83 1
@


1.4.2.4
log
@[153901] gmf_R1_0_maintenance tmacdoug 060913 Sweep copyright files for anything changed in 2006
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 IBM Corporation and others.
@


1.4.2.5
log
@[163346] gmf_R1_0_maintenance ahunter 070109 NPE in DiagramDocumentEditorMatchingStrategy
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2007 IBM Corporation and others.
d72 1
a72 1
                return existingEditorInput.equals(editorInput);
@


1.3
log
@Bugzilla#113850 gmf_head cmahoney 060227 Diagram plug-in adoption of EMF transaction API enhancements
@
text
@a18 1
import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.parts.DiagramDocumentEditor;
@


1.2
log
@Bugzilla 117132 gmf_head tmacdoug 051124 Can open multiple instances of Geoshapes editor
@
text
@a13 6
import org.eclipse.ui.IEditorInput;
import org.eclipse.ui.IEditorMatchingStrategy;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.IEditorReference;
import org.eclipse.ui.PartInitException;

d20 5
a24 2
import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;

d28 1
d30 1
a30 1
 *
d35 5
a39 2
	/* (non-Javadoc)
	 * @@see org.eclipse.ui.IEditorMatchingStrategy#matches(org.eclipse.ui.IEditorReference, org.eclipse.ui.IEditorInput)
d47 1
a47 1
		if(!(editor instanceof DiagramDocumentEditor)) {
d50 1
a50 1
		
d57 1
a57 1
		// If the ExistingEditorInput is same as the passed input, 
d59 1
a59 1
		if(existingEditorInput.equals(input))
d61 1
a61 1
		else if(!(input instanceof MEditingDomainElement)) {
d64 11
a74 7
			IDiagramDocumentProvider docProvider = (IDiagramDocumentProvider)DocumentProviderRegistry.getDefault().getDocumentProvider(input, new IDocumentProviderSelector() {
				public boolean select(String documentType) {
					// Only checking of the interface name
					return documentType.equals(IDiagramDocument.class.getName());
				}
			});
			
d76 3
a78 1
				IEditorInput editorInput = docProvider.createInputWithEditingDomain(input, getDefaultDomain());
a84 7
	/**
	 * Gets the default editing domain for this matching strategy.
	 * @@return <code>MEditingDomain</code>
	 */
	public MEditingDomain getDefaultDomain() {
		return MEditingDomain.INSTANCE;
	}
@


1.1
log
@Bugzilla 108928 gmf_head 051114 tmacdoug - org.eclipse.gmf.runtime.diagram.ui.resources.editor API issues
@
text
@d30 1
a30 1
 * An abstract matching strategy for <code>DiagramDocumentEditor</code>
d34 1
a34 1
public abstract class DiagramDocumentEditorMatchingStrategy
d82 3
a84 1
	public abstract MEditingDomain getDefaultDomain();
@

