head	1.5;
access;
symbols
	v20080924-1925:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080417-1610:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071124-0000:1.5
	v20071108-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070608-1300:1.5
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070420-1000:1.5
	v20070413-1300:1.4
	v20070405-2000:1.4
	v20070330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070301-1200:1.3
	v20070228-2000:1.3
	v20070208-1800:1.3
	M4_20:1.3
	v20061214-0000:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.04.18.12.29.18;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	779946260f1e4567;

1.4
date	2007.03.14.12.59.33;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	114b45f7f1b34567;

1.3
date	2006.09.21.15.51.18;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.21.12.32.08;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.19.12.19.40;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.5
log
@overriding method to pass constant value is not a good approach
@
text
@/*
 * Copyright (c) 2006, 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.wizards.pages.simple;

import java.util.List;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.gmf.internal.common.ui.ExtensibleModelSelectionPage;
import org.eclipse.gmf.internal.common.ui.ResourceLocationProvider;

/**
 * @@author dstadnik
 */
public class DomainModelSelectionPage extends ExtensibleModelSelectionPage implements DomainModelSource {

	private static final String DEE = "diagramElement"; //$NON-NLS-1$

	private EPackage contents;

	public DomainModelSelectionPage(String pageId, ResourceLocationProvider rloc, ResourceSet resourceSet) {
		super(pageId, rloc, resourceSet, "ecore"); //$NON-NLS-1$
	}

	protected void addExtensions() {
		addExtension(DEE, new DiagramElementSelectorExtension());
	}

	@@Override
	protected void resourceChanged() {
		super.resourceChanged();
		contents = null;
		if (getResource() != null) {
			List<EObject> rc = getResource().getContents();
			if (rc.size() >= 1 && rc.get(0) instanceof EPackage) {
				contents = (EPackage) rc.get(0);
			}
		}
	}

	public EPackage getContents() {
		return contents;
	}

	public EClass getDiagramElement() {
		return (EClass) ((DiagramElementSelectorExtension) getExtension(DEE)).getModelElement();
	}

	public boolean isDisabled(EObject domainElement) {
		throw new UnsupportedOperationException();
	}
}
@


1.4
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Eclipse.org
d33 1
a33 5
		super(pageId, rloc, resourceSet);
	}

	protected String getModelFileExtension() {
		return "ecore"; //$NON-NLS-1$
@


1.3
log
@allow to use shared resultset
@
text
@d49 1
a49 1
			List rc = getResource().getContents();
@


1.2
log
@set page to require model to be selected
@
text
@d19 1
d32 2
a33 2
	public DomainModelSelectionPage(String pageId, ResourceLocationProvider rloc) {
		super(pageId, rloc);
@


1.1
log
@move pages and model of simple graph and tool wizards in dedicated package; provide i18n
@
text
@a18 1
import org.eclipse.emf.ecore.resource.Resource;
d43 3
a45 2
	protected void setResource(Resource resource) {
		super.setResource(resource);
d47 2
a48 2
		if (resource != null) {
			List rc = resource.getContents();
@

