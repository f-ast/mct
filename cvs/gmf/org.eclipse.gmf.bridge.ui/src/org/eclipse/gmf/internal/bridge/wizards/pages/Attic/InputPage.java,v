head	1.8;
access;
symbols
	v20080924-1925:1.8
	M3_20:1.7
	v20061117-0800:1.7
	v20061013-1330:1.7
	v20060925-1700:1.6
	v20060919-0800:1.6
	M1_20:1.6
	v20060904-1500:1.6
	v20060713-1700:1.6
	R1_0_maintenance:1.6.0.2
	R1_0:1.6
	v20060627-1200:1.6
	v20060626-1420:1.6
	v20060620-0400:1.6
	v20060616-1200:1.6
	v20060609-1400:1.6
	v20060531-1730:1.6
	v20060526-1200:1.6
	v20060519-0800:1.6
	v20060512-1000:1.3
	I20060512-1000:1.3
	I20060428-1300:1.3
	I20060424-0500:1.3
	I20060424-0300:1.3
	M6_10:1.3
	I20060407-1200:1.3
	I20060331-1000:1.3
	I20060324-0300:1.3
	I20060317-1300:1.3
	I20060317-1200:1.3
	I20060316-1300:1.3
	I20060309-1300:1.3
	M5_10:1.3
	S20060303-1600:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2006.11.24.16.19.41;	author dstadnik;	state dead;
branches;
next	1.7;
commitid	bf145671b9d4567;

1.7
date	2006.09.22.18.32.21;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.16.14.59.29;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.16.13.45.40;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.16.11.56.04;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.03.16.50.25;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.03.15.14.02;	author rgronback;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.28.19.07.41;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[142460] Inconsistent buttons in GMFMap creation wizard
@
text
@/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.wizards.pages;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.gmf.gmfgraph.Canvas;
import org.eclipse.gmf.gmfgraph.util.Assistant;
import org.eclipse.gmf.internal.bridge.wizards.pages.ModelURISelector.Loader;
import org.eclipse.gmf.tooldef.ToolRegistry;
import org.eclipse.jface.wizard.WizardPage;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;

/**
 * @@author artem
 */
public class InputPage extends WizardPage implements Loader {

	private ModelURISelector ecoreSelector;
	private ModelURISelector gmfgraphSelector;
	private ModelURISelector tooldefSelector;
	private final OldWizardInput holder;

	public InputPage(OldWizardInput input) {
		super("inputPage"); //$NON-NLS-1$
		holder = input;
		setTitle(Messages.inputPageTitle);
		setDescription(Messages.inputPageDesc);
		setPageComplete(false);
	}

	public void createControl(Composite parent) {
		ecoreSelector = new ModelURISelector(Messages.ecoreSelector, WizardInput.ECORE_FILE_EXT, this);
		gmfgraphSelector = new ModelURISelector(Messages.graphdefSelector, WizardInput.GRAPHDEF_FILE_EXT, this);
		tooldefSelector = new ModelURISelector(Messages.tooldefSelector, WizardInput.TOOLDEF_FILE_EXT, this);
		Composite p = new Composite(parent, SWT.NONE);
		GridLayout l = new GridLayout(1, false);
		l.verticalSpacing = 30;
		p.setLayout(l);
		Control c = ecoreSelector.createControl(p);
		c.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
		// TODO define additional get from extpoint
		ecoreSelector.addBrowseMenuSeparator();
		ecoreSelector.addBrowseMenuAction(Messages.useECore, "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"); //$NON-NLS-1$
		initializeEcoreFileURI();

		c = gmfgraphSelector.createControl(p);
		c.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
		gmfgraphSelector.setURIText(Assistant.getBasicGraphDef());
		gmfgraphSelector.addBrowseMenuSeparator();
		gmfgraphSelector.addBrowseMenuAction(Messages.useBasic, Assistant.getBasicGraphDef().toString());
		initializeGraphFileURI();

		c = tooldefSelector.createControl(p);
		c.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
		tooldefSelector.addBrowseMenuSeparator();
		tooldefSelector.addBrowseMenuAction(Messages.createBlank, new NewBlankToolDef());
		initializeToolFileURI();
		setControl(p);
	}

	private void initializeEcoreFileURI() {
		if (holder.getInitialECoreFile() != null) {
			ecoreSelector.setURIText(holder.getInitialECoreFile());
		}
	}
	
	private void initializeGraphFileURI() {
		if (holder.getInitialGraphFile() != null) {
			gmfgraphSelector.setURIText(holder.getInitialGraphFile());
		}
	}
	
	private void initializeToolFileURI() {
		if (holder.getInitialToolFile() != null) {
			tooldefSelector.setURIText(holder.getInitialToolFile());
		}
	}

	public void run(ModelURISelector selector, String uriText) {
		URI uri = URI.createURI(uriText);
		Resource r = holder.getResourceSet().getResource(uri, true);
		if (selector == ecoreSelector) {
			if (r != null && r.getContents().get(0) instanceof EPackage) {
				holder.setDomainModel((EPackage) r.getContents().get(0));
			}
		} else if (selector == gmfgraphSelector) {
			if (r != null && r.getContents().get(0) instanceof Canvas) {
				holder.setGraphDef((Canvas) r.getContents().get(0));
			}
		} else {
			if (r != null && r.getContents().get(0) instanceof ToolRegistry) {
				holder.setToolDef((ToolRegistry) r.getContents().get(0));
			}
		}
		updatePageComplete();
	}

	private void updatePageComplete() {
		IStatus s = holder.isReady2Go();
		if (s.isOK()) {
			setPageComplete(true);
			setMessage(null);
		} else {
			setPageComplete(false);
			setMessage(s.getMessage(), s.getCode());
		}
	}

	private class NewBlankToolDef implements Listener {
		public void handleEvent(Event event) {
			tooldefSelector.setURIText(holder.createBlankToolDef());
			tooldefSelector.disableLoad();
			updatePageComplete();
		}
	}
}
@


1.7
log
@#142460 Inconsistent buttons in GMFMap creation wizard
@
text
@@


1.6
log
@respect selection and set filenames according to existing files
@
text
@d39 1
a39 1
	private final WizardInput holder;
d41 1
a41 1
	public InputPage(WizardInput input) {
@


1.5
log
@#136925 show reasons why Next is greyed out
@
text
@d39 1
a39 1
	private final WizardInput holder; 
d50 3
a52 3
		ecoreSelector = new ModelURISelector(Messages.ecoreSelector, "ecore", this); //$NON-NLS-1$
		gmfgraphSelector = new ModelURISelector(Messages.graphdefSelector, "gmfgraph", this); //$NON-NLS-1$
		tooldefSelector = new ModelURISelector(Messages.tooldefSelector, "gmftool", this); //$NON-NLS-1$
@


1.4
log
@externalize strings, #136929 hint what's expected as diagram root
@
text
@d14 1
d113 12
a124 1
		setPageComplete(holder.isReady2Go());
d131 1
a131 1
			setPageComplete(holder.isReady2Go());
@


1.3
log
@option to create tooling definition as part of mapping process
@
text
@d73 1
a73 1
		tooldefSelector.addBrowseMenuAction("Create blank", new NewBlankToolDef());
@


1.2
log
@Changes to accomodate forthcoming tutorial cheatsheet.
@
text
@a28 1
import org.eclipse.swt.widgets.MenuItem;
d34 1
d39 1
d57 1
a57 5
		final Listener lll = new Listener() {
			public void handleEvent(Event event) {
				ecoreSelector.setURIText((String) event.widget.getData());
			}
		};
d59 2
a60 2
		new MenuItem(ecoreSelector.getBrowseMenu(), SWT.SEPARATOR);
		MenuItem ii = new MenuItem(ecoreSelector.getBrowseMenu(), SWT.PUSH);
a61 3
		ii.setText(Messages.useECore);
		ii.setData("platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"); //$NON-NLS-1$
		ii.addListener(SWT.Selection, lll);
a62 1
		c.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
d66 2
a67 8
		new MenuItem(gmfgraphSelector.getBrowseMenu(), SWT.SEPARATOR);
		MenuItem mi = new MenuItem(gmfgraphSelector.getBrowseMenu(), SWT.PUSH);
		mi.setText(Messages.useBasic);
		mi.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event event) {
				gmfgraphSelector.setURIText(Assistant.getBasicGraphDef());
			}
		});
d69 1
d71 3
a74 1
		c.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
d115 7
a121 1

@


1.1
log
@Introduced separate plugin for Tooling UI, moved mapping wizard of #114186 to this plugin.
Wizard got some NLS, respect selection, open-created-model-in-editor improvements as well as aligned with recent gmfmap changes.
Plus, some refactorings to address user-prioritized strategies to select nodes/links doubled number of classes we had.
@
text
@a37 1

d64 1
d81 1
d83 1
d88 18
d124 2
@

