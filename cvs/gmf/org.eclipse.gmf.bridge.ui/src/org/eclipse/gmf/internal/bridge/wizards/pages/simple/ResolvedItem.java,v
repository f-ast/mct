head	1.2;
access;
symbols
	v20080924-1925:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.4
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080417-1610:1.2
	v20080322-0000:1.2
	v20080222-1200:1.2
	v20080215-1500:1.2
	v20080207-0207:1.2
	v20071124-0000:1.2
	v20071108-0000:1.2
	v20070903-0000:1.2
	v20070809-0000:1.2
	R2_0_maintenance:1.2.0.2
	R2_0:1.2
	R4_20:1.2
	v20070621-0000:1.2
	RC3_20:1.2
	v20070608-1300:1.2
	v20070605-1400:1.2
	v20070601-1400:1.2
	v20070520-1200:1.2
	v20070518-1300:1.2
	v20070420-1000:1.2
	v20070413-1300:1.1
	v20070405-2000:1.1
	v20070330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070301-1200:1.1
	v20070228-2000:1.1
	v20070208-1800:1.1
	M4_20:1.1
	v20061214-0000:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.04.17.08.45.29;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	6ec5462489254567;

1.1
date	2006.09.19.12.19.40;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.2
log
@use enum for resolution
@
text
@/*
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.wizards.pages.simple;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.gmf.internal.bridge.resolver.TypePattern;

/**
 * @@author dstadnik
 */
public class ResolvedItem {

	public enum Resolution {
		NODE,
		LINK,
		LABEL
	}

	public static final Resolution[] NO_RESOLUTIONS = { null };

	public static final Resolution[] ALL_RESOLUTIONS = { null, Resolution.NODE, Resolution.LINK, Resolution.LABEL };

	public static final Resolution[] NODE_LINK_RESOLUTIONS = { null, Resolution.NODE, Resolution.LINK };

	public static final Resolution[] LINK_RESOLUTIONS = { null, Resolution.LINK };

	public static final Resolution[] LABEL_RESOLUTIONS = { null, Resolution.LABEL };

	private Resolution resolution;

	private Object domainRef;

	private TypePattern pattern;

	private Resolution[] possibleResolutions;

	private boolean disabled;

	private ResolvedItem parent;

	private List<ResolvedItem> children = new ArrayList<ResolvedItem>();

	public ResolvedItem(Resolution resolution, Object domainRef, TypePattern pattern, Resolution[] possibleResolutions, boolean disabled) {
		this.resolution = resolution;
		this.domainRef = domainRef;
		this.pattern = pattern;
		this.possibleResolutions = possibleResolutions;
		this.disabled = disabled;
	}

	public boolean isDisabled() {
		return disabled;
	}

	public Resolution[] getPossibleResolutions() {
		return possibleResolutions;
	}

	public boolean isPossibleResolution(Resolution possibleResolution) {
		for (int i = 0; i < possibleResolutions.length; i++) {
			if (possibleResolutions[i] == possibleResolution) {
				return true;
			}
		}
		return false;
	}

	public Resolution getResolution() {
		return resolution;
	}

	public void setResolution(Resolution resolution) {
		this.resolution = resolution;
	}

	public Object getDomainRef() {
		return domainRef;
	}

	public TypePattern getPattern() {
		return pattern;
	}

	public ResolvedItem getParent() {
		return parent;
	}

	public void addChild(ResolvedItem child) {
		children.add(child);
		child.parent = this;
	}

	public void removeChild(ResolvedItem child) {
		if (children.remove(child)) {
			child.parent = null;
		}
	}

	public List<ResolvedItem> getChildren() {
		return children;
	}
}
@


1.1
log
@move pages and model of simple graph and tool wizards in dedicated package; provide i18n
@
text
@d24 6
@

