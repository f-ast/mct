head	1.5;
access;
symbols
	v20080924-1925:1.5
	v20080722-1827:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.4
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080417-1610:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071124-0000:1.5
	v20071108-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070520-1200:1.4
	v20070518-1300:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-2000:1.2
	v20070330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070208-1800:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2007.06.21.14.03.14;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	1176467a85204567;

1.4
date	2007.04.12.08.44.46;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	5a1a461df17e4567;

1.3
date	2007.04.10.12.44.49;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	4a53461b86c14567;

1.2
date	2007.01.25.19.14.51;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	3c145b901ab4567;

1.1
date	2007.01.18.18.49.15;	author atikhomirov;	state Exp;
branches;
next	;
commitid	197b45afc1284567;


desc
@@


1.5
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2005, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.transform;

import org.eclipse.core.runtime.Platform;
import org.eclipse.jface.action.IAction;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.wizard.WizardDialog;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IObjectActionDelegate;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.PlatformUI;

/**
 * .gmfmap to .gmfgen
 * 
 * @@author artem
 */
public class TransformToGenModelAction implements IObjectActionDelegate {

	private static final int WIZARD_WIDTH_INCH = 6;
	private static final int WIZARD_HEIGHT_INCH = 6;

	private IWorkbenchPart myPart;

	private IStructuredSelection sselection;

	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
		myPart = targetPart;
	}

	public void selectionChanged(IAction action, ISelection selection) {
		final IStructuredSelection structuredSelection = ((IStructuredSelection) selection);
		sselection = structuredSelection;
	}

	public void run(IAction action) {
		final TransformToGenModelWizard wiz = new TransformToGenModelWizard();
		wiz.setWindowTitle(action.getText());
		wiz.init(PlatformUI.getWorkbench(), sselection);
		WizardDialog wd = new WizardDialog(getShell(), wiz);
		wd.create();
		Rectangle mb = getShell().getMonitor().getClientArea();
		Point dpi = getShell().getDisplay().getDPI();
		if (Platform.OS_MACOSX.equals(Platform.getOS())) {
			dpi = new Point(110, 110); // OSX DPI is always 72; 110 is a common value for modern LCD screens
		}
		int width = dpi.x * WIZARD_WIDTH_INCH;
		int height = dpi.y * WIZARD_HEIGHT_INCH;
		int x = mb.x + (mb.width - width) / 2;
		if (x < mb.x) {
			x = mb.x;
		}
		int y = mb.y + (mb.height - height) / 2;
		if (y < mb.y) {
			y = mb.y;
		}
		wd.getShell().setLocation(x, y);
		wd.getShell().setSize(width, height);
		wd.open();
	}

	private Shell getShell() {
		return myPart.getSite().getShell();
	}
}
@


1.4
log
@fix dpi on osx
@
text
@d2 1
a2 1
 * Copyright (c) 2005,2006 Borland Software Corporation
@


1.3
log
@[178524] Inadequate 'Create generator model' dialog bounds
@
text
@d14 1
d33 2
a34 2
	private static final int WIZARD_WIDTH_INCH = 10;
	private static final int WIZARD_HEIGHT_INCH = 8;
d57 3
@


1.2
log
@do not hardcode pixel values that differs from monitor to monitor
@
text
@d19 1
d32 2
a33 2
	private static final int WIZARD_WIDTH_INCH = 5;
	private static final int WIZARD_HEIGHT_INCH = 6;
d54 1
d56 12
a67 1
		wd.getShell().setSize(dpi.x * WIZARD_WIDTH_INCH, dpi.y * WIZARD_HEIGHT_INCH);
@


1.1
log
@[148836] afedorov - Provide "Create generator model..." wizard instead of existing dialog sequence
@
text
@d18 1
d31 2
a32 2
	private static final int WIZARD_WIDTH = 500;
	private static final int WIZARD_HEIGHT = 600;
d53 2
a54 1
		wd.getShell().setSize(WIZARD_WIDTH, WIZARD_HEIGHT);
@

