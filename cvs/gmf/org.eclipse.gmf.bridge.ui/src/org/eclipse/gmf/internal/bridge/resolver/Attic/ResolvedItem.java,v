head	1.6;
access;
symbols
	v20080924-1925:1.6
	v20060925-1700:1.1
	v20060919-0800:1.1
	M1_20:1.3
	v20060904-1500:1.3
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060526-1200:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2006.09.19.12.19.41;	author dstadnik;	state dead;
branches;
next	1.5;

1.5
date	2006.09.15.12.18.10;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.12.16.50.15;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.04.14.47.44;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.01.19.43.09;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.01.12.46.08;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.6
log
@move pages and model of simple graph and tool wizards in dedicated package; provide i18n
@
text
@/*
 * Copyright (c) 2006 Eclipse.org
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.resolver;

import java.util.ArrayList;
import java.util.List;

/**
 * @@author dstadnik
 */
public class ResolvedItem {

	public static final Resolution[] NO_RESOLUTIONS = { null };

	public static final Resolution[] ALL_RESOLUTIONS = { null, Resolution.NODE, Resolution.LINK, Resolution.LABEL };

	public static final Resolution[] NODE_LINK_RESOLUTIONS = { null, Resolution.NODE, Resolution.LINK };

	public static final Resolution[] LINK_RESOLUTIONS = { null, Resolution.LINK };

	public static final Resolution[] LABEL_RESOLUTIONS = { null, Resolution.LABEL };

	private Resolution resolution;

	private Object domainRef;

	private TypePattern pattern;

	private Resolution[] possibleResolutions;

	private boolean disabled;

	private ResolvedItem parent;

	private List<ResolvedItem> children = new ArrayList<ResolvedItem>();

	public ResolvedItem(Resolution resolution, Object domainRef, TypePattern pattern, Resolution[] possibleResolutions, boolean disabled) {
		this.resolution = resolution;
		this.domainRef = domainRef;
		this.pattern = pattern;
		this.possibleResolutions = possibleResolutions;
		this.disabled = disabled;
	}

	public boolean isDisabled() {
		return disabled;
	}

	public Resolution[] getPossibleResolutions() {
		return possibleResolutions;
	}

	public boolean isPossibleResolution(Resolution possibleResolution) {
		for (int i = 0; i < possibleResolutions.length; i++) {
			if (possibleResolutions[i] == possibleResolution) {
				return true;
			}
		}
		return false;
	}

	public Resolution getResolution() {
		return resolution;
	}

	public void setResolution(Resolution resolution) {
		this.resolution = resolution;
	}

	public Object getDomainRef() {
		return domainRef;
	}

	public TypePattern getPattern() {
		return pattern;
	}

	public ResolvedItem getParent() {
		return parent;
	}

	public void addChild(ResolvedItem child) {
		children.add(child);
		child.parent = this;
	}

	public void removeChild(ResolvedItem child) {
		if (children.remove(child)) {
			child.parent = null;
		}
	}

	public List<ResolvedItem> getChildren() {
		return children;
	}
}
@


1.5
log
@#126531 Wizards that infer tooling and graph definitions should be able to add results to the existing models
@
text
@@


1.4
log
@#148976 New GMFGraph/GMFTool Simple model Wizard: show references contained by recognized link nodes in model Definition page
@
text
@d40 2
d46 1
a46 1
	public ResolvedItem(Resolution resolution, Object domainRef, TypePattern pattern, Resolution[] possibleResolutions) {
d51 5
@


1.3
log
@use generics wherever possible
@
text
@d22 1
a22 1
	public static final Resolution[] DEFAULT_RESOLUTIONS = { null };
@


1.2
log
@use generics wherever possible
@
text
@d95 1
a95 1
	public List getChildren() {
@


1.1
log
@#129892 Move graphdef and tooldef wizards from codegen.ui to bridge.ui plugin
@
text
@d42 1
a42 1
	private List children = new ArrayList();
@

