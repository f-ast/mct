head	1.10;
access;
symbols
	v20080924-1925:1.10
	v20080722-1827:1.10
	v20080716-1642:1.10
	R2_1_maintenance:1.10.0.4
	Root_R2_1_maintenance:1.10
	R2_1_0:1.10
	v20080417-1610:1.10
	v20080322-0000:1.10
	v20080222-1200:1.10
	v20080215-1500:1.10
	v20080207-0207:1.10
	v20071124-0000:1.10
	v20071108-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070520-1200:1.9
	v20070518-1300:1.9
	v20070420-1000:1.9
	v20070413-1300:1.9
	v20070405-2000:1.9
	v20070330-1300:1.9
	v20070322-1100:1.9
	v20060316-0600:1.9
	v20070301-1200:1.9
	v20070228-2000:1.9
	v20070208-1800:1.9
	M4_20:1.9
	v20061214-0000:1.9
	M3_20:1.9
	v20061117-0800:1.9
	v20061013-1330:1.9
	v20060925-1700:1.9.2.1
	v20060919-0800:1.9.2.1
	M1_20:1.9
	v20060904-1500:1.9
	v20060713-1700:1.9
	R1_0_maintenance:1.9.0.2
	R1_0:1.9
	v20060627-1200:1.9
	v20060626-1420:1.9
	v20060620-0400:1.9
	v20060616-1200:1.9
	v20060609-1400:1.9
	v20060531-1730:1.7
	v20060526-1200:1.7
	v20060519-0800:1.7
	v20060512-1000:1.7
	I20060512-1000:1.7
	I20060428-1300:1.7
	I20060424-0500:1.6
	I20060424-0300:1.6
	M6_10:1.6
	I20060407-1200:1.6
	I20060331-1000:1.6
	I20060324-0300:1.6
	I20060317-1300:1.6
	I20060317-1200:1.6
	I20060316-1300:1.6
	I20060309-1300:1.6
	M5_10:1.6
	S20060303-1600:1.6;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2007.06.21.14.03.14;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	1176467a85204567;

1.9
date	2006.06.01.13.38.58;	author dstadnik;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2006.06.01.11.39.36;	author atikhomirov;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.25.11.19.08;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.03.15.14.01;	author rgronback;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.02.16.06.49;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.02.15.57.43;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.02.15.54.00;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.02.14.33.02;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.28.19.07.41;	author atikhomirov;	state Exp;
branches;
next	;

1.9.2.1
date	2006.09.13.23.07.19;	author rgronback;	state Exp;
branches;
next	;


desc
@@


1.10
log
@fix copyright years
@
text
@/*
 * Copyright (c) 2005, 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
package org.eclipse.gmf.internal.bridge.wizards;

import org.eclipse.emf.codegen.ecore.ui.EmptyProjectWizard;
import org.eclipse.gmf.internal.bridge.ui.Plugin;
import org.eclipse.gmf.internal.bridge.wizards.pages.ShowDashboardPage;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.PartInitException;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.dialogs.WizardNewProjectCreationPage;

/**
 * Quick way to introduce GMF Project wizard. XXX Get rid of EmptyProjectWizard
 * and ecore.ui dependency once you know what could be added here.
 * 
 * @@author artem
 */
public class NewGMFProjectWizard extends EmptyProjectWizard {

	public void init(IWorkbench workbench, IStructuredSelection selection) {
		super.init(workbench, selection);
		setWindowTitle(Plugin.getBundleString("newProjectWizard.name")); //$NON-NLS-1$
	}

	private static final String SD_PROPERTY = "show_dashboard"; //$NON-NLS-1$

	private boolean showDashboard;

	private ShowDashboardPage sdp;

	private String initialProjectName;

	public NewGMFProjectWizard() {
		super();
		showDashboard = Plugin.getDefault().getPreferenceStore().getBoolean(SD_PROPERTY);
	}

	public void addPages() {
		super.addPages();
		WizardNewProjectCreationPage page = (WizardNewProjectCreationPage) getPage("NewProjectCreationPage");  //$NON-NLS-1$
		if (page != null) {
			page.setInitialProjectName(initialProjectName);
			page.setDescription(Plugin.getBundleString("newProjectWizard.desc")); //$NON-NLS-1$
			page.setTitle(Plugin.getBundleString("newProjectWizard.name")); //$NON-NLS-1$
		}
		sdp = new ShowDashboardPage("Show Dashboard", showDashboard); //$NON-NLS-1$
		sdp.setTitle(Plugin.getBundleString("showDashboardPage.name")); //$NON-NLS-1$
		sdp.setDescription(Plugin.getBundleString("showDashboardPage.desc")); //$NON-NLS-1$
		addPage(sdp);
	}

	public void setShowDashboard(boolean showDashboard) {
		this.showDashboard = showDashboard;
	}

	public boolean performFinish() {
		showDashboard = sdp.isShowDashboard();
		Plugin.getDefault().getPreferenceStore().setValue(SD_PROPERTY, showDashboard);
		boolean created = super.performFinish();
		if (!created) {
			return false;
		}
		if (showDashboard) {
			getShell().getDisplay().asyncExec(new Runnable() {
				public void run() {
					openDashboardView();
				}
			});
		}
		return created;
	}

	protected void openDashboardView() {
		IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
		if (window != null && window.getActivePage() != null) {
			try {
				window.getActivePage().showView("org.eclipse.gmf.bridge.ui.dashboard.DashboardPart"); //$NON-NLS-1$
			} catch (PartInitException e) {
				Plugin.log(e);
			}
		}
	}

	public void setInitialProjectName(String initialProjectName) {
		this.initialProjectName = initialProjectName;
	}
}
@


1.9
log
@add nls markers
@
text
@d2 1
a2 1
 * Copyright (c) 2005 Borland Software Corporation
@


1.9.2.1
log
@[153901] Updated copyright date from 2005 to 2005, 2006 for those changed in CVS in 2006 (based on Tom/Anthony's script).
@
text
@d2 1
a2 1
 * Copyright (c) 2005, 2006 Borland Software Corporation
@


1.8
log
@EMF project creates 'model' folder now
@
text
@d34 1
a34 1
		setWindowTitle(Plugin.getBundleString("newProjectWizard.name"));
d55 2
a56 2
			page.setDescription(Plugin.getBundleString("newProjectWizard.desc"));
			page.setTitle(Plugin.getBundleString("newProjectWizard.name"));
d59 2
a60 2
		sdp.setTitle(Plugin.getBundleString("showDashboardPage.name"));
		sdp.setDescription(Plugin.getBundleString("showDashboardPage.desc"));
d89 1
a89 1
				window.getActivePage().showView("org.eclipse.gmf.bridge.ui.dashboard.DashboardPart");
@


1.7
log
@"models" folder gets created along with project.
Some string externalization.
@
text
@a13 5
import java.lang.reflect.InvocationTargetException;

import org.eclipse.core.resources.IFolder;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
a21 1
import org.eclipse.ui.actions.WorkspaceModifyOperation;
a74 6
		try {
			createModelsFolder();
		} catch (Exception ex) {
			Plugin.log(ex);
			// do not return false here - try to show dashboard anyway
		}
a84 15
	private void createModelsFolder() throws InvocationTargetException, InterruptedException {
		getContainer().run(false, false, new WorkspaceModifyOperation() {
			protected void execute(IProgressMonitor monitor) throws CoreException {
				try {
					IFolder f = project.getFolder("models");
					if (!f.exists()) {
						f.create(true, true, monitor);
					}
				} finally {
					monitor.done();
				}
			}
		});
	}

@


1.6
log
@Changes to accomodate forthcoming tutorial cheatsheet.
@
text
@d14 5
d27 1
d65 2
a66 2
		sdp.setTitle("Show Dashboard");
		sdp.setDescription("Show dashboard view for the created project");
d78 10
a87 1
		if (created && showDashboard) {
a88 1

d97 15
@


1.5
log
@set preference to store show dashboard option
@
text
@d17 2
d22 1
d25 2
a26 2
 * Quick way to introduce GMF Project wizard.
 * XXX Get rid of EmptyProjectWizard and ecore.ui dependency once you know what could be added here.
d32 5
d43 2
d46 1
d52 6
d93 4
@


1.4
log
@sync dashboard with new project
@
text
@d29 2
d35 4
d52 2
d55 1
a55 1
		if (created && sdp.isShowDashboard()) {
@


1.3
log
@add page to show dashboard
@
text
@d47 12
d60 1
a60 1
		if (created && sdp.isShowDashboard() && window != null && window.getActivePage() != null) {
a66 1
		return created;
@


1.2
log
@#114107 GMF Project wizard
@
text
@d15 5
d22 3
a24 2
 * Quick way to introduce GMF Project wizard. 
 * XXX Get rid of EmptyProjectWizard and ecore.ui dependency once you know what could be added here
a27 1
	//private JavaCapabilityConfigurationPage myFirstPage;
d29 1
d31 26
@


1.1
log
@Introduced separate plugin for Tooling UI, moved mapping wizard of #114186 to this plugin.
Wizard got some NLS, respect selection, open-created-model-in-editor improvements as well as aligned with recent gmfmap changes.
Plus, some refactorings to address user-prioritized strategies to select nodes/links doubled number of classes we had.
@
text
@d14 1
a14 3
import org.eclipse.jdt.ui.wizards.JavaCapabilityConfigurationPage;
import org.eclipse.jface.wizard.IWizardPage;
import org.eclipse.jface.wizard.Wizard;
d17 2
d21 2
a22 2
public class NewGMFProjectWizard extends Wizard {
	private JavaCapabilityConfigurationPage myFirstPage;
a23 13
	public NewGMFProjectWizard() {
	}

	public void addPage(IWizardPage page) {
		super.addPage(page);
		myFirstPage = new JavaCapabilityConfigurationPage();
		addPage(myFirstPage);
	}

	public boolean performFinish() {
		// TODO Auto-generated method stub
		return false;
	}
@

