package org.eclipse.gmf.runtime.emf.core;

import org.eclipse.core.commands.operations.IOperationHistory;

import org.eclipse.emf.ecore.resource.ResourceSet;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.emf.workspace.WorkspaceEditingDomainFactory;

import org.eclipse.gmf.runtime.emf.core.internal.resources.PathmapManager;

import org.eclipse.gmf.runtime.emf.core.util.CrossReferenceAdapter;

public class GMFEditingDomainFactory extends WorkspaceEditingDomainFactory {
    private static GMFEditingDomainFactory instance = new GMFEditingDomainFactory ();

    public static WorkspaceEditingDomainFactory getInstance () {
        return instance;
    }

    public TransactionalEditingDomain createEditingDomain () {
        TransactionalEditingDomain result = super.createEditingDomain ();
        configure (result);
        return result;
    }

    public TransactionalEditingDomain createEditingDomain (IOperationHistory history) {
        TransactionalEditingDomain result = super.createEditingDomain (history);
        configure (result);
        return result;
    }

    public TransactionalEditingDomain createEditingDomain (ResourceSet rset, IOperationHistory history) {
        TransactionalEditingDomain result = super.createEditingDomain (rset, history);
        configure (result);
        return result;
    }

    public TransactionalEditingDomain createEditingDomain (ResourceSet rset) {
        TransactionalEditingDomain result = super.createEditingDomain (rset);
        configure (result);
        return result;
    }

    protected void configure (TransactionalEditingDomain domain) {
        ResourceSet rset = domain.getResourceSet ();
        if (CrossReferenceAdapter.getExistingCrossReferenceAdapter (rset) == null) {
            rset.eAdapters ().add (new CrossReferenceAdapter ());
        }
        if (PathmapManager.getExistingPathmapManager (rset) == null) {
            rset.eAdapters ().add (new PathmapManager ());
        }
    }

}

