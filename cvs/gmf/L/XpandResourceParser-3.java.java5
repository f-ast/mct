package org.eclipse.gmf.internal.xpand.util;

import java.io.IOException;

import java.io.UnsupportedEncodingException;

import org.eclipse.core.resources.IFile;

import org.eclipse.core.runtime.CoreException;

import org.eclipse.gmf.internal.xpand.Activator;

import org.eclipse.gmf.internal.xpand.ast.Template;

import org.eclipse.gmf.internal.xpand.model.XpandResource;

import org.eclipse.gmf.internal.xpand.parser.XpandLexer;

import org.eclipse.gmf.internal.xpand.parser.XpandParser;

public class XpandResourceParser {

    public XpandResource parse (final IFile file) {
        Template tpl = null;
        XpandParser parser = null;
        XpandLexer scanner = null;
        char [] buffer;
        try {
            StreamConverter sc = new StreamConverter ();
            buffer = sc.toCharArray (file);
        } catch (final CoreException ex) {
            Activator.log (ex.getStatus ());
            return null;
        } catch (UnsupportedEncodingException ex) {
            Activator.logError (ex);
            return null;
        } catch (IOException ex) {
            Activator.logError (ex);
            return null;
        }
        try {
            scanner = new XpandLexer (buffer, file.getName ());
            parser = new XpandParser (scanner);
            scanner.lexer (parser);
            tpl = parser.parser ();
        } catch (final Exception e) {
            final int start = scanner.getStreamIndex () - 1;
            final int end = start + 1;
            OawMarkerManager.deleteMarkers (file);
            OawMarkerManager.addErrorMarker (file, e.getMessage (), start, end);
        }
        if (tpl != null) {
            tpl.setFullyQualifiedName (Activator.getQualifiedName (file));
            return tpl;
        }
        return null;
    }

}

