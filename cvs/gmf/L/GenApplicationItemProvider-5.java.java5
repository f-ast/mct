package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenApplication;

import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;

public class GenApplicationItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public GenApplicationItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    public List getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addTitlePropertyDescriptor (object);
            addApplicationPackageNamePropertyDescriptor (object);
            addApplicationClassNamePropertyDescriptor (object);
            addWorkbenchAdvisorClassNamePropertyDescriptor (object);
            addWorkbenchWindowAdvisorClassNamePropertyDescriptor (object);
            addActionBarAdvisorClassNamePropertyDescriptor (object);
            addPerspectiveClassNamePropertyDescriptor (object);
            addPerspectiveIdPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addTitlePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_title_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_title_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_Title (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addApplicationPackageNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_applicationPackageName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_applicationPackageName_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_ApplicationPackageName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addApplicationClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_applicationClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_applicationClassName_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_ApplicationClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addWorkbenchAdvisorClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_workbenchAdvisorClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_workbenchAdvisorClassName_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_WorkbenchAdvisorClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addWorkbenchWindowAdvisorClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_workbenchWindowAdvisorClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_workbenchWindowAdvisorClassName_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_WorkbenchWindowAdvisorClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addActionBarAdvisorClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_actionBarAdvisorClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_actionBarAdvisorClassName_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_ActionBarAdvisorClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addPerspectiveClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_perspectiveClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_perspectiveClassName_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_PerspectiveClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addPerspectiveIdPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenApplication_perspectiveId_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenApplication_perspectiveId_feature", "_UI_GenApplication_type"), GMFGenPackage.eINSTANCE.getGenApplication_PerspectiveId (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/GenApplication"));
    }

    public String getText (Object object) {
        String label = ((GenApplication) object).getApplicationPackageName ();
        return label == null || label.length () == 0 ? getString ("_UI_GenApplication_type") : getString ("_UI_GenApplication_type") + " " + label;
    }

    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (GenApplication.class)) {
            case GMFGenPackage.GEN_APPLICATION__TITLE :
            case GMFGenPackage.GEN_APPLICATION__APPLICATION_PACKAGE_NAME :
            case GMFGenPackage.GEN_APPLICATION__APPLICATION_CLASS_NAME :
            case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME :
            case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME :
            case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME :
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME :
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    public ResourceLocator getResourceLocator () {
        return EditorPlugin.INSTANCE;
    }

}

