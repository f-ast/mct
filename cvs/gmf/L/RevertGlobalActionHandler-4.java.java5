package org.eclipse.gmf.runtime.common.ui.action.global.providers;

import org.eclipse.swt.SWT;

import org.eclipse.swt.widgets.MessageBox;

import org.eclipse.ui.IWorkbenchPart;

import org.eclipse.ui.IWorkbenchWindow;

import org.eclipse.ui.PlatformUI;

import org.eclipse.gmf.runtime.common.core.command.ICommand;

import org.eclipse.gmf.runtime.common.ui.action.internal.l10n.CommonUIActionMessages;

import org.eclipse.gmf.runtime.common.ui.editors.IRevertiblePart;

import org.eclipse.gmf.runtime.common.ui.services.action.global.AbstractGlobalActionHandler;

import org.eclipse.gmf.runtime.common.ui.services.action.global.IGlobalActionContext;

public class RevertGlobalActionHandler extends AbstractGlobalActionHandler {

    public boolean canHandle (IGlobalActionContext context) {
        IRevertiblePart revertablePart = getRevertablePart (context.getActivePart ());
        if (revertablePart != null) {
            return revertablePart.isDirty ();
        }
        return false;
    }

    public ICommand getCommand (IGlobalActionContext context) {
        IRevertiblePart revertablePart = getRevertablePart (context.getActivePart ());
        if (revertablePart != null) {
            if (confirmRevert ()) {
                revertablePart.doRevertToSaved ();
            }
        }
        return null;
    }

    private boolean confirmRevert () {
        IWorkbenchWindow window = PlatformUI.getWorkbench ().getActiveWorkbenchWindow ();
        if (window != null) {
            String message = CommonUIActionMessages.RevertGlobalActionHandler_messageBox_message + "\n\n" + CommonUIActionMessages.RevertGlobalActionHandler_messageBox_prompt;
            MessageBox messageBox = new MessageBox (window.getShell (), SWT.YES | SWT.NO | SWT.CANCEL | SWT.ICON_QUESTION);
            messageBox.setText (CommonUIActionMessages.RevertGlobalActionHandler_messageBox_title);
            messageBox.setMessage (message);
            if (messageBox.open () == SWT.YES) {
                return true;
            }
        }
        return false;
    }

    private IRevertiblePart getRevertablePart (IWorkbenchPart workbenchPart) {
        IRevertiblePart revertablePart = null;
        if (workbenchPart != null) {
            if (workbenchPart instanceof IRevertiblePart) {
                revertablePart = (IRevertiblePart) workbenchPart;
            } else {
                revertablePart = (IRevertiblePart) workbenchPart.getAdapter (IRevertiblePart.class);
            }
        }
        return revertablePart;
    }

}

