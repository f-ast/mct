package org.eclipse.gmf.internal.bridge.trace.impl;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.eclipse.gmf.internal.bridge.trace.*;

public class TraceFactoryImpl extends EFactoryImpl implements TraceFactory {

    public static TraceFactory init () {
        try {
            TraceFactory theTraceFactory = (TraceFactory) EPackage.Registry.INSTANCE.getEFactory ("http://www.eclipse.org/gmf/2006/Trace");
            if (theTraceFactory != null) {
                return theTraceFactory;
            }
        } catch (Exception exception) {
            EcorePlugin.INSTANCE.log (exception);
        }
        return new TraceFactoryImpl ();
    }

    public TraceFactoryImpl () {
        super ();
    }

    @Override
    public EObject create (EClass eClass) {
        switch (eClass.getClassifierID ()) {
            case TracePackage.TRACE_MODEL :
                return createTraceModel ();
            case TracePackage.GEN_NODE_TRACE :
                return createGenNodeTrace ();
            case TracePackage.GEN_CHILD_NODE_TRACE :
                return createGenChildNodeTrace ();
            case TracePackage.GEN_NODE_LABEL_TRACE :
                return createGenNodeLabelTrace ();
            case TracePackage.GEN_LINK_TRACE :
                return createGenLinkTrace ();
            case TracePackage.GEN_COMPARTMENT_TRACE :
                return createGenCompartmentTrace ();
            case TracePackage.GEN_LINK_LABEL_TRACE :
                return createGenLinkLabelTrace ();
            case TracePackage.TOOL_GROUP_TRACE :
                return createToolGroupTrace ();
            default :
                throw new IllegalArgumentException ("The class '" + eClass.getName () + "' is not a valid classifier");
        }
    }

    public TraceModel createTraceModel () {
        TraceModelImpl traceModel = new TraceModelImpl ();
        return traceModel;
    }

    public GenNodeTrace createGenNodeTrace () {
        GenNodeTraceImpl genNodeTrace = new GenNodeTraceImpl ();
        return genNodeTrace;
    }

    public GenChildNodeTrace createGenChildNodeTrace () {
        GenChildNodeTraceImpl genChildNodeTrace = new GenChildNodeTraceImpl ();
        return genChildNodeTrace;
    }

    public GenNodeLabelTrace createGenNodeLabelTrace () {
        GenNodeLabelTraceImpl genNodeLabelTrace = new GenNodeLabelTraceImpl ();
        return genNodeLabelTrace;
    }

    public GenLinkTrace createGenLinkTrace () {
        GenLinkTraceImpl genLinkTrace = new GenLinkTraceImpl ();
        return genLinkTrace;
    }

    public GenCompartmentTrace createGenCompartmentTrace () {
        GenCompartmentTraceImpl genCompartmentTrace = new GenCompartmentTraceImpl ();
        return genCompartmentTrace;
    }

    public GenLinkLabelTrace createGenLinkLabelTrace () {
        GenLinkLabelTraceImpl genLinkLabelTrace = new GenLinkLabelTraceImpl ();
        return genLinkLabelTrace;
    }

    public ToolGroupTrace createToolGroupTrace () {
        ToolGroupTraceImpl toolGroupTrace = new ToolGroupTraceImpl ();
        return toolGroupTrace;
    }

    public TracePackage getTracePackage () {
        return (TracePackage) getEPackage ();
    }

    @Deprecated
    public static TracePackage getPackage () {
        return TracePackage.eINSTANCE;
    }

}

