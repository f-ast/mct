package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.HintedDiagramLinkStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class HintedDiagramLinkStyleImpl extends DiagramLinkStyleImpl implements HintedDiagramLinkStyle {
    protected static final String HINT_EDEFAULT = null;
    protected String hint = HINT_EDEFAULT;

    protected HintedDiagramLinkStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.HINTED_DIAGRAM_LINK_STYLE;
    }

    public String getHint () {
        return hint;
    }

    public void setHint (String newHint) {
        String oldHint = hint;
        hint = newHint;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.HINTED_DIAGRAM_LINK_STYLE__HINT, oldHint, hint));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                return getDiagramLink ();
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__HINT :
                return getHint ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                setDiagramLink ((Diagram) newValue);
                return;
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__HINT :
                setHint ((String) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                setDiagramLink ((Diagram) null);
                return;
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__HINT :
                setHint (HINT_EDEFAULT);
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                return diagramLink != null;
            case NotationPackage.HINTED_DIAGRAM_LINK_STYLE__HINT :
                return HINT_EDEFAULT == null ? hint != null : ! HINT_EDEFAULT.equals (hint);
        }
        return eDynamicIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (hint: ");
        result.append (hint);
        result.append (')');
        return result.toString ();
    }

}

