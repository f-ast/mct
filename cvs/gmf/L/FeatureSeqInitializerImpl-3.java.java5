package org.eclipse.gmf.mappings.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.mappings.FeatureSeqInitializer;

import org.eclipse.gmf.mappings.FeatureValueSpec;

import org.eclipse.gmf.mappings.GMFMapPackage;

public class FeatureSeqInitializerImpl extends EObjectImpl implements FeatureSeqInitializer {
    protected EList initializers = null;

    protected FeatureSeqInitializerImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFMapPackage.eINSTANCE.getFeatureSeqInitializer ();
    }

    public EList getInitializers () {
        if (initializers == null) {
            initializers = new EObjectContainmentEList (FeatureValueSpec.class, this, GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS);
        }
        return initializers;
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                    return ((InternalEList) getInitializers ()).basicRemove (otherEnd, msgs);
                default :
                    return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
            }
        }
        return eBasicSetContainer (null, featureID, msgs);
    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return getInitializers ();
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                getInitializers ().addAll ((Collection) newValue);
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return initializers != null && ! initializers.isEmpty ();
        }
        return eDynamicIsSet (eFeature);
    }

}

