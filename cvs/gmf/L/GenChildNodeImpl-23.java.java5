package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.gmf.codegen.gmfgen.CompartmentLayoutKind;

import org.eclipse.gmf.codegen.gmfgen.CompartmentPlacementKind;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;

import org.eclipse.gmf.codegen.gmfgen.GenChildNode;

import org.eclipse.gmf.codegen.gmfgen.GenCompartment;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

public class GenChildNodeImpl extends GenNodeImpl implements GenChildNode {

    protected GenChildNodeImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenChildNode ();
    }

    public GenChildContainer getContainer () {
        if (eContainerFeatureID != GMFGenPackage.GEN_CHILD_NODE__CONTAINER) return null;

        return (GenChildContainer) eContainer ();
    }

    public boolean isListContainerEntry () {
        if (getContainer () instanceof GenNode) {
            return ((GenNode) getContainer ()).getChildContainersPlacement () == CompartmentPlacementKind.TOOLBAR_LITERAL;
        }
        if (getContainer () instanceof GenCompartment) {
            return ((GenCompartment) getContainer ()).getLayoutKind () == CompartmentLayoutKind.TOOLBAR_LITERAL;
        }
        return false;
    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_CHILD_NODE__CONTAINER :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_CHILD_NODE__CONTAINER, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_CHILD_NODE__CONTAINER :
                return eBasicSetContainer (null, GMFGenPackage.GEN_CHILD_NODE__CONTAINER, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.GEN_CHILD_NODE__CONTAINER :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_CHILD_CONTAINER__CHILD_NODES, GenChildContainer.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_CHILD_NODE__CONTAINER :
                return getContainer ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_CHILD_NODE__CONTAINER :
                return getContainer () != null;
        }
        return super.eIsSet (featureID);
    }

    public GenDiagram getDiagram () {
        return getContainer ().getDiagram ();
    }

    public String getClassNameSuffux () {
        return "ChildNode";
    }

}

