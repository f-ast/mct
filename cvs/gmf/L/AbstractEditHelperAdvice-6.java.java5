package org.eclipse.gmf.runtime.emf.type.core.edithelper;

import java.util.Map;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.emf.transaction.util.TransactionUtil;

import org.eclipse.gmf.runtime.common.core.command.ICommand;

import org.eclipse.gmf.runtime.common.core.util.Log;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;

import org.eclipse.gmf.runtime.emf.type.core.IElementType;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypeDebugOptions;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePlugin;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePluginStatusCodes;

import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyDependentsRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.GetEditContextRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.MoveRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest;

import org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest;

public class AbstractEditHelperAdvice implements IEditHelperAdvice {

    public ICommand getBeforeEditCommand (IEditCommandRequest request) {
        if (request instanceof CreateRelationshipRequest) {
            return getBeforeCreateRelationshipCommand ((CreateRelationshipRequest) request);
        } else if (request instanceof CreateElementRequest) {
            return getBeforeCreateCommand ((CreateElementRequest) request);
        } else if (request instanceof ConfigureRequest) {
            return getBeforeConfigureCommand ((ConfigureRequest) request);
        } else if (request instanceof DestroyElementRequest) {
            return getBeforeDestroyElementCommand ((DestroyElementRequest) request);
        } else if (request instanceof DestroyDependentsRequest) {
            return getBeforeDestroyDependentsCommand ((DestroyDependentsRequest) request);
        } else if (request instanceof DestroyReferenceRequest) {
            return getBeforeDestroyReferenceCommand ((DestroyReferenceRequest) request);
        } else if (request instanceof DuplicateElementsRequest) {
            return getBeforeDuplicateCommand ((DuplicateElementsRequest) request);
        } else if (request instanceof GetEditContextRequest) {
            return getBeforeEditContextCommand ((GetEditContextRequest) request);
        } else if (request instanceof MoveRequest) {
            return getBeforeMoveCommand ((MoveRequest) request);
        } else if (request instanceof ReorientReferenceRelationshipRequest) {
            return getBeforeReorientReferenceRelationshipCommand ((ReorientReferenceRelationshipRequest) request);
        } else if (request instanceof ReorientRelationshipRequest) {
            return getBeforeReorientRelationshipCommand ((ReorientRelationshipRequest) request);
        } else if (request instanceof SetRequest) {
            return getBeforeSetCommand ((SetRequest) request);
        }

        return null;
    }

    public ICommand getAfterEditCommand (IEditCommandRequest request) {
        if (request instanceof CreateRelationshipRequest) {
            return getAfterCreateRelationshipCommand ((CreateRelationshipRequest) request);
        } else if (request instanceof CreateElementRequest) {
            return getAfterCreateCommand ((CreateElementRequest) request);
        } else if (request instanceof ConfigureRequest) {
            return getAfterConfigureCommand ((ConfigureRequest) request);
        } else if (request instanceof DestroyElementRequest) {
            return getAfterDestroyElementCommand ((DestroyElementRequest) request);
        } else if (request instanceof DestroyDependentsRequest) {
            return getAfterDestroyDependentsCommand ((DestroyDependentsRequest) request);
        } else if (request instanceof DestroyReferenceRequest) {
            return getAfterDestroyReferenceCommand ((DestroyReferenceRequest) request);
        } else if (request instanceof DuplicateElementsRequest) {
            return getAfterDuplicateCommand ((DuplicateElementsRequest) request);
        } else if (request instanceof GetEditContextRequest) {
            return getAfterEditContextCommand ((GetEditContextRequest) request);
        } else if (request instanceof MoveRequest) {
            return getAfterMoveCommand ((MoveRequest) request);
        } else if (request instanceof ReorientReferenceRelationshipRequest) {
            return getAfterReorientReferenceRelationshipCommand ((ReorientReferenceRelationshipRequest) request);
        } else if (request instanceof ReorientRelationshipRequest) {
            return getAfterReorientRelationshipCommand ((ReorientRelationshipRequest) request);
        } else if (request instanceof SetRequest) {
            return getAfterSetCommand ((SetRequest) request);
        }

        return null;
    }

    protected ICommand getBeforeCreateRelationshipCommand (CreateRelationshipRequest request) {
        return null;
    }

    protected ICommand getAfterCreateRelationshipCommand (CreateRelationshipRequest request) {
        return null;
    }

    protected ICommand getBeforeCreateCommand (CreateElementRequest request) {
        return null;
    }

    protected ICommand getAfterCreateCommand (CreateElementRequest request) {
        return null;
    }

    protected ICommand getBeforeConfigureCommand (ConfigureRequest request) {
        return null;
    }

    protected ICommand getAfterConfigureCommand (ConfigureRequest request) {
        return null;
    }

    protected ICommand getBeforeDestroyElementCommand (DestroyElementRequest request) {
        return null;
    }

    protected ICommand getAfterDestroyElementCommand (DestroyElementRequest request) {
        return null;
    }

    protected ICommand getBeforeDestroyDependentsCommand (DestroyDependentsRequest request) {
        return null;
    }

    protected ICommand getAfterDestroyDependentsCommand (DestroyDependentsRequest request) {
        return null;
    }

    protected ICommand getBeforeDestroyReferenceCommand (DestroyReferenceRequest request) {
        return null;
    }

    protected ICommand getAfterDestroyReferenceCommand (DestroyReferenceRequest request) {
        return null;
    }

    protected ICommand getBeforeDuplicateCommand (DuplicateElementsRequest request) {
        return null;
    }

    protected ICommand getAfterDuplicateCommand (DuplicateElementsRequest request) {
        return null;
    }

    protected ICommand getBeforeEditContextCommand (GetEditContextRequest request) {
        return null;
    }

    protected ICommand getAfterEditContextCommand (GetEditContextRequest request) {
        return null;
    }

    protected ICommand getBeforeMoveCommand (MoveRequest request) {
        return null;
    }

    protected ICommand getAfterMoveCommand (MoveRequest request) {
        return null;
    }

    protected ICommand getBeforeReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest request) {
        return null;
    }

    protected ICommand getAfterReorientReferenceRelationshipCommand (ReorientReferenceRelationshipRequest request) {
        return null;
    }

    protected ICommand getBeforeReorientRelationshipCommand (ReorientRelationshipRequest request) {
        return null;
    }

    protected ICommand getAfterReorientRelationshipCommand (ReorientRelationshipRequest request) {
        return null;
    }

    protected ICommand getBeforeSetCommand (SetRequest request) {
        return null;
    }

    protected ICommand getAfterSetCommand (SetRequest request) {
        return null;
    }

    protected EObject createType (EObject container, IElementType typeToCreate, IProgressMonitor progressMonitor) {
        return createType (container, typeToCreate, null, progressMonitor);
    }

    protected EObject createType (EObject container, IElementType typeToCreate, Map requestParameters, IProgressMonitor progressMonitor) {
        if (typeToCreate.getEClass ().isAbstract ()) {
            return null;
        }
        TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain (container);
        CreateElementRequest request = new CreateElementRequest (editingDomain, container, typeToCreate);
        if (requestParameters != null) {
            request.addParameters (requestParameters);
        }
        IElementType containerElementType = ElementTypeRegistry.getInstance ().getElementType (request.getEditHelperContext ());
        ICommand createTypeCommand = containerElementType.getEditCommand (request);
        if (createTypeCommand != null && createTypeCommand.canExecute ()) {
            try {
                createTypeCommand.execute (progressMonitor, null);
            } catch (ExecutionException e) {
                Trace.catching (EMFTypePlugin.getPlugin (), EMFTypeDebugOptions.EXCEPTIONS_CATCHING, AbstractEditHelperAdvice.class, "createType", e);
                Log.error (EMFTypePlugin.getPlugin (), EMFTypePluginStatusCodes.COMMAND_FAILURE, e.getMessage (), e);
                return null;
            }
            if (createTypeCommand.getCommandResult ().getStatus ().isOK ()) {
                return (EObject) createTypeCommand.getCommandResult ().getReturnValue ();
            }
        }
        return null;
    }

    public void configureRequest (IEditCommandRequest request) {
    }

    public boolean approveRequest (IEditCommandRequest request) {
        return true;
    }

}

