package org.eclipse.gmf.gmfgraph.util;

import org.eclipse.emf.common.notify.Adapter;

import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.gmfgraph.*;

public class GMFGraphAdapterFactory extends AdapterFactoryImpl {
    protected static GMFGraphPackage modelPackage;

    public GMFGraphAdapterFactory () {
        if (modelPackage == null) {
            modelPackage = GMFGraphPackage.eINSTANCE;
        }
    }

    @Override
    public boolean isFactoryForType (Object object) {
        if (object == modelPackage) {
            return true;
        }
        if (object instanceof EObject) {
            return ((EObject) object).eClass ().getEPackage () == modelPackage;
        }
        return false;
    }

    protected GMFGraphSwitch < Adapter > modelSwitch = new GMFGraphSwitch < Adapter > () {

        @Override
        public Adapter caseCanvas (Canvas object) {
            return createCanvasAdapter ();
        }

        @Override
        public Adapter caseFigureGallery (FigureGallery object) {
            return createFigureGalleryAdapter ();
        }

        @Override
        public Adapter caseIdentity (Identity object) {
            return createIdentityAdapter ();
        }

        @Override
        public Adapter caseDiagramElement (DiagramElement object) {
            return createDiagramElementAdapter ();
        }

        @Override
        public Adapter caseAbstractNode (AbstractNode object) {
            return createAbstractNodeAdapter ();
        }

        @Override
        public Adapter caseNode (Node object) {
            return createNodeAdapter ();
        }

        @Override
        public Adapter caseConnection (Connection object) {
            return createConnectionAdapter ();
        }

        @Override
        public Adapter caseCompartment (Compartment object) {
            return createCompartmentAdapter ();
        }

        @Override
        public Adapter caseDiagramLabel (DiagramLabel object) {
            return createDiagramLabelAdapter ();
        }

        @Override
        public Adapter caseVisualFacet (VisualFacet object) {
            return createVisualFacetAdapter ();
        }

        @Override
        public Adapter caseGeneralFacet (GeneralFacet object) {
            return createGeneralFacetAdapter ();
        }

        @Override
        public Adapter caseAlignmentFacet (AlignmentFacet object) {
            return createAlignmentFacetAdapter ();
        }

        @Override
        public Adapter caseGradientFacet (GradientFacet object) {
            return createGradientFacetAdapter ();
        }

        @Override
        public Adapter caseLabelOffsetFacet (LabelOffsetFacet object) {
            return createLabelOffsetFacetAdapter ();
        }

        @Override
        public Adapter caseDefaultSizeFacet (DefaultSizeFacet object) {
            return createDefaultSizeFacetAdapter ();
        }

        @Override
        public Adapter caseFigure (Figure object) {
            return createFigureAdapter ();
        }

        @Override
        public Adapter caseAbstractFigure (AbstractFigure object) {
            return createAbstractFigureAdapter ();
        }

        @Override
        public Adapter caseFigureDescriptor (FigureDescriptor object) {
            return createFigureDescriptorAdapter ();
        }

        @Override
        public Adapter caseChildAccess (ChildAccess object) {
            return createChildAccessAdapter ();
        }

        @Override
        public Adapter caseRealFigure (RealFigure object) {
            return createRealFigureAdapter ();
        }

        @Override
        public Adapter caseFigureRef (FigureRef object) {
            return createFigureRefAdapter ();
        }

        @Override
        public Adapter caseConnectionFigure (ConnectionFigure object) {
            return createConnectionFigureAdapter ();
        }

        @Override
        public Adapter caseDecorationFigure (DecorationFigure object) {
            return createDecorationFigureAdapter ();
        }

        @Override
        public Adapter caseShape (Shape object) {
            return createShapeAdapter ();
        }

        @Override
        public Adapter caseLabel (Label object) {
            return createLabelAdapter ();
        }

        @Override
        public Adapter caseLabeledContainer (LabeledContainer object) {
            return createLabeledContainerAdapter ();
        }

        @Override
        public Adapter caseRectangle (Rectangle object) {
            return createRectangleAdapter ();
        }

        @Override
        public Adapter caseRoundedRectangle (RoundedRectangle object) {
            return createRoundedRectangleAdapter ();
        }

        @Override
        public Adapter caseEllipse (Ellipse object) {
            return createEllipseAdapter ();
        }

        @Override
        public Adapter casePolyline (Polyline object) {
            return createPolylineAdapter ();
        }

        @Override
        public Adapter casePolygon (Polygon object) {
            return createPolygonAdapter ();
        }

        @Override
        public Adapter caseScalablePolygon (ScalablePolygon object) {
            return createScalablePolygonAdapter ();
        }

        @Override
        public Adapter casePolylineConnection (PolylineConnection object) {
            return createPolylineConnectionAdapter ();
        }

        @Override
        public Adapter casePolylineDecoration (PolylineDecoration object) {
            return createPolylineDecorationAdapter ();
        }

        @Override
        public Adapter casePolygonDecoration (PolygonDecoration object) {
            return createPolygonDecorationAdapter ();
        }

        @Override
        public Adapter caseCustomClass (CustomClass object) {
            return createCustomClassAdapter ();
        }

        @Override
        public Adapter caseCustomAttribute (CustomAttribute object) {
            return createCustomAttributeAdapter ();
        }

        @Override
        public Adapter caseFigureAccessor (FigureAccessor object) {
            return createFigureAccessorAdapter ();
        }

        @Override
        public Adapter caseCustomFigure (CustomFigure object) {
            return createCustomFigureAdapter ();
        }

        @Override
        public Adapter caseCustomDecoration (CustomDecoration object) {
            return createCustomDecorationAdapter ();
        }

        @Override
        public Adapter caseCustomConnection (CustomConnection object) {
            return createCustomConnectionAdapter ();
        }

        @Override
        public Adapter caseColor (Color object) {
            return createColorAdapter ();
        }

        @Override
        public Adapter caseRGBColor (RGBColor object) {
            return createRGBColorAdapter ();
        }

        @Override
        public Adapter caseConstantColor (ConstantColor object) {
            return createConstantColorAdapter ();
        }

        @Override
        public Adapter caseFont (Font object) {
            return createFontAdapter ();
        }

        @Override
        public Adapter caseBasicFont (BasicFont object) {
            return createBasicFontAdapter ();
        }

        @Override
        public Adapter casePoint (Point object) {
            return createPointAdapter ();
        }

        @Override
        public Adapter caseDimension (Dimension object) {
            return createDimensionAdapter ();
        }

        @Override
        public Adapter caseInsets (Insets object) {
            return createInsetsAdapter ();
        }

        @Override
        public Adapter caseBorder (Border object) {
            return createBorderAdapter ();
        }

        @Override
        public Adapter caseBorderRef (BorderRef object) {
            return createBorderRefAdapter ();
        }

        @Override
        public Adapter caseLineBorder (LineBorder object) {
            return createLineBorderAdapter ();
        }

        @Override
        public Adapter caseMarginBorder (MarginBorder object) {
            return createMarginBorderAdapter ();
        }

        @Override
        public Adapter caseCompoundBorder (CompoundBorder object) {
            return createCompoundBorderAdapter ();
        }

        @Override
        public Adapter caseCustomBorder (CustomBorder object) {
            return createCustomBorderAdapter ();
        }

        @Override
        public Adapter caseLayoutData (LayoutData object) {
            return createLayoutDataAdapter ();
        }

        @Override
        public Adapter caseCustomLayoutData (CustomLayoutData object) {
            return createCustomLayoutDataAdapter ();
        }

        @Override
        public Adapter caseGridLayoutData (GridLayoutData object) {
            return createGridLayoutDataAdapter ();
        }

        @Override
        public Adapter caseBorderLayoutData (BorderLayoutData object) {
            return createBorderLayoutDataAdapter ();
        }

        @Override
        public Adapter caseLayoutable (Layoutable object) {
            return createLayoutableAdapter ();
        }

        @Override
        public Adapter caseLayout (Layout object) {
            return createLayoutAdapter ();
        }

        @Override
        public Adapter caseLayoutRef (LayoutRef object) {
            return createLayoutRefAdapter ();
        }

        @Override
        public Adapter caseCustomLayout (CustomLayout object) {
            return createCustomLayoutAdapter ();
        }

        @Override
        public Adapter caseGridLayout (GridLayout object) {
            return createGridLayoutAdapter ();
        }

        @Override
        public Adapter caseBorderLayout (BorderLayout object) {
            return createBorderLayoutAdapter ();
        }

        @Override
        public Adapter caseFlowLayout (FlowLayout object) {
            return createFlowLayoutAdapter ();
        }

        @Override
        public Adapter caseXYLayout (XYLayout object) {
            return createXYLayoutAdapter ();
        }

        @Override
        public Adapter caseXYLayoutData (XYLayoutData object) {
            return createXYLayoutDataAdapter ();
        }

        @Override
        public Adapter caseStackLayout (StackLayout object) {
            return createStackLayoutAdapter ();
        }

        @Override
        public Adapter caseSVGFigure (SVGFigure object) {
            return createSVGFigureAdapter ();
        }

        @Override
        public Adapter caseSVGProperty (SVGProperty object) {
            return createSVGPropertyAdapter ();
        }

        @Override
        public Adapter defaultCase (EObject object) {
            return createEObjectAdapter ();
        }

    }

    ;

    @Override
    public Adapter createAdapter (Notifier target) {
        return modelSwitch.doSwitch ((EObject) target);
    }

    public Adapter createCanvasAdapter () {
        return null;
    }

    public Adapter createFigureGalleryAdapter () {
        return null;
    }

    public Adapter createIdentityAdapter () {
        return null;
    }

    public Adapter createDiagramElementAdapter () {
        return null;
    }

    public Adapter createAbstractNodeAdapter () {
        return null;
    }

    public Adapter createNodeAdapter () {
        return null;
    }

    public Adapter createChildAccessAdapter () {
        return null;
    }

    public Adapter createRealFigureAdapter () {
        return null;
    }

    public Adapter createConnectionAdapter () {
        return null;
    }

    public Adapter createCompartmentAdapter () {
        return null;
    }

    public Adapter createDiagramLabelAdapter () {
        return null;
    }

    public Adapter createVisualFacetAdapter () {
        return null;
    }

    public Adapter createGeneralFacetAdapter () {
        return null;
    }

    public Adapter createAlignmentFacetAdapter () {
        return null;
    }

    public Adapter createGradientFacetAdapter () {
        return null;
    }

    public Adapter createLabelOffsetFacetAdapter () {
        return null;
    }

    public Adapter createDefaultSizeFacetAdapter () {
        return null;
    }

    public Adapter createFigureAdapter () {
        return null;
    }

    public Adapter createFigureDescriptorAdapter () {
        return null;
    }

    public Adapter createAbstractFigureAdapter () {
        return null;
    }

    public Adapter createFigureRefAdapter () {
        return null;
    }

    public Adapter createConnectionFigureAdapter () {
        return null;
    }

    public Adapter createDecorationFigureAdapter () {
        return null;
    }

    public Adapter createShapeAdapter () {
        return null;
    }

    public Adapter createLabelAdapter () {
        return null;
    }

    public Adapter createLabeledContainerAdapter () {
        return null;
    }

    public Adapter createRectangleAdapter () {
        return null;
    }

    public Adapter createRoundedRectangleAdapter () {
        return null;
    }

    public Adapter createEllipseAdapter () {
        return null;
    }

    public Adapter createPolylineAdapter () {
        return null;
    }

    public Adapter createPolygonAdapter () {
        return null;
    }

    public Adapter createScalablePolygonAdapter () {
        return null;
    }

    public Adapter createPolylineConnectionAdapter () {
        return null;
    }

    public Adapter createPolylineDecorationAdapter () {
        return null;
    }

    public Adapter createPolygonDecorationAdapter () {
        return null;
    }

    public Adapter createCustomClassAdapter () {
        return null;
    }

    public Adapter createCustomFigureAdapter () {
        return null;
    }

    public Adapter createCustomDecorationAdapter () {
        return null;
    }

    public Adapter createCustomConnectionAdapter () {
        return null;
    }

    public Adapter createColorAdapter () {
        return null;
    }

    public Adapter createRGBColorAdapter () {
        return null;
    }

    public Adapter createConstantColorAdapter () {
        return null;
    }

    public Adapter createFontAdapter () {
        return null;
    }

    public Adapter createBasicFontAdapter () {
        return null;
    }

    public Adapter createPointAdapter () {
        return null;
    }

    public Adapter createDimensionAdapter () {
        return null;
    }

    public Adapter createInsetsAdapter () {
        return null;
    }

    public Adapter createBorderAdapter () {
        return null;
    }

    public Adapter createBorderRefAdapter () {
        return null;
    }

    public Adapter createLineBorderAdapter () {
        return null;
    }

    public Adapter createMarginBorderAdapter () {
        return null;
    }

    public Adapter createCompoundBorderAdapter () {
        return null;
    }

    public Adapter createCustomBorderAdapter () {
        return null;
    }

    public Adapter createLayoutDataAdapter () {
        return null;
    }

    public Adapter createCustomLayoutDataAdapter () {
        return null;
    }

    public Adapter createGridLayoutDataAdapter () {
        return null;
    }

    public Adapter createBorderLayoutDataAdapter () {
        return null;
    }

    public Adapter createLayoutableAdapter () {
        return null;
    }

    public Adapter createLayoutAdapter () {
        return null;
    }

    public Adapter createLayoutRefAdapter () {
        return null;
    }

    public Adapter createCustomLayoutAdapter () {
        return null;
    }

    public Adapter createGridLayoutAdapter () {
        return null;
    }

    public Adapter createBorderLayoutAdapter () {
        return null;
    }

    public Adapter createCustomAttributeAdapter () {
        return null;
    }

    public Adapter createFigureAccessorAdapter () {
        return null;
    }

    public Adapter createFlowLayoutAdapter () {
        return null;
    }

    public Adapter createXYLayoutAdapter () {
        return null;
    }

    public Adapter createXYLayoutDataAdapter () {
        return null;
    }

    public Adapter createStackLayoutAdapter () {
        return null;
    }

    public Adapter createSVGFigureAdapter () {
        return null;
    }

    public Adapter createSVGPropertyAdapter () {
        return null;
    }

    public Adapter createEObjectAdapter () {
        return null;
    }

}

