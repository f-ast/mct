package org.eclipse.gmf.runtime.emf.type.core.requests;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EReference;

import org.eclipse.gmf.runtime.emf.type.core.internal.l10n.ResourceManager;

public class MoveRequest extends AbstractEditCommandRequest {
    private EObject elementToMove;
    private EObject targetContainer;
    private EReference targetFeature;

    public MoveRequest (EObject targetContainer, EReference targetFeature, EObject elementToMove) {
        super ();
        this.elementToMove = elementToMove;
        this.targetContainer = targetContainer;
        this.targetFeature = targetFeature;
    }

    public MoveRequest (EObject targetContainer, EObject elementToMove) {
        this (targetContainer, null, elementToMove);
    }

    public EObject getElementToMove () {
        return elementToMove;
    }

    public void setTargetContainer (EObject targetContainer) {
        this.targetContainer = targetContainer;
    }

    public EObject getTargetContainer () {
        return targetContainer;
    }

    public void setTargetFeature (EReference targetFeature) {
        this.targetFeature = targetFeature;
    }

    public EReference getTargetFeature () {
        return targetFeature;
    }

    public List getElementsToEdit () {
        if (targetContainer != null) {
            return Collections.singletonList (targetContainer);
        }
        return super.getElementsToEdit ();
    }

    protected String getDefaultLabel () {
        return ResourceManager.getInstance ().getString ("Request.Label.Move");
    }

    public Object getEditHelperContext () {
        return targetContainer;
    }

}

