package org.eclipse.gmf.gmfgraph.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IChildCreationExtender;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.gmfgraph.FlowLayout;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

public class FlowLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public FlowLayoutItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addVerticalPropertyDescriptor (object);
            addMatchMinorSizePropertyDescriptor (object);
            addForceSingleLinePropertyDescriptor (object);
            addMajorAlignmentPropertyDescriptor (object);
            addMinorAlignmentPropertyDescriptor (object);
            addMajorSpacingPropertyDescriptor (object);
            addMinorSpacingPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addVerticalPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_vertical_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_vertical_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_Vertical (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
    }

    protected void addMatchMinorSizePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_matchMinorSize_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_matchMinorSize_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_MatchMinorSize (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
    }

    protected void addForceSingleLinePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_forceSingleLine_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_forceSingleLine_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_ForceSingleLine (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
    }

    protected void addMajorAlignmentPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_majorAlignment_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_majorAlignment_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_MajorAlignment (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addMinorAlignmentPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_minorAlignment_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_minorAlignment_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_MinorAlignment (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addMajorSpacingPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_majorSpacing_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_majorSpacing_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_MajorSpacing (), true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addMinorSpacingPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FlowLayout_minorSpacing_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FlowLayout_minorSpacing_feature", "_UI_FlowLayout_type"), GMFGraphPackage.eINSTANCE.getFlowLayout_MinorSpacing (), true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/FlowLayout"));
    }

    @Override
    public String getText (Object object) {
        FlowLayout flowLayout = (FlowLayout) object;
        return getString ("_UI_FlowLayout_type") + " " + flowLayout.isVertical ();
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (FlowLayout.class)) {
            case GMFGraphPackage.FLOW_LAYOUT__VERTICAL :
            case GMFGraphPackage.FLOW_LAYOUT__MATCH_MINOR_SIZE :
            case GMFGraphPackage.FLOW_LAYOUT__FORCE_SINGLE_LINE :
            case GMFGraphPackage.FLOW_LAYOUT__MAJOR_ALIGNMENT :
            case GMFGraphPackage.FLOW_LAYOUT__MINOR_ALIGNMENT :
            case GMFGraphPackage.FLOW_LAYOUT__MAJOR_SPACING :
            case GMFGraphPackage.FLOW_LAYOUT__MINOR_SPACING :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    @Override
    public ResourceLocator getResourceLocator () {
        return ((IChildCreationExtender) adapterFactory).getResourceLocator ();
    }

}

