package org.eclipse.gmf.runtime.diagram.ui.printing.util;

import java.util.ArrayList;

import java.util.Collections;

import java.util.List;

import java.util.Map;

import org.eclipse.jface.dialogs.MessageDialog;

import org.eclipse.jface.util.Assert;

import org.eclipse.swt.printing.Printer;

import org.eclipse.swt.printing.PrinterData;

import org.eclipse.swt.widgets.Display;

import org.eclipse.ui.IEditorPart;

import org.eclipse.gmf.runtime.common.core.util.Log;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.common.ui.printing.IPrintHelper;

import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;

import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart;

import org.eclipse.gmf.runtime.diagram.ui.printing.actions.DefaultPrintActionHelper;

import org.eclipse.gmf.runtime.diagram.ui.printing.internal.DiagramPrintingDebugOptions;

import org.eclipse.gmf.runtime.diagram.ui.printing.internal.DiagramPrintingPlugin;

import org.eclipse.gmf.runtime.diagram.ui.printing.internal.DiagramPrintingStatusCodes;

import org.eclipse.gmf.runtime.diagram.ui.printing.internal.l10n.DiagramPrintingResourceManager;

import org.eclipse.gmf.runtime.diagram.ui.printing.internal.util.DiagramPrinter;

import org.eclipse.gmf.runtime.notation.Diagram;

public class DiagramPrinterUtil {

    private static void printDiagrams (DiagramPrinter diagramPrinter, IPrintHelper helper) {
        if (helper.getDlgScalePercent () == - 1) {
            diagramPrinter.setRows (helper.getDlgScaleFitToM ());
            diagramPrinter.setColumns (helper.getDlgScaleFitToN ());
        } else {
            diagramPrinter.setScaledPercent (helper.getDlgScalePercent ());
        }
        diagramPrinter.run ();
    }

    public static void printWithSettings (IEditorPart editorPart, Map diagramMap, DiagramPrinter diagramPrinter) {
        List diagramNames;
        PrinterData printerData;
        IPrintHelper helper;
        try {
            Class printhelperClass = Class.forName (IPrintHelper.PRINT_HELPER_CLASS_NAME);
            helper = (IPrintHelper) printhelperClass.newInstance ();
            diagramNames = new ArrayList (diagramMap.keySet ());
            printerData = helper.openPrintDlg (diagramNames);
        } catch (Throwable e) {
            Trace.catching (DiagramPrintingPlugin.getInstance (), DiagramPrintingDebugOptions.EXCEPTIONS_CATCHING, DiagramPrinterUtil.class, e.getMessage (), e);
            Log.warning (DiagramPrintingPlugin.getInstance (), DiagramPrintingStatusCodes.RESOURCE_FAILURE, e.getMessage (), e);
            if (MessageDialog.openQuestion (Display.getDefault ().getActiveShell (), DiagramPrintingResourceManager.getI18NString ("DiagramPrinterUtil.DLLErrorTitle"), DiagramPrintingResourceManager.getI18NString ("DiagramPrinterUtil.DLLErrorMessage.part1") + "\n" + DiagramPrintingResourceManager.getI18NString ("DiagramPrinterUtil.DLLErrorMessage.part2") + "\n" + DiagramPrintingResourceManager.getI18NString ("DiagramPrinterUtil.DLLErrorMessage.part3") + "\n\n" + DiagramPrintingResourceManager.getI18NString ("DiagramPrinterUtil.DLLErrorMessage.part4"))) {
                DefaultPrintActionHelper.doRun (editorPart, diagramPrinter);
            }
            return;
        }
        Assert.isNotNull (diagramNames);
        Assert.isNotNull (helper);
        if (printerData != null) {
            final Printer printer = new Printer (printerData);
            diagramPrinter.setPrinter (printer);
            diagramPrinter.setDisplayDPI (Display.getDefault ().getDPI ());
            if (helper.getDlgDiagramPrintRangeCurrent ()) {
                DiagramEditPart dgrmEP = ((IDiagramWorkbenchPart) editorPart).getDiagramEditPart ();
                assert dgrmEP != null;
                diagramPrinter.setDiagrams (Collections.singletonList (dgrmEP.getDiagramView ().getDiagram ()));
            } else if (helper.getDlgDiagramPrintRangeAll ()) {
                diagramPrinter.setDiagrams (diagramMap.values ());
            } else if (helper.getDlgDiagramPrintRangeSelection ()) {
                Object obj;
                List list = new ArrayList ();
                for (int i = 0;
                i < diagramNames.size (); i ++) {
                    if (helper.isDlgDiagramSelected (i)) {
                        obj = diagramMap.get (diagramNames.get (i));
                        Assert.isTrue (obj instanceof Diagram);
                        list.add (obj);
                    }
                }
                diagramPrinter.setDiagrams (list);
            }

            printDiagrams (diagramPrinter, helper);
            printer.dispose ();
        }
    }

}

