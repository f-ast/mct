package org.eclipse.gmf.graphdef.editor.part;

import org.eclipse.draw2d.DelegatingLayout;

import org.eclipse.draw2d.FreeformLayer;

import org.eclipse.draw2d.LayeredPane;

import org.eclipse.gef.LayerConstants;

import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramRootEditPart;

import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.editor.FileDiagramEditor;

import org.eclipse.ui.IEditorInput;

import org.eclipse.ui.ide.IGotoMarker;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.core.resources.IFile;

import org.eclipse.gmf.graphdef.editor.edit.parts.GMFGraphEditPartFactory;

import org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.document.StorageDiagramDocumentProvider;

public class GMFGraphDiagramEditor extends FileDiagramEditor implements IGotoMarker {
    public static final String ID = "org.eclipse.gmf.graphdef.editor.part.GMFGraphDiagramEditorID";

    public GMFGraphDiagramEditor () {
        super (true);
    }

    protected String getEditingDomainID () {
        return "org.eclipse.gmf.graphdef.editor.EditingDomain";
    }

    protected TransactionalEditingDomain createEditingDomain () {
        TransactionalEditingDomain domain = super.createEditingDomain ();
        domain.setID (getEditingDomainID ());
        return domain;
    }

    protected void setDocumentProvider (IEditorInput input) {
        if (input.getAdapter (IFile.class) != null) {
            setDocumentProvider (new GMFGraphDocumentProvider ());
        } else {
            setDocumentProvider (new StorageDiagramDocumentProvider ());
        }
    }

    protected void configureGraphicalViewer () {
        super.configureGraphicalViewer ();
        DiagramRootEditPart root = (DiagramRootEditPart) getDiagramGraphicalViewer ().getRootEditPart ();
        LayeredPane printableLayers = (LayeredPane) root.getLayer (LayerConstants.PRINTABLE_LAYERS);
        FreeformLayer extLabelsLayer = new FreeformLayer ();
        extLabelsLayer.setLayoutManager (new DelegatingLayout ());
        printableLayers.addLayerAfter (extLabelsLayer, GMFGraphEditPartFactory.EXTERNAL_NODE_LABELS_LAYER, LayerConstants.PRIMARY_LAYER);
        LayeredPane scalableLayers = (LayeredPane) root.getLayer (LayerConstants.SCALABLE_LAYERS);
        FreeformLayer scaledFeedbackLayer = new FreeformLayer ();
        scaledFeedbackLayer.setEnabled (false);
        scalableLayers.addLayerAfter (scaledFeedbackLayer, LayerConstants.SCALED_FEEDBACK_LAYER, DiagramRootEditPart.DECORATION_UNPRINTABLE_LAYER);
    }

}

