package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;

import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;

public class GenCommonBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public GenCommonBaseItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    public List getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addDiagramRunTimeClassPropertyDescriptor (object);
            addVisualIDPropertyDescriptor (object);
            addEditPartClassNamePropertyDescriptor (object);
            addMetaInfoProviderClassNamePropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addDiagramRunTimeClassPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenCommonBase_diagramRunTimeClass_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_diagramRunTimeClass_feature", "_UI_GenCommonBase_type"), GMFGenPackage.eINSTANCE.getGenCommonBase_DiagramRunTimeClass (), true, null, null, null));
    }

    protected void addVisualIDPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenCommonBase_visualID_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_visualID_feature", "_UI_GenCommonBase_type"), GMFGenPackage.eINSTANCE.getGenCommonBase_VisualID (), true, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addEditPartClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenCommonBase_editPartClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_editPartClassName_feature", "_UI_GenCommonBase_type"), GMFGenPackage.eINSTANCE.getGenCommonBase_EditPartClassName (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addMetaInfoProviderClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenCommonBase_metaInfoProviderClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenCommonBase_metaInfoProviderClassName_feature", "_UI_GenCommonBase_type"), GMFGenPackage.eINSTANCE.getGenCommonBase_MetaInfoProviderClassName (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    public String getText (Object object) {
        String label = ((GenCommonBase) object).getEditPartClassName ();
        return label == null || label.length () == 0 ? getString ("_UI_GenCommonBase_type") : getString ("_UI_GenCommonBase_type") + " " + label;
    }

    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (GenCommonBase.class)) {
            case GMFGenPackage.GEN_COMMON_BASE__VISUAL_ID :
            case GMFGenPackage.GEN_COMMON_BASE__EDIT_PART_CLASS_NAME :
            case GMFGenPackage.GEN_COMMON_BASE__META_INFO_PROVIDER_CLASS_NAME :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    public ResourceLocator getResourceLocator () {
        return EditorPlugin.INSTANCE;
    }

}

