package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler;

import org.eclipse.gmf.runtime.common.ui.action.ActionMenuManager;

import org.eclipse.gmf.runtime.common.ui.util.IPartSelector;

import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;

import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;

import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsPluginImages;

import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart;

import org.eclipse.jface.action.Action;

import org.eclipse.jface.action.IAction;

import org.eclipse.ui.IWorkbenchPart;

public class SelectMenuManager extends ActionMenuManager {
    private static class SelectMenuAction extends Action {

        public SelectMenuAction () {
            setText (DiagramUIActionsMessages.SelectActionMenu_SelectDropDownText);
            setToolTipText (DiagramUIActionsMessages.SelectActionMenu_SelectDropDownTooltip);
            setImageDescriptor (DiagramUIActionsPluginImages.DESC_SELECTALL);
            setDisabledImageDescriptor (DiagramUIActionsPluginImages.DESC_SELECTALL_DISABLED);
            setHoverImageDescriptor (DiagramUIActionsPluginImages.DESC_SELECTALL);
        }

    }

    public SelectMenuManager () {
        super (ActionIds.MENU_SELECT, new SelectMenuAction (), true);
    }

    public SelectMenuManager (IAction action) {
        super (ActionIds.MENU_SELECT, action, true);
        if (action == null) {
            action = new SelectMenuAction ();
        }
        if (getDefaultAction () instanceof AbstractActionHandler) {
            ((AbstractActionHandler) getDefaultAction ()).setPartSelector (new IPartSelector () {

                public boolean selects (IWorkbenchPart p) {
                    return p instanceof IDiagramWorkbenchPart;
                }

            }

            );
        }
    }

}

