package org.eclipse.gmf.runtime.emf.type.core;

import java.net.URL;

import java.util.LinkedHashSet;

import java.util.List;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.gmf.runtime.common.core.command.ICommand;

import org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditHelper;

import org.eclipse.gmf.runtime.emf.type.core.internal.impl.DefaultMetamodelType;

import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;

public class MetamodelType extends ElementType implements IMetamodelType {
    private IEditHelper editHelper;

    public MetamodelType (String id, URL iconURL, String displayName, EClass eClass, IEditHelper editHelper) {
        super (id, iconURL, displayName, eClass);
        this.editHelper = editHelper;
    }

    public MetamodelType (IMetamodelTypeDescriptor descriptor) {
        this (descriptor.getId (), descriptor.getIconURL (), descriptor.getName (), descriptor.getEClass (), descriptor.getEditHelper ());
    }

    public IEditHelper getEditHelper () {
        if (editHelper == null) {
            IElementType [] superTypes = getAllSuperTypes ();
            if (superTypes.length > 0) {
                editHelper = superTypes [superTypes.length - 1].getEditHelper ();
            } else {
                editHelper = DefaultMetamodelType.getInstance ().getEditHelper ();
            }
        }
        return editHelper;
    }

    public ICommand getEditCommand (IEditCommandRequest request) {
        return getEditHelper ().getEditCommand (request);
    }

    public IElementType [] getAllSuperTypes () {
        if (super.getAllSuperTypes () == null) {
            IClientContext context = ClientContextManager.getInstance ().getBinding (this);
            LinkedHashSet result = new LinkedHashSet ();
            if (getEClass () != null) {
                List supertypes = getEClass ().getEAllSuperTypes ();
                for (int i = 0;
                i < supertypes.size (); i ++) {
                    EClass nextEClass = (EClass) supertypes.get (i);
                    IElementType nextElementType = ElementTypeRegistry.getInstance ().getElementType (nextEClass, context);
                    if ((nextElementType != null) && (nextElementType != DefaultMetamodelType.getInstance ())) {
                        result.add (nextElementType);
                    }
                }
            }
            setAllSupertypes ((IElementType []) result.toArray (new IElementType [] {}));
        }
        return super.getAllSuperTypes ();
    }

    public String toString () {
        return "MetamodelType[" + getId () + "]";
    }

}

