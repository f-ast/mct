package org.eclipse.gmf.graphdef.editor.edit.commands;

import java.util.List;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

import org.eclipse.gmf.runtime.notation.Edge;

import org.eclipse.gmf.runtime.notation.View;

public class GMFGraphReorientConnectionViewCommand extends AbstractTransactionalCommand {
    private IAdaptable edgeAdaptor;

    public GMFGraphReorientConnectionViewCommand (TransactionalEditingDomain editingDomain, String label) {
        super (editingDomain, label, null);
    }

    public List getAffectedFiles () {
        View view = (View) edgeAdaptor.getAdapter (View.class);
        if (view != null) {
            return getWorkspaceFiles (view);
        }
        return super.getAffectedFiles ();
    }

    public IAdaptable getEdgeAdaptor () {
        return edgeAdaptor;
    }

    public void setEdgeAdaptor (IAdaptable edgeAdaptor) {
        this.edgeAdaptor = edgeAdaptor;
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) {
        assert null != edgeAdaptor : "Null child in GMFGraphReorientConnectionViewCommand";
        Edge edge = (Edge) getEdgeAdaptor ().getAdapter (Edge.class);
        assert null != edge : "Null edge in GMFGraphReorientConnectionViewCommand";
        View tempView = edge.getSource ();
        edge.setSource (edge.getTarget ());
        edge.setTarget (tempView);
        return CommandResult.newOKCommandResult ();
    }

}

