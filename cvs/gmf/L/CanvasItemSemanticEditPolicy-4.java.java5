package org.eclipse.gmf.graphdef.editor.edit.policies;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gef.commands.Command;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;

import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;

import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.graphdef.editor.providers.GMFGraphElementTypes;

import org.eclipse.gmf.runtime.emf.type.core.commands.CreateElementCommand;

import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;

import org.eclipse.gmf.runtime.notation.View;

public class CanvasItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {

    protected Command getCreateCommand (CreateElementRequest req) {
        if (GMFGraphElementTypes.Compartment_2001 == req.getElementType ()) {
            if (req.getContainmentFeature () == null) {
                req.setContainmentFeature (GMFGraphPackage.eINSTANCE.getCanvas_Compartments ());
            }
            return getMSLWrapper (new CreateCompartment_2001Command (req));
        }
        if (GMFGraphElementTypes.Node_2002 == req.getElementType ()) {
            if (req.getContainmentFeature () == null) {
                req.setContainmentFeature (GMFGraphPackage.eINSTANCE.getCanvas_Nodes ());
            }
            return getMSLWrapper (new CreateNode_2002Command (req));
        }
        if (GMFGraphElementTypes.Connection_2003 == req.getElementType ()) {
            if (req.getContainmentFeature () == null) {
                req.setContainmentFeature (GMFGraphPackage.eINSTANCE.getCanvas_Connections ());
            }
            return getMSLWrapper (new CreateConnection_2003Command (req));
        }
        if (GMFGraphElementTypes.FigureGallery_2004 == req.getElementType ()) {
            if (req.getContainmentFeature () == null) {
                req.setContainmentFeature (GMFGraphPackage.eINSTANCE.getCanvas_Figures ());
            }
            return getMSLWrapper (new CreateFigureGallery_2004Command (req));
        }
        return super.getCreateCommand (req);
    }

    private static class CreateCompartment_2001Command extends CreateElementCommand {

        public CreateCompartment_2001Command (CreateElementRequest req) {
            super (req);
        }

        protected EClass getEClassToEdit () {
            return GMFGraphPackage.eINSTANCE.getCanvas ();
        }

        ;

        protected EObject getElementToEdit () {
            EObject container = ((CreateElementRequest) getRequest ()).getContainer ();
            if (container instanceof View) {
                container = ((View) container).getElement ();
            }
            return container;
        }

    }

    private static class CreateNode_2002Command extends CreateElementCommand {

        public CreateNode_2002Command (CreateElementRequest req) {
            super (req);
        }

        protected EClass getEClassToEdit () {
            return GMFGraphPackage.eINSTANCE.getCanvas ();
        }

        ;

        protected EObject getElementToEdit () {
            EObject container = ((CreateElementRequest) getRequest ()).getContainer ();
            if (container instanceof View) {
                container = ((View) container).getElement ();
            }
            return container;
        }

    }

    private static class CreateConnection_2003Command extends CreateElementCommand {

        public CreateConnection_2003Command (CreateElementRequest req) {
            super (req);
        }

        protected EClass getEClassToEdit () {
            return GMFGraphPackage.eINSTANCE.getCanvas ();
        }

        ;

        protected EObject getElementToEdit () {
            EObject container = ((CreateElementRequest) getRequest ()).getContainer ();
            if (container instanceof View) {
                container = ((View) container).getElement ();
            }
            return container;
        }

    }

    private static class CreateFigureGallery_2004Command extends CreateElementCommand {

        public CreateFigureGallery_2004Command (CreateElementRequest req) {
            super (req);
        }

        protected EClass getEClassToEdit () {
            return GMFGraphPackage.eINSTANCE.getCanvas ();
        }

        ;

        protected EObject getElementToEdit () {
            EObject container = ((CreateElementRequest) getRequest ()).getContainer ();
            if (container instanceof View) {
                container = ((View) container).getElement ();
            }
            return container;
        }

    }

    protected Command getDuplicateCommand (DuplicateElementsRequest req) {
        TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost ()).getEditingDomain ();
        return getMSLWrapper (new DuplicateAnythingCommand (editingDomain, req));
    }

    private static class DuplicateAnythingCommand extends DuplicateEObjectsCommand {

        public DuplicateAnythingCommand (TransactionalEditingDomain editingDomain, DuplicateElementsRequest req) {
            super (editingDomain, req.getLabel (), req.getElementsToBeDuplicated (), req.getAllDuplicatedElementsMap ());
        }

    }

}

