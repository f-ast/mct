package org.eclipse.gmf.runtime.draw2d.ui.render.internal.factory;

import java.awt.Color;

import org.eclipse.gmf.runtime.draw2d.ui.render.RenderInfo;

public final class RenderedImageKey implements RenderInfo {

    public RenderedImageKey (long checksum, RenderInfo info, Object extraData) {
        this.checksum = checksum;
        this.info = info;
        this.extraData = extraData;
    }

    private long checksum;
    private RenderInfo info;
    private Object extraData;

    public long getChecksum () {
        return checksum;
    }

    public RenderInfo getRenderInfo () {
        return info;
    }

    public Object getExtraData () {
        return extraData;
    }

    public void setExtraData (Object extraData) {
        this.extraData = extraData;
    }

    public int getWidth () {
        return info.getWidth ();
    }

    public int getHeight () {
        return info.getHeight ();
    }

    public Color getFillColor () {
        return info.getFillColor ();
    }

    public Color getOutlineColor () {
        return info.getOutlineColor ();
    }

    public void setValues (int width, int height, Color fill, Color outline, boolean maintainAspectRatio, boolean antialias) {
        throw new UnsupportedOperationException ();
    }

    public boolean shouldMaintainAspectRatio () {
        return info.shouldMaintainAspectRatio ();
    }

    public boolean shouldAntiAlias () {
        return info.shouldAntiAlias ();
    }

    public int hashCode () {
        int hashCode = new Long (checksum).hashCode ();
        hashCode = hashCode + getRenderInfo ().hashCode ();
        return hashCode;
    }

    public boolean equals (Object object) {
        RenderedImageKey imagekey = null;
        if (object instanceof RenderedImageKey) {
            imagekey = (RenderedImageKey) object;
        }
        if (imagekey != null && getChecksum () == imagekey.getChecksum () && getRenderInfo ().equals (imagekey.getRenderInfo ())) {
            return true;
        }
        return false;
    }

}

