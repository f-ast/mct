package org.eclipse.gmf.runtime.diagram.core.commands;

import java.util.ArrayList;

import java.util.List;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.resources.IFile;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.diagram.core.internal.l10n.DiagramCoreMessages;

import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

import org.eclipse.gmf.runtime.emf.core.util.EObjectUtil;

import org.eclipse.gmf.runtime.notation.View;

public class AddCommand extends AbstractTransactionalCommand {
    private IAdaptable parent;
    private IAdaptable child;
    private int index;

    public AddCommand (TransactionalEditingDomain editingDomain, IAdaptable parent, IAdaptable child) {
        this (editingDomain, parent, child, ViewUtil.APPEND);
    }

    public AddCommand (TransactionalEditingDomain editingDomain, IAdaptable parent, IAdaptable child, int index) {
        super (editingDomain, DiagramCoreMessages.AddCommand_Label, null);
        assert null != parent : "Null parent in AddCommand";
        assert null != child : "Null child in AddCommand";
        this.parent = parent;
        this.child = child;
        this.index = index;
    }

    public List getAffectedFiles () {
        View view = (View) parent.getAdapter (View.class);
        if (view != null) {
            List result = new ArrayList ();
            IFile file = EObjectUtil.getWorkspaceFile (view);
            if (file != null) {
                result.add (file);
            }
            return result;
        }
        return super.getAffectedFiles ();
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
        View childView = (View) child.getAdapter (View.class);
        View parentView = (View) parent.getAdapter (View.class);
        if (index == ViewUtil.APPEND) parentView.insertChild (childView);
        else parentView.insertChildAt (childView, index);

        return CommandResult.newOKCommandResult ();
    }

    public String getLabel () {
        return DiagramCoreMessages.AddCommand_Label;
    }

}

