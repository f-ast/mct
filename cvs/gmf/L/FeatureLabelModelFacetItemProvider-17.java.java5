package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IChildCreationExtender;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.FeatureLabelModelFacet;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

public class FeatureLabelModelFacetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public FeatureLabelModelFacetItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addMetaFeaturesPropertyDescriptor (object);
            addEditableMetaFeaturesPropertyDescriptor (object);
            addViewPatternPropertyDescriptor (object);
            addEditorPatternPropertyDescriptor (object);
            addEditPatternPropertyDescriptor (object);
            addViewMethodPropertyDescriptor (object);
            addEditMethodPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addMetaFeaturesPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_metaFeatures_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_metaFeatures_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_MetaFeatures (), true, false, true, null, null, null));
    }

    protected void addEditableMetaFeaturesPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_editableMetaFeatures_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_editableMetaFeatures_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_EditableMetaFeatures (), true, false, true, null, null, null));
    }

    protected void addViewPatternPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_viewPattern_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_viewPattern_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_ViewPattern (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addEditorPatternPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_editorPattern_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_editorPattern_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_EditorPattern (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addViewMethodPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_viewMethod_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_viewMethod_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_ViewMethod (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addEditPatternPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_editPattern_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_editPattern_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_EditPattern (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addEditMethodPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_FeatureLabelModelFacet_editMethod_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_FeatureLabelModelFacet_editMethod_feature", "_UI_FeatureLabelModelFacet_type"), GMFGenPackage.eINSTANCE.getFeatureLabelModelFacet_EditMethod (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/FeatureLabelModelFacet"));
    }

    @Override
    public String getText (Object object) {
        StringBuffer sb = new StringBuffer ();
        for (GenFeature feature : ((FeatureLabelModelFacet) object).getMetaFeatures ()) {
            if (sb.length () > 0) {
                sb.append (", ");
            }
            sb.append (feature.getName ());
        }
        return getString ("_UI_FeatureLabelModelFacet_type") + " " + sb.toString ();
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (FeatureLabelModelFacet.class)) {
            case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__VIEW_PATTERN :
            case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__EDITOR_PATTERN :
            case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__EDIT_PATTERN :
            case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__VIEW_METHOD :
            case GMFGenPackage.FEATURE_LABEL_MODEL_FACET__EDIT_METHOD :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    @Override
    public ResourceLocator getResourceLocator () {
        return ((IChildCreationExtender) adapterFactory).getResourceLocator ();
    }

}

