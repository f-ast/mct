package org.eclipse.gmf.runtime.diagram.ui.internal.dialogs;

import java.util.ArrayList;

import org.eclipse.jface.preference.IPersistentPreferenceStore;

import org.eclipse.jface.preference.IPreferenceNode;

import org.eclipse.jface.preference.IPreferencePage;

import org.eclipse.jface.preference.IPreferenceStore;

import org.eclipse.jface.preference.PreferenceDialog;

import org.eclipse.jface.preference.PreferenceManager;

import org.eclipse.jface.preference.PreferenceNode;

import org.eclipse.swt.SWT;

import org.eclipse.swt.events.SelectionEvent;

import org.eclipse.swt.events.SelectionListener;

import org.eclipse.swt.layout.GridLayout;

import org.eclipse.swt.widgets.Button;

import org.eclipse.swt.widgets.Composite;

import org.eclipse.swt.widgets.Control;

import org.eclipse.swt.widgets.Shell;

import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.ILabels;

import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.PageSetupWidgetFactory;

import org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties;

import org.eclipse.gmf.runtime.diagram.ui.preferences.PrintingPreferencePage;

public class PageSetupSelectionConfigBlock implements ILabels {
    private Button fButtonUseWorkspaceSettings, fButtonConfigure, fButtonUseDiagramSettings;
    private Shell fShell;
    private Initializer fInitialier;
    private Persistor fPersistor;
    private ArrayList fControls = new ArrayList ();
    private IPreferenceStore fStore;
    private IPreferenceStore fGlobalStore;
    private PageSetupDialog fParentDialog;

    public PageSetupSelectionConfigBlock (IPreferenceStore store, IPreferenceStore globalStore, PageSetupDialog dialog) {
        fInitialier = new Initializer (this);
        fPersistor = new Persistor (this);
        fStore = store;
        fGlobalStore = globalStore;
        fParentDialog = dialog;
    }

    protected Control createContents (Composite parent) {
        Composite selectionComposite = new Composite (parent, SWT.NULL);
        selectionComposite.setLayout (new GridLayout (2, false));
        createSelectionGroup (selectionComposite);
        fShell = parent.getShell ();
        fInitialier.initSelectionControls ();
        return selectionComposite;
    }

    protected void save () {
        fPersistor.saveConfigBlockControlValues ();
    }

    private void createSelectionGroup (Composite composite) {
        fButtonUseWorkspaceSettings = PageSetupWidgetFactory.createRadioButton (composite, LABEL_BUTTON_USE_WORKSPACE_SETTINGS);
        fButtonConfigure = PageSetupWidgetFactory.createPushButton (composite, LABEL_BUTTON_CONFIGURE_WORKSPACE_SETTINGS);
        fButtonUseDiagramSettings = PageSetupWidgetFactory.createRadioButton (composite, LABEL_BUTTON_USE_DIAGRAM_SETTINGS);
        if (fGlobalStore == null || ! (fGlobalStore instanceof IPersistentPreferenceStore)) {
            fButtonUseWorkspaceSettings.setEnabled (false);
        }
        addUseWorkspaceSettingsListener ();
        addUseDiagramSettingsListener ();
        addConfigureWorkspaceSettingsListener ();
        fControls.add (fButtonUseWorkspaceSettings);
        fControls.add (fButtonConfigure);
        fControls.add (fButtonUseDiagramSettings);
    }

    private void addUseWorkspaceSettingsListener () {
        fButtonUseWorkspaceSettings.addSelectionListener (new SelectionListener () {

            public void widgetSelected (SelectionEvent e) {
                fParentDialog.getConfigurationBlock ().disableAllControls ();
                fButtonConfigure.setEnabled (true);
                fParentDialog.getOkButton ().setEnabled (true);
            }

            public void widgetDefaultSelected (SelectionEvent e) {
            }

        }

        );
    }

    private void addUseDiagramSettingsListener () {
        fButtonUseDiagramSettings.addSelectionListener (new SelectionListener () {

            public void widgetSelected (SelectionEvent e) {
                fParentDialog.getConfigurationBlock ().enableAllControls ();
                fButtonConfigure.setEnabled (false);
                fParentDialog.getConfigurationBlock ().setOkButtonEnableStatus ();
            }

            public void widgetDefaultSelected (SelectionEvent e) {
            }

        }

        );
    }

    private void addConfigureWorkspaceSettingsListener () {
        fButtonConfigure.addSelectionListener (new SelectionListener () {

            public void widgetSelected (SelectionEvent e) {
                IPreferencePage page = new PrintingPreferencePage (fGlobalStore);
                page.setTitle (ILabels.LABEL_PREFERENCE_PAGE_PRINTING);
                IPreferenceNode targetNode = new PreferenceNode (ID_PAGE_SETUP_PREF_PAGE, page);
                PreferenceManager manager = new PreferenceManager ();
                manager.addToRoot (targetNode);
                PreferenceDialog dialog = new PreferenceDialog (fShell, manager);
                dialog.create ();
                dialog.setMessage (TITLE_PAGE_SETUP_TAB_ITEM);
                dialog.open ();
            }

            public void widgetDefaultSelected (SelectionEvent e) {
            }

        }

        );
    }

    public Control getControl (PageSetupControlType controlType) {
        if (controlType.equals (PageSetupControlType.BUTTON_USE_WORKSPACE_SETTINGS)) return fButtonUseWorkspaceSettings;
        else if (controlType.equals (PageSetupControlType.BUTTON_USE_DIAGRAM_SETTINGS)) return fButtonUseDiagramSettings;
        else if (controlType.equals (PageSetupControlType.BUTTON_CONFIGURE_WORKSPACE_SETTINGS)) return fButtonConfigure;
        else return null;

    }

    public void disableButtonConfigure () {
        fButtonConfigure.setEnabled (false);
    }

    public void enableButtonConfigure () {
        fButtonConfigure.setEnabled (true);
    }

    private class Initializer {
        private PageSetupSelectionConfigBlock fBlockPrint;

        public Initializer (PageSetupSelectionConfigBlock configBlock) {
            fBlockPrint = configBlock;
        }

        public void initSelectionControls () {
            initRadioButtons ();
        }

        private void initRadioButtons () {
            initRadioButton (fBlockPrint, PageSetupControlType.BUTTON_USE_WORKSPACE_SETTINGS, WorkspaceViewerProperties.PREF_USE_WORKSPACE_SETTINGS);
            initRadioButton (fBlockPrint, PageSetupControlType.BUTTON_USE_DIAGRAM_SETTINGS, WorkspaceViewerProperties.PREF_USE_DIAGRAM_SETTINGS);
        }

        private void initRadioButton (PageSetupSelectionConfigBlock block, PageSetupControlType controlType, String key) {
            Button button = (Button) block.getControl (controlType);
            button.setSelection (fStore.getBoolean (key));
        }

    }

    private class Persistor {
        private PageSetupSelectionConfigBlock fBlockPrint;

        public Persistor (PageSetupSelectionConfigBlock configBlock) {
            fBlockPrint = configBlock;
        }

        public void saveConfigBlockControlValues () {
            saveConfigRadioButtonValues ();
        }

        private void saveConfigRadioButtonValues () {
            saveRadioButton (fBlockPrint, PageSetupControlType.BUTTON_USE_WORKSPACE_SETTINGS, WorkspaceViewerProperties.PREF_USE_WORKSPACE_SETTINGS);
            saveRadioButton (fBlockPrint, PageSetupControlType.BUTTON_USE_DIAGRAM_SETTINGS, WorkspaceViewerProperties.PREF_USE_DIAGRAM_SETTINGS);
        }

        private void saveRadioButton (PageSetupSelectionConfigBlock block, PageSetupControlType controlType, String key) {
            Button button = (Button) block.getControl (controlType);
            fStore.setValue (key, button.getSelection ());
        }

    }

}

