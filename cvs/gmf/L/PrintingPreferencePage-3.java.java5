package org.eclipse.gmf.runtime.diagram.ui.preferences;

import org.eclipse.jface.preference.IPreferenceStore;

import org.eclipse.swt.widgets.Composite;

import org.eclipse.swt.widgets.Control;

import org.eclipse.gmf.runtime.common.ui.preferences.AbstractPreferencePage;

import org.eclipse.gmf.runtime.diagram.ui.internal.dialogs.PageSetupConfigBlock;

import org.eclipse.gmf.runtime.diagram.ui.internal.pagesetup.DefaultValues;

import org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties;

public class PrintingPreferencePage extends AbstractPreferencePage {
    public static String ID_PAGE_SETUP_PREF_PAGE = "id.pageSetupPreferencePage";
    private PageSetupConfigBlock fPrinterConfigurationBlock;

    public PrintingPreferencePage () {
        super ();
    }

    public PrintingPreferencePage (IPreferenceStore store) {
        super ();
        setPreferenceStore (store);
    }

    protected void addFields (Composite parent) {
    }

    protected void initHelp () {
    }

    public static void initDefaults (IPreferenceStore store) {
        store.setDefault (WorkspaceViewerProperties.PREF_USE_INCHES, DefaultValues.DEFAULT_INCHES);
        store.setDefault (WorkspaceViewerProperties.PREF_USE_MILLIM, DefaultValues.DEFAULT_MILLIM);
        store.setDefault (WorkspaceViewerProperties.PREF_USE_PORTRAIT, DefaultValues.DEFAULT_PORTRAIT);
        store.setDefault (WorkspaceViewerProperties.PREF_USE_LANDSCAPE, DefaultValues.DEFAULT_LANDSCAPE);
        store.setDefault (WorkspaceViewerProperties.PREF_PAGE_SIZE, DefaultValues.getLocaleSpecificPageType ().getName ());
        store.setDefault (WorkspaceViewerProperties.PREF_PAGE_WIDTH, DefaultValues.getLocaleSpecificPageType ().getWidth ());
        store.setDefault (WorkspaceViewerProperties.PREF_PAGE_HEIGHT, DefaultValues.getLocaleSpecificPageType ().getHeight ());
        store.setDefault (WorkspaceViewerProperties.PREF_MARGIN_TOP, DefaultValues.DEFAULT_MARGIN_TOP);
        store.setDefault (WorkspaceViewerProperties.PREF_MARGIN_BOTTOM, DefaultValues.DEFAULT_MARGIN_BOTTOM);
        store.setDefault (WorkspaceViewerProperties.PREF_MARGIN_LEFT, DefaultValues.DEFAULT_MARGIN_LEFT);
        store.setDefault (WorkspaceViewerProperties.PREF_MARGIN_RIGHT, DefaultValues.DEFAULT_MARGIN_RIGHT);
    }

    protected void performDefaults () {
        super.performDefaults ();
        getFPrinterConfigurationBlock ().performDefaults ();
    }

    public boolean performOk () {
        boolean result = super.performOk ();
        getFPrinterConfigurationBlock ().save ();
        return result;
    }

    protected Control createContents (Composite parent) {
        getFPrinterConfigurationBlock ().createContents (parent);
        return parent;
    }

    private PageSetupConfigBlock getFPrinterConfigurationBlock () {
        if (fPrinterConfigurationBlock == null) {
            fPrinterConfigurationBlock = new PageSetupConfigBlock (getPreferenceStore (), this);
        }
        return fPrinterConfigurationBlock;
    }

}

