package org.eclipse.gmf.graphdef.editor.edit.parts;

import org.eclipse.draw2d.CompoundBorder;

import org.eclipse.draw2d.IFigure;

import org.eclipse.draw2d.LineBorder;

import org.eclipse.draw2d.MarginBorder;

import org.eclipse.draw2d.Polyline;

import org.eclipse.draw2d.StackLayout;

import org.eclipse.gef.EditPolicy;

import org.eclipse.gef.editpolicies.LayoutEditPolicy;

import org.eclipse.gmf.graphdef.editor.edit.policies.Polyline3ItemSemanticEditPolicy;

import org.eclipse.gmf.graphdef.editor.edit.polocies.DomainBasedXYLayoutEditPolicy;

import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;

import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;

import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;

import org.eclipse.gmf.runtime.notation.View;

import org.eclipse.swt.SWT;

import org.eclipse.swt.widgets.Display;

public class Polyline3EditPart extends AbstractFigureEditPart {
    public static final int VISUAL_ID = 3021;
    protected IFigure contentPane;
    protected IFigure primaryShape;

    public Polyline3EditPart (View view) {
        super (view);
    }

    protected void createDefaultEditPolicies () {
        super.createDefaultEditPolicies ();
        installEditPolicy (EditPolicyRoles.SEMANTIC_ROLE, new Polyline3ItemSemanticEditPolicy ());
        installEditPolicy (EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy ());
    }

    protected LayoutEditPolicy createLayoutEditPolicy () {
        return new DomainBasedXYLayoutEditPolicy (getMapMode ());
    }

    protected IFigure createNodeShape () {
        return primaryShape = new Polyline ();
    }

    public Polyline getPrimaryShape () {
        return (Polyline) primaryShape;
    }

    protected NodeFigure createNodePlate () {
        DefaultSizeNodeFigure result = new DefaultSizeNodeFigure (getMapMode ().DPtoLP (0), getMapMode ().DPtoLP (0));
        LineBorder contourBorder = new LineBorder (Display.getDefault ().getSystemColor (SWT.COLOR_WIDGET_NORMAL_SHADOW));
        MarginBorder marginBorder = new MarginBorder (5);
        CompoundBorder compoundBorder = new CompoundBorder (contourBorder, marginBorder);
        result.setBorder (compoundBorder);
        return result;
    }

    protected NodeFigure createNodeFigure () {
        NodeFigure figure = createNodePlate ();
        figure.setLayoutManager (new StackLayout ());
        IFigure shape = createNodeShape ();
        figure.add (shape);
        contentPane = setupContentPane (shape);
        return figure;
    }

    protected IFigure setupContentPane (IFigure nodeShape) {
        return nodeShape;
    }

    public IFigure getContentPane () {
        if (contentPane != null) {
            return contentPane;
        }
        return super.getContentPane ();
    }

}

