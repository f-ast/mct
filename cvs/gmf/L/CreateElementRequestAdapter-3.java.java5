package org.eclipse.gmf.runtime.diagram.core.edithelpers;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.Platform;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;

import org.eclipse.gmf.runtime.emf.core.util.IProxyEObject;

import org.eclipse.gmf.runtime.emf.core.util.ProxyUtil;

import org.eclipse.gmf.runtime.emf.type.core.IElementType;

import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;

public class CreateElementRequestAdapter implements IAdaptable, IProxyEObject {
    private final CreateElementRequest createElementRequest;

    public CreateElementRequestAdapter (CreateElementRequest createElementRequest) {
        assert null != createElementRequest : "Null createElementRequest not supported in CreateElementRequestAdapter";
        this.createElementRequest = createElementRequest;
    }

    public Object getAdapter (Class adapter) {
        if (adapter.isInstance (createElementRequest)) {
            return createElementRequest;
        }
        if (adapter.isInstance (getNewElement ())) {
            return getNewElement ();
        }
        if (adapter.isInstance (getElementType ())) {
            return getElementType ();
        }
        if (adapter.isInstance (this)) {
            return this;
        }
        return Platform.getAdapterManager ().getAdapter (createElementRequest, adapter);
    }

    private EObject getNewElement () {
        return createElementRequest.getNewElement ();
    }

    private IElementType getElementType () {
        return createElementRequest.getElementType ();
    }

    public void setNewElement (EObject newElement) {
        createElementRequest.setNewElement (newElement);
    }

    public Object getProxyClassID () {
        return getNewElement () == null ? null : ProxyUtil.getProxyClassID (getNewElement ());
    }

    public EObject resolve () {
        return getNewElement () == null ? null : ProxyUtil.resolve (MEditingDomainGetter.getMEditingDomain (createElementRequest.getContainer ()), getNewElement ());
    }

}

