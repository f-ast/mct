package org.eclipse.gmf.gmfgraph;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class LineKind extends AbstractEnumerator {
    public static final int LINE_SOLID = 1;
    public static final int LINE_DASH = 2;
    public static final int LINE_DOT = 3;
    public static final int LINE_DASHDOT = 4;
    public static final int LINE_DASHDOTDOT = 5;
    public static final int LINE_CUSTOM = 6;
    public static final LineKind LINE_SOLID_LITERAL = new LineKind (LINE_SOLID, "LINE_SOLID", "LINE_SOLID");
    public static final LineKind LINE_DASH_LITERAL = new LineKind (LINE_DASH, "LINE_DASH", "LINE_DASH");
    public static final LineKind LINE_DOT_LITERAL = new LineKind (LINE_DOT, "LINE_DOT", "LINE_DOT");
    public static final LineKind LINE_DASHDOT_LITERAL = new LineKind (LINE_DASHDOT, "LINE_DASHDOT", "LINE_DASHDOT");
    public static final LineKind LINE_DASHDOTDOT_LITERAL = new LineKind (LINE_DASHDOTDOT, "LINE_DASHDOTDOT", "LINE_DASHDOTDOT");
    public static final LineKind LINE_CUSTOM_LITERAL = new LineKind (LINE_CUSTOM, "LINE_CUSTOM", "LINE_CUSTOM");
    private static final LineKind [] VALUES_ARRAY = new LineKind [] {LINE_SOLID_LITERAL, LINE_DASH_LITERAL, LINE_DOT_LITERAL, LINE_DASHDOT_LITERAL, LINE_DASHDOTDOT_LITERAL, LINE_CUSTOM_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static LineKind get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            LineKind result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static LineKind getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            LineKind result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static LineKind get (int value) {
        switch (value) {
            case LINE_SOLID :
                return LINE_SOLID_LITERAL;
            case LINE_DASH :
                return LINE_DASH_LITERAL;
            case LINE_DOT :
                return LINE_DOT_LITERAL;
            case LINE_DASHDOT :
                return LINE_DASHDOT_LITERAL;
            case LINE_DASHDOTDOT :
                return LINE_DASHDOTDOT_LITERAL;
            case LINE_CUSTOM :
                return LINE_CUSTOM_LITERAL;
        }
        return null;
    }

    private LineKind (int value, String name, String literal) {
        super (value, name, literal);
    }

}

