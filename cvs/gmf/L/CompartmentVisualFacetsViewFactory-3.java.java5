package org.eclipse.gmf.graphdef.editor.view.factories;

import java.util.ArrayList;

import java.util.List;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.emf.ecore.EAnnotation;

import org.eclipse.emf.ecore.EcoreFactory;

import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;

import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;

import org.eclipse.gmf.runtime.diagram.ui.view.factories.ListCompartmentViewFactory;

import org.eclipse.gmf.runtime.notation.DrawerStyle;

import org.eclipse.gmf.runtime.notation.NotationFactory;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.gmf.runtime.notation.TitleStyle;

import org.eclipse.gmf.runtime.notation.View;

public class CompartmentVisualFacetsViewFactory extends ListCompartmentViewFactory {

    protected List createStyles (View view) {
        List styles = new ArrayList ();
        styles.add (NotationFactory.eINSTANCE.createDrawerStyle ());
        styles.add (NotationFactory.eINSTANCE.createTitleStyle ());
        styles.add (NotationFactory.eINSTANCE.createSortingStyle ());
        styles.add (NotationFactory.eINSTANCE.createFilteringStyle ());
        return styles;
    }

    protected void decorateView (View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
        if (semanticHint == null) {
            semanticHint = GMFGraphVisualIDRegistry.getType (org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentVisualFacetsEditPart.VISUAL_ID);
            view.setType (semanticHint);
        }
        super.decorateView (containerView, view, semanticAdapter, semanticHint, index, persisted);
        setupCompartmentTitle (view);
        setupCompartmentCollapsed (view);
        if (! CanvasEditPart.MODEL_ID.equals (GMFGraphVisualIDRegistry.getModelID (containerView))) {
            EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation ();
            shortcutAnnotation.setSource ("Shortcut");
            shortcutAnnotation.getDetails ().put ("modelID", CanvasEditPart.MODEL_ID);
            view.getEAnnotations ().add (shortcutAnnotation);
        }
    }

    protected void setupCompartmentTitle (View view) {
        TitleStyle titleStyle = (TitleStyle) view.getStyle (NotationPackage.eINSTANCE.getTitleStyle ());
        if (titleStyle != null) {
            titleStyle.setShowTitle (true);
        }
    }

    protected void setupCompartmentCollapsed (View view) {
        DrawerStyle drawerStyle = (DrawerStyle) view.getStyle (NotationPackage.eINSTANCE.getDrawerStyle ());
        if (drawerStyle != null) {
            drawerStyle.setCollapsed (false);
        }
    }

}

