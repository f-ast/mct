package org.eclipse.gmf.runtime.emf.type.core.internal;

import org.eclipse.core.runtime.CoreException;

import org.eclipse.core.runtime.IStatus;

import org.eclipse.core.runtime.Status;

import org.eclipse.gmf.runtime.emf.type.core.internal.l10n.EMFTypeCoreMessages;

public class EMFTypePluginStatusCodes {
    public static final int COMMAND_FAILURE = 4;
    public static final int ERROR_PARSING_XML = 10;
    public static final int TYPE_NOT_INITED = 11;
    public static final int ADVICE_BINDING_NOT_INITED = 12;
    public static final int ELEMENT_NOT_INITED = 13;
    public static final int FACTORY_NOT_INITED = 14;
    public static final int METAMODEL_NOT_INITED = 15;
    public static final int CONTEXT_NOT_INITED = 16;
    public static final int EDIT_HELPER_ADVICE_CLASS_NOT_FOUND = 20;
    public static final int MATCHER_CLASS_NOT_FOUND = 21;
    public static final int EDIT_HELPER_CLASS_NOT_FOUND = 22;
    public static final int EXPRESSION_EVALUATION_FAILURE = 23;
    public static final int ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND = 24;
    public static final int CONTAINMENT_FEATURE_NOT_REFERENCE_FEATURE = 25;
    public static final int CONTAINMENT_FEATURE_NO_SUCH_FEATURE = 26;
    public static final int SPECIALIZATION_TYPE_SPECIALIZES_MULTIPLE_METAMODEL_TYPES = 27;
    public static final int SPECIALIZATION_TYPE_SPECIALIZES_INVALID_ID = 28;
    public static final int CONTAINMENT_FEATURE_NO_METAMODEL = 29;
    public static final int CLIENT_CONTEXT_NOT_INITED = 50;
    public static final int BINDING_NO_CONTEXT = 60;
    public static final int BINDING_NO_SUCH_CONTEXT = 61;
    public static final int PATTERN_INVALID_SYNTAX = 62;
    public static final int BINDING_NO_REF_OR_PATTERN = 63;
    public static final int BINDING_BOTH_REF_AND_PATTERN = 64;
    public static final int CLIENT_MATCHER_FAILURE = 70;
    public static final int CLIENT_NO_MATCHER = 71;

    private EMFTypePluginStatusCodes () {
    }

    public static CoreException getAdviceBindingInitException (String adviceId, String reason) {
        return new CoreException (new Status (IStatus.WARNING, EMFTypePlugin.getPluginId (), ADVICE_BINDING_NOT_INITED, EMFTypeCoreMessages.bind (EMFTypeCoreMessages.adviceBinding_not_init_WARN_, adviceId, reason), null));
    }

    public static CoreException getTypeInitException (String typeId, String reason, Exception e) {
        return new CoreException (new Status (IStatus.WARNING, EMFTypePlugin.getPluginId (), TYPE_NOT_INITED, EMFTypeCoreMessages.bind (EMFTypeCoreMessages.type_not_init_WARN_, typeId, reason), e));
    }

    public static CoreException getInitException (String elementId, String reason, Exception e) {
        return new CoreException (new Status (IStatus.WARNING, EMFTypePlugin.getPluginId (), ELEMENT_NOT_INITED, EMFTypeCoreMessages.bind (EMFTypeCoreMessages.elment_not_init_WARN_, elementId, reason), e));
    }

    public static CoreException getFactoryInitException (String factoryName, String reason) {
        return new CoreException (new Status (IStatus.WARNING, EMFTypePlugin.getPluginId (), FACTORY_NOT_INITED, EMFTypeCoreMessages.bind (EMFTypeCoreMessages.elementTypeFactory_not_init_WARN_, factoryName, reason), null));
    }

    public static CoreException getMetamodelInitException (String nsURI, String reason) {
        return new CoreException (new Status (IStatus.WARNING, EMFTypePlugin.getPluginId (), METAMODEL_NOT_INITED, EMFTypeCoreMessages.bind (EMFTypeCoreMessages.metamodel_not_init_WARN_, nsURI, reason), null));
    }

    public static CoreException getContextInitException (String contextId, String reason) {
        return new CoreException (new Status (IStatus.WARNING, EMFTypePlugin.getPluginId (), CONTEXT_NOT_INITED, EMFTypeCoreMessages.bind (EMFTypeCoreMessages.clientContext_not_init_WARN_, contextId, reason), null));
    }

}

