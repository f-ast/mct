package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenPropertySheet;

import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;

public class GenPropertySheetItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public GenPropertySheetItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addPackageNamePropertyDescriptor (object);
            addReadOnlyPropertyDescriptor (object);
            addNeedsCaptionPropertyDescriptor (object);
            addLabelProviderClassNamePropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addPackageNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPropertySheet_packageName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPropertySheet_packageName_feature", "_UI_GenPropertySheet_type"), GMFGenPackage.eINSTANCE.getGenPropertySheet_PackageName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addReadOnlyPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPropertySheet_readOnly_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPropertySheet_readOnly_feature", "_UI_GenPropertySheet_type"), GMFGenPackage.eINSTANCE.getGenPropertySheet_ReadOnly (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
    }

    protected void addNeedsCaptionPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPropertySheet_needsCaption_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPropertySheet_needsCaption_feature", "_UI_GenPropertySheet_type"), GMFGenPackage.eINSTANCE.getGenPropertySheet_NeedsCaption (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
    }

    protected void addLabelProviderClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPropertySheet_labelProviderClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPropertySheet_labelProviderClassName_feature", "_UI_GenPropertySheet_type"), GMFGenPackage.eINSTANCE.getGenPropertySheet_LabelProviderClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object) {
        if (childrenFeatures == null) {
            super.getChildrenFeatures (object);
            childrenFeatures.add (GMFGenPackage.eINSTANCE.getGenPropertySheet_Tabs ());
        }
        return childrenFeatures;
    }

    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child) {
        return super.getChildFeature (object, child);
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/GenPropertySheet"));
    }

    @Override
    public String getText (Object object) {
        String label = ((GenPropertySheet) object).getPackageName ();
        return label == null || label.length () == 0 ? getString ("_UI_GenPropertySheet_type") : getString ("_UI_GenPropertySheet_type") + " " + label;
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (GenPropertySheet.class)) {
            case GMFGenPackage.GEN_PROPERTY_SHEET__PACKAGE_NAME :
            case GMFGenPackage.GEN_PROPERTY_SHEET__READ_ONLY :
            case GMFGenPackage.GEN_PROPERTY_SHEET__NEEDS_CAPTION :
            case GMFGenPackage.GEN_PROPERTY_SHEET__LABEL_PROVIDER_CLASS_NAME :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
            case GMFGenPackage.GEN_PROPERTY_SHEET__TABS :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
        newChildDescriptors.add (createChildParameter (GMFGenPackage.eINSTANCE.getGenPropertySheet_Tabs (), GMFGenFactory.eINSTANCE.createGenStandardPropertyTab ()));
        newChildDescriptors.add (createChildParameter (GMFGenPackage.eINSTANCE.getGenPropertySheet_Tabs (), GMFGenFactory.eINSTANCE.createGenCustomPropertyTab ()));
    }

    @Override
    public ResourceLocator getResourceLocator () {
        return EditorPlugin.INSTANCE;
    }

}

