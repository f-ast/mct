package org.eclipse.gmf.runtime.diagram.ui.internal.dialogs.sortfilter;

import java.util.Iterator;

import java.util.List;

import java.util.Map;

import org.eclipse.gmf.runtime.common.core.util.StringStatics;

import org.eclipse.gmf.runtime.diagram.ui.dialogs.sortfilter.SortFilterPage;

import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;

import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;

import org.eclipse.jface.preference.PreferenceNode;

import org.eclipse.swt.widgets.Display;

public class SortFilterDialogUtil {
    private final static String ROOT_NAME = DiagramUIMessages.SortFilterDialog_rootTitle;

    private SortFilterDialogUtil () {
    }

    static public int invokeDialog (GraphicalEditPart editPart, SortFilterPage rootPage, List collectionPages) {
        SortFilterDialog sortFilterDialog = new SortFilterDialog (Display.getCurrent ().getActiveShell (), editPart.getViewer ().getEditDomain ().getCommandStack ());
        rootPage.setTitle (ROOT_NAME);
        sortFilterDialog.getPreferenceManager ().addToRoot (new SortFilterRootPreferenceNode (ROOT_NAME, rootPage, sortFilterDialog));
        Iterator iter = collectionPages.iterator ();
        while (iter.hasNext ()) {
            sortFilterDialog.getPreferenceManager ().addTo (ROOT_NAME, new PreferenceNode (StringStatics.BLANK, (SortFilterPage) iter.next ()));
        }
        sortFilterDialog.create ();
        return sortFilterDialog.open ();
    }

    static public int invokeFilterDialog (List selection, Map filterMap) {
        FilterDialog filterDialog = new FilterDialog (Display.getCurrent ().getActiveShell (), selection, filterMap);
        return filterDialog.open ();
    }

}

