package org.eclipse.gmf.graphdef.editor.providers;

import java.lang.ref.WeakReference;

import org.eclipse.gef.EditPart;

import org.eclipse.gef.EditPartFactory;

import org.eclipse.gmf.runtime.common.core.service.IOperation;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;

import org.eclipse.gmf.runtime.diagram.ui.services.editpart.AbstractEditPartProvider;

import org.eclipse.gmf.runtime.diagram.ui.services.editpart.CreateGraphicEditPartOperation;

import org.eclipse.gmf.runtime.diagram.ui.services.editpart.IEditPartOperation;

import org.eclipse.gmf.runtime.notation.View;

import org.eclipse.gmf.graphdef.editor.edit.parts.GMFGraphEditPartFactory;

import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;

import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;

public class GMFGraphEditPartProvider extends AbstractEditPartProvider {
    private EditPartFactory factory;
    private boolean allowCaching;
    private WeakReference cachedPart;
    private WeakReference cachedView;

    public GMFGraphEditPartProvider () {
        setFactory (new GMFGraphEditPartFactory ());
        setAllowCaching (true);
    }

    public final EditPartFactory getFactory () {
        return factory;
    }

    protected void setFactory (EditPartFactory factory) {
        this.factory = factory;
    }

    public final boolean isAllowCaching () {
        return allowCaching;
    }

    protected synchronized void setAllowCaching (boolean allowCaching) {
        this.allowCaching = allowCaching;
        if (! allowCaching) {
            cachedPart = null;
            cachedView = null;
        }
    }

    protected IGraphicalEditPart createEditPart (View view) {
        EditPart part = factory.createEditPart (null, view);
        if (part instanceof IGraphicalEditPart) {
            return (IGraphicalEditPart) part;
        }
        return null;
    }

    protected IGraphicalEditPart getCachedPart (View view) {
        if (cachedView != null && cachedView.get () == view) {
            return (IGraphicalEditPart) cachedPart.get ();
        }
        return null;
    }

    public synchronized IGraphicalEditPart createGraphicEditPart (View view) {
        if (isAllowCaching ()) {
            IGraphicalEditPart part = getCachedPart (view);
            cachedPart = null;
            cachedView = null;
            if (part != null) {
                return part;
            }
        }
        return createEditPart (view);
    }

    public synchronized boolean provides (IOperation operation) {
        if (operation instanceof CreateGraphicEditPartOperation) {
            View view = ((IEditPartOperation) operation).getView ();
            if (! CanvasEditPart.MODEL_ID.equals (GMFGraphVisualIDRegistry.getModelID (view))) {
                return false;
            }
            if (isAllowCaching () && getCachedPart (view) != null) {
                return true;
            }
            IGraphicalEditPart part = createEditPart (view);
            if (part != null) {
                if (isAllowCaching ()) {
                    cachedPart = new WeakReference (part);
                    cachedView = new WeakReference (view);
                }
                return true;
            }
        }
        return false;
    }

}

