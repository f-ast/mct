package org.eclipse.gmf.runtime.diagram.ui.internal.editparts;

import org.eclipse.draw2d.StackLayout;

import org.eclipse.draw2d.geometry.Dimension;

import org.eclipse.gef.EditPart;

import org.eclipse.gmf.runtime.common.ui.services.parser.CommonParserHint;

import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;

import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;

import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;

import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;

import org.eclipse.gmf.runtime.notation.View;

import org.eclipse.swt.graphics.Color;

public class TextEditPart extends ShapeNodeEditPart {
    private static final int TEXT_DEFAULT_WIDTH_DP = 100;
    private static final int TEXT_DEFAULT_HEIGHT_DP = 13;

    public TextEditPart (View view) {
        super (view);
    }

    protected NodeFigure createNodeFigure () {
        Dimension defaultSize = new Dimension (getMapMode ().DPtoLP (TEXT_DEFAULT_WIDTH_DP), getMapMode ().DPtoLP (TEXT_DEFAULT_HEIGHT_DP));
        DefaultSizeNodeFigure nodeFigure = new DefaultSizeNodeFigure (defaultSize.width, defaultSize.height);
        nodeFigure.setBorder (null);
        nodeFigure.setOpaque (false);
        nodeFigure.setLayoutManager (new StackLayout ());
        nodeFigure.setDefaultSize (defaultSize);
        return nodeFigure;
    }

    protected void setBackgroundColor (Color color) {
        getFigure ().setBackgroundColor (null);
    }

    protected void refreshVisuals () {
        refreshVisibility ();
        refreshBounds ();
        refreshFont ();
    }

    public EditPart getPrimaryChildEditPart () {
        return getChildBySemanticHint (CommonParserHint.DESCRIPTION);
    }

    protected void createDefaultEditPolicies () {
        super.createDefaultEditPolicies ();
        removeEditPolicy (EditPolicyRoles.SORT_FILTER_ROLE);
        removeEditPolicy (EditPolicyRoles.CONNECTION_HANDLES_ROLE);
    }

}

