package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import java.util.HashSet;

import java.util.Iterator;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenBaseElement;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec;

import org.eclipse.gmf.codegen.gmfgen.GenLink;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

import org.eclipse.gmf.codegen.gmfgen.ModelFacet;

import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;

public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
    protected EList initializers = null;

    protected GenFeatureSeqInitializerImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenFeatureSeqInitializer ();
    }

    public EList getInitializers () {
        if (initializers == null) {
            initializers = new EObjectContainmentEList (GenFeatureValueSpec.class, this, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS);
        }
        return initializers;
    }

    public String [] getRequiredPluginIDs () {
        HashSet ids = new HashSet ();
        for (Iterator it = getInitializers ().iterator ();
        it.hasNext ();) {
            GenFeatureValueSpec valueSpec = (GenFeatureValueSpec) it.next ();
            if ("ocl".equals (valueSpec.getLanguage ())) {
                ids.add ("org.eclipse.emf.query.ocl");
            }
        }
        return (String []) ids.toArray (new String [ids.size ()]);
    }

    public String getElementClassAccessorName () {
        GenClass genClass = getElementClass ();
        return (genClass != null) ? genClass.getClassifierAccessorName () : null;
    }

    public String getElementQualifiedPackageInterfaceName () {
        GenClass genClass = getElementClass ();
        return (genClass != null) ? genClass.getGenPackage ().getQualifiedPackageInterfaceName () : null;
    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT :
                    if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);

                    return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT, msgs);
                default :
                    return eDynamicInverseAdd (otherEnd, featureID, baseClass, msgs);
            }
        }
        if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);

        return eBasicSetContainer (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT :
                    return eBasicSetContainer (null, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT, msgs);
                case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                    return ((InternalEList) getInitializers ()).basicRemove (otherEnd, msgs);
                default :
                    return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
            }
        }
        return eBasicSetContainer (null, featureID, msgs);
    }

    public NotificationChain eBasicRemoveFromContainer (NotificationChain msgs) {
        if (eContainerFeatureID >= 0) {
            switch (eContainerFeatureID) {
                case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT :
                    return eContainer.eInverseRemove (this, GMFGenPackage.GEN_BASE_ELEMENT__MODEL_ELEMENT_INITIALIZER, GenBaseElement.class, msgs);
                default :
                    return eDynamicBasicRemoveFromContainer (msgs);
            }
        }
        return eContainer.eInverseRemove (this, EOPPOSITE_FEATURE_BASE - eContainerFeatureID, null, msgs);
    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT :
                return getElement ();
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return getInitializers ();
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                getInitializers ().addAll ((Collection) newValue);
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT :
                return getElement () != null;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return initializers != null && ! initializers.isEmpty ();
        }
        return eDynamicIsSet (eFeature);
    }

    private GenClass getElementClass () {
        GenBaseElement baseElement = getElement ();
        if (baseElement == null) {
            return null;
        }
        GenClass contextEClass = null;
        if (baseElement instanceof GenNode) {
            contextEClass = ((GenNode) baseElement).getDomainMetaClass ();
        } else if (baseElement instanceof GenLink) {
            ModelFacet facet = ((GenLink) baseElement).getModelFacet ();
            contextEClass = (facet instanceof TypeLinkModelFacet) ? ((TypeLinkModelFacet) facet).getMetaClass () : null;
        }

        return contextEClass;
    }

}

