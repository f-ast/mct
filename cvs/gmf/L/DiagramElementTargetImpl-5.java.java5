package org.eclipse.gmf.mappings.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.mappings.DiagramElementTarget;

import org.eclipse.gmf.mappings.GMFMapPackage;

import org.eclipse.gmf.mappings.MappingEntry;

public class DiagramElementTargetImpl extends EObjectImpl implements DiagramElementTarget {
    protected MappingEntry element;

    protected DiagramElementTargetImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFMapPackage.eINSTANCE.getDiagramElementTarget ();
    }

    public MappingEntry getElement () {
        if (element != null && element.eIsProxy ()) {
            InternalEObject oldElement = (InternalEObject) element;
            element = (MappingEntry) eResolveProxy (oldElement);
            if (element != oldElement) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.DIAGRAM_ELEMENT_TARGET__ELEMENT, oldElement, element));

            }
        }
        return element;
    }

    public MappingEntry basicGetElement () {
        return element;
    }

    public void setElement (MappingEntry newElement) {
        MappingEntry oldElement = element;
        element = newElement;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.DIAGRAM_ELEMENT_TARGET__ELEMENT, oldElement, element));

    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFMapPackage.DIAGRAM_ELEMENT_TARGET__ELEMENT :
                if (resolve) return getElement ();

                return basicGetElement ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @Override
    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFMapPackage.DIAGRAM_ELEMENT_TARGET__ELEMENT :
                setElement ((MappingEntry) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    @Override
    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFMapPackage.DIAGRAM_ELEMENT_TARGET__ELEMENT :
                setElement ((MappingEntry) null);
                return;
        }
        super.eUnset (featureID);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFMapPackage.DIAGRAM_ELEMENT_TARGET__ELEMENT :
                return element != null;
        }
        return super.eIsSet (featureID);
    }

}

