package org.eclipse.gmf.internal.common.reconcile;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EStructuralFeature;

public abstract class Decision {
    private final EStructuralFeature myFeature;

    public abstract void apply (EObject current, EObject old);

    public Decision (EStructuralFeature feature) {
        myFeature = feature;
    }

    protected final EStructuralFeature getFeature () {
        return myFeature;
    }

    public static class ALWAYS_OLD extends Decision {

        public ALWAYS_OLD (EStructuralFeature feature) {
            super (feature);
        }

        public void apply (EObject current, EObject old) {
            preserveOld (current, old);
        }

    }

    public static class ALWAYS_NEW extends Decision {

        public ALWAYS_NEW (EStructuralFeature feature) {
            super (feature);
        }

        public void apply (EObject current, EObject old) {
            acceptNew (current, old);
        }

    }

    protected void acceptNew (EObject current, EObject old) {
    }

    protected void preserveOld (EObject current, EObject old) {
        Object oldValue = old.eGet (getFeature (), true);
        current.eSet (getFeature (), oldValue);
    }

    protected final boolean isValueSet (EObject obj) {
        return obj.eIsSet (getFeature ());
    }

}

