package org.eclipse.gmf.runtime.diagram.ui.internal.ruler.commands;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.diagram.ui.internal.ruler.DiagramRuler;

import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

import org.eclipse.gmf.runtime.notation.Guide;

import org.eclipse.gmf.runtime.notation.NotationFactory;

public class CreateGuideCommand extends AbstractTransactionalCommand {
    private DiagramRuler parent;
    private int position;

    public CreateGuideCommand (TransactionalEditingDomain editingDomain, DiagramRuler parent, int position) {
        super (editingDomain, DiagramUIMessages.Command_createGuide, null);
        this.parent = parent;
        this.position = position;
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
        Guide theGuide = NotationFactory.eINSTANCE.createGuide ();
        theGuide.setPosition (position);
        parent.addGuide (theGuide);
        parent = null;
        return CommandResult.newOKCommandResult (theGuide);
    }

}

