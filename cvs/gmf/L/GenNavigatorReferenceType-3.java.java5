package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class GenNavigatorReferenceType extends AbstractEnumerator {
    public static final int CHILDREN = 0;
    public static final int OUT_TAGET = 1;
    public static final int IN_SOURCE = 2;
    public static final GenNavigatorReferenceType CHILDREN_LITERAL = new GenNavigatorReferenceType (CHILDREN, "children", "children");
    public static final GenNavigatorReferenceType OUT_TAGET_LITERAL = new GenNavigatorReferenceType (OUT_TAGET, "out_taget", "out_taget");
    public static final GenNavigatorReferenceType IN_SOURCE_LITERAL = new GenNavigatorReferenceType (IN_SOURCE, "in_source", "in_source");
    private static final GenNavigatorReferenceType [] VALUES_ARRAY = new GenNavigatorReferenceType [] {CHILDREN_LITERAL, OUT_TAGET_LITERAL, IN_SOURCE_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static GenNavigatorReferenceType get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            GenNavigatorReferenceType result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static GenNavigatorReferenceType getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            GenNavigatorReferenceType result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static GenNavigatorReferenceType get (int value) {
        switch (value) {
            case CHILDREN :
                return CHILDREN_LITERAL;
            case OUT_TAGET :
                return OUT_TAGET_LITERAL;
            case IN_SOURCE :
                return IN_SOURCE_LITERAL;
        }
        return null;
    }

    private GenNavigatorReferenceType (int value, String name, String literal) {
        super (value, name, literal);
    }

}

