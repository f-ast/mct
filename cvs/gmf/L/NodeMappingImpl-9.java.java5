package org.eclipse.gmf.mappings.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EAttribute;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.gmfgraph.Node;

import org.eclipse.gmf.mappings.Constraint;

import org.eclipse.gmf.mappings.ElementInitializer;

import org.eclipse.gmf.mappings.GMFMapPackage;

import org.eclipse.gmf.mappings.NodeMapping;

import org.eclipse.gmf.mappings.Tool;

public class NodeMappingImpl extends AbstractNodeMappingImpl implements NodeMapping {
    protected Node diagramNode = null;

    protected NodeMappingImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFMapPackage.eINSTANCE.getNodeMapping ();
    }

    public Node getDiagramNode () {
        if (diagramNode != null && diagramNode.eIsProxy ()) {
            Node oldDiagramNode = diagramNode;
            diagramNode = (Node) eResolveProxy ((InternalEObject) diagramNode);
            if (diagramNode != oldDiagramNode) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));

            }
        }
        return diagramNode;
    }

    public Node basicGetDiagramNode () {
        return diagramNode;
    }

    public void setDiagramNode (Node newDiagramNode) {
        Node oldDiagramNode = diagramNode;
        diagramNode = newDiagramNode;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE, oldDiagramNode, diagramNode));

    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
                    return ((InternalEList) getChildMappings ()).basicAdd (otherEnd, msgs);
                case GMFMapPackage.NODE_MAPPING__COMPARTMENT_MAPPINGS :
                    return ((InternalEList) getCompartmentMappings ()).basicAdd (otherEnd, msgs);
                default :
                    return eDynamicInverseAdd (otherEnd, featureID, baseClass, msgs);
            }
        }
        if (eContainer != null) msgs = eBasicRemoveFromContainer (msgs);

        return eBasicSetContainer (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION :
                    return basicSetDomainSpecialization (null, msgs);
                case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER :
                    return basicSetDomainInitializer (null, msgs);
                case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
                    return ((InternalEList) getChildMappings ()).basicRemove (otherEnd, msgs);
                case GMFMapPackage.NODE_MAPPING__COMPARTMENT_MAPPINGS :
                    return ((InternalEList) getCompartmentMappings ()).basicRemove (otherEnd, msgs);
                case GMFMapPackage.NODE_MAPPING__TOOL :
                    return basicSetTool (null, msgs);
                default :
                    return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
            }
        }
        return eBasicSetContainer (null, featureID, msgs);
    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT :
                if (resolve) return getDomainMetaElement ();

                return basicGetDomainMetaElement ();
            case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION :
                return getDomainSpecialization ();
            case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER :
                return getDomainInitializer ();
            case GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE :
                if (resolve) return getContainmentFeature ();

                return basicGetContainmentFeature ();
            case GMFMapPackage.NODE_MAPPING__EDIT_FEATURE :
                if (resolve) return getEditFeature ();

                return basicGetEditFeature ();
            case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
                return getChildMappings ();
            case GMFMapPackage.NODE_MAPPING__COMPARTMENT_MAPPINGS :
                return getCompartmentMappings ();
            case GMFMapPackage.NODE_MAPPING__TOOL :
                return getTool ();
            case GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE :
                if (resolve) return getDiagramNode ();

                return basicGetDiagramNode ();
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT :
                setDomainMetaElement ((EClass) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION :
                setDomainSpecialization ((Constraint) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER :
                setDomainInitializer ((ElementInitializer) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE :
                setContainmentFeature ((EReference) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__EDIT_FEATURE :
                setEditFeature ((EAttribute) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
                getChildMappings ().clear ();
                getChildMappings ().addAll ((Collection) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__COMPARTMENT_MAPPINGS :
                getCompartmentMappings ().clear ();
                getCompartmentMappings ().addAll ((Collection) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__TOOL :
                setTool ((Tool) newValue);
                return;
            case GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE :
                setDiagramNode ((Node) newValue);
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT :
                setDomainMetaElement ((EClass) null);
                return;
            case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION :
                setDomainSpecialization ((Constraint) null);
                return;
            case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER :
                setDomainInitializer ((ElementInitializer) null);
                return;
            case GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE :
                setContainmentFeature ((EReference) null);
                return;
            case GMFMapPackage.NODE_MAPPING__EDIT_FEATURE :
                setEditFeature ((EAttribute) null);
                return;
            case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
                getChildMappings ().clear ();
                return;
            case GMFMapPackage.NODE_MAPPING__COMPARTMENT_MAPPINGS :
                getCompartmentMappings ().clear ();
                return;
            case GMFMapPackage.NODE_MAPPING__TOOL :
                setTool ((Tool) null);
                return;
            case GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE :
                setDiagramNode ((Node) null);
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFMapPackage.NODE_MAPPING__DOMAIN_META_ELEMENT :
                return domainMetaElement != null;
            case GMFMapPackage.NODE_MAPPING__DOMAIN_SPECIALIZATION :
                return domainSpecialization != null;
            case GMFMapPackage.NODE_MAPPING__DOMAIN_INITIALIZER :
                return domainInitializer != null;
            case GMFMapPackage.NODE_MAPPING__CONTAINMENT_FEATURE :
                return containmentFeature != null;
            case GMFMapPackage.NODE_MAPPING__EDIT_FEATURE :
                return editFeature != null;
            case GMFMapPackage.NODE_MAPPING__CHILD_MAPPINGS :
                return childMappings != null && ! childMappings.isEmpty ();
            case GMFMapPackage.NODE_MAPPING__COMPARTMENT_MAPPINGS :
                return compartmentMappings != null && ! compartmentMappings.isEmpty ();
            case GMFMapPackage.NODE_MAPPING__TOOL :
                return tool != null;
            case GMFMapPackage.NODE_MAPPING__DIAGRAM_NODE :
                return diagramNode != null;
        }
        return eDynamicIsSet (eFeature);
    }

}

