package org.eclipse.gmf.runtime.emf.type.core.commands;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;

import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;

public class DestroyElementCommand extends EditElementCommand {
    private final EObject elementToDestroy;

    public DestroyElementCommand (DestroyElementRequest request) {
        super (request.getLabel (), request.getContainer (), request);
        this.elementToDestroy = request.getElementToDestroy ();
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
        if (getElementToDestroy ().eResource () != null) {
            EMFCoreUtil.destroy (getElementToDestroy ());
        }
        return CommandResult.newOKCommandResult ();
    }

    protected EObject getElementToDestroy () {
        return elementToDestroy;
    }

    public boolean canExecute () {
        return elementToDestroy != null;
    }

}

