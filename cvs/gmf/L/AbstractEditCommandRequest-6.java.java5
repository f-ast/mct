package org.eclipse.gmf.runtime.emf.type.core.requests;

import java.util.Collections;

import java.util.HashMap;

import java.util.List;

import java.util.Map;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.runtime.common.core.util.StringStatics;

import org.eclipse.gmf.runtime.emf.type.core.IClientContext;

public abstract class AbstractEditCommandRequest implements IEditCommandRequest {
    private String label;
    private IClientContext clientContext;
    private Map parameters = new HashMap ();
    private TransactionalEditingDomain editingDomain;

    protected AbstractEditCommandRequest (TransactionalEditingDomain editingDomain) {
        this.editingDomain = editingDomain;
    }

    public TransactionalEditingDomain getEditingDomain () {
        return editingDomain;
    }

    public String getLabel () {
        if (label == null) {
            return getDefaultLabel ();
        }
        return label;
    }

    protected String getDefaultLabel () {
        return StringStatics.BLANK;
    }

    public void setLabel (String label) {
        this.label = label;
    }

    public List getElementsToEdit () {
        return Collections.EMPTY_LIST;
    }

    public Object getParameter (String parameterName) {
        return parameters.get (parameterName);
    }

    public void setParameter (String parameterName, Object value) {
        parameters.put (parameterName, value);
    }

    public void addParameters (Map newParameters) {
        if (newParameters != null) {
            parameters.putAll (newParameters);
        }
    }

    public Map getParameters () {
        return parameters;
    }

    public void setClientContext (IClientContext clientContext) {
        this.clientContext = clientContext;
    }

    public IClientContext getClientContext () {
        return clientContext;
    }

    public void setEditingDomain (TransactionalEditingDomain editingDomain) {
        this.editingDomain = editingDomain;
    }

}

