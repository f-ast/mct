package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class RulerUnits extends AbstractEnumerator {
    public static final int INCHES = 0;
    public static final int CENTIMETERS = 1;
    public static final int PIXELS = 2;
    public static final RulerUnits INCHES_LITERAL = new RulerUnits (INCHES, "INCHES", "INCHES");
    public static final RulerUnits CENTIMETERS_LITERAL = new RulerUnits (CENTIMETERS, "CENTIMETERS", "CENTIMETERS");
    public static final RulerUnits PIXELS_LITERAL = new RulerUnits (PIXELS, "PIXELS", "PIXELS");
    private static final RulerUnits [] VALUES_ARRAY = new RulerUnits [] {INCHES_LITERAL, CENTIMETERS_LITERAL, PIXELS_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static RulerUnits get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            RulerUnits result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static RulerUnits getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            RulerUnits result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static RulerUnits get (int value) {
        switch (value) {
            case INCHES :
                return INCHES_LITERAL;
            case CENTIMETERS :
                return CENTIMETERS_LITERAL;
            case PIXELS :
                return PIXELS_LITERAL;
        }
        return null;
    }

    private RulerUnits (int value, String name, String literal) {
        super (value, name, literal);
    }

}

