package org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance;

import java.util.ArrayList;

import java.util.Iterator;

import org.eclipse.emf.ecore.resource.Resource;

import org.eclipse.gef.editparts.AbstractEditPart;

import org.eclipse.swt.SWT;

import org.eclipse.swt.custom.CLabel;

import org.eclipse.swt.events.SelectionAdapter;

import org.eclipse.swt.events.SelectionEvent;

import org.eclipse.swt.layout.FormAttachment;

import org.eclipse.swt.layout.FormData;

import org.eclipse.swt.widgets.Button;

import org.eclipse.swt.widgets.Composite;

import org.eclipse.wst.common.ui.properties.internal.provisional.TabbedPropertySheetPage;

import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;

import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;

import org.eclipse.gmf.runtime.diagram.ui.properties.sections.AbstractNotationPropertiesSection;

import org.eclipse.gmf.runtime.notation.View;

public abstract class AbstractLabeledCheckboxPropertySection extends AbstractNotationPropertiesSection {

    public abstract String getCommandName ();

    public abstract String getPrefixLabel ();

    public abstract String getNameLabel ();

    public abstract String getID ();

    private Button checkbox;
    private CLabel leftLabel;

    public void refresh () {
        try {
            executeAsReadAction (new Runnable () {

                public void run () {
                    if (getSingleInput () instanceof GraphicalEditPart) {
                        GraphicalEditPart ep = (GraphicalEditPart) getSingleInput ();
                        checkbox.setSelection (((Boolean) ep.getPropertyValue (getID ())).booleanValue ());
                    } else if (getSingleInput () instanceof ConnectionNodeEditPart) {
                        ConnectionNodeEditPart ep = (ConnectionNodeEditPart) getSingleInput ();
                        checkbox.setSelection (((Boolean) ep.getPropertyValue (getID ())).booleanValue ());
                    }

                }

            }

            );
        } catch (Exception e) {
            e.printStackTrace ();
        } finally {
        }
    }

    public void createControls (Composite parent, TabbedPropertySheetPage aTabbedPropertySheetPage) {
        super.createControls (parent, aTabbedPropertySheetPage);
        FormData data;
        checkbox = getWidgetFactory ().createButton (composite, getNameLabel (), SWT.CHECK);
        data = new FormData ();
        data.left = new FormAttachment (0, getStandardLabelWidth (parent));
        data.top = new FormAttachment (0, 0);
        checkbox.setLayoutData (data);
        checkbox.addSelectionListener (new SelectionAdapter () {

            public void widgetSelected (SelectionEvent event) {
                if (isReadOnly ()) {
                    refresh ();
                    return;
                }
                ArrayList commands = new ArrayList ();
                Iterator it = getInput ().iterator ();
                while (it.hasNext ()) {
                    final AbstractEditPart aep = (AbstractEditPart) it.next ();
                    Resource res = ((View) aep.getModel ()).eResource ();
                    commands.add (createCommand (getCommandName (), res, new Runnable () {

                        public void run () {
                            if (aep instanceof GraphicalEditPart) {
                                GraphicalEditPart ep = (GraphicalEditPart) aep;
                                ep.setPropertyValue (getID (), new Boolean (checkbox.getSelection ()));
                            } else if (aep instanceof ConnectionNodeEditPart) {
                                ConnectionNodeEditPart ep = (ConnectionNodeEditPart) aep;
                                ep.setPropertyValue (getID (), new Boolean (checkbox.getSelection ()));
                            }

                        }

                    }

                    ));
                }
                executeAsCompositeCommand (getCommandName (), commands);
            }

        }

        );
        leftLabel = getWidgetFactory ().createCLabel (composite, getPrefixLabel ());
        data = new FormData ();
        data.left = new FormAttachment (0, 0);
        data.top = new FormAttachment (checkbox, 0, SWT.CENTER);
        leftLabel.setLayoutData (data);
    }

}

