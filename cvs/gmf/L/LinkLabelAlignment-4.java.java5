package org.eclipse.gmf.codegen.gmfgen;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class LinkLabelAlignment extends AbstractEnumerator {
    public static final int MIDDLE = 4;
    public static final int TARGET = 3;
    public static final int SOURCE = 2;
    public static final LinkLabelAlignment MIDDLE_LITERAL = new LinkLabelAlignment (MIDDLE, "MIDDLE");
    public static final LinkLabelAlignment TARGET_LITERAL = new LinkLabelAlignment (TARGET, "TARGET");
    public static final LinkLabelAlignment SOURCE_LITERAL = new LinkLabelAlignment (SOURCE, "SOURCE");
    private static final LinkLabelAlignment [] VALUES_ARRAY = new LinkLabelAlignment [] {MIDDLE_LITERAL, TARGET_LITERAL, SOURCE_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static LinkLabelAlignment get (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            LinkLabelAlignment result = VALUES_ARRAY [i];
            if (result.toString ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static LinkLabelAlignment get (int value) {
        switch (value) {
            case MIDDLE :
                return MIDDLE_LITERAL;
            case TARGET :
                return TARGET_LITERAL;
            case SOURCE :
                return SOURCE_LITERAL;
        }
        return null;
    }

    private LinkLabelAlignment (int value, String name) {
        super (value, name);
    }

}

