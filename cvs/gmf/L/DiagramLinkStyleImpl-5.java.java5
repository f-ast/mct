package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.DiagramLinkStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class DiagramLinkStyleImpl extends NotationObjectImpl implements DiagramLinkStyle {
    protected Diagram diagramLink;

    protected DiagramLinkStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.DIAGRAM_LINK_STYLE;
    }

    public Diagram getDiagramLink () {
        return diagramLink;
    }

    public void setDiagramLink (Diagram newDiagramLink) {
        Diagram oldDiagramLink = diagramLink;
        diagramLink = newDiagramLink;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DIAGRAM_LINK_STYLE__DIAGRAM_LINK, oldDiagramLink, diagramLink));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_LINK_STYLE__UUID :
                return getUUID ();
            case NotationPackage.DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                return getDiagramLink ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_LINK_STYLE__UUID :
                setUUID ((byte []) newValue);
                return;
            case NotationPackage.DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                setDiagramLink ((Diagram) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_LINK_STYLE__UUID :
                setUUID (UUID_EDEFAULT);
                return;
            case NotationPackage.DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                setDiagramLink ((Diagram) null);
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_LINK_STYLE__UUID :
                return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
            case NotationPackage.DIAGRAM_LINK_STYLE__DIAGRAM_LINK :
                return diagramLink != null;
        }
        return eDynamicIsSet (featureID);
    }

}

