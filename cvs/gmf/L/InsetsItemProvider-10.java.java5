package org.eclipse.gmf.gmfgraph.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IChildCreationExtender;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.Insets;

public class InsetsItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public InsetsItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addTopPropertyDescriptor (object);
            addLeftPropertyDescriptor (object);
            addBottomPropertyDescriptor (object);
            addRightPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addTopPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_Insets_top_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Insets_top_feature", "_UI_Insets_type"), GMFGraphPackage.eINSTANCE.getInsets_Top (), true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addLeftPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_Insets_left_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Insets_left_feature", "_UI_Insets_type"), GMFGraphPackage.eINSTANCE.getInsets_Left (), true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addBottomPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_Insets_bottom_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Insets_bottom_feature", "_UI_Insets_type"), GMFGraphPackage.eINSTANCE.getInsets_Bottom (), true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addRightPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_Insets_right_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_Insets_right_feature", "_UI_Insets_type"), GMFGraphPackage.eINSTANCE.getInsets_Right (), true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/Insets"));
    }

    @Override
    public String getText (Object object) {
        Insets insets = (Insets) object;
        return getString ("_UI_Insets_type") + " " + insets.getTop ();
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (Insets.class)) {
            case GMFGraphPackage.INSETS__TOP :
            case GMFGraphPackage.INSETS__LEFT :
            case GMFGraphPackage.INSETS__BOTTOM :
            case GMFGraphPackage.INSETS__RIGHT :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    @Override
    public ResourceLocator getResourceLocator () {
        return ((IChildCreationExtender) adapterFactory).getResourceLocator ();
    }

}

