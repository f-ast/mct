package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.gmf.runtime.notation.StringListValueStyle;

public class StringListValueStyleImpl extends NamedStyleImpl implements StringListValueStyle {
    protected EList stringListValue;

    protected StringListValueStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.STRING_LIST_VALUE_STYLE;
    }

    public EList getStringListValue () {
        if (stringListValue == null) {
            stringListValue = new EDataTypeEList (String.class, this, NotationPackage.STRING_LIST_VALUE_STYLE__STRING_LIST_VALUE);
        }
        return stringListValue;
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.STRING_LIST_VALUE_STYLE__UUID :
                return getUUID ();
            case NotationPackage.STRING_LIST_VALUE_STYLE__NAME :
                return getName ();
            case NotationPackage.STRING_LIST_VALUE_STYLE__STRING_LIST_VALUE :
                return getStringListValue ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.STRING_LIST_VALUE_STYLE__UUID :
                setUUID ((byte []) newValue);
                return;
            case NotationPackage.STRING_LIST_VALUE_STYLE__NAME :
                setName ((String) newValue);
                return;
            case NotationPackage.STRING_LIST_VALUE_STYLE__STRING_LIST_VALUE :
                getStringListValue ().clear ();
                getStringListValue ().addAll ((Collection) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.STRING_LIST_VALUE_STYLE__UUID :
                setUUID (UUID_EDEFAULT);
                return;
            case NotationPackage.STRING_LIST_VALUE_STYLE__NAME :
                setName (NAME_EDEFAULT);
                return;
            case NotationPackage.STRING_LIST_VALUE_STYLE__STRING_LIST_VALUE :
                getStringListValue ().clear ();
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.STRING_LIST_VALUE_STYLE__UUID :
                return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
            case NotationPackage.STRING_LIST_VALUE_STYLE__NAME :
                return NAME_EDEFAULT == null ? name != null : ! NAME_EDEFAULT.equals (name);
            case NotationPackage.STRING_LIST_VALUE_STYLE__STRING_LIST_VALUE :
                return stringListValue != null && ! stringListValue.isEmpty ();
        }
        return eDynamicIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (stringListValue: ");
        result.append (stringListValue);
        result.append (')');
        return result.toString ();
    }

}

