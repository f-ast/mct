package org.eclipse.gmf.runtime.gef.ui.internal.figures;

import org.eclipse.draw2d.IFigure;

import org.eclipse.draw2d.Locator;

import org.eclipse.draw2d.PositionConstants;

import org.eclipse.draw2d.geometry.Dimension;

import org.eclipse.draw2d.geometry.Rectangle;

import org.eclipse.gef.handles.HandleBounds;

public class RelativeToBorderLocator implements Locator {
    private int margin;
    private int direction;
    private IFigure reference;

    public RelativeToBorderLocator (IFigure reference, int direction, int margin) {
        this.reference = reference;
        this.direction = direction;
        this.margin = margin;
    }

    public void relocate (IFigure target) {
        Rectangle bounds = reference instanceof HandleBounds ? ((HandleBounds) reference).getHandleBounds ().getCopy () : reference.getBounds ().getCopy ();
        reference.translateToAbsolute (bounds);
        target.translateToRelative (bounds);
        int width = target.getBounds ().width;
        int halfWidth = width / 2;
        int height = target.getBounds ().height;
        int halfHeight = height / 2;
        if (direction == PositionConstants.CENTER) {
            Dimension shift = new Dimension (- halfWidth, - halfHeight);
            target.setLocation (bounds.getCenter ().getTranslated (shift));
        } else if (margin < 0) {
            if (direction == PositionConstants.NORTH_WEST) {
                Dimension shift = new Dimension (- margin, - margin);
                target.setLocation (bounds.getTopLeft ().getTranslated (shift));
            } else if (direction == PositionConstants.NORTH) {
                Dimension shift = new Dimension (- halfWidth, - margin);
                target.setLocation (bounds.getTop ().getTranslated (shift));
            } else if (direction == PositionConstants.NORTH_EAST) {
                Dimension shift = new Dimension (- (width + - margin), - margin);
                target.setLocation (bounds.getTopRight ().getTranslated (shift));
            } else if (direction == PositionConstants.SOUTH_WEST) {
                Dimension shift = new Dimension (- margin, - (height + - margin));
                target.setLocation (bounds.getBottomLeft ().getTranslated (shift));
            } else if (direction == PositionConstants.SOUTH) {
                Dimension shift = new Dimension (- halfWidth, - (height + - margin));
                target.setLocation (bounds.getBottom ().getTranslated (shift));
            } else if (direction == PositionConstants.SOUTH_EAST) {
                Dimension shift = new Dimension (- (width + - margin), - (height + - margin));
                target.setLocation (bounds.getBottomRight ().getTranslated (shift));
            } else if (direction == PositionConstants.WEST) {
                Dimension shift = new Dimension (- margin, - halfHeight);
                target.setLocation (bounds.getLeft ().getTranslated (shift));
            } else if (direction == PositionConstants.EAST) {
                Dimension shift = new Dimension (- (width + - margin), - halfHeight);
                target.setLocation (bounds.getRight ().getTranslated (shift));
            }

        } else {
            if (direction == PositionConstants.NORTH_WEST) {
                Dimension shift = new Dimension (- (width + margin), - (height + margin));
                target.setLocation (bounds.getTopLeft ().getTranslated (shift));
            } else if (direction == PositionConstants.NORTH) {
                Dimension shift = new Dimension (- halfWidth, - (height + margin));
                target.setLocation (bounds.getTop ().getTranslated (shift));
            } else if (direction == PositionConstants.NORTH_EAST) {
                Dimension shift = new Dimension (margin, - (height + margin));
                target.setLocation (bounds.getTopRight ().getTranslated (shift));
            } else if (direction == PositionConstants.SOUTH_WEST) {
                Dimension shift = new Dimension (- (width + margin), margin);
                target.setLocation (bounds.getBottomLeft ().getTranslated (shift));
            } else if (direction == PositionConstants.SOUTH) {
                Dimension shift = new Dimension (- halfWidth, margin);
                target.setLocation (bounds.getBottom ().getTranslated (shift));
            } else if (direction == PositionConstants.SOUTH_EAST) {
                Dimension shift = new Dimension (margin, margin);
                target.setLocation (bounds.getBottomRight ().getTranslated (shift));
            } else if (direction == PositionConstants.WEST) {
                Dimension shift = new Dimension (- (width + margin), - halfHeight);
                target.setLocation (bounds.getLeft ().getTranslated (shift));
            } else if (direction == PositionConstants.EAST) {
                Dimension shift = new Dimension (margin, - halfHeight);
                target.setLocation (bounds.getRight ().getTranslated (shift));
            }

        }

    }

}

