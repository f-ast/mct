package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;

public class GenTopLevelNodeImpl extends GenNodeImpl implements GenTopLevelNode {

    protected GenTopLevelNodeImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenTopLevelNode ();
    }

    public GenDiagram getDiagram () {
        if (eContainerFeatureID != GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM) return null;

        return (GenDiagram) eContainer ();
    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM :
                return eBasicSetContainer (null, GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES, GenDiagram.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM :
                return getDiagram ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM :
                return getDiagram () != null;
        }
        return super.eIsSet (featureID);
    }

    public boolean isListContainerEntry () {
        return false;
    }

    public String getClassNameSuffux () {
        return "Node";
    }

}

