package org.eclipse.gmf.codegen.gmfgen;

import org.eclipse.emf.codegen.ecore.genmodel.GenModel;

import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

public interface GenEditorGenerator extends EObject {

    GenAuditRoot getAudits ();

    void setAudits (GenAuditRoot value);

    GenMetricContainer getMetrics ();

    void setMetrics (GenMetricContainer value);

    GenDiagram getDiagram ();

    void setDiagram (GenDiagram value);

    GenPlugin getPlugin ();

    void setPlugin (GenPlugin value);

    GenEditorView getEditor ();

    void setEditor (GenEditorView value);

    GenNavigator getNavigator ();

    void setNavigator (GenNavigator value);

    GenDiagramUpdater getDiagramUpdater ();

    void setDiagramUpdater (GenDiagramUpdater value);

    GenPropertySheet getPropertySheet ();

    void setPropertySheet (GenPropertySheet value);

    GenApplication getApplication ();

    void setApplication (GenApplication value);

    GenModel getDomainGenModel ();

    void setDomainGenModel (GenModel value);

    String getPackageNamePrefix ();

    void setPackageNamePrefix (String value);

    String getModelID ();

    void setModelID (String value);

    boolean isSameFileForDiagramAndModel ();

    void setSameFileForDiagramAndModel (boolean value);

    String getDiagramFileExtension ();

    void setDiagramFileExtension (String value);

    String getDomainFileExtension ();

    void setDomainFileExtension (String value);

    boolean isDynamicTemplates ();

    void setDynamicTemplates (boolean value);

    String getTemplateDirectory ();

    void setTemplateDirectory (String value);

    String getCopyrightText ();

    void setCopyrightText (String value);

    GenExpressionProviderContainer getExpressionProviders ();

    void setExpressionProviders (GenExpressionProviderContainer value);

    DynamicModelAccess getModelAccess ();

    void setModelAccess (DynamicModelAccess value);

    GenParsers getLabelParsers ();

    void setLabelParsers (GenParsers value);

    EList < GenPackage > getAllDomainGenPackages (boolean withUsed);

    boolean requiresParser (LabelTextAccessMethod method);

    boolean hasAudits ();

}

