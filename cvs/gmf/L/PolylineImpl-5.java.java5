package org.eclipse.gmf.gmfgraph.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.Point;

import org.eclipse.gmf.gmfgraph.Polyline;

public class PolylineImpl extends ShapeImpl implements Polyline {
    protected EList template = null;

    protected PolylineImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getPolyline ();
    }

    public EList getTemplate () {
        if (template == null) {
            template = new EObjectContainmentEList (Point.class, this, GMFGraphPackage.POLYLINE__TEMPLATE);
        }
        return template;
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGraphPackage.POLYLINE__TEMPLATE :
                return ((InternalEList) getTemplate ()).basicRemove (otherEnd, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGraphPackage.POLYLINE__TEMPLATE :
                return getTemplate ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGraphPackage.POLYLINE__TEMPLATE :
                getTemplate ().clear ();
                getTemplate ().addAll ((Collection) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.POLYLINE__TEMPLATE :
                getTemplate ().clear ();
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.POLYLINE__TEMPLATE :
                return template != null && ! template.isEmpty ();
        }
        return super.eIsSet (featureID);
    }

}

