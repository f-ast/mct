package org.eclipse.gmf.runtime.notation;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class Alignment extends AbstractEnumerator {
    public static final int LEFT = 0;
    public static final int RIGHT = 1;
    public static final int CENTER = 2;
    public static final int TOP = 3;
    public static final int BOTTOM = 4;
    public static final Alignment LEFT_LITERAL = new Alignment (LEFT, "Left", "Left");
    public static final Alignment RIGHT_LITERAL = new Alignment (RIGHT, "Right", "Right");
    public static final Alignment CENTER_LITERAL = new Alignment (CENTER, "Center", "Center");
    public static final Alignment TOP_LITERAL = new Alignment (TOP, "Top", "Top");
    public static final Alignment BOTTOM_LITERAL = new Alignment (BOTTOM, "Bottom", "Bottom");
    private static final Alignment [] VALUES_ARRAY = new Alignment [] {LEFT_LITERAL, RIGHT_LITERAL, CENTER_LITERAL, TOP_LITERAL, BOTTOM_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static Alignment get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            Alignment result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static Alignment getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            Alignment result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static Alignment get (int value) {
        switch (value) {
            case LEFT :
                return LEFT_LITERAL;
            case RIGHT :
                return RIGHT_LITERAL;
            case CENTER :
                return CENTER_LITERAL;
            case TOP :
                return TOP_LITERAL;
            case BOTTOM :
                return BOTTOM_LITERAL;
        }
        return null;
    }

    private Alignment (int value, String name, String literal) {
        super (value, name, literal);
    }

}

