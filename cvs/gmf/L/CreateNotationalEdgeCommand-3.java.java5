package org.eclipse.gmf.runtime.lite.commands;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.runtime.lite.services.IViewDecorator;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.Edge;

import org.eclipse.gmf.runtime.notation.NotationFactory;

import org.eclipse.gmf.runtime.notation.View;

public class CreateNotationalEdgeCommand extends CreateNotationalElementCommand {
    private final View source;
    private final View target;

    public CreateNotationalEdgeCommand (Diagram parent, EObject domainElement, View source, View target, IViewDecorator decorator) {
        super (parent);
        this.source = source;
        this.target = target;
        Edge edge = NotationFactory.eINSTANCE.createEdge ();
        edge.setElement (domainElement);
        decorator.decorateView (edge);
        setCreatedView (edge);
    }

    public boolean canExecute () {
        return getParent () != null && getCreatedView () != null && source != null && target != null;
    }

    public boolean canUndo () {
        return true;
    }

    public void execute () {
        Edge createdEdge = (Edge) getCreatedView ();
        ((Diagram) getParent ()).insertEdge (createdEdge);
        createdEdge.setSource (source);
        createdEdge.setTarget (target);
    }

    public void undo () {
        Edge createdEdge = (Edge) getCreatedView ();
        ((Diagram) getParent ()).removeEdge (createdEdge);
        createdEdge.setSource (null);
        createdEdge.setTarget (null);
    }

    public void redo () {
        execute ();
    }

}

