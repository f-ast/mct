package org.eclipse.gmf.gmfgraph;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class FontStyle extends AbstractEnumerator {
    public static final int NORMAL = 0;
    public static final int BOLD = 1;
    public static final int ITALIC = 2;
    public static final FontStyle NORMAL_LITERAL = new FontStyle (NORMAL, "NORMAL", "NORMAL");
    public static final FontStyle BOLD_LITERAL = new FontStyle (BOLD, "BOLD", "BOLD");
    public static final FontStyle ITALIC_LITERAL = new FontStyle (ITALIC, "ITALIC", "ITALIC");
    private static final FontStyle [] VALUES_ARRAY = new FontStyle [] {NORMAL_LITERAL, BOLD_LITERAL, ITALIC_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static FontStyle get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            FontStyle result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static FontStyle getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            FontStyle result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static FontStyle get (int value) {
        switch (value) {
            case NORMAL :
                return NORMAL_LITERAL;
            case BOLD :
                return BOLD_LITERAL;
            case ITALIC :
                return ITALIC_LITERAL;
        }
        return null;
    }

    private FontStyle (int value, String name, String literal) {
        super (value, name, literal);
    }

}

