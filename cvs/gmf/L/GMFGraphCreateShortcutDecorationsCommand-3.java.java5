package org.eclipse.gmf.graphdef.editor.edit.commands;

import java.util.Collections;

import java.util.Iterator;

import java.util.List;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.ecore.EAnnotation;

import org.eclipse.emf.ecore.EcoreFactory;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

import org.eclipse.gmf.runtime.notation.View;

public class GMFGraphCreateShortcutDecorationsCommand extends AbstractTransactionalCommand {
    private List myDescriptors;

    public GMFGraphCreateShortcutDecorationsCommand (TransactionalEditingDomain editingDomain, View parentView, List viewDescriptors) {
        super (editingDomain, "Create Shortcuts", getWorkspaceFiles (parentView));
        myDescriptors = viewDescriptors;
    }

    public GMFGraphCreateShortcutDecorationsCommand (TransactionalEditingDomain editingDomain, View parentView, CreateViewRequest.ViewDescriptor viewDescriptor) {
        this (editingDomain, parentView, Collections.singletonList (viewDescriptor));
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
        for (Iterator it = myDescriptors.iterator ();
        it.hasNext ();) {
            CreateViewRequest.ViewDescriptor nextDescriptor = (CreateViewRequest.ViewDescriptor) it.next ();
            View view = (View) nextDescriptor.getAdapter (View.class);
            if (view != null && view.getEAnnotation ("Shortcut") == null) {
                EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation ();
                shortcutAnnotation.setSource ("Shortcut");
                shortcutAnnotation.getDetails ().put ("modelID", CanvasEditPart.MODEL_ID);
                view.getEAnnotations ().add (shortcutAnnotation);
            }
        }
        return CommandResult.newOKCommandResult ();
    }

}

