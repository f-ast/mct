package org.eclipse.gmf.runtime.diagram.ui.internal.ruler;

import java.util.ArrayList;

import java.util.List;

import java.util.WeakHashMap;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.gmf.runtime.notation.Alignment;

import org.eclipse.gmf.runtime.notation.Guide;

import org.eclipse.gmf.runtime.notation.View;

public class DiagramGuide {
    private static DiagramGuide self = null;
    private WeakHashMap guideMap;

    private DiagramGuide () {
        guideMap = new WeakHashMap ();
    }

    public static DiagramGuide getInstance () {
        if (self == null) self = new DiagramGuide ();

        return self;
    }

    public List getViews () {
        return new ArrayList (guideMap.keySet ());
    }

    public Guide getHorizontalGuide (View part) {
        GuideMap theMap = (GuideMap) guideMap.get (part);
        if (theMap == null) {
            return null;
        }
        return theMap.getHorizontal ();
    }

    public int getHorizontalAlignment (View part) {
        Guide guide = getHorizontalGuide (part);
        if (guide == null) return - 2;

        EMap nodes = guide.getNodeMap ();
        Alignment align = (Alignment) nodes.get (part);
        if (align != null) {
            switch (align.getValue ()) {
                case Alignment.TOP :
                case Alignment.LEFT :
                    return - 1;
                case Alignment.CENTER :
                    return 0;
                case Alignment.BOTTOM :
                case Alignment.RIGHT :
                    return 1;
            }
        }
        return - 2;
    }

    public int getVerticalAlignment (View part) {
        Guide guide = getVerticalGuide (part);
        if (guide == null) return - 2;

        EMap nodes = guide.getNodeMap ();
        Alignment align = (Alignment) nodes.get (part);
        if (align != null) {
            switch (align.getValue ()) {
                case Alignment.TOP :
                case Alignment.LEFT :
                    return - 1;
                case Alignment.CENTER :
                    return 0;
                case Alignment.BOTTOM :
                case Alignment.RIGHT :
                    return 1;
            }
        }
        return - 2;
    }

    public Guide getVerticalGuide (View part) {
        GuideMap theMap = (GuideMap) guideMap.get (part);
        if (theMap == null) {
            return null;
        }
        return theMap.getVertical ();
    }

    public void setHorizontalGuide (View view, Guide toSet) {
        GuideMap theMap = (GuideMap) guideMap.get (view);
        if (theMap == null && toSet != null) {
            theMap = new GuideMap ();
            guideMap.put (view, theMap);
        }
        if (theMap != null) theMap.setHorizontal (toSet);

        checkAndRemove (view, theMap);
    }

    public void setVerticalGuide (View view, Guide toSet) {
        GuideMap theMap = (GuideMap) guideMap.get (view);
        if (theMap == null && toSet != null) {
            theMap = new GuideMap ();
            guideMap.put (view, theMap);
        }
        if (theMap != null) theMap.setVertical (toSet);

        checkAndRemove (view, theMap);
    }

    private void checkAndRemove (View view, GuideMap map) {
        if (map != null && map.getHorizontal () == null && map.getVertical () == null) {
            guideMap.remove (view);
        }
    }

}

