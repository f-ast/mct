package org.eclipse.gmf.graphdef.editor.navigator;

import java.util.Collection;

import java.util.LinkedList;

public class GMFGraphNavigatorGroup extends GMFGraphAbstractNavigatorItem {
    private String myGroupName;
    private String myIcon;
    private Collection myChildren = new LinkedList ();

    GMFGraphNavigatorGroup (String groupName, String icon, Object parent) {
        super (parent);
        myGroupName = groupName;
        myIcon = icon;
    }

    public String getGroupName () {
        return myGroupName;
    }

    public String getIcon () {
        return myIcon;
    }

    public Object [] getChildren () {
        return myChildren.toArray ();
    }

    public void addChildren (Collection children) {
        myChildren.addAll (children);
    }

    public void addChild (Object child) {
        myChildren.add (child);
    }

    public boolean isEmpty () {
        return myChildren.size () == 0;
    }

    public boolean equals (Object obj) {
        if (obj instanceof org.eclipse.gmf.graphdef.editor.navigator.GMFGraphNavigatorGroup) {
            org.eclipse.gmf.graphdef.editor.navigator.GMFGraphNavigatorGroup anotherGroup = (org.eclipse.gmf.graphdef.editor.navigator.GMFGraphNavigatorGroup) obj;
            if (getGroupName ().equals (anotherGroup.getGroupName ())) {
                return getParent ().equals (anotherGroup.getParent ());
            }
        }
        return super.equals (obj);
    }

    public int hashCode () {
        return getGroupName ().hashCode ();
    }

}

