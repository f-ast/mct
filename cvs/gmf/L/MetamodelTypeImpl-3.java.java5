package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenLink;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;

import org.eclipse.gmf.codegen.gmfgen.MetamodelType;

import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

public class MetamodelTypeImpl extends ElementTypeImpl implements MetamodelType {
    protected static final String EDIT_HELPER_CLASS_NAME_EDEFAULT = null;
    protected String editHelperClassName = EDIT_HELPER_CLASS_NAME_EDEFAULT;

    protected MetamodelTypeImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getMetamodelType ();
    }

    public String getEditHelperClassNameGen () {
        return editHelperClassName;
    }

    public String getEditHelperClassName () {
        String value = getEditHelperClassNameGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            value = getDiagramElement ().getClassNamePrefix () + getDiagramElement ().getClassNameSuffux () + EDIT_HELPER_SUFFIX;
        }
        return value;
    }

    public void setEditHelperClassName (String newEditHelperClassName) {
        String oldEditHelperClassName = editHelperClassName;
        editHelperClassName = newEditHelperClassName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.METAMODEL_TYPE__EDIT_HELPER_CLASS_NAME, oldEditHelperClassName, editHelperClassName));

    }

    public String getEditHelperQualifiedClassName () {
        return getDiagramElement ().getDiagram ().getEditHelpersPackageName () + '.' + getEditHelperClassName ();
    }

    public GenClass getMetaClass () {
        if (getDiagramElement () instanceof GenNode) {
            return ((GenNode) getDiagramElement ()).getModelFacet ().getMetaClass ();
        } else if (getDiagramElement () instanceof GenLink) {
            LinkModelFacet modelFacet = ((GenLink) getDiagramElement ()).getModelFacet ();
            if (modelFacet instanceof TypeModelFacet) {
                return ((TypeModelFacet) modelFacet).getMetaClass ();
            }
        } else if (getDiagramElement () instanceof GenDiagram) {
            return ((GenDiagram) getDiagramElement ()).getDomainDiagramElement ();
        }

        return null;
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.METAMODEL_TYPE__EDIT_HELPER_CLASS_NAME :
                return getEditHelperClassName ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.METAMODEL_TYPE__EDIT_HELPER_CLASS_NAME :
                setEditHelperClassName ((String) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.METAMODEL_TYPE__EDIT_HELPER_CLASS_NAME :
                setEditHelperClassName (EDIT_HELPER_CLASS_NAME_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.METAMODEL_TYPE__EDIT_HELPER_CLASS_NAME :
                return EDIT_HELPER_CLASS_NAME_EDEFAULT == null ? editHelperClassName != null : ! EDIT_HELPER_CLASS_NAME_EDEFAULT.equals (editHelperClassName);
        }
        return super.eIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (editHelperClassName: ");
        result.append (editHelperClassName);
        result.append (')');
        return result.toString ();
    }

}

