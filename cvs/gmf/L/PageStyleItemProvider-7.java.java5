package org.eclipse.gmf.runtime.notation.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.runtime.notation.NotationEditPlugin;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.gmf.runtime.notation.PageStyle;

public class PageStyleItemProvider extends NotationObjectItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public PageStyleItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    public List getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addPageXPropertyDescriptor (object);
            addPageYPropertyDescriptor (object);
            addPageWidthPropertyDescriptor (object);
            addPageHeightPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addPageXPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_PageStyle_pageX_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_PageStyle_pageX_feature", "_UI_PageStyle_type"), NotationPackage.Literals.PAGE_STYLE__PAGE_X, true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addPageYPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_PageStyle_pageY_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_PageStyle_pageY_feature", "_UI_PageStyle_type"), NotationPackage.Literals.PAGE_STYLE__PAGE_Y, true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addPageWidthPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_PageStyle_pageWidth_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_PageStyle_pageWidth_feature", "_UI_PageStyle_type"), NotationPackage.Literals.PAGE_STYLE__PAGE_WIDTH, true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addPageHeightPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_PageStyle_pageHeight_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_PageStyle_pageHeight_feature", "_UI_PageStyle_type"), NotationPackage.Literals.PAGE_STYLE__PAGE_HEIGHT, true, false, false, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/PageStyle"));
    }

    public String getText (Object object) {
        Object labelValue = ((EObject) object).eGet (NotationPackage.Literals.NOTATION_OBJECT__UUID);
        String label = labelValue == null ? null : labelValue.toString ();
        return label == null || label.length () == 0 ? getString ("_UI_PageStyle_type") : getString ("_UI_PageStyle_type") + " " + label;
    }

    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (PageStyle.class)) {
            case NotationPackage.PAGE_STYLE__PAGE_X :
            case NotationPackage.PAGE_STYLE__PAGE_Y :
            case NotationPackage.PAGE_STYLE__PAGE_WIDTH :
            case NotationPackage.PAGE_STYLE__PAGE_HEIGHT :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

}

