package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.providers;

import java.util.HashMap;

import java.util.Map;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.CylinderEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.DiamondEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.EllipseEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.HexagonEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.LineEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.OctagonEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.PentagonEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.Rectangle3DEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.RectangleEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.RoundedRectangleEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.ShadowRectangleEditPart;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.editparts.TriangleEditPart;

import org.eclipse.gmf.runtime.diagram.ui.services.editpart.AbstractEditPartProvider;

import org.eclipse.gmf.runtime.notation.View;

public class GeoshapeEditPartProvider extends AbstractEditPartProvider {
    private Map shapeMap = new HashMap ();

    {
        shapeMap.put (GeoshapeConstants.TOOL_OVAL, EllipseEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_TRIANGLE, TriangleEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_RECTANGLE, RectangleEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_SHADOWRECTANGLE, ShadowRectangleEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_3DRECTANGLE, Rectangle3DEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_ROUNDRECTANGLE, RoundedRectangleEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_HEXAGON, HexagonEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_OCTAGON, OctagonEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_PENTAGON, PentagonEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_DIAMOND, DiamondEditPart.class);
        shapeMap.put (GeoshapeConstants.TOOL_CYLINDER, CylinderEditPart.class);
    }

    private Map connectionMap = new HashMap ();

    {
        connectionMap.put (GeoshapeConstants.TOOL_LINE, LineEditPart.class);
    }

    protected Class getNodeEditPartClass (View view) {
        String semanticHint = view.getType ();
        if (semanticHint != null && semanticHint.length () > 0) return ((Class) shapeMap.get (semanticHint));

        return null;
    }

    protected Class getEdgeEditPartClass (View view) {
        String semanticHint = view.getType ();
        if (semanticHint != null && semanticHint.length () > 0) return ((Class) connectionMap.get (semanticHint));

        return null;
    }

}

