package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.runtime.notation.CanonicalStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class CanonicalStyleImpl extends EObjectImpl implements CanonicalStyle {
    protected static final boolean CANONICAL_EDEFAULT = true;
    protected static final int CANONICAL_EFLAG = 1 << 8;

    protected CanonicalStyleImpl () {
        super ();
        eFlags |= CANONICAL_EFLAG;
    }

    protected EClass eStaticClass () {
        return NotationPackage.eINSTANCE.getCanonicalStyle ();
    }

    public boolean isCanonical () {
        return (eFlags & CANONICAL_EFLAG) != 0;
    }

    public void setCanonical (boolean newCanonical) {
        boolean oldCanonical = (eFlags & CANONICAL_EFLAG) != 0;
        if (newCanonical) eFlags |= CANONICAL_EFLAG;
        else eFlags &= ~ CANONICAL_EFLAG;

        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.CANONICAL_STYLE__CANONICAL, oldCanonical, newCanonical));

    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.CANONICAL_STYLE__CANONICAL :
                return isCanonical () ? Boolean.TRUE : Boolean.FALSE;
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.CANONICAL_STYLE__CANONICAL :
                setCanonical (((Boolean) newValue).booleanValue ());
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.CANONICAL_STYLE__CANONICAL :
                setCanonical (CANONICAL_EDEFAULT);
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.CANONICAL_STYLE__CANONICAL :
                return ((eFlags & CANONICAL_EFLAG) != 0) != CANONICAL_EDEFAULT;
        }
        return eDynamicIsSet (eFeature);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (canonical: ");
        result.append ((eFlags & CANONICAL_EFLAG) != 0);
        result.append (')');
        return result.toString ();
    }

}

