package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.gmf.runtime.notation.TitleStyle;

public class TitleStyleImpl extends NotationEObjectImpl implements TitleStyle {
    protected static final boolean SHOW_TITLE_EDEFAULT = false;
    protected static final int SHOW_TITLE_EFLAG = 1 << 8;

    protected TitleStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.TITLE_STYLE;
    }

    public boolean isShowTitle () {
        return (eFlags & SHOW_TITLE_EFLAG) != 0;
    }

    public void setShowTitle (boolean newShowTitle) {
        boolean oldShowTitle = (eFlags & SHOW_TITLE_EFLAG) != 0;
        if (newShowTitle) eFlags |= SHOW_TITLE_EFLAG;
        else eFlags &= ~ SHOW_TITLE_EFLAG;

        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.TITLE_STYLE__SHOW_TITLE, oldShowTitle, newShowTitle));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.TITLE_STYLE__SHOW_TITLE :
                return isShowTitle () ? Boolean.TRUE : Boolean.FALSE;
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.TITLE_STYLE__SHOW_TITLE :
                setShowTitle (((Boolean) newValue).booleanValue ());
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.TITLE_STYLE__SHOW_TITLE :
                setShowTitle (SHOW_TITLE_EDEFAULT);
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.TITLE_STYLE__SHOW_TITLE :
                return ((eFlags & SHOW_TITLE_EFLAG) != 0) != SHOW_TITLE_EDEFAULT;
        }
        return eDynamicIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (showTitle: ");
        result.append ((eFlags & SHOW_TITLE_EFLAG) != 0);
        result.append (')');
        return result.toString ();
    }

}

