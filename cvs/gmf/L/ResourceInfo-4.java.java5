package org.eclipse.gmf.runtime.emf.clipboard.core.internal;

import java.util.ArrayList;

import java.util.Collections;

import java.util.HashMap;

import java.util.Iterator;

import java.util.LinkedHashMap;

import java.util.List;

import java.util.Map;

import org.eclipse.gmf.runtime.emf.clipboard.core.ObjectInfo;

public class ResourceInfo {

    public ResourceInfo () {
        super ();
    }

    String data;
    String info;
    String version;
    String type;
    String encoding;
    public Map objects = new LinkedHashMap ();
    private Map objectInfoTypeMap;

    Map getObjectInfoTypeMap () {
        if (objectInfoTypeMap == null) {
            objectInfoTypeMap = new HashMap ();
            Iterator it = objects.values ().iterator ();
            ObjectInfo objectInfo = null;
            while (it.hasNext ()) {
                objectInfo = (ObjectInfo) it.next ();
                List list = (List) objectInfoTypeMap.get (objectInfo.objCopyType);
                if (list == null) {
                    list = new ArrayList ();
                    objectInfoTypeMap.put (objectInfo.objCopyType, list);
                }
                list.add (objectInfo);
            }
        }
        return objectInfoTypeMap;
    }

    List getObjectInfoTypes (String objectInfoType) {
        List list = (List) getObjectInfoTypeMap ().get (objectInfoType);
        return (list != null) ? list : Collections.EMPTY_LIST;
    }

    void completeEObjectInitialization () {
        Iterator it = objects.values ().iterator ();
        ObjectInfo objectInfo = null;
        while (it.hasNext ()) {
            objectInfo = (ObjectInfo) it.next ();
            objectInfo.makeCopyAlwaysObjectInfoList (getObjectInfoTypes (ObjectCopyType.OBJ_COPY_TYPE_ALWAYS));
        }
    }

}

