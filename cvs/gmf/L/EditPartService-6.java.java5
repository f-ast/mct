package org.eclipse.gmf.runtime.diagram.ui.services.editpart;

import java.util.HashMap;

import java.util.List;

import java.util.Map;

import org.eclipse.core.runtime.IConfigurationElement;

import org.eclipse.gef.EditPart;

import org.eclipse.gef.EditPartFactory;

import org.eclipse.gef.RootEditPart;

import org.eclipse.jface.util.Assert;

import org.eclipse.gmf.runtime.common.core.service.ExecutionStrategy;

import org.eclipse.gmf.runtime.common.core.service.IOperation;

import org.eclipse.gmf.runtime.common.core.service.Service;

import org.eclipse.gmf.runtime.diagram.core.internal.util.MEditingDomainGetter;

import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;

import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramRootEditPart;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;

import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultCompartmentEditPart;

import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultConnectorEditPart;

import org.eclipse.gmf.runtime.diagram.ui.internal.editparts.DefaultNodeEditPart;

import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.CreateRootEditPartOperation;

import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.EditPartOperation;

import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.EditPartProviderConfiguration;

import org.eclipse.gmf.runtime.diagram.ui.internal.services.editpart.IEditPartProvider;

import org.eclipse.gmf.runtime.emf.core.edit.MRunnable;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.Edge;

import org.eclipse.gmf.runtime.notation.Node;

import org.eclipse.gmf.runtime.notation.Ratio;

import org.eclipse.gmf.runtime.notation.View;

final public class EditPartService extends Service implements IEditPartProvider, EditPartFactory {
    protected static class ProviderDescriptor extends Service.ProviderDescriptor {
        private EditPartProviderConfiguration providerConfiguration;

        public ProviderDescriptor (IConfigurationElement element) {
            super (element);
            this.providerConfiguration = EditPartProviderConfiguration.parse (element);
            Assert.isNotNull (providerConfiguration);
        }

        public boolean provides (IOperation operation) {
            if (getPolicy () != null) return getPolicy ().provides (operation);

            if (provider == null) {
                if (isSupportedInExtention (operation)) {
                    providerConfiguration = null;
                    return getProvider ().provides (operation);
                }
                return false;
            }
            return getProvider ().provides (operation);
        }

        private boolean isSupportedInExtention (IOperation operation) {
            if (operation instanceof CreateGraphicEditPartOperation) {
                CreateGraphicEditPartOperation o = (CreateGraphicEditPartOperation) operation;
                return providerConfiguration.supports (o.getView ());
            } else if (operation instanceof CreateRootEditPartOperation) {
                return providerConfiguration.supportsRootEditPart ();
            }

            return false;
        }

        public String toString () {
            return getElement ().getAttribute ("class");
        }

    }

    private final static EditPartService instance = new EditPartService ();

    protected EditPartService () {
        super (true, false);
    }

    public static EditPartService getInstance () {
        return instance;
    }

    protected Service.ProviderDescriptor newProviderDescriptor (IConfigurationElement element) {
        return new ProviderDescriptor (element);
    }

    protected Map createPriorityCache () {
        return new HashMap ();
    }

    protected Object getCachingKey (IOperation operation) {
        return ((EditPartOperation) operation).getCachingKey ();
    }

    public IGraphicalEditPart createGraphicEditPart (View view) {
        if (view == null) return null;

        IGraphicalEditPart result = null;
        CreateGraphicEditPartOperation createGraphicEditPartOperation = new CreateGraphicEditPartOperation (view);
        result = (IGraphicalEditPart) execute (createGraphicEditPartOperation);
        if (result == null) {
            if (view instanceof Node) {
                if (((Node) view).getLayoutConstraint () instanceof Ratio) {
                    result = new DefaultCompartmentEditPart (view);
                } else {
                    result = new DefaultNodeEditPart (view);
                }
            } else if (view instanceof Edge) {
                result = new DefaultConnectorEditPart (view);
            } else if (view instanceof Diagram) {
                result = new DiagramEditPart (view);
            }

        }
        return result;
    }

    private Object execute (IOperation operation) {
        List results = execute (ExecutionStrategy.FIRST, operation);
        return results.isEmpty () ? null : results.get (0);
    }

    public EditPart createEditPart (EditPart context, final Object model) {
        return (EditPart) MEditingDomainGetter.getMEditingDomain ((View) model).runAsRead (new MRunnable () {

            public Object run () {
                return createGraphicEditPart ((View) model);
            }

        }

        );
    }

    public RootEditPart createRootEditPart () {
        RootEditPart result;
        CreateRootEditPartOperation createRootEditPartOperation = new CreateRootEditPartOperation ();
        result = (RootEditPart) execute (createRootEditPartOperation);
        return (result == null) ? new DiagramRootEditPart () : result;
    }

}

