package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.gmfgraph.DefaultSizeFacet;

import org.eclipse.gmf.gmfgraph.Dimension;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

public class DefaultSizeFacetImpl extends EObjectImpl implements DefaultSizeFacet {
    protected Dimension defaultSize;

    protected DefaultSizeFacetImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getDefaultSizeFacet ();
    }

    public Dimension getDefaultSize () {
        return defaultSize;
    }

    public NotificationChain basicSetDefaultSize (Dimension newDefaultSize, NotificationChain msgs) {
        Dimension oldDefaultSize = defaultSize;
        defaultSize = newDefaultSize;
        if (eNotificationRequired ()) {
            ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE, oldDefaultSize, newDefaultSize);
            if (msgs == null) msgs = notification;
            else msgs.add (notification);

        }
        return msgs;
    }

    public void setDefaultSize (Dimension newDefaultSize) {
        if (newDefaultSize != defaultSize) {
            NotificationChain msgs = null;
            if (defaultSize != null) msgs = ((InternalEObject) defaultSize).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE, null, msgs);

            if (newDefaultSize != null) msgs = ((InternalEObject) newDefaultSize).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE, null, msgs);

            msgs = basicSetDefaultSize (newDefaultSize, msgs);
            if (msgs != null) msgs.dispatch ();

        } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE, newDefaultSize, newDefaultSize));

    }

    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE :
                return basicSetDefaultSize (null, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE :
                return getDefaultSize ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @Override
    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE :
                setDefaultSize ((Dimension) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    @Override
    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE :
                setDefaultSize ((Dimension) null);
                return;
        }
        super.eUnset (featureID);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.DEFAULT_SIZE_FACET__DEFAULT_SIZE :
                return defaultSize != null;
        }
        return super.eIsSet (featureID);
    }

}

