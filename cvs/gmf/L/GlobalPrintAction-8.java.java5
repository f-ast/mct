package org.eclipse.gmf.runtime.common.ui.action.actions.global;

import org.eclipse.gmf.runtime.common.ui.action.global.GlobalAction;

import org.eclipse.gmf.runtime.common.ui.action.global.GlobalActionId;

import org.eclipse.gmf.runtime.common.ui.action.internal.CommonUIActionPlugin;

import org.eclipse.gmf.runtime.common.ui.action.internal.IHelpContextIds;

import org.eclipse.gmf.runtime.common.ui.action.internal.l10n.CommonUIActionMessages;

import org.eclipse.gmf.runtime.common.ui.action.internal.l10n.CommonUIActionPluginImages;

import org.eclipse.jface.resource.ImageDescriptor;

import org.eclipse.ui.IWorkbenchPage;

import org.eclipse.ui.IWorkbenchPart;

import org.eclipse.ui.PlatformUI;

public final class GlobalPrintAction extends GlobalAction {
    private static final ImageDescriptor PRINT_IMAGE = CommonUIActionPlugin.imageDescriptorFromPlugin (CommonUIActionPlugin.getPluginId (), CommonUIActionPluginImages.IMG_PRINT_EDIT_ETOOL16);
    private static final ImageDescriptor DISABLED_PRINT_IMAGE = CommonUIActionPlugin.imageDescriptorFromPlugin (CommonUIActionPlugin.getPluginId (), CommonUIActionPluginImages.IMG_PRINT_EDIT_DTOOL16);

    public GlobalPrintAction (IWorkbenchPage workbenchPage) {
        super (workbenchPage);
    }

    public GlobalPrintAction (IWorkbenchPart workbenchPart) {
        super (workbenchPart);
    }

    public void init () {
        setId (getWorkbenchActionConstant ());
        setText (CommonUIActionMessages.GlobalPrintAction_label);
        setImageDescriptor (PRINT_IMAGE);
        setHoverImageDescriptor (PRINT_IMAGE);
        setDisabledImageDescriptor (DISABLED_PRINT_IMAGE);
        PlatformUI.getWorkbench ().getHelpSystem ().setHelp (this, IHelpContextIds.PX_U_DEFAULT_CS_HELP);
        super.init ();
    }

    public String getActionId () {
        return GlobalActionId.PRINT;
    }

    public void refresh () {
        setEnabled (! getGlobalActionHandlerData ().isEmpty () && System.getProperty ("os.name").toUpperCase ().startsWith ("WIN"));
    }

    protected boolean isSelectionListener () {
        return true;
    }

}

