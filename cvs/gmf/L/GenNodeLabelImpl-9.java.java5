package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

import org.eclipse.gmf.codegen.gmfgen.GenNodeLabel;

public class GenNodeLabelImpl extends GenLabelImpl implements GenNodeLabel {

    protected GenNodeLabelImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenNodeLabel ();
    }

    public GenNode getNode () {
        if (eContainerFeatureID != GMFGenPackage.GEN_NODE_LABEL__NODE) return null;

        return (GenNode) eContainer ();
    }

    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_NODE_LABEL__NODE :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_NODE_LABEL__NODE :
                return eBasicSetContainer (null, GMFGenPackage.GEN_NODE_LABEL__NODE, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.GEN_NODE_LABEL__NODE :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_NODE__LABELS, GenNode.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_NODE_LABEL__NODE :
                return getNode ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_NODE_LABEL__NODE :
                return getNode () != null;
        }
        return super.eIsSet (featureID);
    }

    public GenDiagram getDiagram () {
        return getNode ().getDiagram ();
    }

    protected String getHostName () {
        return getNode ().getClassNamePrefix ();
    }

}

