package org.eclipse.gmf.runtime.diagram.ui.render.internal.clipboard;

import java.awt.Image;

import java.awt.datatransfer.DataFlavor;

import java.awt.datatransfer.Transferable;

import java.awt.datatransfer.UnsupportedFlavorException;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.common.ui.action.internal.CommonUIActionDebugOptions;

import org.eclipse.gmf.runtime.common.ui.action.internal.CommonUIActionPlugin;

import org.eclipse.gmf.runtime.common.ui.util.ICustomData;

public class AWTViewImageTransferable implements Transferable {
    private ICustomData data = null;
    private Image image = null;
    static public DataFlavor AWTCUSTOMDATAFLAVOR = new DataFlavor (ICustomData.class, null);

    public AWTViewImageTransferable (ICustomData data, Image image) {
        this.data = data;
        this.image = image;
    }

    public DataFlavor [] getTransferDataFlavors () {
        return new DataFlavor [] {AWTCUSTOMDATAFLAVOR, DataFlavor.imageFlavor};
    }

    public boolean isDataFlavorSupported (DataFlavor flavor) {
        return (flavor.equals (AWTCUSTOMDATAFLAVOR) && data != null) || (flavor.equals (DataFlavor.imageFlavor) && image != null);
    }

    public Object getTransferData (DataFlavor flavor) throws UnsupportedFlavorException {
        if (! isDataFlavorSupported (flavor)) {
            UnsupportedFlavorException ufe = new UnsupportedFlavorException (flavor);
            Trace.throwing (CommonUIActionPlugin.getDefault (), CommonUIActionDebugOptions.EXCEPTIONS_THROWING, getClass (), "getTransferData()", ufe);
            throw ufe;
        }
        if (flavor.equals (AWTCUSTOMDATAFLAVOR)) return data;
        else if (flavor.equals (DataFlavor.imageFlavor)) return image;

        return null;
    }

}

