package org.eclipse.gmf.codegen.gmfgen.util;

import java.util.List;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.codegen.gmfgen.Attributes;

import org.eclipse.gmf.codegen.gmfgen.BasicNodeViewmap;

import org.eclipse.gmf.codegen.gmfgen.DecoratedConnectionViewmap;

import org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes;

import org.eclipse.gmf.codegen.gmfgen.EntryBase;

import org.eclipse.gmf.codegen.gmfgen.FigureViewmap;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenBaseElement;

import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;

import org.eclipse.gmf.codegen.gmfgen.GenChildNode;

import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenLink;

import org.eclipse.gmf.codegen.gmfgen.GenLinkReferenceOnly;

import org.eclipse.gmf.codegen.gmfgen.GenLinkWithClass;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

import org.eclipse.gmf.codegen.gmfgen.LinkDecoration;

import org.eclipse.gmf.codegen.gmfgen.LinkEntry;

import org.eclipse.gmf.codegen.gmfgen.NodeEntry;

import org.eclipse.gmf.codegen.gmfgen.Palette;

import org.eclipse.gmf.codegen.gmfgen.ShapeAttributes;

import org.eclipse.gmf.codegen.gmfgen.ToolEntry;

import org.eclipse.gmf.codegen.gmfgen.ToolGroup;

import org.eclipse.gmf.codegen.gmfgen.Viewmap;

public class GMFGenSwitch {
    protected static GMFGenPackage modelPackage;

    public GMFGenSwitch () {
        if (modelPackage == null) {
            modelPackage = GMFGenPackage.eINSTANCE;
        }
    }

    public Object doSwitch (EObject theEObject) {
        return doSwitch (theEObject.eClass (), theEObject);
    }

    protected Object doSwitch (EClass theEClass, EObject theEObject) {
        if (theEClass.eContainer () == modelPackage) {
            return doSwitch (theEClass.getClassifierID (), theEObject);
        } else {
            List eSuperTypes = theEClass.getESuperTypes ();
            return eSuperTypes.isEmpty () ? defaultCase (theEObject) : doSwitch ((EClass) eSuperTypes.get (0), theEObject);
        }
    }

    protected Object doSwitch (int classifierID, EObject theEObject) {
        switch (classifierID) {
            case GMFGenPackage.GEN_DIAGRAM :
                {
                    GenDiagram genDiagram = (GenDiagram) theEObject;
                    Object result = caseGenDiagram (genDiagram);
                    if (result == null) result = caseGenCommonBase (genDiagram);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_COMMON_BASE :
                {
                    GenCommonBase genCommonBase = (GenCommonBase) theEObject;
                    Object result = caseGenCommonBase (genCommonBase);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_BASE_ELEMENT :
                {
                    GenBaseElement genBaseElement = (GenBaseElement) theEObject;
                    Object result = caseGenBaseElement (genBaseElement);
                    if (result == null) result = caseGenCommonBase (genBaseElement);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_NODE :
                {
                    GenNode genNode = (GenNode) theEObject;
                    Object result = caseGenNode (genNode);
                    if (result == null) result = caseGenBaseElement (genNode);

                    if (result == null) result = caseGenCommonBase (genNode);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_CHILD_CONTAINER :
                {
                    GenChildContainer genChildContainer = (GenChildContainer) theEObject;
                    Object result = caseGenChildContainer (genChildContainer);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_CHILD_NODE :
                {
                    GenChildNode genChildNode = (GenChildNode) theEObject;
                    Object result = caseGenChildNode (genChildNode);
                    if (result == null) result = caseGenNode (genChildNode);

                    if (result == null) result = caseGenBaseElement (genChildNode);

                    if (result == null) result = caseGenCommonBase (genChildNode);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_LINK :
                {
                    GenLink genLink = (GenLink) theEObject;
                    Object result = caseGenLink (genLink);
                    if (result == null) result = caseGenBaseElement (genLink);

                    if (result == null) result = caseGenCommonBase (genLink);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_LINK_WITH_CLASS :
                {
                    GenLinkWithClass genLinkWithClass = (GenLinkWithClass) theEObject;
                    Object result = caseGenLinkWithClass (genLinkWithClass);
                    if (result == null) result = caseGenLink (genLinkWithClass);

                    if (result == null) result = caseGenBaseElement (genLinkWithClass);

                    if (result == null) result = caseGenCommonBase (genLinkWithClass);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.GEN_LINK_REFERENCE_ONLY :
                {
                    GenLinkReferenceOnly genLinkReferenceOnly = (GenLinkReferenceOnly) theEObject;
                    Object result = caseGenLinkReferenceOnly (genLinkReferenceOnly);
                    if (result == null) result = caseGenLink (genLinkReferenceOnly);

                    if (result == null) result = caseGenBaseElement (genLinkReferenceOnly);

                    if (result == null) result = caseGenCommonBase (genLinkReferenceOnly);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.ATTRIBUTES :
                {
                    Attributes attributes = (Attributes) theEObject;
                    Object result = caseAttributes (attributes);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.SHAPE_ATTRIBUTES :
                {
                    ShapeAttributes shapeAttributes = (ShapeAttributes) theEObject;
                    Object result = caseShapeAttributes (shapeAttributes);
                    if (result == null) result = caseAttributes (shapeAttributes);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.DEFAULT_SIZE_ATTRIBUTES :
                {
                    DefaultSizeAttributes defaultSizeAttributes = (DefaultSizeAttributes) theEObject;
                    Object result = caseDefaultSizeAttributes (defaultSizeAttributes);
                    if (result == null) result = caseAttributes (defaultSizeAttributes);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.VIEWMAP :
                {
                    Viewmap viewmap = (Viewmap) theEObject;
                    Object result = caseViewmap (viewmap);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.FIGURE_VIEWMAP :
                {
                    FigureViewmap figureViewmap = (FigureViewmap) theEObject;
                    Object result = caseFigureViewmap (figureViewmap);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.BASIC_NODE_VIEWMAP :
                {
                    BasicNodeViewmap basicNodeViewmap = (BasicNodeViewmap) theEObject;
                    Object result = caseBasicNodeViewmap (basicNodeViewmap);
                    if (result == null) result = caseViewmap (basicNodeViewmap);

                    if (result == null) result = caseFigureViewmap (basicNodeViewmap);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.DECORATED_CONNECTION_VIEWMAP :
                {
                    DecoratedConnectionViewmap decoratedConnectionViewmap = (DecoratedConnectionViewmap) theEObject;
                    Object result = caseDecoratedConnectionViewmap (decoratedConnectionViewmap);
                    if (result == null) result = caseViewmap (decoratedConnectionViewmap);

                    if (result == null) result = caseFigureViewmap (decoratedConnectionViewmap);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.LINK_DECORATION :
                {
                    LinkDecoration linkDecoration = (LinkDecoration) theEObject;
                    Object result = caseLinkDecoration (linkDecoration);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.PALETTE :
                {
                    Palette palette = (Palette) theEObject;
                    Object result = casePalette (palette);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.ENTRY_BASE :
                {
                    EntryBase entryBase = (EntryBase) theEObject;
                    Object result = caseEntryBase (entryBase);
                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.TOOL_ENTRY :
                {
                    ToolEntry toolEntry = (ToolEntry) theEObject;
                    Object result = caseToolEntry (toolEntry);
                    if (result == null) result = caseEntryBase (toolEntry);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.NODE_ENTRY :
                {
                    NodeEntry nodeEntry = (NodeEntry) theEObject;
                    Object result = caseNodeEntry (nodeEntry);
                    if (result == null) result = caseToolEntry (nodeEntry);

                    if (result == null) result = caseEntryBase (nodeEntry);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.LINK_ENTRY :
                {
                    LinkEntry linkEntry = (LinkEntry) theEObject;
                    Object result = caseLinkEntry (linkEntry);
                    if (result == null) result = caseToolEntry (linkEntry);

                    if (result == null) result = caseEntryBase (linkEntry);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } case GMFGenPackage.TOOL_GROUP :
                {
                    ToolGroup toolGroup = (ToolGroup) theEObject;
                    Object result = caseToolGroup (toolGroup);
                    if (result == null) result = caseEntryBase (toolGroup);

                    if (result == null) result = defaultCase (theEObject);

                    return result;
                } default :
                return defaultCase (theEObject);
        }
    }

    public Object caseGenDiagram (GenDiagram object) {
        return null;
    }

    public Object caseGenCommonBase (GenCommonBase object) {
        return null;
    }

    public Object caseGenBaseElement (GenBaseElement object) {
        return null;
    }

    public Object caseGenNode (GenNode object) {
        return null;
    }

    public Object caseGenChildNode (GenChildNode object) {
        return null;
    }

    public Object caseGenChildContainer (GenChildContainer object) {
        return null;
    }

    public Object caseGenLink (GenLink object) {
        return null;
    }

    public Object caseGenLinkWithClass (GenLinkWithClass object) {
        return null;
    }

    public Object caseGenLinkReferenceOnly (GenLinkReferenceOnly object) {
        return null;
    }

    public Object caseViewmap (Viewmap object) {
        return null;
    }

    public Object caseAttributes (Attributes object) {
        return null;
    }

    public Object caseShapeAttributes (ShapeAttributes object) {
        return null;
    }

    public Object caseDefaultSizeAttributes (DefaultSizeAttributes object) {
        return null;
    }

    public Object caseFigureViewmap (FigureViewmap object) {
        return null;
    }

    public Object caseBasicNodeViewmap (BasicNodeViewmap object) {
        return null;
    }

    public Object caseDecoratedConnectionViewmap (DecoratedConnectionViewmap object) {
        return null;
    }

    public Object caseLinkDecoration (LinkDecoration object) {
        return null;
    }

    public Object casePalette (Palette object) {
        return null;
    }

    public Object caseEntryBase (EntryBase object) {
        return null;
    }

    public Object caseToolEntry (ToolEntry object) {
        return null;
    }

    public Object caseNodeEntry (NodeEntry object) {
        return null;
    }

    public Object caseLinkEntry (LinkEntry object) {
        return null;
    }

    public Object caseToolGroup (ToolGroup object) {
        return null;
    }

    public Object defaultCase (EObject object) {
        return null;
    }

}

