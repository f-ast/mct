package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.EntryBase;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;

public class EntryBaseItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public EntryBaseItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    public List getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addOrderPropertyDescriptor (object);
            addTitleKeyPropertyDescriptor (object);
            addDescriptionKeyPropertyDescriptor (object);
            addLargeIconPathPropertyDescriptor (object);
            addSmallIconPathPropertyDescriptor (object);
            addCreateMethodNamePropertyDescriptor (object);
            addEntryIDPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addOrderPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_order_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_order_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_Order (), true, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    protected void addTitleKeyPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_titleKey_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_titleKey_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_TitleKey (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addDescriptionKeyPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_descriptionKey_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_descriptionKey_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_DescriptionKey (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addLargeIconPathPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_largeIconPath_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_largeIconPath_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_LargeIconPath (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addSmallIconPathPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_smallIconPath_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_smallIconPath_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_SmallIconPath (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addCreateMethodNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_createMethodName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_createMethodName_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_CreateMethodName (), true, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addEntryIDPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_EntryBase_entryID_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_EntryBase_entryID_feature", "_UI_EntryBase_type"), GMFGenPackage.eINSTANCE.getEntryBase_EntryID (), true, ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE, null, null));
    }

    public String getText (Object object) {
        String label = ((EntryBase) object).getCreateMethodName ();
        return label == null || label.length () == 0 ? getString ("_UI_EntryBase_type") : getString ("_UI_EntryBase_type") + " " + label;
    }

    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (EntryBase.class)) {
            case GMFGenPackage.ENTRY_BASE__ORDER :
            case GMFGenPackage.ENTRY_BASE__TITLE_KEY :
            case GMFGenPackage.ENTRY_BASE__DESCRIPTION_KEY :
            case GMFGenPackage.ENTRY_BASE__LARGE_ICON_PATH :
            case GMFGenPackage.ENTRY_BASE__SMALL_ICON_PATH :
            case GMFGenPackage.ENTRY_BASE__CREATE_METHOD_NAME :
            case GMFGenPackage.ENTRY_BASE__ENTRY_ID :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    public ResourceLocator getResourceLocator () {
        return EditorPlugin.INSTANCE;
    }

}

