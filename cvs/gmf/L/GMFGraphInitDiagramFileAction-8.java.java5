package org.eclipse.gmf.graphdef.editor.part;

import org.eclipse.core.resources.IFile;

import org.eclipse.emf.common.util.WrappedException;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.resource.Resource;

import org.eclipse.emf.ecore.resource.ResourceSet;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;

import org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory;

import org.eclipse.jface.action.IAction;

import org.eclipse.jface.dialogs.MessageDialog;

import org.eclipse.jface.viewers.ISelection;

import org.eclipse.jface.viewers.IStructuredSelection;

import org.eclipse.jface.wizard.Wizard;

import org.eclipse.swt.widgets.Shell;

import org.eclipse.ui.IObjectActionDelegate;

import org.eclipse.ui.IWorkbenchPart;

public class GMFGraphInitDiagramFileAction implements IObjectActionDelegate {
    private IWorkbenchPart targetPart;
    private org.eclipse.emf.common.util.URI domainModelURI;

    public void setActivePart (IAction action, IWorkbenchPart targetPart) {
        this.targetPart = targetPart;
    }

    public void selectionChanged (IAction action, ISelection selection) {
        domainModelURI = null;
        action.setEnabled (false);
        if (selection instanceof IStructuredSelection == false || selection.isEmpty ()) {
            return;
        }
        IFile file = (IFile) ((IStructuredSelection) selection).getFirstElement ();
        domainModelURI = org.eclipse.emf.common.util.URI.createPlatformResourceURI (file.getFullPath ().toString (), true);
        action.setEnabled (true);
    }

    private Shell getShell () {
        return targetPart.getSite ().getShell ();
    }

    public void run (IAction action) {
        TransactionalEditingDomain editingDomain = GMFEditingDomainFactory.INSTANCE.createEditingDomain ();
        ResourceSet resourceSet = editingDomain.getResourceSet ();
        EObject diagramRoot = null;
        try {
            Resource resource = resourceSet.getResource (domainModelURI, true);
            diagramRoot = (EObject) resource.getContents ().get (0);
        } catch (WrappedException ex) {
            GMFGraphDiagramEditorPlugin.getInstance ().logError ("Unable to load resource: " + domainModelURI, ex);
        }
        if (diagramRoot == null) {
            MessageDialog.openError (getShell (), "Error", "Model file loading failed");
            return;
        }
        Wizard wizard = new GMFGraphNewDiagramFileWizard (domainModelURI, diagramRoot, editingDomain);
        wizard.setWindowTitle ("Initialize new " + CanvasEditPart.MODEL_ID + " diagram file");
        GMFGraphDiagramEditorUtil.runWizard (getShell (), wizard, "InitDiagramFile");
    }

}

