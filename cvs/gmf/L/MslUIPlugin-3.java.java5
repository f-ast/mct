package org.eclipse.gmf.runtime.emf.ui.internal;

import org.eclipse.core.runtime.Platform;

import org.eclipse.ui.IWorkbenchPage;

import org.eclipse.ui.IWorkbenchWindow;

import org.eclipse.ui.PlatformUI;

import org.eclipse.gmf.runtime.common.core.l10n.AbstractResourceManager;

import org.eclipse.gmf.runtime.common.ui.plugin.XToolsUIPlugin;

import org.eclipse.gmf.runtime.emf.ui.internal.l10n.ResourceManager;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.ModelingAssistantService;

public class MslUIPlugin extends XToolsUIPlugin {
    private static MslUIPlugin plugin;
    private final static String MODELING_ASSISTANT_SERVICE_EXTENSION_POINT = "modelingAssistantProviders";

    public MslUIPlugin () {
        super ();
        plugin = this;
    }

    public static MslUIPlugin getDefault () {
        return plugin;
    }

    public static String getPluginId () {
        return getDefault ().getBundle ().getSymbolicName ();
    }

    public AbstractResourceManager getResourceManager () {
        return ResourceManager.getInstance ();
    }

    public static IWorkbenchWindow getActiveWorkbenchWindow () {
        return PlatformUI.getWorkbench ().getActiveWorkbenchWindow ();
    }

    public static IWorkbenchPage getActivePage () {
        IWorkbenchWindow window = getActiveWorkbenchWindow ();
        if (window == null) {
            return null;
        }
        return window.getActivePage ();
    }

    protected void doStartup () {
        configureModelingAssistantProviders ();
    }

    private void configureModelingAssistantProviders () {
        ModelingAssistantService.getInstance ().configureProviders (Platform.getExtensionRegistry ().getExtensionPoint (getPluginId (), MODELING_ASSISTANT_SERVICE_EXTENSION_POINT).getConfigurationElements ());
    }

}

