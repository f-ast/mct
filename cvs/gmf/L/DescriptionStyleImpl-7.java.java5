package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.runtime.notation.DescriptionStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class DescriptionStyleImpl extends NotationObjectImpl implements DescriptionStyle {
    protected static final String DESCRIPTION_EDEFAULT = "";
    protected String description = DESCRIPTION_EDEFAULT;

    protected DescriptionStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.DESCRIPTION_STYLE;
    }

    public String getDescription () {
        return description;
    }

    public void setDescription (String newDescription) {
        String oldDescription = description;
        description = newDescription;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DESCRIPTION_STYLE__DESCRIPTION, oldDescription, description));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.DESCRIPTION_STYLE__UUID :
                return getUUID ();
            case NotationPackage.DESCRIPTION_STYLE__DESCRIPTION :
                return getDescription ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.DESCRIPTION_STYLE__UUID :
                setUUID ((byte []) newValue);
                return;
            case NotationPackage.DESCRIPTION_STYLE__DESCRIPTION :
                setDescription ((String) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.DESCRIPTION_STYLE__UUID :
                setUUID (UUID_EDEFAULT);
                return;
            case NotationPackage.DESCRIPTION_STYLE__DESCRIPTION :
                setDescription (DESCRIPTION_EDEFAULT);
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.DESCRIPTION_STYLE__UUID :
                return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
            case NotationPackage.DESCRIPTION_STYLE__DESCRIPTION :
                return DESCRIPTION_EDEFAULT == null ? description != null : ! DESCRIPTION_EDEFAULT.equals (description);
        }
        return eDynamicIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (description: ");
        result.append (description);
        result.append (')');
        return result.toString ();
    }

}

