package org.eclipse.gmf.runtime.emf.core.clipboard;

import java.util.HashMap;

import java.util.Map;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.common.util.URI;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EPackage.Registry;

import org.eclipse.emf.ecore.resource.Resource;

import org.eclipse.emf.ecore.resource.ResourceSet;

import org.eclipse.emf.ecore.resource.URIConverter;

import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.emf.core.internal.plugin.EMFCoreDebugOptions;

import org.eclipse.gmf.runtime.emf.core.internal.plugin.EMFCorePlugin;

public class CopyingResourceSet extends ResourceSetImpl {
    private ResourceSetImpl mslResourceSet;
    private Map resourcesMap;

    public CopyingResourceSet (ResourceSet resourceSet) {
        mslResourceSet = (ResourceSetImpl) resourceSet;
        resourcesMap = new HashMap ();
        setURIResourceMap (new HashMap ());
    }

    public Map getResourcesMap () {
        return resourcesMap;
    }

    public EObject getEObject (URI uri, boolean loadOnDemand) {
        EObject eObject = mslResourceSet.getEObject (uri, loadOnDemand);
        if (eObject == null) {
            return super.getEObject (uri, loadOnDemand);
        }
        return eObject;
    }

    public Resource getResource (URI uri, boolean loadOnDemand) {
        Resource resource = mslResourceSet.getResource (uri, loadOnDemand);
        if (resource == null) {
            return super.getResource (uri, loadOnDemand);
        }
        return resource;
    }

    public Map getURIResourceMap () {
        return mslResourceSet.getURIResourceMap ();
    }

    public Resource createResource (URI uri) {
        throwUnsupportedOperationException ("createResource", new UnsupportedOperationException ("Can't create resources on MSLCopyingResourceSet"));
        return null;
    }

    public boolean eNotificationRequired () {
        return false;
    }

    private void throwUnsupportedOperationException (String methodName, UnsupportedOperationException ex) {
        Trace.throwing (EMFCorePlugin.getDefault (), EMFCoreDebugOptions.EXCEPTIONS_THROWING, getClass (), methodName, ex);
        throw ex;
    }

    public EList getAdapterFactories () {
        return mslResourceSet.getAdapterFactories ();
    }

    public Map getLoadOptions () {
        return mslResourceSet.getLoadOptions ();
    }

    public Registry getPackageRegistry () {
        return mslResourceSet.getPackageRegistry ();
    }

    public org.eclipse.emf.ecore.resource.Resource.Factory.Registry getResourceFactoryRegistry () {
        return mslResourceSet.getResourceFactoryRegistry ();
    }

    public URIConverter getURIConverter () {
        return mslResourceSet.getURIConverter ();
    }

}

