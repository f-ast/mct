package org.eclipse.gmf.runtime.notation.util;

import java.util.Map;

import org.eclipse.emf.common.notify.Adapter;

import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EModelElement;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.runtime.notation.*;

import org.eclipse.gmf.runtime.notation.Anchor;

import org.eclipse.gmf.runtime.notation.Bendpoints;

import org.eclipse.gmf.runtime.notation.Bounds;

import org.eclipse.gmf.runtime.notation.CanonicalStyle;

import org.eclipse.gmf.runtime.notation.ConnectorStyle;

import org.eclipse.gmf.runtime.notation.DescriptionStyle;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.DiagramStyle;

import org.eclipse.gmf.runtime.notation.DrawerStyle;

import org.eclipse.gmf.runtime.notation.Edge;

import org.eclipse.gmf.runtime.notation.FillStyle;

import org.eclipse.gmf.runtime.notation.FilteringStyle;

import org.eclipse.gmf.runtime.notation.FontStyle;

import org.eclipse.gmf.runtime.notation.Guide;

import org.eclipse.gmf.runtime.notation.GuideStyle;

import org.eclipse.gmf.runtime.notation.IdentityAnchor;

import org.eclipse.gmf.runtime.notation.Image;

import org.eclipse.gmf.runtime.notation.ImageBufferStyle;

import org.eclipse.gmf.runtime.notation.ImageStyle;

import org.eclipse.gmf.runtime.notation.LayoutConstraint;

import org.eclipse.gmf.runtime.notation.LineStyle;

import org.eclipse.gmf.runtime.notation.Location;

import org.eclipse.gmf.runtime.notation.Node;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.gmf.runtime.notation.PageStyle;

import org.eclipse.gmf.runtime.notation.Ratio;

import org.eclipse.gmf.runtime.notation.RelativeBendpoints;

import org.eclipse.gmf.runtime.notation.RoutingStyle;

import org.eclipse.gmf.runtime.notation.ShapeStyle;

import org.eclipse.gmf.runtime.notation.Size;

import org.eclipse.gmf.runtime.notation.SortingStyle;

import org.eclipse.gmf.runtime.notation.Style;

import org.eclipse.gmf.runtime.notation.TitleStyle;

import org.eclipse.gmf.runtime.notation.View;

public class NotationAdapterFactory extends AdapterFactoryImpl {
    protected static NotationPackage modelPackage;

    public NotationAdapterFactory () {
        if (modelPackage == null) {
            modelPackage = NotationPackage.eINSTANCE;
        }
    }

    public boolean isFactoryForType (Object object) {
        if (object == modelPackage) {
            return true;
        }
        if (object instanceof EObject) {
            return ((EObject) object).eClass ().getEPackage () == modelPackage;
        }
        return false;
    }

    protected NotationSwitch modelSwitch = new NotationSwitch () {

        public Object caseEdge (Edge object) {
            return createEdgeAdapter ();
        }

        public Object caseNode (Node object) {
            return createNodeAdapter ();
        }

        public Object caseStyle (Style object) {
            return createStyleAdapter ();
        }

        public Object caseFillStyle (FillStyle object) {
            return createFillStyleAdapter ();
        }

        public Object caseLineStyle (LineStyle object) {
            return createLineStyleAdapter ();
        }

        public Object caseFontStyle (FontStyle object) {
            return createFontStyleAdapter ();
        }

        public Object caseTitleStyle (TitleStyle object) {
            return createTitleStyleAdapter ();
        }

        public Object caseSortingStyle (SortingStyle object) {
            return createSortingStyleAdapter ();
        }

        public Object caseDescriptionStyle (DescriptionStyle object) {
            return createDescriptionStyleAdapter ();
        }

        public Object caseLayoutConstraint (LayoutConstraint object) {
            return createLayoutConstraintAdapter ();
        }

        public Object caseSize (Size object) {
            return createSizeAdapter ();
        }

        public Object caseLocation (Location object) {
            return createLocationAdapter ();
        }

        public Object caseBounds (Bounds object) {
            return createBoundsAdapter ();
        }

        public Object caseRatio (Ratio object) {
            return createRatioAdapter ();
        }

        public Object caseAnchor (Anchor object) {
            return createAnchorAdapter ();
        }

        public Object caseBendpoints (Bendpoints object) {
            return createBendpointsAdapter ();
        }

        public Object caseIdentityAnchor (IdentityAnchor object) {
            return createIdentityAnchorAdapter ();
        }

        public Object caseRoutingStyle (RoutingStyle object) {
            return createRoutingStyleAdapter ();
        }

        public Object caseView (View object) {
            return createViewAdapter ();
        }

        public Object caseRelativeBendpoints (RelativeBendpoints object) {
            return createRelativeBendpointsAdapter ();
        }

        public Object caseDiagram (Diagram object) {
            return createDiagramAdapter ();
        }

        public Object caseImage (Image object) {
            return createImageAdapter ();
        }

        public Object caseCanonicalStyle (CanonicalStyle object) {
            return createCanonicalStyleAdapter ();
        }

        public Object caseShapeStyle (ShapeStyle object) {
            return createShapeStyleAdapter ();
        }

        public Object caseConnectorStyle (ConnectorStyle object) {
            return createConnectorStyleAdapter ();
        }

        public Object casePageStyle (PageStyle object) {
            return createPageStyleAdapter ();
        }

        public Object caseDrawerStyle (DrawerStyle object) {
            return createDrawerStyleAdapter ();
        }

        public Object caseGuideStyle (GuideStyle object) {
            return createGuideStyleAdapter ();
        }

        public Object caseGuide (Guide object) {
            return createGuideAdapter ();
        }

        public Object caseNodeEntry (Map.Entry object) {
            return createNodeEntryAdapter ();
        }

        public Object caseFilteringStyle (FilteringStyle object) {
            return createFilteringStyleAdapter ();
        }

        public Object caseDiagramStyle (DiagramStyle object) {
            return createDiagramStyleAdapter ();
        }

        public Object caseImageStyle (ImageStyle object) {
            return createImageStyleAdapter ();
        }

        public Object caseImageBufferStyle (ImageBufferStyle object) {
            return createImageBufferStyleAdapter ();
        }

        public Object caseEModelElement (EModelElement object) {
            return createEModelElementAdapter ();
        }

        public Object defaultCase (EObject object) {
            return createEObjectAdapter ();
        }

    }

    ;

    public Adapter createAdapter (Notifier target) {
        return (Adapter) modelSwitch.doSwitch ((EObject) target);
    }

    public Adapter createEdgeAdapter () {
        return null;
    }

    public Adapter createNodeAdapter () {
        return null;
    }

    public Adapter createStyleAdapter () {
        return null;
    }

    public Adapter createFillStyleAdapter () {
        return null;
    }

    public Adapter createLineStyleAdapter () {
        return null;
    }

    public Adapter createFontStyleAdapter () {
        return null;
    }

    public Adapter createTitleStyleAdapter () {
        return null;
    }

    public Adapter createSortingStyleAdapter () {
        return null;
    }

    public Adapter createDescriptionStyleAdapter () {
        return null;
    }

    public Adapter createLayoutConstraintAdapter () {
        return null;
    }

    public Adapter createSizeAdapter () {
        return null;
    }

    public Adapter createLocationAdapter () {
        return null;
    }

    public Adapter createBoundsAdapter () {
        return null;
    }

    public Adapter createRatioAdapter () {
        return null;
    }

    public Adapter createAnchorAdapter () {
        return null;
    }

    public Adapter createBendpointsAdapter () {
        return null;
    }

    public Adapter createIdentityAnchorAdapter () {
        return null;
    }

    public Adapter createRoutingStyleAdapter () {
        return null;
    }

    public Adapter createViewAdapter () {
        return null;
    }

    public Adapter createRelativeBendpointsAdapter () {
        return null;
    }

    public Adapter createCanonicalStyleAdapter () {
        return null;
    }

    public Adapter createShapeStyleAdapter () {
        return null;
    }

    public Adapter createConnectorStyleAdapter () {
        return null;
    }

    public Adapter createDiagramAdapter () {
        return null;
    }

    public Adapter createImageAdapter () {
        return null;
    }

    public Adapter createPageStyleAdapter () {
        return null;
    }

    public Adapter createDrawerStyleAdapter () {
        return null;
    }

    public Adapter createGuideStyleAdapter () {
        return null;
    }

    public Adapter createGuideAdapter () {
        return null;
    }

    public Adapter createNodeEntryAdapter () {
        return null;
    }

    public Adapter createFilteringStyleAdapter () {
        return null;
    }

    public Adapter createDiagramStyleAdapter () {
        return null;
    }

    public Adapter createImageStyleAdapter () {
        return null;
    }

    public Adapter createImageBufferStyleAdapter () {
        return null;
    }

    public Adapter createEModelElementAdapter () {
        return null;
    }

    public Adapter createEObjectAdapter () {
        return null;
    }

}

