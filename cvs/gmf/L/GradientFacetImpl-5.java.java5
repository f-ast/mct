package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.gmfgraph.Direction;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.GradientFacet;

public class GradientFacetImpl extends EObjectImpl implements GradientFacet {
    protected static final Direction DIRECTION_EDEFAULT = Direction.NONE_LITERAL;
    protected Direction direction = DIRECTION_EDEFAULT;

    protected GradientFacetImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getGradientFacet ();
    }

    public Direction getDirection () {
        return direction;
    }

    public void setDirection (Direction newDirection) {
        Direction oldDirection = direction;
        direction = newDirection == null ? DIRECTION_EDEFAULT : newDirection;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.GRADIENT_FACET__DIRECTION, oldDirection, direction));

    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGraphPackage.GRADIENT_FACET__DIRECTION :
                return getDirection ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @Override
    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGraphPackage.GRADIENT_FACET__DIRECTION :
                setDirection ((Direction) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    @Override
    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.GRADIENT_FACET__DIRECTION :
                setDirection (DIRECTION_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.GRADIENT_FACET__DIRECTION :
                return direction != DIRECTION_EDEFAULT;
        }
        return super.eIsSet (featureID);
    }

    @Override
    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (direction: ");
        result.append (direction);
        result.append (')');
        return result.toString ();
    }

}

