package org.eclipse.gmf.tooldef.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.tooldef.GMFToolFactory;

import org.eclipse.gmf.tooldef.GMFToolPackage;

import org.eclipse.gmf.tooldef.ToolRegistry;

public class ToolRegistryItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public ToolRegistryItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
        }
        return itemPropertyDescriptors;
    }

    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object) {
        if (childrenFeatures == null) {
            super.getChildrenFeatures (object);
            childrenFeatures.add (GMFToolPackage.eINSTANCE.getToolRegistry_SharedActions ());
            childrenFeatures.add (GMFToolPackage.eINSTANCE.getToolRegistry_AllMenus ());
            childrenFeatures.add (GMFToolPackage.eINSTANCE.getToolRegistry_Palette ());
        }
        return childrenFeatures;
    }

    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child) {
        return super.getChildFeature (object, child);
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/ToolRegistry"));
    }

    @Override
    public String getText (Object object) {
        return getString ("_UI_ToolRegistry_type");
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (ToolRegistry.class)) {
            case GMFToolPackage.TOOL_REGISTRY__SHARED_ACTIONS :
            case GMFToolPackage.TOOL_REGISTRY__ALL_MENUS :
            case GMFToolPackage.TOOL_REGISTRY__PALETTE :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_SharedActions (), GMFToolFactory.eINSTANCE.createMenuAction ()));
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_AllMenus (), GMFToolFactory.eINSTANCE.createPredefinedMenu ()));
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_AllMenus (), GMFToolFactory.eINSTANCE.createContextMenu ()));
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_AllMenus (), GMFToolFactory.eINSTANCE.createPopupMenu ()));
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_AllMenus (), GMFToolFactory.eINSTANCE.createMainMenu ()));
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_AllMenus (), GMFToolFactory.eINSTANCE.createToolbar ()));
        newChildDescriptors.add (createChildParameter (GMFToolPackage.eINSTANCE.getToolRegistry_Palette (), GMFToolFactory.eINSTANCE.createPalette ()));
    }

    @Override
    public ResourceLocator getResourceLocator () {
        return GMFToolEditPlugin.INSTANCE;
    }

}

