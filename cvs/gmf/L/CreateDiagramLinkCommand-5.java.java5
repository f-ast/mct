package org.eclipse.gmf.runtime.diagram.core.internal.commands;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.View;

public class CreateDiagramLinkCommand extends AbstractTransactionalCommand {
    private View view = null;
    private Diagram diagram = null;

    public CreateDiagramLinkCommand (TransactionalEditingDomain editingDomain, String label, View view, Diagram diagram) {
        super (editingDomain, label, getWorkspaceFiles (view));
        this.view = view;
        this.diagram = diagram;
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
        view.setElement (diagram);
        return CommandResult.newOKCommandResult ();
    }

    public boolean canExecute () {
        if (view == null) {
            return false;
        }
        return true;
    }

}

