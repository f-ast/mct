package org.eclipse.gmf.mappings.util;

import org.eclipse.emf.common.notify.Adapter;

import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.mappings.*;

import org.eclipse.gmf.mappings.AppearanceSteward;

import org.eclipse.gmf.mappings.AuditContainer;

import org.eclipse.gmf.mappings.AuditRule;

import org.eclipse.gmf.mappings.CanvasMapping;

import org.eclipse.gmf.mappings.ChildReference;

import org.eclipse.gmf.mappings.CompartmentMapping;

import org.eclipse.gmf.mappings.Constraint;

import org.eclipse.gmf.mappings.ElementInitializer;

import org.eclipse.gmf.mappings.FeatureSeqInitializer;

import org.eclipse.gmf.mappings.FeatureValueSpec;

import org.eclipse.gmf.mappings.GMFMapPackage;

import org.eclipse.gmf.mappings.LabelMapping;

import org.eclipse.gmf.mappings.LinkConstraints;

import org.eclipse.gmf.mappings.LinkMapping;

import org.eclipse.gmf.mappings.Mapping;

import org.eclipse.gmf.mappings.MappingEntry;

import org.eclipse.gmf.mappings.MenuOwner;

import org.eclipse.gmf.mappings.NeedsContainment;

import org.eclipse.gmf.mappings.NodeMapping;

import org.eclipse.gmf.mappings.NodeReference;

import org.eclipse.gmf.mappings.ToolOwner;

import org.eclipse.gmf.mappings.TopNodeReference;

import org.eclipse.gmf.mappings.ValueExpression;

public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected static GMFMapPackage modelPackage;

    public GMFMapAdapterFactory () {
        if (modelPackage == null) {
            modelPackage = GMFMapPackage.eINSTANCE;
        }
    }

    public boolean isFactoryForType (Object object) {
        if (object == modelPackage) {
            return true;
        }
        if (object instanceof EObject) {
            return ((EObject) object).eClass ().getEPackage () == modelPackage;
        }
        return false;
    }

    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {

        public Object caseMapping (Mapping object) {
            return createMappingAdapter ();
        }

        public Object caseMappingEntry (MappingEntry object) {
            return createMappingEntryAdapter ();
        }

        public Object caseNeedsContainment (NeedsContainment object) {
            return createNeedsContainmentAdapter ();
        }

        public Object caseNodeReference (NodeReference object) {
            return createNodeReferenceAdapter ();
        }

        public Object caseChildReference (ChildReference object) {
            return createChildReferenceAdapter ();
        }

        public Object caseTopNodeReference (TopNodeReference object) {
            return createTopNodeReferenceAdapter ();
        }

        public Object caseNodeMapping (NodeMapping object) {
            return createNodeMappingAdapter ();
        }

        public Object caseCompartmentMapping (CompartmentMapping object) {
            return createCompartmentMappingAdapter ();
        }

        public Object caseLinkMapping (LinkMapping object) {
            return createLinkMappingAdapter ();
        }

        public Object caseCanvasMapping (CanvasMapping object) {
            return createCanvasMappingAdapter ();
        }

        public Object caseLabelMapping (LabelMapping object) {
            return createLabelMappingAdapter ();
        }

        public Object caseConstraint (Constraint object) {
            return createConstraintAdapter ();
        }

        public Object caseLinkConstraints (LinkConstraints object) {
            return createLinkConstraintsAdapter ();
        }

        public Object caseValueExpression (ValueExpression object) {
            return createValueExpressionAdapter ();
        }

        public Object caseElementInitializer (ElementInitializer object) {
            return createElementInitializerAdapter ();
        }

        public Object caseFeatureSeqInitializer (FeatureSeqInitializer object) {
            return createFeatureSeqInitializerAdapter ();
        }

        public Object caseFeatureValueSpec (FeatureValueSpec object) {
            return createFeatureValueSpecAdapter ();
        }

        public Object caseMenuOwner (MenuOwner object) {
            return createMenuOwnerAdapter ();
        }

        public Object caseToolOwner (ToolOwner object) {
            return createToolOwnerAdapter ();
        }

        public Object caseAppearanceSteward (AppearanceSteward object) {
            return createAppearanceStewardAdapter ();
        }

        public Object caseAuditContainer (AuditContainer object) {
            return createAuditContainerAdapter ();
        }

        public Object caseRuleBase (RuleBase object) {
            return createRuleBaseAdapter ();
        }

        public Object caseAuditRule (AuditRule object) {
            return createAuditRuleAdapter ();
        }

        public Object caseDomainElementTarget (DomainElementTarget object) {
            return createDomainElementTargetAdapter ();
        }

        public Object caseDiagramElementTarget (DiagramElementTarget object) {
            return createDiagramElementTargetAdapter ();
        }

        public Object caseNotationElementTarget (NotationElementTarget object) {
            return createNotationElementTargetAdapter ();
        }

        public Object caseMetricContainer (MetricContainer object) {
            return createMetricContainerAdapter ();
        }

        public Object caseMetricRule (MetricRule object) {
            return createMetricRuleAdapter ();
        }

        public Object caseAuditedMetricTarget (AuditedMetricTarget object) {
            return createAuditedMetricTargetAdapter ();
        }

        public Object caseAuditable (Auditable object) {
            return createAuditableAdapter ();
        }

        public Object caseMeasurable (Measurable object) {
            return createMeasurableAdapter ();
        }

        public Object defaultCase (EObject object) {
            return createEObjectAdapter ();
        }

    }

    ;

    public Adapter createAdapter (Notifier target) {
        return (Adapter) modelSwitch.doSwitch ((EObject) target);
    }

    public Adapter createMappingEntryAdapter () {
        return null;
    }

    public Adapter createNeedsContainmentAdapter () {
        return null;
    }

    public Adapter createNodeReferenceAdapter () {
        return null;
    }

    public Adapter createChildReferenceAdapter () {
        return null;
    }

    public Adapter createTopNodeReferenceAdapter () {
        return null;
    }

    public Adapter createNodeMappingAdapter () {
        return null;
    }

    public Adapter createCompartmentMappingAdapter () {
        return null;
    }

    public Adapter createLinkMappingAdapter () {
        return null;
    }

    public Adapter createCanvasMappingAdapter () {
        return null;
    }

    public Adapter createLabelMappingAdapter () {
        return null;
    }

    public Adapter createMappingAdapter () {
        return null;
    }

    public Adapter createConstraintAdapter () {
        return null;
    }

    public Adapter createLinkConstraintsAdapter () {
        return null;
    }

    public Adapter createValueExpressionAdapter () {
        return null;
    }

    public Adapter createElementInitializerAdapter () {
        return null;
    }

    public Adapter createFeatureSeqInitializerAdapter () {
        return null;
    }

    public Adapter createFeatureValueSpecAdapter () {
        return null;
    }

    public Adapter createMenuOwnerAdapter () {
        return null;
    }

    public Adapter createToolOwnerAdapter () {
        return null;
    }

    public Adapter createAppearanceStewardAdapter () {
        return null;
    }

    public Adapter createAuditContainerAdapter () {
        return null;
    }

    public Adapter createAuditRuleAdapter () {
        return null;
    }

    public Adapter createRuleBaseAdapter () {
        return null;
    }

    public Adapter createDomainElementTargetAdapter () {
        return null;
    }

    public Adapter createDiagramElementTargetAdapter () {
        return null;
    }

    public Adapter createNotationElementTargetAdapter () {
        return null;
    }

    public Adapter createMetricContainerAdapter () {
        return null;
    }

    public Adapter createMetricRuleAdapter () {
        return null;
    }

    public Adapter createAuditedMetricTargetAdapter () {
        return null;
    }

    public Adapter createAuditableAdapter () {
        return null;
    }

    public Adapter createMeasurableAdapter () {
        return null;
    }

    public Adapter createEObjectAdapter () {
        return null;
    }

}

