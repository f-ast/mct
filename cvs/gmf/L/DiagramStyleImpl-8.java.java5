package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.runtime.notation.DescriptionStyle;

import org.eclipse.gmf.runtime.notation.DiagramStyle;

import org.eclipse.gmf.runtime.notation.Guide;

import org.eclipse.gmf.runtime.notation.GuideStyle;

import org.eclipse.gmf.runtime.notation.NotationObject;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.gmf.runtime.notation.PageStyle;

import org.eclipse.gmf.runtime.notation.Style;

public class DiagramStyleImpl extends EObjectImpl implements DiagramStyle {
    protected static final int PAGE_X_EDEFAULT = 0;
    protected int pageX = PAGE_X_EDEFAULT;
    protected static final int PAGE_Y_EDEFAULT = 0;
    protected int pageY = PAGE_Y_EDEFAULT;
    protected static final int PAGE_WIDTH_EDEFAULT = 100;
    protected int pageWidth = PAGE_WIDTH_EDEFAULT;
    protected static final int PAGE_HEIGHT_EDEFAULT = 100;
    protected int pageHeight = PAGE_HEIGHT_EDEFAULT;
    protected EList horizontalGuides;
    protected EList verticalGuides;
    protected static final String DESCRIPTION_EDEFAULT = "";
    protected String description = DESCRIPTION_EDEFAULT;

    protected DiagramStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.DIAGRAM_STYLE;
    }

    public int getPageX () {
        return pageX;
    }

    public void setPageX (int newPageX) {
        int oldPageX = pageX;
        pageX = newPageX;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DIAGRAM_STYLE__PAGE_X, oldPageX, pageX));

    }

    public int getPageY () {
        return pageY;
    }

    public void setPageY (int newPageY) {
        int oldPageY = pageY;
        pageY = newPageY;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DIAGRAM_STYLE__PAGE_Y, oldPageY, pageY));

    }

    public int getPageWidth () {
        return pageWidth;
    }

    public void setPageWidth (int newPageWidth) {
        int oldPageWidth = pageWidth;
        pageWidth = newPageWidth;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH, oldPageWidth, pageWidth));

    }

    public int getPageHeight () {
        return pageHeight;
    }

    public void setPageHeight (int newPageHeight) {
        int oldPageHeight = pageHeight;
        pageHeight = newPageHeight;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT, oldPageHeight, pageHeight));

    }

    public EList getHorizontalGuides () {
        if (horizontalGuides == null) {
            horizontalGuides = new EObjectContainmentEList (Guide.class, this, NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES);
        }
        return horizontalGuides;
    }

    public EList getVerticalGuides () {
        if (verticalGuides == null) {
            verticalGuides = new EObjectContainmentEList (Guide.class, this, NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES);
        }
        return verticalGuides;
    }

    public String getDescription () {
        return description;
    }

    public void setDescription (String newDescription) {
        String oldDescription = description;
        description = newDescription;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.DIAGRAM_STYLE__DESCRIPTION, oldDescription, description));

    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES :
                return ((InternalEList) getHorizontalGuides ()).basicRemove (otherEnd, msgs);
            case NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES :
                return ((InternalEList) getVerticalGuides ()).basicRemove (otherEnd, msgs);
        }
        return eDynamicInverseRemove (otherEnd, featureID, msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_STYLE__PAGE_X :
                return new Integer (getPageX ());
            case NotationPackage.DIAGRAM_STYLE__PAGE_Y :
                return new Integer (getPageY ());
            case NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH :
                return new Integer (getPageWidth ());
            case NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT :
                return new Integer (getPageHeight ());
            case NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES :
                return getHorizontalGuides ();
            case NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES :
                return getVerticalGuides ();
            case NotationPackage.DIAGRAM_STYLE__DESCRIPTION :
                return getDescription ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_STYLE__PAGE_X :
                setPageX (((Integer) newValue).intValue ());
                return;
            case NotationPackage.DIAGRAM_STYLE__PAGE_Y :
                setPageY (((Integer) newValue).intValue ());
                return;
            case NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH :
                setPageWidth (((Integer) newValue).intValue ());
                return;
            case NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT :
                setPageHeight (((Integer) newValue).intValue ());
                return;
            case NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES :
                getHorizontalGuides ().clear ();
                getHorizontalGuides ().addAll ((Collection) newValue);
                return;
            case NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES :
                getVerticalGuides ().clear ();
                getVerticalGuides ().addAll ((Collection) newValue);
                return;
            case NotationPackage.DIAGRAM_STYLE__DESCRIPTION :
                setDescription ((String) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_STYLE__PAGE_X :
                setPageX (PAGE_X_EDEFAULT);
                return;
            case NotationPackage.DIAGRAM_STYLE__PAGE_Y :
                setPageY (PAGE_Y_EDEFAULT);
                return;
            case NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH :
                setPageWidth (PAGE_WIDTH_EDEFAULT);
                return;
            case NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT :
                setPageHeight (PAGE_HEIGHT_EDEFAULT);
                return;
            case NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES :
                getHorizontalGuides ().clear ();
                return;
            case NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES :
                getVerticalGuides ().clear ();
                return;
            case NotationPackage.DIAGRAM_STYLE__DESCRIPTION :
                setDescription (DESCRIPTION_EDEFAULT);
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.DIAGRAM_STYLE__PAGE_X :
                return pageX != PAGE_X_EDEFAULT;
            case NotationPackage.DIAGRAM_STYLE__PAGE_Y :
                return pageY != PAGE_Y_EDEFAULT;
            case NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH :
                return pageWidth != PAGE_WIDTH_EDEFAULT;
            case NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT :
                return pageHeight != PAGE_HEIGHT_EDEFAULT;
            case NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES :
                return horizontalGuides != null && ! horizontalGuides.isEmpty ();
            case NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES :
                return verticalGuides != null && ! verticalGuides.isEmpty ();
            case NotationPackage.DIAGRAM_STYLE__DESCRIPTION :
                return DESCRIPTION_EDEFAULT == null ? description != null : ! DESCRIPTION_EDEFAULT.equals (description);
        }
        return eDynamicIsSet (featureID);
    }

    public int eBaseStructuralFeatureID (int derivedFeatureID, Class baseClass) {
        if (baseClass == Style.class) {
            switch (derivedFeatureID) {
                default :
                    return - 1;
            }
        }
        if (baseClass == PageStyle.class) {
            switch (derivedFeatureID) {
                case NotationPackage.DIAGRAM_STYLE__PAGE_X :
                    return NotationPackage.PAGE_STYLE__PAGE_X;
                case NotationPackage.DIAGRAM_STYLE__PAGE_Y :
                    return NotationPackage.PAGE_STYLE__PAGE_Y;
                case NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH :
                    return NotationPackage.PAGE_STYLE__PAGE_WIDTH;
                case NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT :
                    return NotationPackage.PAGE_STYLE__PAGE_HEIGHT;
                default :
                    return - 1;
            }
        }
        if (baseClass == GuideStyle.class) {
            switch (derivedFeatureID) {
                case NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES :
                    return NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES;
                case NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES :
                    return NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES;
                default :
                    return - 1;
            }
        }
        if (baseClass == DescriptionStyle.class) {
            switch (derivedFeatureID) {
                case NotationPackage.DIAGRAM_STYLE__DESCRIPTION :
                    return NotationPackage.DESCRIPTION_STYLE__DESCRIPTION;
                default :
                    return - 1;
            }
        }
        return super.eBaseStructuralFeatureID (derivedFeatureID, baseClass);
    }

    public int eDerivedStructuralFeatureID (int baseFeatureID, Class baseClass) {
        if (baseClass == Style.class) {
            switch (baseFeatureID) {
                default :
                    return - 1;
            }
        }
        if (baseClass == PageStyle.class) {
            switch (baseFeatureID) {
                case NotationPackage.PAGE_STYLE__PAGE_X :
                    return NotationPackage.DIAGRAM_STYLE__PAGE_X;
                case NotationPackage.PAGE_STYLE__PAGE_Y :
                    return NotationPackage.DIAGRAM_STYLE__PAGE_Y;
                case NotationPackage.PAGE_STYLE__PAGE_WIDTH :
                    return NotationPackage.DIAGRAM_STYLE__PAGE_WIDTH;
                case NotationPackage.PAGE_STYLE__PAGE_HEIGHT :
                    return NotationPackage.DIAGRAM_STYLE__PAGE_HEIGHT;
                default :
                    return - 1;
            }
        }
        if (baseClass == GuideStyle.class) {
            switch (baseFeatureID) {
                case NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES :
                    return NotationPackage.DIAGRAM_STYLE__HORIZONTAL_GUIDES;
                case NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES :
                    return NotationPackage.DIAGRAM_STYLE__VERTICAL_GUIDES;
                default :
                    return - 1;
            }
        }
        if (baseClass == DescriptionStyle.class) {
            switch (baseFeatureID) {
                case NotationPackage.DESCRIPTION_STYLE__DESCRIPTION :
                    return NotationPackage.DIAGRAM_STYLE__DESCRIPTION;
                default :
                    return - 1;
            }
        }
        return super.eDerivedStructuralFeatureID (baseFeatureID, baseClass);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (pageX: ");
        result.append (pageX);
        result.append (", pageY: ");
        result.append (pageY);
        result.append (", pageWidth: ");
        result.append (pageWidth);
        result.append (", pageHeight: ");
        result.append (pageHeight);
        result.append (", description: ");
        result.append (description);
        result.append (')');
        return result.toString ();
    }

}

