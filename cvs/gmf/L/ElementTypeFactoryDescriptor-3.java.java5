package org.eclipse.gmf.runtime.emf.type.core.internal.descriptors;

import java.util.ArrayList;

import java.util.List;

import java.util.StringTokenizer;

import org.eclipse.core.runtime.CoreException;

import org.eclipse.core.runtime.IConfigurationElement;

import org.eclipse.gmf.runtime.common.core.util.Log;

import org.eclipse.gmf.runtime.common.core.util.StringStatics;

import org.eclipse.gmf.runtime.emf.type.core.IElementTypeFactory;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePlugin;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePluginStatusCodes;

import org.eclipse.gmf.runtime.emf.type.core.internal.l10n.ResourceManager;

public class ElementTypeFactoryDescriptor {
    private final IConfigurationElement configElement;
    private IElementTypeFactory elementTypeFactory;
    private String factoryName;
    private final String kindName;
    private final List params;

    public ElementTypeFactoryDescriptor (IConfigurationElement configElement) throws CoreException {
        this.configElement = configElement;
        this.factoryName = configElement.getAttribute (ElementTypeXmlConfig.A_FACTORY);
        if (factoryName == null) {
            throw EMFTypePluginStatusCodes.getFactoryInitException (StringStatics.BLANK, EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_NO_FACTORY_KEY);
        }
        this.kindName = configElement.getAttribute (ElementTypeXmlConfig.A_KIND);
        if (kindName == null) {
            throw EMFTypePluginStatusCodes.getFactoryInitException (factoryName, EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_NO_KIND_KEY);
        }
        String paramString = configElement.getAttribute (ElementTypeXmlConfig.A_PARAMS);
        params = new ArrayList ();
        if (paramString != null) {
            StringTokenizer t = new StringTokenizer (paramString, StringStatics.COMMA);
            while (t.hasMoreTokens ()) {
                String nextParam = t.nextToken ().trim ();
                params.add (nextParam);
            }
        }
    }

    public IElementTypeFactory getElementTypeFactory () {
        if (elementTypeFactory == null) {
            if (factoryName != null) {
                try {
                    elementTypeFactory = (IElementTypeFactory) configElement.createExecutableExtension (ElementTypeXmlConfig.A_FACTORY);
                } catch (CoreException e) {
                    Log.error (EMFTypePlugin.getPlugin (), EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND, ResourceManager.getMessage (EMFTypePluginStatusCodes.ELEMENT_TYPE_FACTORY_CLASS_NOT_FOUND_KEY, new Object [] {factoryName}), e);
                    factoryName = null;
                }
            }
        }
        return elementTypeFactory;
    }

    public String getKindName () {
        return kindName;
    }

    public List getParams () {
        return params;
    }

}

