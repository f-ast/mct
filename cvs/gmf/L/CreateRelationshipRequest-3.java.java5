package org.eclipse.gmf.runtime.emf.type.core.requests;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EReference;

import org.eclipse.gmf.runtime.emf.type.core.IElementType;

public class CreateRelationshipRequest extends CreateElementRequest {
    public static final String SOURCE = "CreateRelationshipRequest.source";
    public static final String TARGET = "CreateRelationshipRequest.target";
    private EObject source;
    private EObject target;
    private boolean prompt;

    public CreateRelationshipRequest (EObject container, EObject source, EObject target, IElementType elementType, EReference containmentFeature) {
        super (container, elementType, containmentFeature);
        this.source = source;
        this.target = target;
    }

    public CreateRelationshipRequest (EObject container, EObject source, EObject target, IElementType elementType) {
        this (container, source, target, elementType, null);
    }

    public CreateRelationshipRequest (EObject source, EObject target, IElementType elementType) {
        this (null, source, target, elementType, null);
    }

    public CreateRelationshipRequest (IElementType elementType) {
        this (null, null, null, elementType, null);
    }

    public EObject getSource () {
        return source;
    }

    public void setSource (EObject source) {
        if (this.source != source) {
            this.source = source;
            invalidateEditHelperContext ();
            if (super.getContainer () == null) {
                invalidateContainmentFeature ();
            }
        }
    }

    public EObject getTarget () {
        return target;
    }

    public void setTarget (EObject target) {
        if (this.target != target) {
            this.target = target;
            invalidateEditHelperContext ();
        }
    }

    public EObject getContainer () {
        EObject eObject = super.getContainer ();
        if (eObject == null) {
            return getSource ();
        }
        return eObject;
    }

    public boolean isPrompt () {
        return prompt;
    }

    public void setPrompt (boolean prompt) {
        this.prompt = prompt;
    }

}

