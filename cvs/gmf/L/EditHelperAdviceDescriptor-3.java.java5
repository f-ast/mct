package org.eclipse.gmf.runtime.emf.type.core.internal.descriptors;

import org.eclipse.core.runtime.CoreException;

import org.eclipse.gmf.runtime.common.core.util.Log;

import org.eclipse.gmf.runtime.emf.type.core.IContainerDescriptor;

import org.eclipse.gmf.runtime.emf.type.core.IElementMatcher;

import org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditHelperAdvice;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePlugin;

import org.eclipse.gmf.runtime.emf.type.core.internal.EMFTypePluginStatusCodes;

import org.eclipse.gmf.runtime.emf.type.core.internal.l10n.ResourceManager;

public class EditHelperAdviceDescriptor implements IEditHelperAdviceDescriptor {
    private final SpecializationTypeDescriptor specializationDescriptor;
    private IEditHelperAdvice editHelperAdvice;
    private String editHelperAdviceName;

    public EditHelperAdviceDescriptor (String editHelperAdviceName, SpecializationTypeDescriptor specialization) throws CoreException {
        this.editHelperAdviceName = editHelperAdviceName;
        this.specializationDescriptor = specialization;
    }

    public String getTypeId () {
        return specializationDescriptor.getId ();
    }

    public String getEditHelperAdviceName () {
        return editHelperAdviceName;
    }

    public IEditHelperAdvice getEditHelperAdvice () {
        if (editHelperAdvice == null) {
            if (editHelperAdviceName != null) {
                try {
                    editHelperAdvice = (IEditHelperAdvice) specializationDescriptor.getConfigElement ().createExecutableExtension (ElementTypeXmlConfig.A_EDIT_HELPER_ADVICE);
                } catch (CoreException e) {
                    Log.error (EMFTypePlugin.getPlugin (), EMFTypePluginStatusCodes.EDIT_HELPER_ADVICE_CLASS_NOT_FOUND, ResourceManager.getMessage (EMFTypePluginStatusCodes.EDIT_HELPER_ADVICE_CLASS_NOT_FOUND_KEY, new Object [] {editHelperAdviceName}), e);
                    editHelperAdviceName = null;
                }
            }
        }
        return editHelperAdvice;
    }

    public IElementMatcher getMatcher () {
        return specializationDescriptor.getMatcher ();
    }

    public AdviceBindingInheritance getInheritance () {
        return AdviceBindingInheritance.ALL;
    }

    public IContainerDescriptor getContainerDescriptor () {
        return specializationDescriptor.getContainerDescriptor ();
    }

}

