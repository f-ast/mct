package org.eclipse.gmf.runtime.diagram.ui.printing.render.actions;

import java.util.HashMap;

import java.util.Iterator;

import java.util.List;

import java.util.Map;

import org.eclipse.core.resources.IFile;

import org.eclipse.core.runtime.IStatus;

import org.eclipse.core.runtime.Platform;

import org.eclipse.gef.RootEditPart;

import org.eclipse.gmf.runtime.common.core.util.Log;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.common.ui.action.actions.IPrintActionHelper;

import org.eclipse.gmf.runtime.common.ui.services.editor.EditorService;

import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;

import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramRootEditPart;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IDiagramPreferenceSupport;

import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;

import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramGraphicalViewer;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.internal.DiagramUIPrintingRenderDebugOptions;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.internal.DiagramUIPrintingRenderPlugin;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.internal.JPSDiagramPrinter;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.internal.JPSDiagramPrinterHelper;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.util.RenderedDiagramPrinter;

import org.eclipse.gmf.runtime.diagram.ui.printing.util.DiagramPrinterUtil;

import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;

import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.ui.IEditorInput;

import org.eclipse.ui.IWorkbenchPart;

public class EnhancedPrintActionHelper implements IPrintActionHelper {

    public void doPrint (IWorkbenchPart workbenchPart) {
        DiagramEditor diagramEditor = null;
        if (workbenchPart instanceof DiagramEditor) {
            diagramEditor = (DiagramEditor) workbenchPart;
        } else {
            Log.error (DiagramUIPrintingRenderPlugin.getInstance (), IStatus.ERROR, "Invalid IWorkbenchPart");
            IllegalArgumentException e = new IllegalArgumentException ("Invalid IWorkbenchPart.");
            Trace.throwing (DiagramUIPrintingRenderPlugin.getInstance (), DiagramUIPrintingRenderDebugOptions.EXCEPTIONS_THROWING, EnhancedPrintActionHelper.class, "doPrint()", e);
            throw e;
        }
        IDiagramGraphicalViewer viewer = diagramEditor.getDiagramGraphicalViewer ();
        RootEditPart rootEP = (viewer == null) ? null : viewer.getRootEditPart ();
        PreferencesHint preferencesHint = (rootEP instanceof IDiagramPreferenceSupport) ? ((IDiagramPreferenceSupport) rootEP).getPreferencesHint () : PreferencesHint.USE_DEFAULTS;
        IMapMode mapMode = (rootEP instanceof DiagramRootEditPart) ? ((DiagramRootEditPart) rootEP).getMapMode () : MapModeUtil.getMapMode ();
        if (Platform.getOS ().startsWith (Platform.OS_WIN32)) {
            DiagramPrinterUtil.printWithSettings (diagramEditor, createDiagramMap (), new RenderedDiagramPrinter (preferencesHint, mapMode));
        } else {
            JPSDiagramPrinterHelper.getDiagramPrinterHelper ().printWithSettings (diagramEditor, createDiagramMap (), new JPSDiagramPrinter (preferencesHint, mapMode));
        }
    }

    protected Map < String, Diagram > createDiagramMap () {
        Map < String, Diagram > diagramMap = new HashMap < String, Diagram > ();
        List diagramEditors = EditorService.getInstance ().getRegisteredEditorParts ();
        Iterator it = diagramEditors.iterator ();
        while (it.hasNext ()) {
            Object obj = it.next ();
            if (obj instanceof DiagramEditor) {
                DiagramEditor dEditor = (DiagramEditor) obj;
                String diagramName = null;
                IEditorInput editorInput = dEditor.getEditorInput ();
                IFile file = (IFile) (editorInput.getAdapter (IFile.class));
                if (file != null) {
                    diagramName = file.getFullPath ().toOSString ();
                } else {
                    diagramName = dEditor.getPartName ();
                    if (diagramName == null) {
                        diagramName = dEditor.getTitle ();
                    }
                }
                if (diagramName == null) {
                    diagramName = dEditor.getDiagram ().getName ();
                }
                diagramMap.put (diagramName, dEditor.getDiagram ());
            }
        }
        return diagramMap;
    }

}

