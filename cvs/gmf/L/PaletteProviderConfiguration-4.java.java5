package org.eclipse.gmf.runtime.diagram.ui.internal.services.palette;

import org.eclipse.core.runtime.Assert;

import org.eclipse.core.runtime.IConfigurationElement;

import org.eclipse.gmf.runtime.common.core.service.AbstractProviderConfiguration;

import org.eclipse.ui.IEditorPart;

public class PaletteProviderConfiguration extends AbstractProviderConfiguration {
    private static final String EDITOR = "editor";
    private static final String CONTENT = "content";
    private EditorDescriptor editor;
    private ObjectDescriptor content;

    public static PaletteProviderConfiguration parse (IConfigurationElement configElement) {
        Assert.isNotNull (configElement, "null provider configuration element");
        return new PaletteProviderConfiguration (configElement);
    }

    private PaletteProviderConfiguration (IConfigurationElement configElement) {
        IConfigurationElement configChildren [];
        configChildren = configElement.getChildren (EDITOR);
        if (configChildren.length > 0) editor = new EditorDescriptor (configChildren [0]);

        configChildren = configElement.getChildren (CONTENT);
        if (configChildren.length > 0) content = new ObjectDescriptor (configChildren [0]);

    }

    public boolean supports (IEditorPart targetEditor, Object targetContent) {
        if (editor != null && ! editor.sameAs (targetEditor)) return false;

        if (content != null && ! content.sameAs (targetContent)) return false;

        return true;
    }

    private static class EditorDescriptor extends ObjectDescriptor {
        private final String targetId;

        public EditorDescriptor (IConfigurationElement configElement) {
            super (configElement);
            targetId = configElement.getAttribute (ID);
        }

        public boolean sameAs (Object object) {
            if (! (object instanceof IEditorPart)) return false;

            if (targetId != null) if (! targetId.equals (((IEditorPart) object).getSite ().getId ())) return false;

            return super.sameAs (object);
        }

    }

}

