package org.eclipse.gmf.runtime.diagram.core.commands;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.core.runtime.IStatus;

import org.eclipse.core.runtime.Status;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.common.core.util.StringStatics;

import org.eclipse.gmf.runtime.diagram.core.internal.DiagramPlugin;

import org.eclipse.gmf.runtime.diagram.core.internal.DiagramStatusCodes;

import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;

import org.eclipse.gmf.runtime.diagram.core.services.ViewService;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;

import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;

import org.eclipse.gmf.runtime.notation.Diagram;

public class CreateDiagramCommand extends AbstractTransactionalCommand {
    private final String _diagramType;
    private EObject _semanticContext;
    private PreferencesHint _preferencesHint;

    public CreateDiagramCommand (TransactionalEditingDomain editingDomain, String label, EObject anElementContext, String aDiagramKindType, PreferencesHint preferencesHint) {
        super (editingDomain, label, null);
        assert null != anElementContext : "Null element context in CreateDiagramCommand";
        _semanticContext = anElementContext;
        _diagramType = aDiagramKindType;
        _preferencesHint = preferencesHint;
    }

    protected CommandResult doExecuteWithResult (IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
        Diagram diagram = ViewService.getInstance ().createDiagram (new EObjectAdapter (getSemanticContext ()), getDiagramType (), getPreferencesHint ());
        int severity = IStatus.OK;
        if (diagram == null) severity = IStatus.ERROR;

        return new CommandResult (new Status (severity, getPluginId (), DiagramStatusCodes.OK, StringStatics.BLANK, null), diagram);
    }

    protected String getPluginId () {
        return DiagramPlugin.getPluginId ();
    }

    protected String getDiagramType () {
        return _diagramType;
    }

    protected EObject getSemanticContext () {
        return _semanticContext;
    }

    protected PreferencesHint getPreferencesHint () {
        return _preferencesHint;
    }

}

