package org.eclipse.gmf.runtime.diagram.ui.dialogs.sortfilter;

import java.util.Locale;

import org.eclipse.jface.viewers.ViewerSorter;

import org.eclipse.gmf.runtime.notation.SortingDirection;

import com.ibm.icu.text.Collator;

public class SortFilterViewerSorter extends ViewerSorter {
    private SortingDirection sortingDirection = SortingDirection.ASCENDING_LITERAL;
    protected int criteria;
    protected Collator collator = Collator.getInstance (Locale.getDefault ());

    public void toggleSortingDirection () {
        sortingDirection = (SortingDirection.ASCENDING_LITERAL.equals (sortingDirection)) ? SortingDirection.DESCENDING_LITERAL : SortingDirection.ASCENDING_LITERAL;
    }

    public SortingDirection getSortingDirection () {
        return sortingDirection;
    }

    public void setSortingDirection (SortingDirection sortingDirection) {
        this.sortingDirection = sortingDirection;
    }

    public int getCriteria () {
        return criteria;
    }

    public void setCriteria (int criteria) {
        this.criteria = criteria;
    }

    protected int compareString (String item1, String item2) {
        int result = 0;
        if (SortingDirection.ASCENDING_LITERAL.equals (getSortingDirection ())) {
            result = collator.compare (item1, item2);
        } else {
            result = collator.compare (item2, item1);
        }
        return result;
    }

    protected int compareVisible (String item1, String item2) {
        int result = 0;
        if (SortingDirection.ASCENDING_LITERAL.equals (getSortingDirection ())) {
            result = collator.compare (item1, item2);
        } else {
            result = collator.compare (item2, item1);
        }
        return result;
    }

}

