package org.eclipse.gmf.runtime.diagram.ui.requests;

import java.util.ArrayList;

import java.util.List;

import org.eclipse.gef.Request;

import org.eclipse.gmf.runtime.common.ui.dialogs.ExpansionType;

public class ShowRelatedElementsRequest extends Request {
    private List selectedShapes;
    private List relatedShapes;
    private List relationshipsToShow;
    private boolean isExpandIndefinite;
    private int expandLevel;
    protected ExpansionType expansionType;
    protected List stoppingList;
    protected List models;
    protected boolean useFilter;

    public ShowRelatedElementsRequest (List shapes, List relationshipTypesToShow, boolean isExpandIndefinite, int expandLevel, ExpansionType expansionType, boolean useFilter, List models, List stoppingList) {
        super (RequestConstants.REQ_SHOW_RELATED_ELEMENTS);
        this.selectedShapes = new ArrayList (shapes);
        this.relatedShapes = new ArrayList ();
        this.relationshipsToShow = relationshipTypesToShow;
        this.isExpandIndefinite = isExpandIndefinite;
        this.expandLevel = expandLevel;
        this.expansionType = expansionType;
        this.useFilter = useFilter;
        this.models = models;
        this.stoppingList = stoppingList;
    }

    public ShowRelatedElementsRequest (List shapes, List relationshipTypesToShow, boolean isExpandIndefinite, int expandLevel, ExpansionType expansionType) {
        this (shapes, relationshipTypesToShow, isExpandIndefinite, expandLevel, expansionType, true, null, new ArrayList ());
    }

    public List getSelectedShapes () {
        return this.selectedShapes;
    }

    public List getRelatedShapes () {
        return this.relatedShapes;
    }

    public void setRelatedShapes (List relatedShapes) {
        this.relatedShapes = relatedShapes;
    }

    public List getRelationshipsToShow () {
        return this.relationshipsToShow;
    }

    public boolean isExpandIndefinite () {
        return this.isExpandIndefinite;
    }

    public int getExpandLevel () {
        return this.expandLevel;
    }

    public boolean getUseIncoming () {
        return expansionType.equals (ExpansionType.INCOMING) || expansionType.equals (ExpansionType.BOTH);
    }

    public boolean getUseOutgoing () {
        return expansionType.equals (ExpansionType.OUTGOING) || expansionType.equals (ExpansionType.BOTH);
    }

    public ExpansionType getExpansionType () {
        return expansionType;
    }

    public boolean getUseFilter () {
        return this.useFilter;
    }

    public List getModels () {
        return models;
    }

    public List getStoppingList () {
        return stoppingList;
    }

}

