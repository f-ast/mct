package org.eclipse.gmf.gmfgraph.provider;

import java.util.ArrayList;

import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.ComposedAdapterFactory;

import org.eclipse.emf.edit.provider.IChangeNotifier;

import org.eclipse.emf.edit.provider.IDisposable;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.INotifyChangedListener;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.gmf.gmfgraph.util.GMFGraphAdapterFactory;

public class GMFGraphItemProviderAdapterFactory extends GMFGraphAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    protected ComposedAdapterFactory parentAdapterFactory;
    protected IChangeNotifier changeNotifier = new ChangeNotifier ();
    protected Collection supportedTypes = new ArrayList ();

    public GMFGraphItemProviderAdapterFactory () {
        supportedTypes.add (IEditingDomainItemProvider.class);
        supportedTypes.add (IStructuredItemContentProvider.class);
        supportedTypes.add (ITreeItemContentProvider.class);
        supportedTypes.add (IItemLabelProvider.class);
        supportedTypes.add (IItemPropertySource.class);
    }

    protected CanvasItemProvider canvasItemProvider;

    public Adapter createCanvasAdapter () {
        if (canvasItemProvider == null) {
            canvasItemProvider = new CanvasItemProvider (this);
        }
        return canvasItemProvider;
    }

    protected FigureGalleryItemProvider figureGalleryItemProvider;

    public Adapter createFigureGalleryAdapter () {
        if (figureGalleryItemProvider == null) {
            figureGalleryItemProvider = new FigureGalleryItemProvider (this);
        }
        return figureGalleryItemProvider;
    }

    protected NodeItemProvider nodeItemProvider;

    public Adapter createNodeAdapter () {
        if (nodeItemProvider == null) {
            nodeItemProvider = new NodeItemProvider (this);
        }
        return nodeItemProvider;
    }

    protected ConnectionItemProvider connectionItemProvider;

    public Adapter createConnectionAdapter () {
        if (connectionItemProvider == null) {
            connectionItemProvider = new ConnectionItemProvider (this);
        }
        return connectionItemProvider;
    }

    protected CompartmentItemProvider compartmentItemProvider;

    public Adapter createCompartmentAdapter () {
        if (compartmentItemProvider == null) {
            compartmentItemProvider = new CompartmentItemProvider (this);
        }
        return compartmentItemProvider;
    }

    protected ChildItemProvider childItemProvider;

    public Adapter createChildAdapter () {
        if (childItemProvider == null) {
            childItemProvider = new ChildItemProvider (this);
        }
        return childItemProvider;
    }

    protected DiagramLabelItemProvider diagramLabelItemProvider;

    public Adapter createDiagramLabelAdapter () {
        if (diagramLabelItemProvider == null) {
            diagramLabelItemProvider = new DiagramLabelItemProvider (this);
        }
        return diagramLabelItemProvider;
    }

    protected GeneralFacetItemProvider generalFacetItemProvider;

    public Adapter createGeneralFacetAdapter () {
        if (generalFacetItemProvider == null) {
            generalFacetItemProvider = new GeneralFacetItemProvider (this);
        }
        return generalFacetItemProvider;
    }

    protected GradientFacetItemProvider gradientFacetItemProvider;

    public Adapter createGradientFacetAdapter () {
        if (gradientFacetItemProvider == null) {
            gradientFacetItemProvider = new GradientFacetItemProvider (this);
        }
        return gradientFacetItemProvider;
    }

    protected FigureRefItemProvider figureRefItemProvider;

    public Adapter createFigureRefAdapter () {
        if (figureRefItemProvider == null) {
            figureRefItemProvider = new FigureRefItemProvider (this);
        }
        return figureRefItemProvider;
    }

    protected LabelItemProvider labelItemProvider;

    public Adapter createLabelAdapter () {
        if (labelItemProvider == null) {
            labelItemProvider = new LabelItemProvider (this);
        }
        return labelItemProvider;
    }

    protected LabeledContainerItemProvider labeledContainerItemProvider;

    public Adapter createLabeledContainerAdapter () {
        if (labeledContainerItemProvider == null) {
            labeledContainerItemProvider = new LabeledContainerItemProvider (this);
        }
        return labeledContainerItemProvider;
    }

    protected RectangleItemProvider rectangleItemProvider;

    public Adapter createRectangleAdapter () {
        if (rectangleItemProvider == null) {
            rectangleItemProvider = new RectangleItemProvider (this);
        }
        return rectangleItemProvider;
    }

    protected RoundedRectangleItemProvider roundedRectangleItemProvider;

    public Adapter createRoundedRectangleAdapter () {
        if (roundedRectangleItemProvider == null) {
            roundedRectangleItemProvider = new RoundedRectangleItemProvider (this);
        }
        return roundedRectangleItemProvider;
    }

    protected EllipseItemProvider ellipseItemProvider;

    public Adapter createEllipseAdapter () {
        if (ellipseItemProvider == null) {
            ellipseItemProvider = new EllipseItemProvider (this);
        }
        return ellipseItemProvider;
    }

    protected PolylineItemProvider polylineItemProvider;

    public Adapter createPolylineAdapter () {
        if (polylineItemProvider == null) {
            polylineItemProvider = new PolylineItemProvider (this);
        }
        return polylineItemProvider;
    }

    protected PolygonItemProvider polygonItemProvider;

    public Adapter createPolygonAdapter () {
        if (polygonItemProvider == null) {
            polygonItemProvider = new PolygonItemProvider (this);
        }
        return polygonItemProvider;
    }

    protected PolylineConnectionItemProvider polylineConnectionItemProvider;

    public Adapter createPolylineConnectionAdapter () {
        if (polylineConnectionItemProvider == null) {
            polylineConnectionItemProvider = new PolylineConnectionItemProvider (this);
        }
        return polylineConnectionItemProvider;
    }

    protected PolylineDecorationItemProvider polylineDecorationItemProvider;

    public Adapter createPolylineDecorationAdapter () {
        if (polylineDecorationItemProvider == null) {
            polylineDecorationItemProvider = new PolylineDecorationItemProvider (this);
        }
        return polylineDecorationItemProvider;
    }

    protected PolygonDecorationItemProvider polygonDecorationItemProvider;

    public Adapter createPolygonDecorationAdapter () {
        if (polygonDecorationItemProvider == null) {
            polygonDecorationItemProvider = new PolygonDecorationItemProvider (this);
        }
        return polygonDecorationItemProvider;
    }

    protected CustomFigureItemProvider customFigureItemProvider;

    public Adapter createCustomFigureAdapter () {
        if (customFigureItemProvider == null) {
            customFigureItemProvider = new CustomFigureItemProvider (this);
        }
        return customFigureItemProvider;
    }

    protected CustomDecorationItemProvider customDecorationItemProvider;

    public Adapter createCustomDecorationAdapter () {
        if (customDecorationItemProvider == null) {
            customDecorationItemProvider = new CustomDecorationItemProvider (this);
        }
        return customDecorationItemProvider;
    }

    protected CustomConnectionItemProvider customConnectionItemProvider;

    public Adapter createCustomConnectionAdapter () {
        if (customConnectionItemProvider == null) {
            customConnectionItemProvider = new CustomConnectionItemProvider (this);
        }
        return customConnectionItemProvider;
    }

    protected RGBColorItemProvider rgbColorItemProvider;

    public Adapter createRGBColorAdapter () {
        if (rgbColorItemProvider == null) {
            rgbColorItemProvider = new RGBColorItemProvider (this);
        }
        return rgbColorItemProvider;
    }

    protected ConstantColorItemProvider constantColorItemProvider;

    public Adapter createConstantColorAdapter () {
        if (constantColorItemProvider == null) {
            constantColorItemProvider = new ConstantColorItemProvider (this);
        }
        return constantColorItemProvider;
    }

    protected BasicFontItemProvider basicFontItemProvider;

    public Adapter createBasicFontAdapter () {
        if (basicFontItemProvider == null) {
            basicFontItemProvider = new BasicFontItemProvider (this);
        }
        return basicFontItemProvider;
    }

    protected PointItemProvider pointItemProvider;

    public Adapter createPointAdapter () {
        if (pointItemProvider == null) {
            pointItemProvider = new PointItemProvider (this);
        }
        return pointItemProvider;
    }

    protected DimensionItemProvider dimensionItemProvider;

    public Adapter createDimensionAdapter () {
        if (dimensionItemProvider == null) {
            dimensionItemProvider = new DimensionItemProvider (this);
        }
        return dimensionItemProvider;
    }

    protected InsetsItemProvider insetsItemProvider;

    public Adapter createInsetsAdapter () {
        if (insetsItemProvider == null) {
            insetsItemProvider = new InsetsItemProvider (this);
        }
        return insetsItemProvider;
    }

    protected LineBorderItemProvider lineBorderItemProvider;

    public Adapter createLineBorderAdapter () {
        if (lineBorderItemProvider == null) {
            lineBorderItemProvider = new LineBorderItemProvider (this);
        }
        return lineBorderItemProvider;
    }

    protected MarginBorderItemProvider marginBorderItemProvider;

    public Adapter createMarginBorderAdapter () {
        if (marginBorderItemProvider == null) {
            marginBorderItemProvider = new MarginBorderItemProvider (this);
        }
        return marginBorderItemProvider;
    }

    protected CompoundBorderItemProvider compoundBorderItemProvider;

    public Adapter createCompoundBorderAdapter () {
        if (compoundBorderItemProvider == null) {
            compoundBorderItemProvider = new CompoundBorderItemProvider (this);
        }
        return compoundBorderItemProvider;
    }

    protected CustomBorderItemProvider customBorderItemProvider;

    public Adapter createCustomBorderAdapter () {
        if (customBorderItemProvider == null) {
            customBorderItemProvider = new CustomBorderItemProvider (this);
        }
        return customBorderItemProvider;
    }

    protected CustomLayoutDataItemProvider customLayoutDataItemProvider;

    public Adapter createCustomLayoutDataAdapter () {
        if (customLayoutDataItemProvider == null) {
            customLayoutDataItemProvider = new CustomLayoutDataItemProvider (this);
        }
        return customLayoutDataItemProvider;
    }

    protected GridLayoutDataItemProvider gridLayoutDataItemProvider;

    public Adapter createGridLayoutDataAdapter () {
        if (gridLayoutDataItemProvider == null) {
            gridLayoutDataItemProvider = new GridLayoutDataItemProvider (this);
        }
        return gridLayoutDataItemProvider;
    }

    protected BorderLayoutDataItemProvider borderLayoutDataItemProvider;

    public Adapter createBorderLayoutDataAdapter () {
        if (borderLayoutDataItemProvider == null) {
            borderLayoutDataItemProvider = new BorderLayoutDataItemProvider (this);
        }
        return borderLayoutDataItemProvider;
    }

    protected CustomLayoutItemProvider customLayoutItemProvider;

    public Adapter createCustomLayoutAdapter () {
        if (customLayoutItemProvider == null) {
            customLayoutItemProvider = new CustomLayoutItemProvider (this);
        }
        return customLayoutItemProvider;
    }

    protected GridLayoutItemProvider gridLayoutItemProvider;

    public Adapter createGridLayoutAdapter () {
        if (gridLayoutItemProvider == null) {
            gridLayoutItemProvider = new GridLayoutItemProvider (this);
        }
        return gridLayoutItemProvider;
    }

    protected BorderLayoutItemProvider borderLayoutItemProvider;

    public Adapter createBorderLayoutAdapter () {
        if (borderLayoutItemProvider == null) {
            borderLayoutItemProvider = new BorderLayoutItemProvider (this);
        }
        return borderLayoutItemProvider;
    }

    protected CustomAttributeItemProvider customAttributeItemProvider;

    public Adapter createCustomAttributeAdapter () {
        if (customAttributeItemProvider == null) {
            customAttributeItemProvider = new CustomAttributeItemProvider (this);
        }
        return customAttributeItemProvider;
    }

    protected FlowLayoutItemProvider flowLayoutItemProvider;

    public Adapter createFlowLayoutAdapter () {
        if (flowLayoutItemProvider == null) {
            flowLayoutItemProvider = new FlowLayoutItemProvider (this);
        }
        return flowLayoutItemProvider;
    }

    protected XYLayoutItemProvider xyLayoutItemProvider;

    public Adapter createXYLayoutAdapter () {
        if (xyLayoutItemProvider == null) {
            xyLayoutItemProvider = new XYLayoutItemProvider (this);
        }
        return xyLayoutItemProvider;
    }

    protected XYLayoutDataItemProvider xyLayoutDataItemProvider;

    public Adapter createXYLayoutDataAdapter () {
        if (xyLayoutDataItemProvider == null) {
            xyLayoutDataItemProvider = new XYLayoutDataItemProvider (this);
        }
        return xyLayoutDataItemProvider;
    }

    protected StackLayoutItemProvider stackLayoutItemProvider;

    public Adapter createStackLayoutAdapter () {
        if (stackLayoutItemProvider == null) {
            stackLayoutItemProvider = new StackLayoutItemProvider (this);
        }
        return stackLayoutItemProvider;
    }

    public ComposeableAdapterFactory getRootAdapterFactory () {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory ();
    }

    public void setParentAdapterFactory (ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    public boolean isFactoryForType (Object type) {
        return supportedTypes.contains (type) || super.isFactoryForType (type);
    }

    public Adapter adapt (Notifier notifier, Object type) {
        return super.adapt (notifier, this);
    }

    public Object adapt (Object object, Object type) {
        if (isFactoryForType (type)) {
            Object adapter = super.adapt (object, type);
            if (! (type instanceof Class) || (((Class) type).isInstance (adapter))) {
                return adapter;
            }
        }
        return null;
    }

    public void addListener (INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener (notifyChangedListener);
    }

    public void removeListener (INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener (notifyChangedListener);
    }

    public void fireNotifyChanged (Notification notification) {
        changeNotifier.fireNotifyChanged (notification);
        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged (notification);
        }
    }

    public void dispose () {
        if (canvasItemProvider != null) canvasItemProvider.dispose ();

        if (figureGalleryItemProvider != null) figureGalleryItemProvider.dispose ();

        if (nodeItemProvider != null) nodeItemProvider.dispose ();

        if (connectionItemProvider != null) connectionItemProvider.dispose ();

        if (compartmentItemProvider != null) compartmentItemProvider.dispose ();

        if (childItemProvider != null) childItemProvider.dispose ();

        if (diagramLabelItemProvider != null) diagramLabelItemProvider.dispose ();

        if (generalFacetItemProvider != null) generalFacetItemProvider.dispose ();

        if (gradientFacetItemProvider != null) gradientFacetItemProvider.dispose ();

        if (figureRefItemProvider != null) figureRefItemProvider.dispose ();

        if (labelItemProvider != null) labelItemProvider.dispose ();

        if (labeledContainerItemProvider != null) labeledContainerItemProvider.dispose ();

        if (rectangleItemProvider != null) rectangleItemProvider.dispose ();

        if (roundedRectangleItemProvider != null) roundedRectangleItemProvider.dispose ();

        if (ellipseItemProvider != null) ellipseItemProvider.dispose ();

        if (polylineItemProvider != null) polylineItemProvider.dispose ();

        if (polygonItemProvider != null) polygonItemProvider.dispose ();

        if (polylineConnectionItemProvider != null) polylineConnectionItemProvider.dispose ();

        if (polylineDecorationItemProvider != null) polylineDecorationItemProvider.dispose ();

        if (polygonDecorationItemProvider != null) polygonDecorationItemProvider.dispose ();

        if (customFigureItemProvider != null) customFigureItemProvider.dispose ();

        if (customDecorationItemProvider != null) customDecorationItemProvider.dispose ();

        if (customConnectionItemProvider != null) customConnectionItemProvider.dispose ();

        if (rgbColorItemProvider != null) rgbColorItemProvider.dispose ();

        if (constantColorItemProvider != null) constantColorItemProvider.dispose ();

        if (basicFontItemProvider != null) basicFontItemProvider.dispose ();

        if (pointItemProvider != null) pointItemProvider.dispose ();

        if (dimensionItemProvider != null) dimensionItemProvider.dispose ();

        if (insetsItemProvider != null) insetsItemProvider.dispose ();

        if (lineBorderItemProvider != null) lineBorderItemProvider.dispose ();

        if (marginBorderItemProvider != null) marginBorderItemProvider.dispose ();

        if (compoundBorderItemProvider != null) compoundBorderItemProvider.dispose ();

        if (customBorderItemProvider != null) customBorderItemProvider.dispose ();

        if (customLayoutDataItemProvider != null) customLayoutDataItemProvider.dispose ();

        if (gridLayoutDataItemProvider != null) gridLayoutDataItemProvider.dispose ();

        if (borderLayoutDataItemProvider != null) borderLayoutDataItemProvider.dispose ();

        if (customLayoutItemProvider != null) customLayoutItemProvider.dispose ();

        if (gridLayoutItemProvider != null) gridLayoutItemProvider.dispose ();

        if (borderLayoutItemProvider != null) borderLayoutItemProvider.dispose ();

        if (customAttributeItemProvider != null) customAttributeItemProvider.dispose ();

        if (flowLayoutItemProvider != null) flowLayoutItemProvider.dispose ();

        if (xyLayoutItemProvider != null) xyLayoutItemProvider.dispose ();

        if (xyLayoutDataItemProvider != null) xyLayoutDataItemProvider.dispose ();

        if (stackLayoutItemProvider != null) stackLayoutItemProvider.dispose ();

    }

}

