package org.eclipse.gmf.runtime.emf.core.resources;

import java.util.HashMap;

import java.util.Map;

import org.eclipse.emf.common.util.URI;

import org.eclipse.emf.ecore.resource.Resource;

import org.eclipse.emf.ecore.xmi.XMIResource;

import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;

import org.eclipse.emf.ecore.xmi.impl.XMIResourceImpl;

import org.eclipse.gmf.runtime.emf.core.internal.util.EMFCoreConstants;

public class GMFResourceFactory extends XMIResourceFactoryImpl {

    public GMFResourceFactory () {
        super ();
    }

    private static final Map loadOptions = new HashMap ();
    private static final Map saveOptions = new HashMap ();

    static {
        XMIResource resource = new XMIResourceImpl ();
        loadOptions.putAll (resource.getDefaultLoadOptions ());
        loadOptions.put (XMIResource.OPTION_LAX_FEATURE_PROCESSING, Boolean.TRUE);
        saveOptions.putAll (resource.getDefaultSaveOptions ());
        saveOptions.put (XMIResource.OPTION_DECLARE_XML, Boolean.TRUE);
        saveOptions.put (XMIResource.OPTION_PROCESS_DANGLING_HREF, XMIResource.OPTION_PROCESS_DANGLING_HREF_DISCARD);
        saveOptions.put (XMIResource.OPTION_SCHEMA_LOCATION, Boolean.TRUE);
        saveOptions.put (XMIResource.OPTION_USE_XMI_TYPE, Boolean.TRUE);
        saveOptions.put (XMIResource.OPTION_SAVE_TYPE_INFORMATION, Boolean.TRUE);
        saveOptions.put (XMIResource.OPTION_SKIP_ESCAPE_URI, Boolean.FALSE);
        saveOptions.put (XMIResource.OPTION_ENCODING, EMFCoreConstants.XMI_ENCODING);
    }

    public static Map getDefaultLoadOptions () {
        return loadOptions;
    }

    public static Map getDefaultSaveOptions () {
        return saveOptions;
    }

    public Resource createResource (URI uri) {
        XMIResource resource = new GMFResource (uri);
        resource.getDefaultLoadOptions ().putAll (loadOptions);
        resource.getDefaultSaveOptions ().putAll (saveOptions);
        if (! resource.getEncoding ().equals (EMFCoreConstants.XMI_ENCODING)) resource.setEncoding (EMFCoreConstants.XMI_ENCODING);

        return resource;
    }

}

