package org.eclipse.gmf.gmfgraph.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.gmfgraph.FigureDescriptor;

import org.eclipse.gmf.gmfgraph.FigureGallery;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.RealFigure;

public class FigureGalleryImpl extends EObjectImpl implements FigureGallery {
    protected static final String NAME_EDEFAULT = null;
    protected String name = NAME_EDEFAULT;
    protected EList < RealFigure > figures;
    protected EList < FigureDescriptor > descriptors;
    protected static final String IMPLEMENTATION_BUNDLE_EDEFAULT = null;
    protected String implementationBundle = IMPLEMENTATION_BUNDLE_EDEFAULT;

    protected FigureGalleryImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getFigureGallery ();
    }

    public String getName () {
        return name;
    }

    public void setName (String newName) {
        String oldName = name;
        name = newName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.FIGURE_GALLERY__NAME, oldName, name));

    }

    public EList < RealFigure > getFigures () {
        if (figures == null) {
            figures = new EObjectContainmentEList < RealFigure > (RealFigure.class, this, GMFGraphPackage.FIGURE_GALLERY__FIGURES);
        }
        return figures;
    }

    public EList < FigureDescriptor > getDescriptors () {
        if (descriptors == null) {
            descriptors = new EObjectContainmentEList < FigureDescriptor > (FigureDescriptor.class, this, GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS);
        }
        return descriptors;
    }

    public String getImplementationBundleGen () {
        return implementationBundle;
    }

    public String getImplementationBundle () {
        String value = getImplementationBundleGen ();
        if (value != null && value.trim ().length () > 0) {
            return value.trim ();
        }
        return null;
    }

    public void setImplementationBundle (String newImplementationBundle) {
        String oldImplementationBundle = implementationBundle;
        implementationBundle = newImplementationBundle;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE, oldImplementationBundle, implementationBundle));

    }

    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGraphPackage.FIGURE_GALLERY__FIGURES :
                return ((InternalEList < ? >) getFigures ()).basicRemove (otherEnd, msgs);
            case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS :
                return ((InternalEList < ? >) getDescriptors ()).basicRemove (otherEnd, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGraphPackage.FIGURE_GALLERY__NAME :
                return getName ();
            case GMFGraphPackage.FIGURE_GALLERY__FIGURES :
                return getFigures ();
            case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS :
                return getDescriptors ();
            case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE :
                return getImplementationBundle ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGraphPackage.FIGURE_GALLERY__NAME :
                setName ((String) newValue);
                return;
            case GMFGraphPackage.FIGURE_GALLERY__FIGURES :
                getFigures ().clear ();
                getFigures ().addAll ((Collection < ? extends RealFigure >) newValue);
                return;
            case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS :
                getDescriptors ().clear ();
                getDescriptors ().addAll ((Collection < ? extends FigureDescriptor >) newValue);
                return;
            case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE :
                setImplementationBundle ((String) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    @Override
    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.FIGURE_GALLERY__NAME :
                setName (NAME_EDEFAULT);
                return;
            case GMFGraphPackage.FIGURE_GALLERY__FIGURES :
                getFigures ().clear ();
                return;
            case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS :
                getDescriptors ().clear ();
                return;
            case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE :
                setImplementationBundle (IMPLEMENTATION_BUNDLE_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.FIGURE_GALLERY__NAME :
                return NAME_EDEFAULT == null ? name != null : ! NAME_EDEFAULT.equals (name);
            case GMFGraphPackage.FIGURE_GALLERY__FIGURES :
                return figures != null && ! figures.isEmpty ();
            case GMFGraphPackage.FIGURE_GALLERY__DESCRIPTORS :
                return descriptors != null && ! descriptors.isEmpty ();
            case GMFGraphPackage.FIGURE_GALLERY__IMPLEMENTATION_BUNDLE :
                return IMPLEMENTATION_BUNDLE_EDEFAULT == null ? implementationBundle != null : ! IMPLEMENTATION_BUNDLE_EDEFAULT.equals (implementationBundle);
        }
        return super.eIsSet (featureID);
    }

    @Override
    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (name: ");
        result.append (name);
        result.append (", implementationBundle: ");
        result.append (implementationBundle);
        result.append (')');
        return result.toString ();
    }

}

