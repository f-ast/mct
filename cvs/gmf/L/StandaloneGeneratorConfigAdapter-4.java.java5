package org.eclipse.gmf.internal.graphdef.codegen.ui;

import org.eclipse.gmf.graphdef.codegen.MapModeCodeGenStrategy;

import org.eclipse.gmf.graphdef.codegen.StandaloneGenerator;

class StandaloneGeneratorConfigAdapter implements StandaloneGenerator.Config {
    private final ConverterSection mySection;

    public StandaloneGeneratorConfigAdapter (ConverterSection section) {
        mySection = section;
        getPluginActivatorClassName ();
    }

    public String getMainPackageName () {
        return mySection.getStringOption (ConverterSection.OPTION_MAIN_PACKAGE_NAME);
    }

    public String getPluginActivatorClassName () {
        String activatorFQN = mySection.getPluginActivatorClassFQN ();
        if (activatorFQN == null) {
            activatorFQN = "";
        }
        return extractClassName (activatorFQN);
    }

    public String getPluginActivatorPackageName () {
        String activatorFQN = mySection.getPluginActivatorClassFQN ();
        if (activatorFQN == null) {
            activatorFQN = "";
        }
        return extractPackageName (activatorFQN);
    }

    public String getPluginFriendlyName () {
        return notNull (mySection.getPluginFriendlyName ());
    }

    public String getPluginID () {
        return notNull (mySection.getPluginID ());
    }

    public String getPluginProviderName () {
        return notNull (mySection.getPluginProviderName ());
    }

    public MapModeCodeGenStrategy getMapMode () {
        return mySection.getBooleanOption (ConverterSection.OPTION_NEEDS_MAP_MODE) ? MapModeCodeGenStrategy.DYNAMIC : MapModeCodeGenStrategy.STATIC;
    }

    public String getRuntimeToken () {
        return mySection.getBooleanOption (ConverterSection.OPTION_USE_RUNTIME_FIGURES) ? null : "lite";
    }

    private static String extractPackageName (String fqn) {
        int lastDot = fqn.lastIndexOf ('.');
        return lastDot < 0 ? "" : fqn.substring (0, lastDot);
    }

    private static String extractClassName (String fqn) {
        int lastDot = fqn.lastIndexOf ('.');
        return lastDot < 0 ? fqn : fqn.substring (lastDot + ".".length ());
    }

    private static String notNull (String text) {
        return text == null ? "" : text;
    }

}

