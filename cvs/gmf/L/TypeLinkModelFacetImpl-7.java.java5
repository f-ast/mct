package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;

public class TypeLinkModelFacetImpl extends TypeModelFacetImpl implements TypeLinkModelFacet {
    protected GenFeature sourceMetaFeature = null;
    protected GenFeature targetMetaFeature = null;

    protected TypeLinkModelFacetImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getTypeLinkModelFacet ();
    }

    public GenFeature getSourceMetaFeature () {
        if (sourceMetaFeature != null && sourceMetaFeature.eIsProxy ()) {
            InternalEObject oldSourceMetaFeature = (InternalEObject) sourceMetaFeature;
            sourceMetaFeature = (GenFeature) eResolveProxy (oldSourceMetaFeature);
            if (sourceMetaFeature != oldSourceMetaFeature) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE, oldSourceMetaFeature, sourceMetaFeature));

            }
        }
        return sourceMetaFeature;
    }

    public GenFeature basicGetSourceMetaFeature () {
        return sourceMetaFeature;
    }

    public void setSourceMetaFeature (GenFeature newSourceMetaFeature) {
        GenFeature oldSourceMetaFeature = sourceMetaFeature;
        sourceMetaFeature = newSourceMetaFeature;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE, oldSourceMetaFeature, sourceMetaFeature));

    }

    public GenFeature getTargetMetaFeature () {
        if (targetMetaFeature != null && targetMetaFeature.eIsProxy ()) {
            InternalEObject oldTargetMetaFeature = (InternalEObject) targetMetaFeature;
            targetMetaFeature = (GenFeature) eResolveProxy (oldTargetMetaFeature);
            if (targetMetaFeature != oldTargetMetaFeature) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE, oldTargetMetaFeature, targetMetaFeature));

            }
        }
        return targetMetaFeature;
    }

    public GenFeature basicGetTargetMetaFeature () {
        return targetMetaFeature;
    }

    public void setTargetMetaFeature (GenFeature newTargetMetaFeature) {
        GenFeature oldTargetMetaFeature = targetMetaFeature;
        targetMetaFeature = newTargetMetaFeature;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE, oldTargetMetaFeature, targetMetaFeature));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE :
                if (resolve) return getSourceMetaFeature ();

                return basicGetSourceMetaFeature ();
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE :
                if (resolve) return getTargetMetaFeature ();

                return basicGetTargetMetaFeature ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE :
                setSourceMetaFeature ((GenFeature) newValue);
                return;
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE :
                setTargetMetaFeature ((GenFeature) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE :
                setSourceMetaFeature ((GenFeature) null);
                return;
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE :
                setTargetMetaFeature ((GenFeature) null);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE :
                return sourceMetaFeature != null;
            case GMFGenPackage.TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE :
                return targetMetaFeature != null;
        }
        return super.eIsSet (featureID);
    }

}

