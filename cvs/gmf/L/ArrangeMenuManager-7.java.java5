package org.eclipse.gmf.runtime.diagram.ui.actions.internal;

import org.eclipse.gmf.runtime.common.ui.action.AbstractActionHandler;

import org.eclipse.gmf.runtime.common.ui.action.ActionMenuManager;

import org.eclipse.gmf.runtime.common.ui.util.IPartSelector;

import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;

import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsMessages;

import org.eclipse.gmf.runtime.diagram.ui.actions.internal.l10n.DiagramUIActionsPluginImages;

import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart;

import org.eclipse.jface.action.Action;

import org.eclipse.jface.action.IAction;

import org.eclipse.ui.IWorkbenchPart;

public class ArrangeMenuManager extends ActionMenuManager {
    private static class ArrangeMenuAction extends Action {

        public ArrangeMenuAction () {
            setText (DiagramUIActionsMessages.ArrangeMenuManager_Arrange_ActionLabelText);
            setToolTipText (DiagramUIActionsMessages.ArrangeMenuManager_Arrange_ActionToolTipText);
            setImageDescriptor (DiagramUIActionsPluginImages.DESC_ARRANGE_ALL);
            setDisabledImageDescriptor (DiagramUIActionsPluginImages.DESC_ARRANGE_ALL_DISABLED);
            setHoverImageDescriptor (DiagramUIActionsPluginImages.DESC_ARRANGE_ALL);
        }

    }

    public ArrangeMenuManager () {
        super (ActionIds.MENU_ARRANGE, new ArrangeMenuAction (), true);
    }

    public ArrangeMenuManager (IAction action) {
        super (ActionIds.MENU_ARRANGE, action, true);
        if (action == null) {
            action = new ArrangeMenuAction ();
        }
        ((AbstractActionHandler) getDefaultAction ()).setPartSelector (new IPartSelector () {

            public boolean selects (IWorkbenchPart p) {
                return p instanceof IDiagramWorkbenchPart;
            }

        }

        );
    }

}

