package org.eclipse.gmf.runtime.common.ui.services.util;

import org.eclipse.core.runtime.IConfigurationElement;

import org.eclipse.gmf.runtime.common.core.service.IOperation;

import org.eclipse.gmf.runtime.common.core.service.Service;

import org.eclipse.ui.IPluginContribution;

import org.eclipse.ui.PlatformUI;

import org.eclipse.ui.activities.IIdentifier;

import org.eclipse.ui.activities.IWorkbenchActivitySupport;

import org.eclipse.ui.activities.WorkbenchActivityHelper;

public class ActivityFilterProviderDescriptor extends Service.ProviderDescriptor {

    protected ActivityFilterProviderDescriptor (IConfigurationElement element) {
        super (element);
    }

    public boolean provides (IOperation operation) {
        return areActivitiesEnabled ();
    }

    private boolean areActivitiesEnabled () {
        if (! WorkbenchActivityHelper.isFiltering ()) return true;

        IWorkbenchActivitySupport workbenchActivitySupport = PlatformUI.getWorkbench ().getActivitySupport ();
        IIdentifier id = workbenchActivitySupport.getActivityManager ().getIdentifier (WorkbenchActivityHelper.createUnifiedId (new IPluginContribution () {

            public String getLocalId () {
                return getElement ().getDeclaringExtension ().getSimpleIdentifier ();
            }

            public String getPluginId () {
                return getElement ().getContributor ().getName ();
            }

        }

        ));
        if (id != null && ! id.isEnabled ()) {
            return false;
        }
        return true;
    }

}

