package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.gmfgraph.BasicFont;

import org.eclipse.gmf.gmfgraph.FontStyle;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

public class BasicFontImpl extends EObjectImpl implements BasicFont {
    protected static final String FACE_NAME_EDEFAULT = null;
    protected String faceName = FACE_NAME_EDEFAULT;
    protected static final int HEIGHT_EDEFAULT = 9;
    protected int height = HEIGHT_EDEFAULT;
    protected static final FontStyle STYLE_EDEFAULT = FontStyle.NORMAL_LITERAL;
    protected FontStyle style = STYLE_EDEFAULT;

    protected BasicFontImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getBasicFont ();
    }

    public String getFaceName () {
        return faceName;
    }

    public void setFaceName (String newFaceName) {
        String oldFaceName = faceName;
        faceName = newFaceName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.BASIC_FONT__FACE_NAME, oldFaceName, faceName));

    }

    public int getHeight () {
        return height;
    }

    public void setHeight (int newHeight) {
        int oldHeight = height;
        height = newHeight;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.BASIC_FONT__HEIGHT, oldHeight, height));

    }

    public FontStyle getStyle () {
        return style;
    }

    public void setStyle (FontStyle newStyle) {
        FontStyle oldStyle = style;
        style = newStyle == null ? STYLE_EDEFAULT : newStyle;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.BASIC_FONT__STYLE, oldStyle, style));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGraphPackage.BASIC_FONT__FACE_NAME :
                return getFaceName ();
            case GMFGraphPackage.BASIC_FONT__HEIGHT :
                return new Integer (getHeight ());
            case GMFGraphPackage.BASIC_FONT__STYLE :
                return getStyle ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGraphPackage.BASIC_FONT__FACE_NAME :
                setFaceName ((String) newValue);
                return;
            case GMFGraphPackage.BASIC_FONT__HEIGHT :
                setHeight (((Integer) newValue).intValue ());
                return;
            case GMFGraphPackage.BASIC_FONT__STYLE :
                setStyle ((FontStyle) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.BASIC_FONT__FACE_NAME :
                setFaceName (FACE_NAME_EDEFAULT);
                return;
            case GMFGraphPackage.BASIC_FONT__HEIGHT :
                setHeight (HEIGHT_EDEFAULT);
                return;
            case GMFGraphPackage.BASIC_FONT__STYLE :
                setStyle (STYLE_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.BASIC_FONT__FACE_NAME :
                return FACE_NAME_EDEFAULT == null ? faceName != null : ! FACE_NAME_EDEFAULT.equals (faceName);
            case GMFGraphPackage.BASIC_FONT__HEIGHT :
                return height != HEIGHT_EDEFAULT;
            case GMFGraphPackage.BASIC_FONT__STYLE :
                return style != STYLE_EDEFAULT;
        }
        return super.eIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (faceName: ");
        result.append (faceName);
        result.append (", height: ");
        result.append (height);
        result.append (", style: ");
        result.append (style);
        result.append (')');
        return result.toString ();
    }

}

