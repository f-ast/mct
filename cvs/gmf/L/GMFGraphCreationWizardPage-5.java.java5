package org.eclipse.gmf.graphdef.editor.part;

import org.eclipse.core.runtime.IPath;

import org.eclipse.core.runtime.Path;

import org.eclipse.emf.common.util.URI;

import org.eclipse.jface.viewers.IStructuredSelection;

import org.eclipse.osgi.util.NLS;

import org.eclipse.swt.widgets.Composite;

import org.eclipse.ui.dialogs.WizardNewFileCreationPage;

public class GMFGraphCreationWizardPage extends WizardNewFileCreationPage {
    private final String fileExtension;

    public GMFGraphCreationWizardPage (String pageName, IStructuredSelection selection, String fileExtension) {
        super (pageName, selection);
        this.fileExtension = fileExtension;
    }

    protected String getExtension () {
        return fileExtension;
    }

    public URI getURI () {
        return URI.createPlatformResourceURI (getFilePath ().toString ());
    }

    protected IPath getFilePath () {
        IPath path = getContainerFullPath ();
        if (path == null) {
            path = new Path ("");
        }
        String fileName = getFileName ();
        if (fileName != null) {
            path = path.append (fileName);
        }
        return path;
    }

    private String getUniqueFileName (IPath containerFullPath, String fileName) {
        if (containerFullPath == null) {
            containerFullPath = new Path ("");
        }
        if (fileName == null || fileName.trim ().length () == 0) {
            fileName = "default";
        }
        IPath filePath = containerFullPath.append (fileName);
        String extension = getExtension ();
        if (extension != null && ! extension.equals (filePath.getFileExtension ())) {
            filePath = filePath.addFileExtension (extension);
        }
        extension = filePath.getFileExtension ();
        fileName = filePath.removeFileExtension ().lastSegment ();
        int i = 1;
        while (GMFGraphDiagramEditorUtil.exists (filePath)) {
            i ++;
            filePath = containerFullPath.append (fileName + i);
            if (extension != null) {
                filePath = filePath.addFileExtension (extension);
            }
        }
        return filePath.lastSegment ();
    }

    public void createControl (Composite parent) {
        super.createControl (parent);
        setFileName (getUniqueFileName (getContainerFullPath (), getFileName ()));
        setPageComplete (validatePage ());
    }

    protected boolean validatePage () {
        if (! super.validatePage ()) {
            return false;
        }
        String extension = getExtension ();
        if (extension != null && ! getFilePath ().toString ().endsWith ("." + extension)) {
            setErrorMessage (NLS.bind ("File name should have ''{0}'' extension.", extension));
            return false;
        }
        return true;
    }

}

