package org.eclipse.gmf.graphdef.editor.view.factories;

import java.util.ArrayList;

import java.util.List;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.emf.ecore.EAnnotation;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EcoreFactory;

import org.eclipse.gmf.graphdef.editor.edit.parts.CanvasEditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentEditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentNameEditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.CompartmentVisualFacetsEditPart;

import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;

import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;

import org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory;

import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;

import org.eclipse.gmf.runtime.notation.NotationFactory;

import org.eclipse.gmf.runtime.notation.View;

public class CompartmentViewFactory extends AbstractShapeViewFactory {

    protected List createStyles (View view) {
        List styles = new ArrayList ();
        styles.add (NotationFactory.eINSTANCE.createShapeStyle ());
        return styles;
    }

    protected void decorateView (View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
        if (semanticHint == null) {
            semanticHint = GMFGraphVisualIDRegistry.getType (CompartmentEditPart.VISUAL_ID);
            view.setType (semanticHint);
        }
        super.decorateView (containerView, view, semanticAdapter, semanticHint, index, persisted);
        if (! CanvasEditPart.MODEL_ID.equals (GMFGraphVisualIDRegistry.getModelID (containerView))) {
            EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation ();
            shortcutAnnotation.setSource ("Shortcut");
            shortcutAnnotation.getDetails ().put ("modelID", CanvasEditPart.MODEL_ID);
            view.getEAnnotations ().add (shortcutAnnotation);
        }
        IAdaptable eObjectAdapter = null;
        EObject eObject = (EObject) semanticAdapter.getAdapter (EObject.class);
        if (eObject != null) {
            eObjectAdapter = new EObjectAdapter (eObject);
        }
        getViewService ().createNode (eObjectAdapter, view, GMFGraphVisualIDRegistry.getType (CompartmentNameEditPart.VISUAL_ID), ViewUtil.APPEND, true, getPreferencesHint ());
        getViewService ().createNode (eObjectAdapter, view, GMFGraphVisualIDRegistry.getType (CompartmentVisualFacetsEditPart.VISUAL_ID), ViewUtil.APPEND, true, getPreferencesHint ());
    }

}

