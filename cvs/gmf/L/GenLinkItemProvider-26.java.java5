package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenLink;

public class GenLinkItemProvider extends GenCommonBaseItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public GenLinkItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addGenOutgoingLinksPropertyDescriptor (object);
            addGenIncomingLinksPropertyDescriptor (object);
            addOutgoingCreationAllowedPropertyDescriptor (object);
            addIncomingCreationAllowedPropertyDescriptor (object);
            addViewDirectionAlignedWithModelPropertyDescriptor (object);
            addCreateCommandClassNamePropertyDescriptor (object);
            addReorientCommandClassNamePropertyDescriptor (object);
            addTreeBranchPropertyDescriptor (object);
            addSourcesPropertyDescriptor (object);
            addTargetsPropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addGenOutgoingLinksPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLinkEnd_genOutgoingLinks_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLinkEnd_genOutgoingLinks_feature", "_UI_GenLinkEnd_type"), GMFGenPackage.eINSTANCE.getGenLinkEnd_GenOutgoingLinks (), false, false, false, null, null, null));
    }

    protected void addGenIncomingLinksPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLinkEnd_genIncomingLinks_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLinkEnd_genIncomingLinks_feature", "_UI_GenLinkEnd_type"), GMFGenPackage.eINSTANCE.getGenLinkEnd_GenIncomingLinks (), false, false, false, null, null, null));
    }

    protected void addOutgoingCreationAllowedPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_outgoingCreationAllowed_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_outgoingCreationAllowed_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_OutgoingCreationAllowed (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, getString ("_UI_DiagramElementPropertyCategory"), null));
    }

    protected void addIncomingCreationAllowedPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_incomingCreationAllowed_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_incomingCreationAllowed_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_IncomingCreationAllowed (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, getString ("_UI_DiagramElementPropertyCategory"), null));
    }

    protected void addViewDirectionAlignedWithModelPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_viewDirectionAlignedWithModel_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_viewDirectionAlignedWithModel_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_ViewDirectionAlignedWithModel (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, getString ("_UI_DiagramElementPropertyCategory"), null));
    }

    protected void addCreateCommandClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_createCommandClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_createCommandClassName_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_CreateCommandClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, getString ("_UI_ClassNamesPropertyCategory"), null));
    }

    protected void addReorientCommandClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_reorientCommandClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_reorientCommandClassName_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_ReorientCommandClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, getString ("_UI_ClassNamesPropertyCategory"), null));
    }

    protected void addTreeBranchPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_treeBranch_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_treeBranch_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_TreeBranch (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, getString ("_UI_DiagramElementPropertyCategory"), null));
    }

    protected void addSourcesPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_sources_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_sources_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_Sources (), false, false, false, null, null, null));
    }

    protected void addTargetsPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenLink_targets_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenLink_targets_feature", "_UI_GenLink_type"), GMFGenPackage.eINSTANCE.getGenLink_Targets (), false, false, false, null, null, null));
    }

    @Override
    public Collection < ? extends EStructuralFeature > getChildrenFeatures (Object object) {
        if (childrenFeatures == null) {
            super.getChildrenFeatures (object);
            childrenFeatures.add (GMFGenPackage.eINSTANCE.getGenLink_ModelFacet ());
            childrenFeatures.add (GMFGenPackage.eINSTANCE.getGenLink_Labels ());
            childrenFeatures.add (GMFGenPackage.eINSTANCE.getGenLink_CreationConstraints ());
        }
        return childrenFeatures;
    }

    @Override
    protected EStructuralFeature getChildFeature (Object object, Object child) {
        return super.getChildFeature (object, child);
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/GenLink"));
    }

    @Override
    public String getText (Object object) {
        String label = ((GenLink) object).getEditPartClassName ();
        return label == null || label.length () == 0 ? getString ("_UI_GenLink_type") : getString ("_UI_GenLink_type") + " " + label;
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (GenLink.class)) {
            case GMFGenPackage.GEN_LINK__OUTGOING_CREATION_ALLOWED :
            case GMFGenPackage.GEN_LINK__INCOMING_CREATION_ALLOWED :
            case GMFGenPackage.GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL :
            case GMFGenPackage.GEN_LINK__CREATE_COMMAND_CLASS_NAME :
            case GMFGenPackage.GEN_LINK__REORIENT_COMMAND_CLASS_NAME :
            case GMFGenPackage.GEN_LINK__TREE_BRANCH :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
            case GMFGenPackage.GEN_LINK__MODEL_FACET :
            case GMFGenPackage.GEN_LINK__LABELS :
            case GMFGenPackage.GEN_LINK__CREATION_CONSTRAINTS :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
        newChildDescriptors.add (createChildParameter (GMFGenPackage.eINSTANCE.getGenLink_ModelFacet (), GMFGenFactory.eINSTANCE.createTypeLinkModelFacet ()));
        newChildDescriptors.add (createChildParameter (GMFGenPackage.eINSTANCE.getGenLink_ModelFacet (), GMFGenFactory.eINSTANCE.createFeatureLinkModelFacet ()));
        newChildDescriptors.add (createChildParameter (GMFGenPackage.eINSTANCE.getGenLink_Labels (), GMFGenFactory.eINSTANCE.createGenLinkLabel ()));
        newChildDescriptors.add (createChildParameter (GMFGenPackage.eINSTANCE.getGenLink_CreationConstraints (), GMFGenFactory.eINSTANCE.createGenLinkConstraints ()));
    }

}

