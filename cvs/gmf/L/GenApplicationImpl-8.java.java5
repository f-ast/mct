package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.util.CodeGenUtil;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenApplication;

import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;

public class GenApplicationImpl extends EObjectImpl implements GenApplication {
    protected static final String ID_EDEFAULT = null;
    protected String iD = ID_EDEFAULT;
    protected static final String TITLE_EDEFAULT = null;
    protected String title = TITLE_EDEFAULT;
    protected static final String PACKAGE_NAME_EDEFAULT = null;
    protected String packageName = PACKAGE_NAME_EDEFAULT;
    protected static final String CLASS_NAME_EDEFAULT = null;
    protected String className = CLASS_NAME_EDEFAULT;
    protected static final String WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT = null;
    protected static final String WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT = null;
    protected static final String ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT = null;
    protected static final String PERSPECTIVE_CLASS_NAME_EDEFAULT = null;
    protected static final String PERSPECTIVE_ID_EDEFAULT = null;
    protected String perspectiveId = PERSPECTIVE_ID_EDEFAULT;
    protected static final boolean SUPPORT_FILES_EDEFAULT = false;
    protected boolean supportFiles = SUPPORT_FILES_EDEFAULT;

    protected GenApplicationImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenApplication ();
    }

    public GenEditorGenerator getEditorGen () {
        if (eContainerFeatureID != GMFGenPackage.GEN_APPLICATION__EDITOR_GEN) return null;

        return (GenEditorGenerator) eContainer ();
    }

    public String getIDGen () {
        return iD;
    }

    public String getID () {
        String value = getIDGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            value = getEditorGen ().getModelID ().replace (" ", "") + "Application";
        }
        return value;
    }

    public void setID (String newID) {
        String oldID = iD;
        iD = newID;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__ID, oldID, iD));

    }

    public String getTitleGen () {
        return title;
    }

    public String getTitle () {
        String value = getTitleGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            value = getEditorGen ().getModelID () + " Application";
        }
        return value;
    }

    public void setTitle (String newTitle) {
        String oldTitle = title;
        title = newTitle;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__TITLE, oldTitle, title));

    }

    public String getPackageNameGen () {
        return packageName;
    }

    public String getPackageName () {
        String value = getPackageNameGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            value = getEditorGen ().getPackageNamePrefix () + ".application";
        }
        return value;
    }

    public void setPackageName (String newPackageName) {
        String oldPackageName = packageName;
        packageName = newPackageName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME, oldPackageName, packageName));

    }

    public String getClassNameGen () {
        return className;
    }

    public String getClassName () {
        String value = getClassNameGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            value = getDomainPackageCapName () + "Application";
        }
        return value;
    }

    public void setClassName (String newClassName) {
        String oldClassName = className;
        className = newClassName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__CLASS_NAME, oldClassName, className));

    }

    public String getWorkbenchAdvisorClassName () {
        return "DiagramEditorWorkbenchAdvisor";
    }

    public String getWorkbenchWindowAdvisorClassName () {
        return "DiagramEditorWorkbenchWindowAdvisor";
    }

    public String getActionBarAdvisorClassName () {
        return "DiagramEditorActionBarAdvisor";
    }

    public String getPerspectiveClassName () {
        return "DiagramEditorPerspective";
    }

    public String getPerspectiveIdGen () {
        return perspectiveId;
    }

    public String getPerspectiveId () {
        String value = getPerspectiveIdGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            value = getEditorGen ().getPackageNamePrefix () + '.' + getEditorGen ().getModelID () + "Perspective";
        }
        return value;
    }

    public void setPerspectiveId (String newPerspectiveId) {
        String oldPerspectiveId = perspectiveId;
        perspectiveId = newPerspectiveId;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID, oldPerspectiveId, perspectiveId));

    }

    public boolean isSupportFiles () {
        return supportFiles;
    }

    public void setSupportFiles (boolean newSupportFiles) {
        boolean oldSupportFiles = supportFiles;
        supportFiles = newSupportFiles;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES, oldSupportFiles, supportFiles));

    }

    public String getQualifiedClassName () {
        return getPackageName () + '.' + getClassName ();
    }

    public String getWorkbenchAdvisorQualifiedClassName () {
        return getPackageName () + '.' + getWorkbenchAdvisorClassName ();
    }

    public String getWorkbenchWindowAdvisorQualifiedClassName () {
        return getPackageName () + '.' + getWorkbenchWindowAdvisorClassName ();
    }

    public String getActionBarAdvisorQualifiedClassName () {
        return getPackageName () + '.' + getActionBarAdvisorClassName ();
    }

    public String getPerspectiveQualifiedClassName () {
        return getPackageName () + '.' + getPerspectiveClassName ();
    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
                return eBasicSetContainer (null, GMFGenPackage.GEN_APPLICATION__EDITOR_GEN, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_EDITOR_GENERATOR__APPLICATION, GenEditorGenerator.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
                return getEditorGen ();
            case GMFGenPackage.GEN_APPLICATION__ID :
                return getID ();
            case GMFGenPackage.GEN_APPLICATION__TITLE :
                return getTitle ();
            case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME :
                return getPackageName ();
            case GMFGenPackage.GEN_APPLICATION__CLASS_NAME :
                return getClassName ();
            case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME :
                return getWorkbenchAdvisorClassName ();
            case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME :
                return getWorkbenchWindowAdvisorClassName ();
            case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME :
                return getActionBarAdvisorClassName ();
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME :
                return getPerspectiveClassName ();
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID :
                return getPerspectiveId ();
            case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES :
                return isSupportFiles () ? Boolean.TRUE : Boolean.FALSE;
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.GEN_APPLICATION__ID :
                setID ((String) newValue);
                return;
            case GMFGenPackage.GEN_APPLICATION__TITLE :
                setTitle ((String) newValue);
                return;
            case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME :
                setPackageName ((String) newValue);
                return;
            case GMFGenPackage.GEN_APPLICATION__CLASS_NAME :
                setClassName ((String) newValue);
                return;
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID :
                setPerspectiveId ((String) newValue);
                return;
            case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES :
                setSupportFiles (((Boolean) newValue).booleanValue ());
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_APPLICATION__ID :
                setID (ID_EDEFAULT);
                return;
            case GMFGenPackage.GEN_APPLICATION__TITLE :
                setTitle (TITLE_EDEFAULT);
                return;
            case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME :
                setPackageName (PACKAGE_NAME_EDEFAULT);
                return;
            case GMFGenPackage.GEN_APPLICATION__CLASS_NAME :
                setClassName (CLASS_NAME_EDEFAULT);
                return;
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID :
                setPerspectiveId (PERSPECTIVE_ID_EDEFAULT);
                return;
            case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES :
                setSupportFiles (SUPPORT_FILES_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_APPLICATION__EDITOR_GEN :
                return getEditorGen () != null;
            case GMFGenPackage.GEN_APPLICATION__ID :
                return ID_EDEFAULT == null ? iD != null : ! ID_EDEFAULT.equals (iD);
            case GMFGenPackage.GEN_APPLICATION__TITLE :
                return TITLE_EDEFAULT == null ? title != null : ! TITLE_EDEFAULT.equals (title);
            case GMFGenPackage.GEN_APPLICATION__PACKAGE_NAME :
                return PACKAGE_NAME_EDEFAULT == null ? packageName != null : ! PACKAGE_NAME_EDEFAULT.equals (packageName);
            case GMFGenPackage.GEN_APPLICATION__CLASS_NAME :
                return CLASS_NAME_EDEFAULT == null ? className != null : ! CLASS_NAME_EDEFAULT.equals (className);
            case GMFGenPackage.GEN_APPLICATION__WORKBENCH_ADVISOR_CLASS_NAME :
                return WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT == null ? getWorkbenchAdvisorClassName () != null : ! WORKBENCH_ADVISOR_CLASS_NAME_EDEFAULT.equals (getWorkbenchAdvisorClassName ());
            case GMFGenPackage.GEN_APPLICATION__WORKBENCH_WINDOW_ADVISOR_CLASS_NAME :
                return WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT == null ? getWorkbenchWindowAdvisorClassName () != null : ! WORKBENCH_WINDOW_ADVISOR_CLASS_NAME_EDEFAULT.equals (getWorkbenchWindowAdvisorClassName ());
            case GMFGenPackage.GEN_APPLICATION__ACTION_BAR_ADVISOR_CLASS_NAME :
                return ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT == null ? getActionBarAdvisorClassName () != null : ! ACTION_BAR_ADVISOR_CLASS_NAME_EDEFAULT.equals (getActionBarAdvisorClassName ());
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_CLASS_NAME :
                return PERSPECTIVE_CLASS_NAME_EDEFAULT == null ? getPerspectiveClassName () != null : ! PERSPECTIVE_CLASS_NAME_EDEFAULT.equals (getPerspectiveClassName ());
            case GMFGenPackage.GEN_APPLICATION__PERSPECTIVE_ID :
                return PERSPECTIVE_ID_EDEFAULT == null ? perspectiveId != null : ! PERSPECTIVE_ID_EDEFAULT.equals (perspectiveId);
            case GMFGenPackage.GEN_APPLICATION__SUPPORT_FILES :
                return supportFiles != SUPPORT_FILES_EDEFAULT;
        }
        return super.eIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (iD: ");
        result.append (iD);
        result.append (", title: ");
        result.append (title);
        result.append (", packageName: ");
        result.append (packageName);
        result.append (", className: ");
        result.append (className);
        result.append (", perspectiveId: ");
        result.append (perspectiveId);
        result.append (", supportFiles: ");
        result.append (supportFiles);
        result.append (')');
        return result.toString ();
    }

    String getDomainPackageCapName () {
        return ((GenEditorGeneratorImpl) getEditorGen ()).getDomainModelCapName ();
    }

}

