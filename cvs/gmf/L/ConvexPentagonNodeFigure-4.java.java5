package org.eclipse.gmf.runtime.gef.ui.internal.figures;

import org.eclipse.draw2d.Graphics;

import org.eclipse.draw2d.geometry.Dimension;

import org.eclipse.draw2d.geometry.Point;

import org.eclipse.draw2d.geometry.PointList;

import org.eclipse.gmf.runtime.draw2d.ui.figures.IPolygonAnchorableFigure;

import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;

public class ConvexPentagonNodeFigure extends DefaultSizeNodeFigure implements IPolygonAnchorableFigure {
    private static final double DEFAULT_CONVEX_RATIO = 0.25;

    public ConvexPentagonNodeFigure (Dimension defSize) {
        super (defSize);
    }

    public ConvexPentagonNodeFigure (int width, int height) {
        super (width, height);
    }

    protected void paintFigure (Graphics graphics) {
        PointList pointList = getPolygonPoints ();
        graphics.fillPolygon (pointList);
        graphics.drawPolygon (pointList);
    }

    public PointList getPolygonPoints () {
        PointList ptList = new PointList ();
        ptList.addPoint (new Point (getBounds ().x, getBounds ().y));
        ptList.addPoint (new Point (getBounds ().x + getBounds ().width * (1 - DEFAULT_CONVEX_RATIO), getBounds ().y));
        ptList.addPoint (new Point (getBounds ().x + getBounds ().width, getBounds ().y + getBounds ().height / 2));
        ptList.addPoint (new Point (getBounds ().x + getBounds ().width * (1 - DEFAULT_CONVEX_RATIO), getBounds ().y + getBounds ().height));
        ptList.addPoint (new Point (getBounds ().x, getBounds ().y + getBounds ().height));
        ptList.addPoint (new Point (getBounds ().x, getBounds ().y));
        return ptList;
    }

}

