package org.eclipse.gmf.gmfgraph.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.RoundedRectangle;

public class RoundedRectangleImpl extends ShapeImpl implements RoundedRectangle {
    protected static final int CORNER_WIDTH_EDEFAULT = 8;
    protected int cornerWidth = CORNER_WIDTH_EDEFAULT;
    protected static final int CORNER_HEIGHT_EDEFAULT = 8;
    protected int cornerHeight = CORNER_HEIGHT_EDEFAULT;

    protected RoundedRectangleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getRoundedRectangle ();
    }

    public int getCornerWidth () {
        return cornerWidth;
    }

    public void setCornerWidth (int newCornerWidth) {
        int oldCornerWidth = cornerWidth;
        cornerWidth = newCornerWidth;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_WIDTH, oldCornerWidth, cornerWidth));

    }

    public int getCornerHeight () {
        return cornerHeight;
    }

    public void setCornerHeight (int newCornerHeight) {
        int oldCornerHeight = cornerHeight;
        cornerHeight = newCornerHeight;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_HEIGHT, oldCornerHeight, cornerHeight));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_WIDTH :
                return new Integer (getCornerWidth ());
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_HEIGHT :
                return new Integer (getCornerHeight ());
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_WIDTH :
                setCornerWidth (((Integer) newValue).intValue ());
                return;
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_HEIGHT :
                setCornerHeight (((Integer) newValue).intValue ());
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_WIDTH :
                setCornerWidth (CORNER_WIDTH_EDEFAULT);
                return;
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_HEIGHT :
                setCornerHeight (CORNER_HEIGHT_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_WIDTH :
                return cornerWidth != CORNER_WIDTH_EDEFAULT;
            case GMFGraphPackage.ROUNDED_RECTANGLE__CORNER_HEIGHT :
                return cornerHeight != CORNER_HEIGHT_EDEFAULT;
        }
        return super.eIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (cornerWidth: ");
        result.append (cornerWidth);
        result.append (", cornerHeight: ");
        result.append (cornerHeight);
        result.append (')');
        return result.toString ();
    }

}

