package org.eclipse.gmf.mappings.util;

import org.eclipse.emf.common.notify.Adapter;

import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.mappings.*;

import org.eclipse.gmf.mappings.CanvasMapping;

import org.eclipse.gmf.mappings.ChildNodeMapping;

import org.eclipse.gmf.mappings.GMFMapPackage;

import org.eclipse.gmf.mappings.LinkMapping;

import org.eclipse.gmf.mappings.Mapping;

import org.eclipse.gmf.mappings.MappingEntry;

import org.eclipse.gmf.mappings.NodeMapping;

public class GMFMapAdapterFactory extends AdapterFactoryImpl {
    protected static GMFMapPackage modelPackage;

    public GMFMapAdapterFactory () {
        if (modelPackage == null) {
            modelPackage = GMFMapPackage.eINSTANCE;
        }
    }

    public boolean isFactoryForType (Object object) {
        if (object == modelPackage) {
            return true;
        }
        if (object instanceof EObject) {
            return ((EObject) object).eClass ().getEPackage () == modelPackage;
        }
        return false;
    }

    protected GMFMapSwitch modelSwitch = new GMFMapSwitch () {

        public Object caseAbstractNodeMapping (AbstractNodeMapping object) {
            return createAbstractNodeMappingAdapter ();
        }

        public Object caseMappingEntry (MappingEntry object) {
            return createMappingEntryAdapter ();
        }

        public Object caseNodeMapping (NodeMapping object) {
            return createNodeMappingAdapter ();
        }

        public Object caseChildNodeMapping (ChildNodeMapping object) {
            return createChildNodeMappingAdapter ();
        }

        public Object caseLinkMapping (LinkMapping object) {
            return createLinkMappingAdapter ();
        }

        public Object caseCanvasMapping (CanvasMapping object) {
            return createCanvasMappingAdapter ();
        }

        public Object caseMapping (Mapping object) {
            return createMappingAdapter ();
        }

        public Object caseConstraint (Constraint object) {
            return createConstraintAdapter ();
        }

        public Object caseValueExpression (ValueExpression object) {
            return createValueExpressionAdapter ();
        }

        public Object caseElementInitializer (ElementInitializer object) {
            return createElementInitializerAdapter ();
        }

        public Object caseFeatureSeqInitializer (FeatureSeqInitializer object) {
            return createFeatureSeqInitializerAdapter ();
        }

        public Object caseFeatureValueSpec (FeatureValueSpec object) {
            return createFeatureValueSpecAdapter ();
        }

        public Object defaultCase (EObject object) {
            return createEObjectAdapter ();
        }

    }

    ;

    public Adapter createAdapter (Notifier target) {
        return (Adapter) modelSwitch.doSwitch ((EObject) target);
    }

    public Adapter createAbstractNodeMappingAdapter () {
        return null;
    }

    public Adapter createMappingEntryAdapter () {
        return null;
    }

    public Adapter createNodeMappingAdapter () {
        return null;
    }

    public Adapter createChildNodeMappingAdapter () {
        return null;
    }

    public Adapter createLinkMappingAdapter () {
        return null;
    }

    public Adapter createCanvasMappingAdapter () {
        return null;
    }

    public Adapter createMappingAdapter () {
        return null;
    }

    public Adapter createConstraintAdapter () {
        return null;
    }

    public Adapter createValueExpressionAdapter () {
        return null;
    }

    public Adapter createElementInitializerAdapter () {
        return null;
    }

    public Adapter createFeatureSeqInitializerAdapter () {
        return null;
    }

    public Adapter createFeatureValueSpecAdapter () {
        return null;
    }

    public Adapter createEObjectAdapter () {
        return null;
    }

}

