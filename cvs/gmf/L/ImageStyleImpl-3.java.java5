package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.runtime.notation.Bounds;

import org.eclipse.gmf.runtime.notation.ImageStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class ImageStyleImpl extends EObjectImpl implements ImageStyle {
    protected static final Boolean ANTI_ALIAS_EDEFAULT = Boolean.TRUE;
    protected Boolean antiAlias = ANTI_ALIAS_EDEFAULT;
    protected static final Boolean MAINTAIN_ASPECT_RATIO_EDEFAULT = Boolean.TRUE;
    protected Boolean maintainAspectRatio = MAINTAIN_ASPECT_RATIO_EDEFAULT;
    protected Bounds cropBound = null;

    protected ImageStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.eINSTANCE.getImageStyle ();
    }

    public Boolean getAntiAlias () {
        return antiAlias;
    }

    public void setAntiAlias (Boolean newAntiAlias) {
        Boolean oldAntiAlias = antiAlias;
        antiAlias = newAntiAlias;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.IMAGE_STYLE__ANTI_ALIAS, oldAntiAlias, antiAlias));

    }

    public Boolean getMaintainAspectRatio () {
        return maintainAspectRatio;
    }

    public void setMaintainAspectRatio (Boolean newMaintainAspectRatio) {
        Boolean oldMaintainAspectRatio = maintainAspectRatio;
        maintainAspectRatio = newMaintainAspectRatio;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO, oldMaintainAspectRatio, maintainAspectRatio));

    }

    public Bounds getCropBound () {
        return cropBound;
    }

    public NotificationChain basicSetCropBound (Bounds newCropBound, NotificationChain msgs) {
        Bounds oldCropBound = cropBound;
        cropBound = newCropBound;
        if (eNotificationRequired ()) {
            ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, NotationPackage.IMAGE_STYLE__CROP_BOUND, oldCropBound, newCropBound);
            if (msgs == null) msgs = notification;
            else msgs.add (notification);

        }
        return msgs;
    }

    public void setCropBound (Bounds newCropBound) {
        if (newCropBound != cropBound) {
            NotificationChain msgs = null;
            if (cropBound != null) msgs = ((InternalEObject) cropBound).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - NotationPackage.IMAGE_STYLE__CROP_BOUND, null, msgs);

            if (newCropBound != null) msgs = ((InternalEObject) newCropBound).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - NotationPackage.IMAGE_STYLE__CROP_BOUND, null, msgs);

            msgs = basicSetCropBound (newCropBound, msgs);
            if (msgs != null) msgs.dispatch ();

        } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.IMAGE_STYLE__CROP_BOUND, newCropBound, newCropBound));

    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case NotationPackage.IMAGE_STYLE__CROP_BOUND :
                    return basicSetCropBound (null, msgs);
                default :
                    return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
            }
        }
        return eBasicSetContainer (null, featureID, msgs);
    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.IMAGE_STYLE__ANTI_ALIAS :
                return getAntiAlias ();
            case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO :
                return getMaintainAspectRatio ();
            case NotationPackage.IMAGE_STYLE__CROP_BOUND :
                return getCropBound ();
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.IMAGE_STYLE__ANTI_ALIAS :
                setAntiAlias ((Boolean) newValue);
                return;
            case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO :
                setMaintainAspectRatio ((Boolean) newValue);
                return;
            case NotationPackage.IMAGE_STYLE__CROP_BOUND :
                setCropBound ((Bounds) newValue);
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.IMAGE_STYLE__ANTI_ALIAS :
                setAntiAlias (ANTI_ALIAS_EDEFAULT);
                return;
            case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO :
                setMaintainAspectRatio (MAINTAIN_ASPECT_RATIO_EDEFAULT);
                return;
            case NotationPackage.IMAGE_STYLE__CROP_BOUND :
                setCropBound ((Bounds) null);
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.IMAGE_STYLE__ANTI_ALIAS :
                return ANTI_ALIAS_EDEFAULT == null ? antiAlias != null : ! ANTI_ALIAS_EDEFAULT.equals (antiAlias);
            case NotationPackage.IMAGE_STYLE__MAINTAIN_ASPECT_RATIO :
                return MAINTAIN_ASPECT_RATIO_EDEFAULT == null ? maintainAspectRatio != null : ! MAINTAIN_ASPECT_RATIO_EDEFAULT.equals (maintainAspectRatio);
            case NotationPackage.IMAGE_STYLE__CROP_BOUND :
                return cropBound != null;
        }
        return eDynamicIsSet (eFeature);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (antiAlias: ");
        result.append (antiAlias);
        result.append (", maintainAspectRatio: ");
        result.append (maintainAspectRatio);
        result.append (')');
        return result.toString ();
    }

}

