package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.providers;

import java.util.Collections;

import java.util.List;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.gmf.runtime.common.core.service.IOperation;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.GetRelTypesOnSourceAndTargetOperation;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.GetRelTypesOnSourceOperation;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.GetRelTypesOnTargetOperation;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.GetTypesForSourceOperation;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.GetTypesForTargetOperation;

import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.ModelingAssistantProvider;

import org.eclipse.gmf.runtime.emf.type.core.IElementType;

public class GeoshapeModelingAssistantProvider extends ModelingAssistantProvider {
    private static List connectorTypes = null;
    private static List shapeTypes = null;

    private static List getConnectorTypes () {
        if (connectorTypes == null) {
            connectorTypes = Collections.singletonList (GeoshapeType.LINE);
        }
        return connectorTypes;
    }

    private static List getShapeTypes () {
        if (shapeTypes == null) {
            shapeTypes = GeoshapeType.getShapeTypes ();
        }
        return shapeTypes;
    }

    public boolean provides (IOperation operation) {
        if (operation instanceof GetRelTypesOnSourceOperation || operation instanceof GetRelTypesOnTargetOperation || operation instanceof GetRelTypesOnSourceAndTargetOperation || operation instanceof GetTypesForTargetOperation || operation instanceof GetTypesForSourceOperation) {
            return super.provides (operation);
        }
        return false;
    }

    public List getRelTypesOnSource (IAdaptable source) {
        return getConnectorTypes ();
    }

    public List getRelTypesOnTarget (IAdaptable target) {
        return getConnectorTypes ();
    }

    public List getRelTypesOnSourceAndTarget (IAdaptable source, IAdaptable target) {
        return getConnectorTypes ();
    }

    public List getTypesForSource (IAdaptable target, IElementType relationshipType) {
        if (relationshipType.equals (GeoshapeType.LINE)) {
            return getShapeTypes ();
        }
        return Collections.EMPTY_LIST;
    }

    public List getTypesForTarget (IAdaptable source, IElementType relationshipType) {
        if (relationshipType.equals (GeoshapeType.LINE)) {
            return getShapeTypes ();
        }
        return Collections.EMPTY_LIST;
    }

}

