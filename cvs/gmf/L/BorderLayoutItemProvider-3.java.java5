package org.eclipse.gmf.gmfgraph.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.gmfgraph.BorderLayout;

import org.eclipse.gmf.gmfgraph.GMFGraphFactory;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

public class BorderLayoutItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public BorderLayoutItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    public List getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
        }
        return itemPropertyDescriptors;
    }

    public Collection getChildrenFeatures (Object object) {
        if (childrenFeatures == null) {
            super.getChildrenFeatures (object);
            childrenFeatures.add (GMFGraphPackage.eINSTANCE.getBorderLayout_Spacing ());
        }
        return childrenFeatures;
    }

    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/BorderLayout"));
    }

    public String getText (Object object) {
        return getString ("_UI_BorderLayout_type");
    }

    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (BorderLayout.class)) {
            case GMFGraphPackage.BORDER_LAYOUT__SPACING :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), true, false));
                return;
        }
        super.notifyChanged (notification);
    }

    protected void collectNewChildDescriptors (Collection newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
        newChildDescriptors.add (createChildParameter (GMFGraphPackage.eINSTANCE.getBorderLayout_Spacing (), GMFGraphFactory.eINSTANCE.createDimension ()));
    }

    public ResourceLocator getResourceLocator () {
        return GMFGraphEditPlugin.INSTANCE;
    }

}

