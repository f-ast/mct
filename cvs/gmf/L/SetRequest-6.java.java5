package org.eclipse.gmf.runtime.emf.type.core.requests;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.emf.transaction.util.TransactionUtil;

import org.eclipse.gmf.runtime.emf.type.core.EditHelperContext;

import org.eclipse.gmf.runtime.emf.type.core.IClientContext;

public class SetRequest extends AbstractEditCommandRequest {
    private final EStructuralFeature feature;
    private final EObject elementToEdit;
    private final Object value;

    public SetRequest (TransactionalEditingDomain editingDomain, EObject elementToEdit, EStructuralFeature feature, Object value) {
        super (editingDomain);
        this.elementToEdit = elementToEdit;
        this.feature = feature;
        this.value = value;
    }

    public SetRequest (EObject elementToEdit, EStructuralFeature feature, Object value) {
        this (TransactionUtil.getEditingDomain (elementToEdit), elementToEdit, feature, value);
    }

    public EStructuralFeature getFeature () {
        return feature;
    }

    public Object getValue () {
        return value;
    }

    public EObject getElementToEdit () {
        return elementToEdit;
    }

    public List getElementsToEdit () {
        if (elementToEdit != null) {
            return Collections.singletonList (elementToEdit);
        }
        return Collections.EMPTY_LIST;
    }

    public Object getEditHelperContext () {
        IClientContext context = getClientContext ();
        if (context == null) {
            return elementToEdit;
        } else {
            return new EditHelperContext (elementToEdit, context);
        }
    }

}

