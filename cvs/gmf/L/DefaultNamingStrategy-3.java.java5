package org.eclipse.gmf.internal.bridge.naming;

import org.eclipse.gmf.codegen.gmfgen.GenCompartment;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenLabel;

import org.eclipse.gmf.codegen.gmfgen.GenLink;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

import org.eclipse.gmf.common.IncrementalNamesDispenser;

import org.eclipse.gmf.common.NamesDispenser;

import org.eclipse.gmf.mappings.CanvasMapping;

import org.eclipse.gmf.mappings.CompartmentMapping;

import org.eclipse.gmf.mappings.LabelMapping;

import org.eclipse.gmf.mappings.LinkMapping;

import org.eclipse.gmf.mappings.NodeMapping;

public class DefaultNamingStrategy implements NamingStrategy {
    private final String suffix;
    private final NamesDispenser namesDispenser;

    public DefaultNamingStrategy (String suffix) {
        this (suffix, new IncrementalNamesDispenser ());
    }

    public DefaultNamingStrategy (String suffix, NamesDispenser namesDispenser) {
        assert suffix != null;
        this.suffix = suffix;
        assert namesDispenser != null;
        this.namesDispenser = namesDispenser;
    }

    public String get (CanvasMapping mapping) {
        return createClassName (GenDiagram.CLASS_NAME_PREFIX);
    }

    public String get (NodeMapping mapping) {
        return createClassName (GenNode.CLASS_NAME_PREFIX);
    }

    public String get (LinkMapping mapping) {
        return createClassName (GenLink.CLASS_NAME_PREFIX);
    }

    public String get (CompartmentMapping mapping) {
        return createClassName (GenCompartment.CLASS_NAME_PREFIX);
    }

    public String get (LabelMapping mapping) {
        return createClassName (GenLabel.CLASS_NAME_PREFIX);
    }

    protected String createClassName (String name) {
        return namesDispenser.get (name, suffix);
    }

}

