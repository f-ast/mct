package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage;

import org.eclipse.emf.ecore.EAttribute;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EEnum;

import org.eclipse.emf.ecore.EOperation;

import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.EcorePackage;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.gmf.codegen.gmfgen.Attributes;

import org.eclipse.gmf.codegen.gmfgen.ColorAttributes;

import org.eclipse.gmf.codegen.gmfgen.DefaultSizeAttributes;

import org.eclipse.gmf.codegen.gmfgen.EntryBase;

import org.eclipse.gmf.codegen.gmfgen.ExternalLabel;

import org.eclipse.gmf.codegen.gmfgen.FeatureModelFacet;

import org.eclipse.gmf.codegen.gmfgen.FigureViewmap;

import org.eclipse.gmf.codegen.gmfgen.GMFGenFactory;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenAuditContainer;

import org.eclipse.gmf.codegen.gmfgen.GenAuditRule;

import org.eclipse.gmf.codegen.gmfgen.GenChildContainer;

import org.eclipse.gmf.codegen.gmfgen.GenChildNode;

import org.eclipse.gmf.codegen.gmfgen.GenCommonBase;

import org.eclipse.gmf.codegen.gmfgen.GenCompartment;

import org.eclipse.gmf.codegen.gmfgen.GenContainerEditPart;

import org.eclipse.gmf.codegen.gmfgen.GenDiagram;

import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenExternalNodeLabel;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec;

import org.eclipse.gmf.codegen.gmfgen.GenLabel;

import org.eclipse.gmf.codegen.gmfgen.GenLink;

import org.eclipse.gmf.codegen.gmfgen.GenLinkConstraints;

import org.eclipse.gmf.codegen.gmfgen.GenLinkLabel;

import org.eclipse.gmf.codegen.gmfgen.GenNode;

import org.eclipse.gmf.codegen.gmfgen.GenNodeLabel;

import org.eclipse.gmf.codegen.gmfgen.GenSeverity;

import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;

import org.eclipse.gmf.codegen.gmfgen.InnerClassViewmap;

import org.eclipse.gmf.codegen.gmfgen.LinkEntry;

import org.eclipse.gmf.codegen.gmfgen.LinkLabelAlignment;

import org.eclipse.gmf.codegen.gmfgen.LinkModelFacet;

import org.eclipse.gmf.codegen.gmfgen.ModelElementSelector;

import org.eclipse.gmf.codegen.gmfgen.ModelFacet;

import org.eclipse.gmf.codegen.gmfgen.NodeEntry;

import org.eclipse.gmf.codegen.gmfgen.Palette;

import org.eclipse.gmf.codegen.gmfgen.ShapeAttributes;

import org.eclipse.gmf.codegen.gmfgen.SnippetViewmap;

import org.eclipse.gmf.codegen.gmfgen.ToolEntry;

import org.eclipse.gmf.codegen.gmfgen.ToolGroup;

import org.eclipse.gmf.codegen.gmfgen.TypeLinkModelFacet;

import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

import org.eclipse.gmf.codegen.gmfgen.ValueExpression;

import org.eclipse.gmf.codegen.gmfgen.Viewmap;

public class GMFGenPackageImpl extends EPackageImpl implements GMFGenPackage {
    private EClass genDiagramEClass = null;
    private EClass genCommonBaseEClass = null;
    private EClass genContainerEditPartEClass = null;
    private EClass genNodeEClass = null;
    private EClass genTopLevelNodeEClass = null;
    private EClass genChildNodeEClass = null;
    private EClass genCompartmentEClass = null;
    private EClass genChildContainerEClass = null;
    private EClass genLinkEClass = null;
    private EClass genLabelEClass = null;
    private EClass externalLabelEClass = null;
    private EClass genNodeLabelEClass = null;
    private EClass genExternalNodeLabelEClass = null;
    private EClass genLinkLabelEClass = null;
    private EClass modelFacetEClass = null;
    private EClass linkModelFacetEClass = null;
    private EClass typeModelFacetEClass = null;
    private EClass featureModelFacetEClass = null;
    private EClass typeLinkModelFacetEClass = null;
    private EClass viewmapEClass = null;
    private EClass attributesEClass = null;
    private EClass colorAttributesEClass = null;
    private EClass shapeAttributesEClass = null;
    private EClass defaultSizeAttributesEClass = null;
    private EClass figureViewmapEClass = null;
    private EClass snippetViewmapEClass = null;
    private EClass innerClassViewmapEClass = null;
    private EClass valueExpressionEClass = null;
    private EClass modelElementSelectorEClass = null;
    private EClass paletteEClass = null;
    private EClass entryBaseEClass = null;
    private EClass toolEntryEClass = null;
    private EClass nodeEntryEClass = null;
    private EClass linkEntryEClass = null;
    private EClass toolGroupEClass = null;
    private EClass genElementInitializerEClass = null;
    private EClass genFeatureSeqInitializerEClass = null;
    private EClass genFeatureValueSpecEClass = null;
    private EClass genLinkConstraintsEClass = null;
    private EClass genAuditContainerEClass = null;
    private EClass genAuditRuleEClass = null;
    private EEnum linkLabelAlignmentEEnum = null;
    private EEnum genSeverityEEnum = null;

    private GMFGenPackageImpl () {
        super (eNS_URI, GMFGenFactory.eINSTANCE);
    }

    private static boolean isInited = false;

    public static GMFGenPackage init () {
        if (isInited) return (GMFGenPackage) EPackage.Registry.INSTANCE.getEPackage (GMFGenPackage.eNS_URI);

        GMFGenPackageImpl theGMFGenPackage = (GMFGenPackageImpl) (EPackage.Registry.INSTANCE.getEPackage (eNS_URI) instanceof GMFGenPackageImpl ? EPackage.Registry.INSTANCE.getEPackage (eNS_URI) : new GMFGenPackageImpl ());
        isInited = true;
        GenModelPackage.eINSTANCE.eClass ();
        EcorePackage.eINSTANCE.eClass ();
        theGMFGenPackage.createPackageContents ();
        theGMFGenPackage.initializePackageContents ();
        theGMFGenPackage.freeze ();
        return theGMFGenPackage;
    }

    public EClass getGenDiagram () {
        return genDiagramEClass;
    }

    public EReference getGenDiagram_DomainMetaModel () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getGenDiagram_DomainDiagramElement () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getGenDiagram_ChildNodes () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (2);
    }

    public EReference getGenDiagram_TopLevelNodes () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (3);
    }

    public EReference getGenDiagram_Links () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (4);
    }

    public EReference getGenDiagram_Compartments () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (5);
    }

    public EReference getGenDiagram_Audits () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (6);
    }

    public EReference getGenDiagram_Palette () {
        return (EReference) genDiagramEClass.getEStructuralFeatures ().get (7);
    }

    public EAttribute getGenDiagram_EditCommandsPackageName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (8);
    }

    public EAttribute getGenDiagram_EditPartsPackageName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (9);
    }

    public EAttribute getGenDiagram_EditPoliciesPackageName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (10);
    }

    public EAttribute getGenDiagram_PluginName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (15);
    }

    public EAttribute getGenDiagram_ProviderName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (16);
    }

    public EAttribute getGenDiagram_PluginID () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (14);
    }

    public EAttribute getGenDiagram_PluginClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (45);
    }

    public EAttribute getGenDiagram_PreferenceInitializerClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (46);
    }

    public EAttribute getGenDiagram_VisualIDRegistryClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (47);
    }

    public EAttribute getGenDiagram_CreateShortcutActionClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (48);
    }

    public EAttribute getGenDiagram_ElementChooserClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (49);
    }

    public EAttribute getGenDiagram_ContainsShortcutsTo () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (50);
    }

    public EAttribute getGenDiagram_ShortcutsProvidedFor () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (51);
    }

    public EAttribute getGenDiagram_EditorPackageName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (11);
    }

    public EAttribute getGenDiagram_ProvidersPackageName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (12);
    }

    public EAttribute getGenDiagram_NotationViewFactoriesPackageName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (13);
    }

    public EAttribute getGenDiagram_EditorClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (42);
    }

    public EAttribute getGenDiagram_DocumentProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (41);
    }

    public EAttribute getGenDiagram_EditPartFactoryClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (21);
    }

    public EAttribute getGenDiagram_BaseExternalNodeLabelEditPartClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (22);
    }

    public EAttribute getGenDiagram_BaseItemSemanticEditPolicyClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (23);
    }

    public EAttribute getGenDiagram_BaseGraphicalNodeEditPolicyClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (24);
    }

    public EAttribute getGenDiagram_ReferenceConnectionEditPolicyClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (25);
    }

    public EAttribute getGenDiagram_CanonicalEditPolicyClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (26);
    }

    public EAttribute getGenDiagram_ElementTypesClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (27);
    }

    public EAttribute getGenDiagram_SemanticHintsClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (28);
    }

    public EAttribute getGenDiagram_NotationViewProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (29);
    }

    public EAttribute getGenDiagram_DiagramFileExtension () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (19);
    }

    public EAttribute getGenDiagram_ReorientConnectionViewCommandClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (20);
    }

    public EAttribute getGenDiagram_SameFileForDiagramAndModel () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (17);
    }

    public EAttribute getGenDiagram_PrintingEnabled () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (18);
    }

    public EAttribute getGenDiagram_InitDiagramFileActionClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (43);
    }

    public EAttribute getGenDiagram_ActionBarContributorClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (36);
    }

    public EAttribute getGenDiagram_CreationWizardClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (37);
    }

    public EAttribute getGenDiagram_CreationWizardPageClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (38);
    }

    public EAttribute getGenDiagram_DiagramEditorUtilClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (39);
    }

    public EAttribute getGenDiagram_DiagramFileCreatorClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (40);
    }

    public EAttribute getGenDiagram_MatchingStrategyClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (44);
    }

    public EAttribute getGenDiagram_EditPartProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (30);
    }

    public EAttribute getGenDiagram_MetamodelSupportProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (31);
    }

    public EAttribute getGenDiagram_ModelingAssistantProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (32);
    }

    public EAttribute getGenDiagram_PropertyProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (33);
    }

    public EAttribute getGenDiagram_IconProviderClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (34);
    }

    public EAttribute getGenDiagram_StructuralFeatureParserClassName () {
        return (EAttribute) genDiagramEClass.getEStructuralFeatures ().get (35);
    }

    public EClass getGenCommonBase () {
        return genCommonBaseEClass;
    }

    public EReference getGenCommonBase_DiagramRunTimeClass () {
        return (EReference) genCommonBaseEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getGenCommonBase_VisualID () {
        return (EAttribute) genCommonBaseEClass.getEStructuralFeatures ().get (1);
    }

    public EAttribute getGenCommonBase_EditPartClassName () {
        return (EAttribute) genCommonBaseEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getGenCommonBase_ItemSemanticEditPolicyClassName () {
        return (EAttribute) genCommonBaseEClass.getEStructuralFeatures ().get (3);
    }

    public EAttribute getGenCommonBase_NotationViewFactoryClassName () {
        return (EAttribute) genCommonBaseEClass.getEStructuralFeatures ().get (4);
    }

    public EReference getGenCommonBase_Viewmap () {
        return (EReference) genCommonBaseEClass.getEStructuralFeatures ().get (5);
    }

    public EClass getGenContainerEditPart () {
        return genContainerEditPartEClass;
    }

    public EReference getGenContainerEditPart_ContainedNodes () {
        return (EReference) genContainerEditPartEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenNode () {
        return genNodeEClass;
    }

    public EReference getGenNode_Labels () {
        return (EReference) genNodeEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getGenNode_Compartments () {
        return (EReference) genNodeEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getGenNode_GraphicalNodeEditPolicyClassName () {
        return (EAttribute) genNodeEClass.getEStructuralFeatures ().get (3);
    }

    public EClass getGenTopLevelNode () {
        return genTopLevelNodeEClass;
    }

    public EReference getGenTopLevelNode_Diagram () {
        return (EReference) genTopLevelNodeEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenChildNode () {
        return genChildNodeEClass;
    }

    public EReference getGenChildNode_Diagram () {
        return (EReference) genChildNodeEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getGenChildNode_Containers () {
        return (EReference) genChildNodeEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getGenCompartment () {
        return genCompartmentEClass;
    }

    public EAttribute getGenCompartment_Title () {
        return (EAttribute) genCompartmentEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getGenCompartment_CanCollapse () {
        return (EAttribute) genCompartmentEClass.getEStructuralFeatures ().get (1);
    }

    public EAttribute getGenCompartment_HideIfEmpty () {
        return (EAttribute) genCompartmentEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getGenCompartment_NeedsTitle () {
        return (EAttribute) genCompartmentEClass.getEStructuralFeatures ().get (3);
    }

    public EReference getGenCompartment_Diagram () {
        return (EReference) genCompartmentEClass.getEStructuralFeatures ().get (4);
    }

    public EReference getGenCompartment_Node () {
        return (EReference) genCompartmentEClass.getEStructuralFeatures ().get (5);
    }

    public EReference getGenNode_ModelFacet () {
        return (EReference) genNodeEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenChildContainer () {
        return genChildContainerEClass;
    }

    public EReference getGenChildContainer_ChildNodes () {
        return (EReference) genChildContainerEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getGenChildContainer_CanonicalEditPolicyClassName () {
        return (EAttribute) genChildContainerEClass.getEStructuralFeatures ().get (1);
    }

    public EAttribute getGenChildContainer_ListLayout () {
        return (EAttribute) genChildContainerEClass.getEStructuralFeatures ().get (2);
    }

    public EClass getGenLink () {
        return genLinkEClass;
    }

    public EReference getGenLink_Diagram () {
        return (EReference) genLinkEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getGenLink_ModelFacet () {
        return (EReference) genLinkEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getGenLink_Labels () {
        return (EReference) genLinkEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getGenLink_OutgoingCreationAllowed () {
        return (EAttribute) genLinkEClass.getEStructuralFeatures ().get (3);
    }

    public EAttribute getGenLink_IncomingCreationAllowed () {
        return (EAttribute) genLinkEClass.getEStructuralFeatures ().get (4);
    }

    public EAttribute getGenLink_ViewDirectionAlignedWithModel () {
        return (EAttribute) genLinkEClass.getEStructuralFeatures ().get (5);
    }

    public EReference getGenLink_CreationConstraints () {
        return (EReference) genLinkEClass.getEStructuralFeatures ().get (6);
    }

    public EClass getGenLabel () {
        return genLabelEClass;
    }

    public EAttribute getGenLabel_ReadOnly () {
        return (EAttribute) genLabelEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getGenLabel_ModelFacet () {
        return (EReference) genLabelEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getExternalLabel () {
        return externalLabelEClass;
    }

    public EAttribute getExternalLabel_TextEditPartClassName () {
        return (EAttribute) externalLabelEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getExternalLabel_TextNotationViewFactoryClassName () {
        return (EAttribute) externalLabelEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getGenNodeLabel () {
        return genNodeLabelEClass;
    }

    public EReference getGenNodeLabel_Node () {
        return (EReference) genNodeLabelEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenExternalNodeLabel () {
        return genExternalNodeLabelEClass;
    }

    public EClass getGenLinkLabel () {
        return genLinkLabelEClass;
    }

    public EReference getGenLinkLabel_Link () {
        return (EReference) genLinkLabelEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getGenLinkLabel_Alignment () {
        return (EAttribute) genLinkLabelEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getModelFacet () {
        return modelFacetEClass;
    }

    public EClass getLinkModelFacet () {
        return linkModelFacetEClass;
    }

    public EClass getTypeModelFacet () {
        return typeModelFacetEClass;
    }

    public EReference getTypeModelFacet_MetaClass () {
        return (EReference) typeModelFacetEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getTypeModelFacet_ContainmentMetaFeature () {
        return (EReference) typeModelFacetEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getTypeModelFacet_ChildMetaFeature () {
        return (EReference) typeModelFacetEClass.getEStructuralFeatures ().get (2);
    }

    public EReference getTypeModelFacet_ModelElementSelector () {
        return (EReference) typeModelFacetEClass.getEStructuralFeatures ().get (3);
    }

    public EReference getTypeModelFacet_ModelElementInitializer () {
        return (EReference) typeModelFacetEClass.getEStructuralFeatures ().get (4);
    }

    public EClass getFeatureModelFacet () {
        return featureModelFacetEClass;
    }

    public EReference getFeatureModelFacet_MetaFeature () {
        return (EReference) featureModelFacetEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getTypeLinkModelFacet () {
        return typeLinkModelFacetEClass;
    }

    public EReference getTypeLinkModelFacet_SourceMetaFeature () {
        return (EReference) typeLinkModelFacetEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getTypeLinkModelFacet_TargetMetaFeature () {
        return (EReference) typeLinkModelFacetEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getViewmap () {
        return viewmapEClass;
    }

    public EReference getViewmap_Attributes () {
        return (EReference) viewmapEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getAttributes () {
        return attributesEClass;
    }

    public EClass getColorAttributes () {
        return colorAttributesEClass;
    }

    public EAttribute getColorAttributes_ForegroundColor () {
        return (EAttribute) colorAttributesEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getColorAttributes_BackgroundColor () {
        return (EAttribute) colorAttributesEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getShapeAttributes () {
        return shapeAttributesEClass;
    }

    public EAttribute getShapeAttributes_LineWidth () {
        return (EAttribute) shapeAttributesEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getShapeAttributes_LineStyle () {
        return (EAttribute) shapeAttributesEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getDefaultSizeAttributes () {
        return defaultSizeAttributesEClass;
    }

    public EAttribute getDefaultSizeAttributes_Width () {
        return (EAttribute) defaultSizeAttributesEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getDefaultSizeAttributes_Height () {
        return (EAttribute) defaultSizeAttributesEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getFigureViewmap () {
        return figureViewmapEClass;
    }

    public EAttribute getFigureViewmap_FigureQualifiedClassName () {
        return (EAttribute) figureViewmapEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getSnippetViewmap () {
        return snippetViewmapEClass;
    }

    public EAttribute getSnippetViewmap_Body () {
        return (EAttribute) snippetViewmapEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getInnerClassViewmap () {
        return innerClassViewmapEClass;
    }

    public EAttribute getInnerClassViewmap_ClassName () {
        return (EAttribute) innerClassViewmapEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getInnerClassViewmap_ClassBody () {
        return (EAttribute) innerClassViewmapEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getValueExpression () {
        return valueExpressionEClass;
    }

    public EAttribute getValueExpression_Body () {
        return (EAttribute) valueExpressionEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getValueExpression_Language () {
        return (EAttribute) valueExpressionEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getModelElementSelector () {
        return modelElementSelectorEClass;
    }

    public EClass getPalette () {
        return paletteEClass;
    }

    public EReference getPalette_Diagram () {
        return (EReference) paletteEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getPalette_Groups () {
        return (EReference) paletteEClass.getEStructuralFeatures ().get (1);
    }

    public EAttribute getPalette_Flyout () {
        return (EAttribute) paletteEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getPalette_NeedZoomTools () {
        return (EAttribute) paletteEClass.getEStructuralFeatures ().get (3);
    }

    public EAttribute getPalette_PackageName () {
        return (EAttribute) paletteEClass.getEStructuralFeatures ().get (4);
    }

    public EAttribute getPalette_FactoryClassName () {
        return (EAttribute) paletteEClass.getEStructuralFeatures ().get (5);
    }

    public EClass getEntryBase () {
        return entryBaseEClass;
    }

    public EAttribute getEntryBase_Order () {
        return (EAttribute) entryBaseEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getEntryBase_TitleKey () {
        return (EAttribute) entryBaseEClass.getEStructuralFeatures ().get (1);
    }

    public EAttribute getEntryBase_DescriptionKey () {
        return (EAttribute) entryBaseEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getEntryBase_LargeIconPath () {
        return (EAttribute) entryBaseEClass.getEStructuralFeatures ().get (3);
    }

    public EAttribute getEntryBase_SmallIconPath () {
        return (EAttribute) entryBaseEClass.getEStructuralFeatures ().get (4);
    }

    public EAttribute getEntryBase_CreateMethodName () {
        return (EAttribute) entryBaseEClass.getEStructuralFeatures ().get (5);
    }

    public EClass getToolEntry () {
        return toolEntryEClass;
    }

    public EAttribute getToolEntry_Default () {
        return (EAttribute) toolEntryEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getNodeEntry () {
        return nodeEntryEClass;
    }

    public EReference getNodeEntry_GenNode () {
        return (EReference) nodeEntryEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getNodeEntry_Group () {
        return (EReference) nodeEntryEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getLinkEntry () {
        return linkEntryEClass;
    }

    public EReference getLinkEntry_GenLink () {
        return (EReference) linkEntryEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getLinkEntry_Group () {
        return (EReference) linkEntryEClass.getEStructuralFeatures ().get (1);
    }

    public EClass getToolGroup () {
        return toolGroupEClass;
    }

    public EReference getToolGroup_NodeTools () {
        return (EReference) toolGroupEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getToolGroup_LinkTools () {
        return (EReference) toolGroupEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getToolGroup_Palette () {
        return (EReference) toolGroupEClass.getEStructuralFeatures ().get (2);
    }

    public EClass getGenElementInitializer () {
        return genElementInitializerEClass;
    }

    public EReference getGenElementInitializer_TypeModelFacet () {
        return (EReference) genElementInitializerEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenFeatureSeqInitializer () {
        return genFeatureSeqInitializerEClass;
    }

    public EReference getGenFeatureSeqInitializer_Initializers () {
        return (EReference) genFeatureSeqInitializerEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenFeatureValueSpec () {
        return genFeatureValueSpecEClass;
    }

    public EReference getGenFeatureValueSpec_Feature () {
        return (EReference) genFeatureValueSpecEClass.getEStructuralFeatures ().get (0);
    }

    public EClass getGenLinkConstraints () {
        return genLinkConstraintsEClass;
    }

    public EReference getGenLinkConstraints_Link () {
        return (EReference) genLinkConstraintsEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getGenLinkConstraints_SourceEnd () {
        return (EReference) genLinkConstraintsEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getGenLinkConstraints_TargetEnd () {
        return (EReference) genLinkConstraintsEClass.getEStructuralFeatures ().get (2);
    }

    public EClass getGenAuditContainer () {
        return genAuditContainerEClass;
    }

    public EReference getGenAuditContainer_Audits () {
        return (EReference) genAuditContainerEClass.getEStructuralFeatures ().get (4);
    }

    public EReference getGenAuditContainer_ChildContainers () {
        return (EReference) genAuditContainerEClass.getEStructuralFeatures ().get (5);
    }

    public EAttribute getGenAuditContainer_Id () {
        return (EAttribute) genAuditContainerEClass.getEStructuralFeatures ().get (0);
    }

    public EAttribute getGenAuditContainer_Name () {
        return (EAttribute) genAuditContainerEClass.getEStructuralFeatures ().get (1);
    }

    public EAttribute getGenAuditContainer_Description () {
        return (EAttribute) genAuditContainerEClass.getEStructuralFeatures ().get (2);
    }

    public EReference getGenAuditContainer_ParentContainer () {
        return (EReference) genAuditContainerEClass.getEStructuralFeatures ().get (3);
    }

    public EClass getGenAuditRule () {
        return genAuditRuleEClass;
    }

    public EAttribute getGenAuditRule_Id () {
        return (EAttribute) genAuditRuleEClass.getEStructuralFeatures ().get (0);
    }

    public EReference getGenAuditRule_Rule () {
        return (EReference) genAuditRuleEClass.getEStructuralFeatures ().get (1);
    }

    public EReference getGenAuditRule_Target () {
        return (EReference) genAuditRuleEClass.getEStructuralFeatures ().get (2);
    }

    public EAttribute getGenAuditRule_Name () {
        return (EAttribute) genAuditRuleEClass.getEStructuralFeatures ().get (3);
    }

    public EAttribute getGenAuditRule_Message () {
        return (EAttribute) genAuditRuleEClass.getEStructuralFeatures ().get (4);
    }

    public EAttribute getGenAuditRule_Description () {
        return (EAttribute) genAuditRuleEClass.getEStructuralFeatures ().get (5);
    }

    public EAttribute getGenAuditRule_Severity () {
        return (EAttribute) genAuditRuleEClass.getEStructuralFeatures ().get (6);
    }

    public EAttribute getGenAuditRule_UseInLiveMode () {
        return (EAttribute) genAuditRuleEClass.getEStructuralFeatures ().get (7);
    }

    public EReference getGenAuditRule_Container () {
        return (EReference) genAuditRuleEClass.getEStructuralFeatures ().get (8);
    }

    public EEnum getLinkLabelAlignment () {
        return linkLabelAlignmentEEnum;
    }

    public EEnum getGenSeverity () {
        return genSeverityEEnum;
    }

    public GMFGenFactory getGMFGenFactory () {
        return (GMFGenFactory) getEFactoryInstance ();
    }

    private boolean isCreated = false;

    public void createPackageContents () {
        if (isCreated) return;

        isCreated = true;
        genDiagramEClass = createEClass (GEN_DIAGRAM);
        createEReference (genDiagramEClass, GEN_DIAGRAM__DOMAIN_META_MODEL);
        createEReference (genDiagramEClass, GEN_DIAGRAM__DOMAIN_DIAGRAM_ELEMENT);
        createEReference (genDiagramEClass, GEN_DIAGRAM__CHILD_NODES);
        createEReference (genDiagramEClass, GEN_DIAGRAM__TOP_LEVEL_NODES);
        createEReference (genDiagramEClass, GEN_DIAGRAM__LINKS);
        createEReference (genDiagramEClass, GEN_DIAGRAM__COMPARTMENTS);
        createEReference (genDiagramEClass, GEN_DIAGRAM__AUDITS);
        createEReference (genDiagramEClass, GEN_DIAGRAM__PALETTE);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDIT_COMMANDS_PACKAGE_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDIT_PARTS_PACKAGE_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDIT_POLICIES_PACKAGE_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDITOR_PACKAGE_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PROVIDERS_PACKAGE_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__NOTATION_VIEW_FACTORIES_PACKAGE_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PLUGIN_ID);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PLUGIN_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PROVIDER_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__SAME_FILE_FOR_DIAGRAM_AND_MODEL);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PRINTING_ENABLED);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__DIAGRAM_FILE_EXTENSION);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__REORIENT_CONNECTION_VIEW_COMMAND_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDIT_PART_FACTORY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__BASE_EXTERNAL_NODE_LABEL_EDIT_PART_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__BASE_ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__BASE_GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__REFERENCE_CONNECTION_EDIT_POLICY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__CANONICAL_EDIT_POLICY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__ELEMENT_TYPES_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__SEMANTIC_HINTS_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__NOTATION_VIEW_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDIT_PART_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__METAMODEL_SUPPORT_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__MODELING_ASSISTANT_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PROPERTY_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__ICON_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__STRUCTURAL_FEATURE_PARSER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__ACTION_BAR_CONTRIBUTOR_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__CREATION_WIZARD_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__CREATION_WIZARD_PAGE_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__DIAGRAM_EDITOR_UTIL_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__DIAGRAM_FILE_CREATOR_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__DOCUMENT_PROVIDER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__EDITOR_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__INIT_DIAGRAM_FILE_ACTION_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__MATCHING_STRATEGY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PLUGIN_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__PREFERENCE_INITIALIZER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__VISUAL_ID_REGISTRY_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__CREATE_SHORTCUT_ACTION_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__ELEMENT_CHOOSER_CLASS_NAME);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__CONTAINS_SHORTCUTS_TO);
        createEAttribute (genDiagramEClass, GEN_DIAGRAM__SHORTCUTS_PROVIDED_FOR);
        genCommonBaseEClass = createEClass (GEN_COMMON_BASE);
        createEReference (genCommonBaseEClass, GEN_COMMON_BASE__DIAGRAM_RUN_TIME_CLASS);
        createEAttribute (genCommonBaseEClass, GEN_COMMON_BASE__VISUAL_ID);
        createEAttribute (genCommonBaseEClass, GEN_COMMON_BASE__EDIT_PART_CLASS_NAME);
        createEAttribute (genCommonBaseEClass, GEN_COMMON_BASE__ITEM_SEMANTIC_EDIT_POLICY_CLASS_NAME);
        createEAttribute (genCommonBaseEClass, GEN_COMMON_BASE__NOTATION_VIEW_FACTORY_CLASS_NAME);
        createEReference (genCommonBaseEClass, GEN_COMMON_BASE__VIEWMAP);
        genContainerEditPartEClass = createEClass (GEN_CONTAINER_EDIT_PART);
        createEReference (genContainerEditPartEClass, GEN_CONTAINER_EDIT_PART__CONTAINED_NODES);
        genChildContainerEClass = createEClass (GEN_CHILD_CONTAINER);
        createEReference (genChildContainerEClass, GEN_CHILD_CONTAINER__CHILD_NODES);
        createEAttribute (genChildContainerEClass, GEN_CHILD_CONTAINER__CANONICAL_EDIT_POLICY_CLASS_NAME);
        createEAttribute (genChildContainerEClass, GEN_CHILD_CONTAINER__LIST_LAYOUT);
        genNodeEClass = createEClass (GEN_NODE);
        createEReference (genNodeEClass, GEN_NODE__MODEL_FACET);
        createEReference (genNodeEClass, GEN_NODE__LABELS);
        createEReference (genNodeEClass, GEN_NODE__COMPARTMENTS);
        createEAttribute (genNodeEClass, GEN_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME);
        genTopLevelNodeEClass = createEClass (GEN_TOP_LEVEL_NODE);
        createEReference (genTopLevelNodeEClass, GEN_TOP_LEVEL_NODE__DIAGRAM);
        genChildNodeEClass = createEClass (GEN_CHILD_NODE);
        createEReference (genChildNodeEClass, GEN_CHILD_NODE__DIAGRAM);
        createEReference (genChildNodeEClass, GEN_CHILD_NODE__CONTAINERS);
        genCompartmentEClass = createEClass (GEN_COMPARTMENT);
        createEAttribute (genCompartmentEClass, GEN_COMPARTMENT__TITLE);
        createEAttribute (genCompartmentEClass, GEN_COMPARTMENT__CAN_COLLAPSE);
        createEAttribute (genCompartmentEClass, GEN_COMPARTMENT__HIDE_IF_EMPTY);
        createEAttribute (genCompartmentEClass, GEN_COMPARTMENT__NEEDS_TITLE);
        createEReference (genCompartmentEClass, GEN_COMPARTMENT__DIAGRAM);
        createEReference (genCompartmentEClass, GEN_COMPARTMENT__NODE);
        genLinkEClass = createEClass (GEN_LINK);
        createEReference (genLinkEClass, GEN_LINK__DIAGRAM);
        createEReference (genLinkEClass, GEN_LINK__MODEL_FACET);
        createEReference (genLinkEClass, GEN_LINK__LABELS);
        createEAttribute (genLinkEClass, GEN_LINK__OUTGOING_CREATION_ALLOWED);
        createEAttribute (genLinkEClass, GEN_LINK__INCOMING_CREATION_ALLOWED);
        createEAttribute (genLinkEClass, GEN_LINK__VIEW_DIRECTION_ALIGNED_WITH_MODEL);
        createEReference (genLinkEClass, GEN_LINK__CREATION_CONSTRAINTS);
        genLabelEClass = createEClass (GEN_LABEL);
        createEAttribute (genLabelEClass, GEN_LABEL__READ_ONLY);
        createEReference (genLabelEClass, GEN_LABEL__MODEL_FACET);
        externalLabelEClass = createEClass (EXTERNAL_LABEL);
        createEAttribute (externalLabelEClass, EXTERNAL_LABEL__TEXT_EDIT_PART_CLASS_NAME);
        createEAttribute (externalLabelEClass, EXTERNAL_LABEL__TEXT_NOTATION_VIEW_FACTORY_CLASS_NAME);
        genNodeLabelEClass = createEClass (GEN_NODE_LABEL);
        createEReference (genNodeLabelEClass, GEN_NODE_LABEL__NODE);
        genExternalNodeLabelEClass = createEClass (GEN_EXTERNAL_NODE_LABEL);
        genLinkLabelEClass = createEClass (GEN_LINK_LABEL);
        createEReference (genLinkLabelEClass, GEN_LINK_LABEL__LINK);
        createEAttribute (genLinkLabelEClass, GEN_LINK_LABEL__ALIGNMENT);
        modelFacetEClass = createEClass (MODEL_FACET);
        linkModelFacetEClass = createEClass (LINK_MODEL_FACET);
        typeModelFacetEClass = createEClass (TYPE_MODEL_FACET);
        createEReference (typeModelFacetEClass, TYPE_MODEL_FACET__META_CLASS);
        createEReference (typeModelFacetEClass, TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE);
        createEReference (typeModelFacetEClass, TYPE_MODEL_FACET__CHILD_META_FEATURE);
        createEReference (typeModelFacetEClass, TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR);
        createEReference (typeModelFacetEClass, TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER);
        featureModelFacetEClass = createEClass (FEATURE_MODEL_FACET);
        createEReference (featureModelFacetEClass, FEATURE_MODEL_FACET__META_FEATURE);
        typeLinkModelFacetEClass = createEClass (TYPE_LINK_MODEL_FACET);
        createEReference (typeLinkModelFacetEClass, TYPE_LINK_MODEL_FACET__SOURCE_META_FEATURE);
        createEReference (typeLinkModelFacetEClass, TYPE_LINK_MODEL_FACET__TARGET_META_FEATURE);
        attributesEClass = createEClass (ATTRIBUTES);
        colorAttributesEClass = createEClass (COLOR_ATTRIBUTES);
        createEAttribute (colorAttributesEClass, COLOR_ATTRIBUTES__FOREGROUND_COLOR);
        createEAttribute (colorAttributesEClass, COLOR_ATTRIBUTES__BACKGROUND_COLOR);
        shapeAttributesEClass = createEClass (SHAPE_ATTRIBUTES);
        createEAttribute (shapeAttributesEClass, SHAPE_ATTRIBUTES__LINE_WIDTH);
        createEAttribute (shapeAttributesEClass, SHAPE_ATTRIBUTES__LINE_STYLE);
        defaultSizeAttributesEClass = createEClass (DEFAULT_SIZE_ATTRIBUTES);
        createEAttribute (defaultSizeAttributesEClass, DEFAULT_SIZE_ATTRIBUTES__WIDTH);
        createEAttribute (defaultSizeAttributesEClass, DEFAULT_SIZE_ATTRIBUTES__HEIGHT);
        viewmapEClass = createEClass (VIEWMAP);
        createEReference (viewmapEClass, VIEWMAP__ATTRIBUTES);
        figureViewmapEClass = createEClass (FIGURE_VIEWMAP);
        createEAttribute (figureViewmapEClass, FIGURE_VIEWMAP__FIGURE_QUALIFIED_CLASS_NAME);
        snippetViewmapEClass = createEClass (SNIPPET_VIEWMAP);
        createEAttribute (snippetViewmapEClass, SNIPPET_VIEWMAP__BODY);
        innerClassViewmapEClass = createEClass (INNER_CLASS_VIEWMAP);
        createEAttribute (innerClassViewmapEClass, INNER_CLASS_VIEWMAP__CLASS_NAME);
        createEAttribute (innerClassViewmapEClass, INNER_CLASS_VIEWMAP__CLASS_BODY);
        valueExpressionEClass = createEClass (VALUE_EXPRESSION);
        createEAttribute (valueExpressionEClass, VALUE_EXPRESSION__BODY);
        createEAttribute (valueExpressionEClass, VALUE_EXPRESSION__LANGUAGE);
        modelElementSelectorEClass = createEClass (MODEL_ELEMENT_SELECTOR);
        paletteEClass = createEClass (PALETTE);
        createEReference (paletteEClass, PALETTE__DIAGRAM);
        createEReference (paletteEClass, PALETTE__GROUPS);
        createEAttribute (paletteEClass, PALETTE__FLYOUT);
        createEAttribute (paletteEClass, PALETTE__NEED_ZOOM_TOOLS);
        createEAttribute (paletteEClass, PALETTE__PACKAGE_NAME);
        createEAttribute (paletteEClass, PALETTE__FACTORY_CLASS_NAME);
        entryBaseEClass = createEClass (ENTRY_BASE);
        createEAttribute (entryBaseEClass, ENTRY_BASE__ORDER);
        createEAttribute (entryBaseEClass, ENTRY_BASE__TITLE_KEY);
        createEAttribute (entryBaseEClass, ENTRY_BASE__DESCRIPTION_KEY);
        createEAttribute (entryBaseEClass, ENTRY_BASE__LARGE_ICON_PATH);
        createEAttribute (entryBaseEClass, ENTRY_BASE__SMALL_ICON_PATH);
        createEAttribute (entryBaseEClass, ENTRY_BASE__CREATE_METHOD_NAME);
        toolEntryEClass = createEClass (TOOL_ENTRY);
        createEAttribute (toolEntryEClass, TOOL_ENTRY__DEFAULT);
        nodeEntryEClass = createEClass (NODE_ENTRY);
        createEReference (nodeEntryEClass, NODE_ENTRY__GEN_NODE);
        createEReference (nodeEntryEClass, NODE_ENTRY__GROUP);
        linkEntryEClass = createEClass (LINK_ENTRY);
        createEReference (linkEntryEClass, LINK_ENTRY__GEN_LINK);
        createEReference (linkEntryEClass, LINK_ENTRY__GROUP);
        toolGroupEClass = createEClass (TOOL_GROUP);
        createEReference (toolGroupEClass, TOOL_GROUP__NODE_TOOLS);
        createEReference (toolGroupEClass, TOOL_GROUP__LINK_TOOLS);
        createEReference (toolGroupEClass, TOOL_GROUP__PALETTE);
        genElementInitializerEClass = createEClass (GEN_ELEMENT_INITIALIZER);
        createEReference (genElementInitializerEClass, GEN_ELEMENT_INITIALIZER__TYPE_MODEL_FACET);
        genFeatureSeqInitializerEClass = createEClass (GEN_FEATURE_SEQ_INITIALIZER);
        createEReference (genFeatureSeqInitializerEClass, GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS);
        genFeatureValueSpecEClass = createEClass (GEN_FEATURE_VALUE_SPEC);
        createEReference (genFeatureValueSpecEClass, GEN_FEATURE_VALUE_SPEC__FEATURE);
        genLinkConstraintsEClass = createEClass (GEN_LINK_CONSTRAINTS);
        createEReference (genLinkConstraintsEClass, GEN_LINK_CONSTRAINTS__LINK);
        createEReference (genLinkConstraintsEClass, GEN_LINK_CONSTRAINTS__SOURCE_END);
        createEReference (genLinkConstraintsEClass, GEN_LINK_CONSTRAINTS__TARGET_END);
        genAuditContainerEClass = createEClass (GEN_AUDIT_CONTAINER);
        createEAttribute (genAuditContainerEClass, GEN_AUDIT_CONTAINER__ID);
        createEAttribute (genAuditContainerEClass, GEN_AUDIT_CONTAINER__NAME);
        createEAttribute (genAuditContainerEClass, GEN_AUDIT_CONTAINER__DESCRIPTION);
        createEReference (genAuditContainerEClass, GEN_AUDIT_CONTAINER__PARENT_CONTAINER);
        createEReference (genAuditContainerEClass, GEN_AUDIT_CONTAINER__AUDITS);
        createEReference (genAuditContainerEClass, GEN_AUDIT_CONTAINER__CHILD_CONTAINERS);
        genAuditRuleEClass = createEClass (GEN_AUDIT_RULE);
        createEAttribute (genAuditRuleEClass, GEN_AUDIT_RULE__ID);
        createEReference (genAuditRuleEClass, GEN_AUDIT_RULE__RULE);
        createEReference (genAuditRuleEClass, GEN_AUDIT_RULE__TARGET);
        createEAttribute (genAuditRuleEClass, GEN_AUDIT_RULE__NAME);
        createEAttribute (genAuditRuleEClass, GEN_AUDIT_RULE__MESSAGE);
        createEAttribute (genAuditRuleEClass, GEN_AUDIT_RULE__DESCRIPTION);
        createEAttribute (genAuditRuleEClass, GEN_AUDIT_RULE__SEVERITY);
        createEAttribute (genAuditRuleEClass, GEN_AUDIT_RULE__USE_IN_LIVE_MODE);
        createEReference (genAuditRuleEClass, GEN_AUDIT_RULE__CONTAINER);
        linkLabelAlignmentEEnum = createEEnum (LINK_LABEL_ALIGNMENT);
        genSeverityEEnum = createEEnum (GEN_SEVERITY);
    }

    private boolean isInitialized = false;

    public void initializePackageContents () {
        if (isInitialized) return;

        isInitialized = true;
        setName (eNAME);
        setNsPrefix (eNS_PREFIX);
        setNsURI (eNS_URI);
        GenModelPackage theGenModelPackage = (GenModelPackage) EPackage.Registry.INSTANCE.getEPackage (GenModelPackage.eNS_URI);
        genDiagramEClass.getESuperTypes ().add (this.getGenContainerEditPart ());
        genContainerEditPartEClass.getESuperTypes ().add (this.getGenCommonBase ());
        genChildContainerEClass.getESuperTypes ().add (this.getGenContainerEditPart ());
        genNodeEClass.getESuperTypes ().add (this.getGenChildContainer ());
        genTopLevelNodeEClass.getESuperTypes ().add (this.getGenNode ());
        genChildNodeEClass.getESuperTypes ().add (this.getGenNode ());
        genCompartmentEClass.getESuperTypes ().add (this.getGenChildContainer ());
        genLinkEClass.getESuperTypes ().add (this.getGenCommonBase ());
        genLabelEClass.getESuperTypes ().add (this.getGenCommonBase ());
        genNodeLabelEClass.getESuperTypes ().add (this.getGenLabel ());
        genExternalNodeLabelEClass.getESuperTypes ().add (this.getGenNodeLabel ());
        genExternalNodeLabelEClass.getESuperTypes ().add (this.getExternalLabel ());
        genLinkLabelEClass.getESuperTypes ().add (this.getGenLabel ());
        genLinkLabelEClass.getESuperTypes ().add (this.getExternalLabel ());
        linkModelFacetEClass.getESuperTypes ().add (this.getModelFacet ());
        typeModelFacetEClass.getESuperTypes ().add (this.getModelFacet ());
        featureModelFacetEClass.getESuperTypes ().add (this.getModelFacet ());
        featureModelFacetEClass.getESuperTypes ().add (this.getLinkModelFacet ());
        typeLinkModelFacetEClass.getESuperTypes ().add (this.getTypeModelFacet ());
        typeLinkModelFacetEClass.getESuperTypes ().add (this.getLinkModelFacet ());
        colorAttributesEClass.getESuperTypes ().add (this.getAttributes ());
        shapeAttributesEClass.getESuperTypes ().add (this.getAttributes ());
        defaultSizeAttributesEClass.getESuperTypes ().add (this.getAttributes ());
        figureViewmapEClass.getESuperTypes ().add (this.getViewmap ());
        snippetViewmapEClass.getESuperTypes ().add (this.getViewmap ());
        innerClassViewmapEClass.getESuperTypes ().add (this.getViewmap ());
        modelElementSelectorEClass.getESuperTypes ().add (this.getValueExpression ());
        toolEntryEClass.getESuperTypes ().add (this.getEntryBase ());
        nodeEntryEClass.getESuperTypes ().add (this.getToolEntry ());
        linkEntryEClass.getESuperTypes ().add (this.getToolEntry ());
        toolGroupEClass.getESuperTypes ().add (this.getEntryBase ());
        genFeatureSeqInitializerEClass.getESuperTypes ().add (this.getGenElementInitializer ());
        genFeatureValueSpecEClass.getESuperTypes ().add (this.getValueExpression ());
        initEClass (genDiagramEClass, GenDiagram.class, "GenDiagram", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenDiagram_DomainMetaModel (), theGenModelPackage.getGenPackage (), null, "domainMetaModel", null, 1, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_DomainDiagramElement (), theGenModelPackage.getGenClass (), null, "domainDiagramElement", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_ChildNodes (), this.getGenChildNode (), this.getGenChildNode_Diagram (), "childNodes", null, 0, - 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_TopLevelNodes (), this.getGenTopLevelNode (), this.getGenTopLevelNode_Diagram (), "topLevelNodes", null, 0, - 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_Links (), this.getGenLink (), this.getGenLink_Diagram (), "links", null, 0, - 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_Compartments (), this.getGenCompartment (), this.getGenCompartment_Diagram (), "compartments", null, 0, - 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_Audits (), this.getGenAuditContainer (), null, "audits", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenDiagram_Palette (), this.getPalette (), this.getPalette_Diagram (), "palette", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditCommandsPackageName (), ecorePackage.getEString (), "editCommandsPackageName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditPartsPackageName (), ecorePackage.getEString (), "editPartsPackageName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditPoliciesPackageName (), ecorePackage.getEString (), "editPoliciesPackageName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditorPackageName (), ecorePackage.getEString (), "editorPackageName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ProvidersPackageName (), ecorePackage.getEString (), "providersPackageName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_NotationViewFactoriesPackageName (), ecorePackage.getEString (), "notationViewFactoriesPackageName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_PluginID (), ecorePackage.getEString (), "pluginID", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_PluginName (), ecorePackage.getEString (), "pluginName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ProviderName (), ecorePackage.getEString (), "providerName", "Sample Plugin Provider, Inc", 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_SameFileForDiagramAndModel (), ecorePackage.getEBoolean (), "sameFileForDiagramAndModel", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_PrintingEnabled (), ecorePackage.getEBoolean (), "printingEnabled", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_DiagramFileExtension (), ecorePackage.getEString (), "diagramFileExtension", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ReorientConnectionViewCommandClassName (), ecorePackage.getEString (), "reorientConnectionViewCommandClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditPartFactoryClassName (), ecorePackage.getEString (), "editPartFactoryClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_BaseExternalNodeLabelEditPartClassName (), ecorePackage.getEString (), "baseExternalNodeLabelEditPartClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_BaseItemSemanticEditPolicyClassName (), ecorePackage.getEString (), "baseItemSemanticEditPolicyClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_BaseGraphicalNodeEditPolicyClassName (), ecorePackage.getEString (), "baseGraphicalNodeEditPolicyClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ReferenceConnectionEditPolicyClassName (), ecorePackage.getEString (), "referenceConnectionEditPolicyClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_CanonicalEditPolicyClassName (), ecorePackage.getEString (), "canonicalEditPolicyClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ElementTypesClassName (), ecorePackage.getEString (), "elementTypesClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_SemanticHintsClassName (), ecorePackage.getEString (), "semanticHintsClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_NotationViewProviderClassName (), ecorePackage.getEString (), "notationViewProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditPartProviderClassName (), ecorePackage.getEString (), "editPartProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_MetamodelSupportProviderClassName (), ecorePackage.getEString (), "metamodelSupportProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ModelingAssistantProviderClassName (), ecorePackage.getEString (), "modelingAssistantProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_PropertyProviderClassName (), ecorePackage.getEString (), "propertyProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_IconProviderClassName (), ecorePackage.getEString (), "iconProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_StructuralFeatureParserClassName (), ecorePackage.getEString (), "structuralFeatureParserClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ActionBarContributorClassName (), ecorePackage.getEString (), "actionBarContributorClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_CreationWizardClassName (), ecorePackage.getEString (), "creationWizardClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_CreationWizardPageClassName (), ecorePackage.getEString (), "creationWizardPageClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_DiagramEditorUtilClassName (), ecorePackage.getEString (), "diagramEditorUtilClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_DiagramFileCreatorClassName (), ecorePackage.getEString (), "diagramFileCreatorClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_DocumentProviderClassName (), ecorePackage.getEString (), "documentProviderClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_EditorClassName (), ecorePackage.getEString (), "editorClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_InitDiagramFileActionClassName (), ecorePackage.getEString (), "initDiagramFileActionClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_MatchingStrategyClassName (), ecorePackage.getEString (), "matchingStrategyClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_PluginClassName (), ecorePackage.getEString (), "pluginClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_PreferenceInitializerClassName (), ecorePackage.getEString (), "preferenceInitializerClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_VisualIDRegistryClassName (), ecorePackage.getEString (), "visualIDRegistryClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_CreateShortcutActionClassName (), ecorePackage.getEString (), "createShortcutActionClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ElementChooserClassName (), ecorePackage.getEString (), "elementChooserClassName", null, 0, 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ContainsShortcutsTo (), ecorePackage.getEString (), "containsShortcutsTo", null, 0, - 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenDiagram_ShortcutsProvidedFor (), ecorePackage.getEString (), "shortcutsProvidedFor", null, 0, - 1, GenDiagram.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genDiagramEClass, theGenModelPackage.getGenModel (), "getEMFGenModel", 0, 1);
        addEOperation (genDiagramEClass, this.getGenContainerEditPart (), "getAllContainers", 0, - 1);
        addEOperation (genDiagramEClass, this.getGenNode (), "getAllNodes", 0, - 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getRequiredPluginIDs", 0, - 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getElementInitializersClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getElementInitializersPackageName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getReorientConnectionViewCommandQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getEditPartFactoryQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getBaseExternalNodeLabelEditPartQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getBaseItemSemanticEditPolicyQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getBaseGraphicalNodeEditPolicyQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getReferenceConnectionEditPolicyQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getCanonicalEditPolicyQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEBoolean (), "hasLinkCreationConstraints", 1, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getLinkCreationConstraintsClassName", 1, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getLinkCreationConstraintsQualifiedClassName", 1, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getElementTypesQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getSemanticHintsQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getNotationViewProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getEditPartProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getMetamodelSupportProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getModelingAssistantProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getPropertyProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getIconProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getStructuralFeatureParserQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getActionBarContributorQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getCreationWizardQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getCreationWizardPageQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getDiagramEditorUtilQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getDiagramFileCreatorQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getDocumentProviderQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getEditorQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getInitDiagramFileActionQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getMatchingStrategyQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getPluginQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getPreferenceInitializerQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getVisualIDRegistryQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getCreateShortcutActionQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEString (), "getElementChooserQualifiedClassName", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEBoolean (), "generateCreateShortcutAction", 0, 1);
        addEOperation (genDiagramEClass, ecorePackage.getEBoolean (), "generateShortcutIcon", 0, 1);
        initEClass (genCommonBaseEClass, GenCommonBase.class, "GenCommonBase", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenCommonBase_DiagramRunTimeClass (), theGenModelPackage.getGenClass (), null, "diagramRunTimeClass", null, 1, 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCommonBase_VisualID (), ecorePackage.getEInt (), "visualID", null, 1, 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCommonBase_EditPartClassName (), ecorePackage.getEString (), "editPartClassName", null, 0, 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCommonBase_ItemSemanticEditPolicyClassName (), ecorePackage.getEString (), "itemSemanticEditPolicyClassName", null, 0, 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCommonBase_NotationViewFactoryClassName (), ecorePackage.getEString (), "notationViewFactoryClassName", null, 0, 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenCommonBase_Viewmap (), this.getViewmap (), null, "viewmap", null, 1, 1, GenCommonBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genCommonBaseEClass, ecorePackage.getEString (), "getEditPartQualifiedClassName", 0, 1);
        addEOperation (genCommonBaseEClass, ecorePackage.getEString (), "getItemSemanticEditPolicyQualifiedClassName", 0, 1);
        addEOperation (genCommonBaseEClass, ecorePackage.getEString (), "getNotationViewFactoryQualifiedClassName", 0, 1);
        addEOperation (genCommonBaseEClass, this.getGenDiagram (), "getDiagram", 0, 1);
        addEOperation (genCommonBaseEClass, ecorePackage.getEString (), "getClassNamePrefix", 0, 1);
        addEOperation (genCommonBaseEClass, ecorePackage.getEString (), "getClassNameSuffux", 0, 1);
        addEOperation (genCommonBaseEClass, ecorePackage.getEString (), "getUniqueIdentifier", 0, 1);
        initEClass (genContainerEditPartEClass, GenContainerEditPart.class, "GenContainerEditPart", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenContainerEditPart_ContainedNodes (), this.getGenNode (), null, "containedNodes", null, 0, - 1, GenContainerEditPart.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
        initEClass (genChildContainerEClass, GenChildContainer.class, "GenChildContainer", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenChildContainer_ChildNodes (), this.getGenChildNode (), this.getGenChildNode_Containers (), "childNodes", null, 0, - 1, GenChildContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenChildContainer_CanonicalEditPolicyClassName (), ecorePackage.getEString (), "canonicalEditPolicyClassName", null, 0, 1, GenChildContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenChildContainer_ListLayout (), ecorePackage.getEBoolean (), "listLayout", "true", 0, 1, GenChildContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genChildContainerEClass, ecorePackage.getEString (), "getCanonicalEditPolicyQualifiedClassName", 0, 1);
        initEClass (genNodeEClass, GenNode.class, "GenNode", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenNode_ModelFacet (), this.getTypeModelFacet (), null, "modelFacet", null, 1, 1, GenNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenNode_Labels (), this.getGenNodeLabel (), this.getGenNodeLabel_Node (), "labels", null, 0, - 1, GenNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenNode_Compartments (), this.getGenCompartment (), this.getGenCompartment_Node (), "compartments", null, 0, - 1, GenNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenNode_GraphicalNodeEditPolicyClassName (), ecorePackage.getEString (), "graphicalNodeEditPolicyClassName", null, 0, 1, GenNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genNodeEClass, theGenModelPackage.getGenClass (), "getDomainMetaClass", 1, 1);
        addEOperation (genNodeEClass, ecorePackage.getEString (), "getGraphicalNodeEditPolicyQualifiedClassName", 0, 1);
        addEOperation (genNodeEClass, ecorePackage.getEBoolean (), "isListContainerEntry", 0, 1);
        initEClass (genTopLevelNodeEClass, GenTopLevelNode.class, "GenTopLevelNode", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenTopLevelNode_Diagram (), this.getGenDiagram (), this.getGenDiagram_TopLevelNodes (), "diagram", null, 1, 1, GenTopLevelNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (genChildNodeEClass, GenChildNode.class, "GenChildNode", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenChildNode_Diagram (), this.getGenDiagram (), this.getGenDiagram_ChildNodes (), "diagram", null, 1, 1, GenChildNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenChildNode_Containers (), this.getGenChildContainer (), this.getGenChildContainer_ChildNodes (), "containers", null, 0, - 1, GenChildNode.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (genCompartmentEClass, GenCompartment.class, "GenCompartment", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getGenCompartment_Title (), ecorePackage.getEString (), "title", null, 0, 1, GenCompartment.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCompartment_CanCollapse (), ecorePackage.getEBoolean (), "canCollapse", "true", 0, 1, GenCompartment.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCompartment_HideIfEmpty (), ecorePackage.getEBoolean (), "hideIfEmpty", "true", 0, 1, GenCompartment.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenCompartment_NeedsTitle (), ecorePackage.getEBoolean (), "needsTitle", "true", 0, 1, GenCompartment.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenCompartment_Diagram (), this.getGenDiagram (), this.getGenDiagram_Compartments (), "diagram", null, 1, 1, GenCompartment.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenCompartment_Node (), this.getGenNode (), this.getGenNode_Compartments (), "node", null, 1, 1, GenCompartment.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genCompartmentEClass, ecorePackage.getEString (), "getSemanticHintFieldName", 0, 1);
        initEClass (genLinkEClass, GenLink.class, "GenLink", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenLink_Diagram (), this.getGenDiagram (), this.getGenDiagram_Links (), "diagram", null, 1, 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenLink_ModelFacet (), this.getLinkModelFacet (), null, "modelFacet", null, 1, 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenLink_Labels (), this.getGenLinkLabel (), this.getGenLinkLabel_Link (), "labels", null, 0, - 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenLink_OutgoingCreationAllowed (), ecorePackage.getEBoolean (), "outgoingCreationAllowed", "true", 0, 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenLink_IncomingCreationAllowed (), ecorePackage.getEBoolean (), "incomingCreationAllowed", "false", 0, 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenLink_ViewDirectionAlignedWithModel (), ecorePackage.getEBoolean (), "viewDirectionAlignedWithModel", "true", 0, 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenLink_CreationConstraints (), this.getGenLinkConstraints (), this.getGenLinkConstraints_Link (), "creationConstraints", null, 0, 1, GenLink.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (genLabelEClass, GenLabel.class, "GenLabel", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getGenLabel_ReadOnly (), ecorePackage.getEBoolean (), "readOnly", null, 0, 1, GenLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenLabel_ModelFacet (), this.getFeatureModelFacet (), null, "modelFacet", null, 1, 1, GenLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genLabelEClass, theGenModelPackage.getGenFeature (), "getMetaFeature", 0, 1);
        addEOperation (genLabelEClass, ecorePackage.getEString (), "getSemanticHintFieldName", 0, 1);
        initEClass (externalLabelEClass, ExternalLabel.class, "ExternalLabel", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getExternalLabel_TextEditPartClassName (), ecorePackage.getEString (), "textEditPartClassName", null, 0, 1, ExternalLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getExternalLabel_TextNotationViewFactoryClassName (), ecorePackage.getEString (), "textNotationViewFactoryClassName", null, 0, 1, ExternalLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (externalLabelEClass, ecorePackage.getEString (), "getTextEditPartQualifiedClassName", 0, 1);
        addEOperation (externalLabelEClass, ecorePackage.getEString (), "getTextNotationViewFactoryQualifiedClassName", 0, 1);
        addEOperation (externalLabelEClass, ecorePackage.getEString (), "getSemanticHintLabelFieldName", 0, 1);
        initEClass (genNodeLabelEClass, GenNodeLabel.class, "GenNodeLabel", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenNodeLabel_Node (), this.getGenNode (), this.getGenNode_Labels (), "node", null, 1, 1, GenNodeLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (genExternalNodeLabelEClass, GenExternalNodeLabel.class, "GenExternalNodeLabel", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEClass (genLinkLabelEClass, GenLinkLabel.class, "GenLinkLabel", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenLinkLabel_Link (), this.getGenLink (), this.getGenLink_Labels (), "link", null, 1, 1, GenLinkLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenLinkLabel_Alignment (), this.getLinkLabelAlignment (), "alignment", "MIDDLE", 0, 1, GenLinkLabel.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (modelFacetEClass, ModelFacet.class, "ModelFacet", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEClass (linkModelFacetEClass, LinkModelFacet.class, "LinkModelFacet", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEClass (typeModelFacetEClass, TypeModelFacet.class, "TypeModelFacet", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getTypeModelFacet_MetaClass (), theGenModelPackage.getGenClass (), null, "metaClass", null, 1, 1, TypeModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getTypeModelFacet_ContainmentMetaFeature (), theGenModelPackage.getGenFeature (), null, "containmentMetaFeature", null, 1, 1, TypeModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getTypeModelFacet_ChildMetaFeature (), theGenModelPackage.getGenFeature (), null, "childMetaFeature", null, 1, 1, TypeModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getTypeModelFacet_ModelElementSelector (), this.getModelElementSelector (), null, "modelElementSelector", null, 0, 1, TypeModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getTypeModelFacet_ModelElementInitializer (), this.getGenElementInitializer (), this.getGenElementInitializer_TypeModelFacet (), "modelElementInitializer", null, 0, 1, TypeModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (featureModelFacetEClass, FeatureModelFacet.class, "FeatureModelFacet", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getFeatureModelFacet_MetaFeature (), theGenModelPackage.getGenFeature (), null, "metaFeature", null, 1, 1, FeatureModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (typeLinkModelFacetEClass, TypeLinkModelFacet.class, "TypeLinkModelFacet", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getTypeLinkModelFacet_SourceMetaFeature (), theGenModelPackage.getGenFeature (), null, "sourceMetaFeature", null, 0, 1, TypeLinkModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getTypeLinkModelFacet_TargetMetaFeature (), theGenModelPackage.getGenFeature (), null, "targetMetaFeature", null, 1, 1, TypeLinkModelFacet.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (attributesEClass, Attributes.class, "Attributes", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEClass (colorAttributesEClass, ColorAttributes.class, "ColorAttributes", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getColorAttributes_ForegroundColor (), ecorePackage.getEString (), "foregroundColor", null, 0, 1, ColorAttributes.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getColorAttributes_BackgroundColor (), ecorePackage.getEString (), "backgroundColor", null, 0, 1, ColorAttributes.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (shapeAttributesEClass, ShapeAttributes.class, "ShapeAttributes", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getShapeAttributes_LineWidth (), ecorePackage.getEInt (), "lineWidth", null, 0, 1, ShapeAttributes.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getShapeAttributes_LineStyle (), ecorePackage.getEString (), "lineStyle", "LINE_SOLID", 0, 1, ShapeAttributes.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (defaultSizeAttributesEClass, DefaultSizeAttributes.class, "DefaultSizeAttributes", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getDefaultSizeAttributes_Width (), ecorePackage.getEInt (), "width", "40", 0, 1, DefaultSizeAttributes.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getDefaultSizeAttributes_Height (), ecorePackage.getEInt (), "height", "30", 0, 1, DefaultSizeAttributes.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (viewmapEClass, Viewmap.class, "Viewmap", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getViewmap_Attributes (), this.getAttributes (), null, "attributes", null, 0, - 1, Viewmap.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        EOperation op = addEOperation (viewmapEClass, this.getAttributes (), "find", 0, 1);
        addEParameter (op, ecorePackage.getEJavaClass (), "attributesClass", 0, 1);
        initEClass (figureViewmapEClass, FigureViewmap.class, "FigureViewmap", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getFigureViewmap_FigureQualifiedClassName (), ecorePackage.getEString (), "figureQualifiedClassName", null, 1, 1, FigureViewmap.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (snippetViewmapEClass, SnippetViewmap.class, "SnippetViewmap", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getSnippetViewmap_Body (), ecorePackage.getEString (), "body", null, 0, 1, SnippetViewmap.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (innerClassViewmapEClass, InnerClassViewmap.class, "InnerClassViewmap", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getInnerClassViewmap_ClassName (), ecorePackage.getEString (), "className", null, 0, 1, InnerClassViewmap.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getInnerClassViewmap_ClassBody (), ecorePackage.getEString (), "classBody", null, 0, 1, InnerClassViewmap.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (valueExpressionEClass, ValueExpression.class, "ValueExpression", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getValueExpression_Body (), ecorePackage.getEString (), "body", null, 1, 1, ValueExpression.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getValueExpression_Language (), ecorePackage.getEString (), "language", "ocl", 0, 1, ValueExpression.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (modelElementSelectorEClass, ModelElementSelector.class, "ModelElementSelector", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        addEOperation (modelElementSelectorEClass, ecorePackage.getEString (), "getRequiredPluginIDs", 0, - 1);
        initEClass (paletteEClass, Palette.class, "Palette", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getPalette_Diagram (), this.getGenDiagram (), this.getGenDiagram_Palette (), "diagram", null, 1, 1, Palette.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getPalette_Groups (), this.getToolGroup (), this.getToolGroup_Palette (), "groups", null, 1, - 1, Palette.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getPalette_Flyout (), ecorePackage.getEBoolean (), "flyout", null, 0, 1, Palette.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getPalette_NeedZoomTools (), ecorePackage.getEBoolean (), "needZoomTools", null, 0, 1, Palette.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getPalette_PackageName (), ecorePackage.getEString (), "packageName", null, 0, 1, Palette.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getPalette_FactoryClassName (), ecorePackage.getEString (), "factoryClassName", null, 0, 1, Palette.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (paletteEClass, ecorePackage.getEString (), "getFactoryQualifiedClassName", 0, 1);
        initEClass (entryBaseEClass, EntryBase.class, "EntryBase", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getEntryBase_Order (), ecorePackage.getEInt (), "order", null, 0, 1, EntryBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getEntryBase_TitleKey (), ecorePackage.getEString (), "titleKey", null, 0, 1, EntryBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getEntryBase_DescriptionKey (), ecorePackage.getEString (), "descriptionKey", null, 0, 1, EntryBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getEntryBase_LargeIconPath (), ecorePackage.getEString (), "largeIconPath", null, 0, 1, EntryBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getEntryBase_SmallIconPath (), ecorePackage.getEString (), "smallIconPath", null, 0, 1, EntryBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getEntryBase_CreateMethodName (), ecorePackage.getEString (), "createMethodName", null, 0, 1, EntryBase.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (toolEntryEClass, ToolEntry.class, "ToolEntry", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getToolEntry_Default (), ecorePackage.getEBoolean (), "default", "false", 0, 1, ToolEntry.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (nodeEntryEClass, NodeEntry.class, "NodeEntry", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getNodeEntry_GenNode (), this.getGenNode (), null, "genNode", null, 1, - 1, NodeEntry.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getNodeEntry_Group (), this.getToolGroup (), this.getToolGroup_NodeTools (), "group", null, 0, 1, NodeEntry.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (linkEntryEClass, LinkEntry.class, "LinkEntry", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getLinkEntry_GenLink (), this.getGenLink (), null, "genLink", null, 1, - 1, LinkEntry.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getLinkEntry_Group (), this.getToolGroup (), this.getToolGroup_LinkTools (), "group", null, 0, 1, LinkEntry.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (toolGroupEClass, ToolGroup.class, "ToolGroup", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getToolGroup_NodeTools (), this.getNodeEntry (), this.getNodeEntry_Group (), "nodeTools", null, 0, - 1, ToolGroup.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getToolGroup_LinkTools (), this.getLinkEntry (), this.getLinkEntry_Group (), "linkTools", null, 0, - 1, ToolGroup.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getToolGroup_Palette (), this.getPalette (), this.getPalette_Groups (), "palette", null, 1, 1, ToolGroup.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEClass (genElementInitializerEClass, GenElementInitializer.class, "GenElementInitializer", IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenElementInitializer_TypeModelFacet (), this.getTypeModelFacet (), this.getTypeModelFacet_ModelElementInitializer (), "typeModelFacet", null, 1, 1, GenElementInitializer.class, ! IS_TRANSIENT, ! IS_VOLATILE, ! IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genElementInitializerEClass, ecorePackage.getEString (), "getRequiredPluginIDs", 0, - 1);
        initEClass (genFeatureSeqInitializerEClass, GenFeatureSeqInitializer.class, "GenFeatureSeqInitializer", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenFeatureSeqInitializer_Initializers (), this.getGenFeatureValueSpec (), null, "initializers", null, 1, - 1, GenFeatureSeqInitializer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genFeatureSeqInitializerEClass, ecorePackage.getEString (), "getElementClassAccessorName", 1, 1);
        addEOperation (genFeatureSeqInitializerEClass, ecorePackage.getEString (), "getElementQualifiedPackageInterfaceName", 1, 1);
        initEClass (genFeatureValueSpecEClass, GenFeatureValueSpec.class, "GenFeatureValueSpec", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenFeatureValueSpec_Feature (), theGenModelPackage.getGenFeature (), null, "feature", null, 1, 1, GenFeatureValueSpec.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genFeatureValueSpecEClass, ecorePackage.getEString (), "getFeatureQualifiedPackageInterfaceName", 1, 1);
        initEClass (genLinkConstraintsEClass, GenLinkConstraints.class, "GenLinkConstraints", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEReference (getGenLinkConstraints_Link (), this.getGenLink (), this.getGenLink_CreationConstraints (), "link", null, 1, 1, GenLinkConstraints.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenLinkConstraints_SourceEnd (), this.getValueExpression (), null, "sourceEnd", null, 0, 1, GenLinkConstraints.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenLinkConstraints_TargetEnd (), this.getValueExpression (), null, "targetEnd", null, 0, 1, GenLinkConstraints.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genLinkConstraintsEClass, theGenModelPackage.getGenClass (), "getLinkClass", 0, 1);
        addEOperation (genLinkConstraintsEClass, theGenModelPackage.getGenClass (), "getSourceEndContextClass", 0, 1);
        addEOperation (genLinkConstraintsEClass, theGenModelPackage.getGenClass (), "getTargetEndContextClass", 0, 1);
        addEOperation (genLinkConstraintsEClass, ecorePackage.getEString (), "getConstraintsInstanceFieldName", 1, 1);
        initEClass (genAuditContainerEClass, GenAuditContainer.class, "GenAuditContainer", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getGenAuditContainer_Id (), ecorePackage.getEString (), "id", null, 1, 1, GenAuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditContainer_Name (), ecorePackage.getEString (), "name", null, 0, 1, GenAuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditContainer_Description (), ecorePackage.getEString (), "description", null, 0, 1, GenAuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenAuditContainer_ParentContainer (), this.getGenAuditContainer (), this.getGenAuditContainer_ChildContainers (), "parentContainer", null, 0, 1, GenAuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenAuditContainer_Audits (), this.getGenAuditRule (), this.getGenAuditRule_Container (), "audits", null, 0, - 1, GenAuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenAuditContainer_ChildContainers (), this.getGenAuditContainer (), this.getGenAuditContainer_ParentContainer (), "childContainers", null, 0, - 1, GenAuditContainer.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        addEOperation (genAuditContainerEClass, this.getGenAuditRule (), "getAllAuditRules", 0, - 1);
        addEOperation (genAuditContainerEClass, this.getGenAuditContainer (), "getAllAuditContainers", 0, - 1);
        addEOperation (genAuditContainerEClass, this.getGenAuditContainer (), "getPath", 1, - 1);
        initEClass (genAuditRuleEClass, GenAuditRule.class, "GenAuditRule", ! IS_ABSTRACT, ! IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
        initEAttribute (getGenAuditRule_Id (), ecorePackage.getEString (), "id", null, 1, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenAuditRule_Rule (), this.getValueExpression (), null, "rule", null, 1, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenAuditRule_Target (), theGenModelPackage.getGenClass (), null, "target", null, 1, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditRule_Name (), ecorePackage.getEString (), "name", null, 0, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditRule_Message (), ecorePackage.getEString (), "message", null, 0, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditRule_Description (), ecorePackage.getEString (), "description", null, 0, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditRule_Severity (), this.getGenSeverity (), "severity", "ERROR", 0, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEAttribute (getGenAuditRule_UseInLiveMode (), ecorePackage.getEBoolean (), "useInLiveMode", "false", 0, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_UNSETTABLE, ! IS_ID, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEReference (getGenAuditRule_Container (), this.getGenAuditContainer (), this.getGenAuditContainer_Audits (), "container", null, 1, 1, GenAuditRule.class, ! IS_TRANSIENT, ! IS_VOLATILE, IS_CHANGEABLE, ! IS_COMPOSITE, ! IS_RESOLVE_PROXIES, ! IS_UNSETTABLE, IS_UNIQUE, ! IS_DERIVED, IS_ORDERED);
        initEEnum (linkLabelAlignmentEEnum, LinkLabelAlignment.class, "LinkLabelAlignment");
        addEEnumLiteral (linkLabelAlignmentEEnum, LinkLabelAlignment.MIDDLE_LITERAL);
        addEEnumLiteral (linkLabelAlignmentEEnum, LinkLabelAlignment.TARGET_LITERAL);
        addEEnumLiteral (linkLabelAlignmentEEnum, LinkLabelAlignment.SOURCE_LITERAL);
        initEEnum (genSeverityEEnum, GenSeverity.class, "GenSeverity");
        addEEnumLiteral (genSeverityEEnum, GenSeverity.INFO_LITERAL);
        addEEnumLiteral (genSeverityEEnum, GenSeverity.WARNING_LITERAL);
        addEEnumLiteral (genSeverityEEnum, GenSeverity.ERROR_LITERAL);
        createResource (eNS_URI);
        createEmfaticAnnotationMapAnnotations ();
        createConstraintsAnnotations ();
        createMetaAnnotations ();
    }

    protected void createEmfaticAnnotationMapAnnotations () {
        String source = "http://www.eclipse.org/emf/2004/EmfaticAnnotationMap";
        addAnnotation (this, source, new String [] {"constraints", "http://www.eclipse.org/gmf/2005/constraints", "meta", "http://www.eclipse.org/gmf/2005/constraints/meta", "deprecated", "http://www.eclipse.org/gmf/2006/deprecated"});
    }

    protected void createConstraintsAnnotations () {
        String source = "http://www.eclipse.org/gmf/2005/constraints";
        addAnnotation (this, source, new String [] {"import", "platform:/resource/org.eclipse.gmf.runtime.notation/model/notation.ecore"});
        addAnnotation (genDiagramEClass, source, new String [] {"ocl", "nodes->forAll(n : GenNode | self.links->forAll(l : GenLink | l.oclAsType(TypeLinkModelFacet).metaClass <> n.getDomainMetaClass()))"});
        addAnnotation (genNodeEClass, source, new String [] {"ocl", "let c: ecore::EClass = diagramRunTimeClass.ecoreClass.oclAsType(ecore::EClass) in c = notation::Node or c.eAllSuperTypes->includes(notation::Node)"});
        addAnnotation (genNodeEClass, source, new String [] {"ocl", "containers->forAll(n|n.listLayout) or containers->forAll(n|not n.listLayout)"});
        addAnnotation (genLinkEClass, source, new String [] {"ocl", "let c: ecore::EClass = diagramRunTimeClass.ecoreClass.oclAsType(ecore::EClass) in c = notation::Edge or c.eAllSuperTypes->includes(notation::Edge)"});
        addAnnotation (genNodeLabelEClass, source, new String [] {"ocl", "modelFacet.metaFeature.ecoreFeature.eContainingClass.isSuperTypeOf(node.getDomainMetaClass().ecoreClass)"});
        addAnnotation (genLinkLabelEClass, source, new String [] {"ocl", "let tl: TypeLinkModelFacet = link.modelFacet.oclAsType(TypeLinkModelFacet) in tl.oclIsUndefined() or modelFacet.metaFeature.ecoreFeature.eContainingClass.isSuperTypeOf(tl.metaClass.ecoreClass)"});
        addAnnotation (getTypeModelFacet_ContainmentMetaFeature (), source, new String [] {"ocl", "containmentMetaFeature.ecoreFeature.oclAsType(ecore::EReference).containment"});
        addAnnotation (getTypeModelFacet_ContainmentMetaFeature (), source, new String [] {"ocl", "containmentMetaFeature.ecoreFeature.oclAsType(ecore::EReference).eReferenceType.isSuperTypeOf(metaClass.ecoreClass)"});
        addAnnotation (getTypeLinkModelFacet_SourceMetaFeature (), source, new String [] {"ocl", "sourceMetaFeature.oclIsUndefined() or sourceMetaFeature.ecoreFeature.oclAsType(ecore::EReference).eReferenceType.isSuperTypeOf(metaClass.ecoreClass)"});
        addAnnotation (getTypeLinkModelFacet_TargetMetaFeature (), source, new String [] {"ocl", "targetMetaFeature.genClass.ecoreClass.isSuperTypeOf(metaClass.ecoreClass)"});
        addAnnotation (getGenFeatureSeqInitializer_Initializers (), source, new String [] {"ocl", "initializers.feature->forAll(f| f.ecoreFeature.eContainingClass.isSuperTypeOf(typeModelFacet.metaClass.ecoreClass))"});
        addAnnotation (genLinkConstraintsEClass, source, new String [] {"ocl", "not sourceEnd.oclIsUndefined() or not targetEnd.oclIsUndefined()"});
    }

    protected void createMetaAnnotations () {
        String source = "http://www.eclipse.org/gmf/2005/constraints/meta";
        addAnnotation (getTypeModelFacet_ModelElementSelector (), source, new String [] {"def", "context", "ocl", "metaClass.ecoreClass"});
        addAnnotation (valueExpressionEClass, source, new String [] {"def", "ValueSpec"});
        addAnnotation (getValueExpression_Body (), source, new String [] {"def", "body"});
        addAnnotation (getValueExpression_Language (), source, new String [] {"def", "lang"});
        addAnnotation (modelElementSelectorEClass, source, new String [] {"def", "Constraint"});
        addAnnotation (getGenFeatureSeqInitializer_Initializers (), source, new String [] {"def", "context", "ocl", "typeModelFacet.metaClass.ecoreClass"});
        addAnnotation (genFeatureValueSpecEClass, source, new String [] {"def", "ValueSpec"});
        addAnnotation (genFeatureValueSpecEClass, source, new String [] {"def", "type", "ocl", "feature.ecoreFeature"});
        addAnnotation (getGenLinkConstraints_SourceEnd (), source, new String [] {"def", "context", "ocl", "getSourceEndContextClass().ecoreClass"});
        addAnnotation (getGenLinkConstraints_SourceEnd (), source, new String [] {"def", "variable", "name", "oppositeEnd", "type.ocl", "getTargetEndContextClass().ecoreClass"});
        addAnnotation (getGenLinkConstraints_TargetEnd (), source, new String [] {"def", "context", "ocl", "getTargetEndContextClass().ecoreClass"});
        addAnnotation (getGenLinkConstraints_TargetEnd (), source, new String [] {"def", "variable", "name", "oppositeEnd", "type.ocl", "getSourceEndContextClass().ecoreClass"});
        addAnnotation (getGenAuditRule_Rule (), source, new String [] {"def", "context", "ocl", "target.ecoreClass"});
    }

}

