package org.eclipse.gmf.runtime.common.ui.services.properties.extended;

import org.eclipse.ui.views.properties.IPropertyDescriptor;

import org.eclipse.ui.views.properties.IPropertySource;

import org.eclipse.ui.views.properties.PropertyDescriptor;

import org.eclipse.gmf.runtime.common.ui.services.properties.internal.l10n.PSFResourceManager;

public class ExtendedPropertyDescriptor extends PropertyDescriptor implements IExtendedPropertyDescriptor {
    public static final String BLANK = PSFResourceManager.getI18NString ("ExtendedPropertyDescriptor.blank");
    private IPropertySource propertySource;
    private boolean dirty = false;
    private boolean readOnly = false;
    private String displayName;

    public ExtendedPropertyDescriptor (Object id, String displayName) {
        super (id, displayName);
        this.displayName = displayName;
    }

    public IPropertySource getPropertySource () {
        return propertySource;
    }

    public boolean isDirty () {
        return dirty;
    }

    public void setDirtyFlag (boolean dirty) {
        this.dirty = dirty;
    }

    public void setPropertySource (IPropertySource propertySource) {
        this.propertySource = propertySource;
    }

    public Object getBlank () {
        return BLANK;
    }

    public boolean isReadOnly () {
        return this.readOnly;
    }

    public void setReadOnly (boolean read) {
        this.readOnly = read;
    }

    public void setPropertyValue (Object value) {
    }

    public boolean isCompatibleWith (IPropertyDescriptor anotherProperty) {
        assert null != anotherProperty;
        if (! (anotherProperty instanceof ExtendedPropertyDescriptor)) return false;

        IExtendedPropertyDescriptor xdePropertyDescriptor = (IExtendedPropertyDescriptor) anotherProperty;
        if ((getPropertySource () == null) || (xdePropertyDescriptor.getPropertySource () == null)) return false;

        IPropertySource propertySource1 = getPropertySource ();
        IPropertySource propertySource2 = xdePropertyDescriptor.getPropertySource ();
        Object value1 = propertySource1.getPropertyValue (getId ());
        Object value2 = propertySource2.getPropertyValue (getId ());
        if ((value1 == null) && (value2 == null)) return true;

        if ((value1 != null) && (value2 != null)) {
            if (! value1.equals (value2)) {
                setDirtyFlag (true);
            }
        } else {
            setDirtyFlag (true);
        }
        return true;
    }

    public String getDisplayName () {
        return displayName;
    }

    public void setDisplayName (String displayName) {
        this.displayName = displayName;
    }

    public Object getPropertyValue () {
        return getPropertySource ().getPropertyValue (getId ());
    }

    public void resetPropertyValue () {
    }

}

