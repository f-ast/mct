package org.eclipse.gmf.runtime.diagram.core.commands;

import org.eclipse.core.runtime.IProgressMonitor;

import org.eclipse.core.runtime.IStatus;

import org.eclipse.core.runtime.Status;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.runtime.common.core.command.CommandResult;

import org.eclipse.gmf.runtime.diagram.core.internal.DiagramPlugin;

import org.eclipse.gmf.runtime.diagram.core.internal.DiagramStatusCodes;

import org.eclipse.gmf.runtime.diagram.core.internal.services.view.ViewService;

import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;

import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;

import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;

import org.eclipse.gmf.runtime.notation.Diagram;

public class CreateDiagramCommand extends AbstractModelCommand {
    private final String _diagramType;
    private EObject _semanticContext;
    private PreferencesHint _preferencesHint;

    public CreateDiagramCommand (String label, EObject anElementContext, String aDiagramKindType, PreferencesHint preferencesHint) {
        super (label, null);
        assert null != anElementContext : "Null element context in CreateDiagramCommand";
        _semanticContext = anElementContext;
        _diagramType = aDiagramKindType;
        _preferencesHint = preferencesHint;
    }

    protected CommandResult doExecute (IProgressMonitor progressMonitor) {
        Diagram diagram = ViewService.getInstance ().createDiagram (new EObjectAdapter (getSemanticContext ()), getDiagramType (), getPreferencesHint ());
        return new CommandResult (new Status (IStatus.OK, getPluginId (), DiagramStatusCodes.OK, EMPTY_STRING, null), diagram);
    }

    protected String getPluginId () {
        return DiagramPlugin.getPluginId ();
    }

    protected String getDiagramType () {
        return _diagramType;
    }

    protected EObject getSemanticContext () {
        return _semanticContext;
    }

    protected PreferencesHint getPreferencesHint () {
        return _preferencesHint;
    }

}

