package org.eclipse.gmf.runtime.diagram.ui.render.clipboard;

import java.awt.Image;

import java.awt.Toolkit;

import java.awt.datatransfer.DataFlavor;

import java.awt.datatransfer.Transferable;

import java.awt.datatransfer.UnsupportedFlavorException;

import java.io.IOException;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.common.ui.action.internal.CommonUIActionDebugOptions;

import org.eclipse.gmf.runtime.common.ui.action.internal.CommonUIActionPlugin;

import org.eclipse.gmf.runtime.common.ui.util.CustomData;

import org.eclipse.gmf.runtime.diagram.ui.render.internal.clipboard.AWTViewImageTransferable;

public class AWTClipboardHelper {
    private static final boolean IMAGE_COPY_SUPPORTED = System.getProperty ("os.name").toUpperCase ().startsWith ("WIN");
    static private AWTClipboardHelper INSTANCE = new AWTClipboardHelper ();

    public static AWTClipboardHelper getInstance () {
        return INSTANCE;
    }

    private java.awt.datatransfer.Clipboard awtClipboard;

    private AWTClipboardHelper () {
        if (isImageCopySupported ()) awtClipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();

    }

    final public boolean isImageCopySupported () {
        return IMAGE_COPY_SUPPORTED;
    }

    public boolean hasCustomData () {
        assert (isImageCopySupported ());
        Transferable transferable = getClipboard ().getContents (null);
        if (transferable != null) {
            DataFlavor [] dataFlavors = transferable.getTransferDataFlavors ();
            for (int i = 0;
            i < dataFlavors.length; i ++) {
                if (dataFlavors [i].equals (AWTViewImageTransferable.AWTCUSTOMDATAFLAVOR)) return true;

            }
        }
        return false;
    }

    public CustomData getCustomData () {
        assert (isImageCopySupported ());
        Transferable transferable = getClipboard ().getContents (null);
        if (transferable == null) return null;

        if (! hasCustomData ()) return null;

        CustomData data = null;
        try {
            data = (CustomData) transferable.getTransferData (AWTViewImageTransferable.AWTCUSTOMDATAFLAVOR);
        } catch (UnsupportedFlavorException e) {
            Trace.catching (CommonUIActionPlugin.getDefault (), CommonUIActionDebugOptions.EXCEPTIONS_CATCHING, AWTClipboardHelper.class, "getCustomData", e);
        } catch (IOException e) {
            Trace.catching (CommonUIActionPlugin.getDefault (), CommonUIActionDebugOptions.EXCEPTIONS_CATCHING, AWTClipboardHelper.class, "getCustomData", e);
        }
        return data;
    }

    public void copyToClipboard (CustomData data, Image image) {
        assert (isImageCopySupported ());
        getClipboard ().setContents (new AWTViewImageTransferable (data, image), null);
    }

    private java.awt.datatransfer.Clipboard getClipboard () {
        return awtClipboard;
    }

}

