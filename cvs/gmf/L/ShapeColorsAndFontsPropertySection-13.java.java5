package org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance;

import org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart;

import org.eclipse.gmf.runtime.diagram.ui.internal.properties.Properties;

import org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants;

import org.eclipse.gmf.runtime.diagram.ui.properties.internal.l10n.DiagramUIPropertiesImages;

import org.eclipse.gmf.runtime.draw2d.ui.figures.FigureUtilities;

import org.eclipse.gmf.runtime.notation.NotationPackage;

import org.eclipse.swt.events.SelectionAdapter;

import org.eclipse.swt.events.SelectionEvent;

import org.eclipse.swt.graphics.Image;

import org.eclipse.swt.widgets.Composite;

public class ShapeColorsAndFontsPropertySection extends ColorsAndFontsPropertySection {

    protected Composite createFontsGroup (Composite contents) {
        Composite toolBar = super.createFontsGroup (contents);
        fillColorButton.addSelectionListener (new SelectionAdapter () {

            public void widgetSelected (SelectionEvent event) {
                changeFillColor (event);
            }

        }

        );
        if (isReadOnly ()) fillColorButton.setEnabled (false);
        else fillColorButton.setEnabled (true);

        return toolBar;
    }

    protected void updateColorCache () {
        super.updateColorCache ();
        executeAsReadAction (new Runnable () {

            public void run () {
                if (getSingleInput () instanceof GraphicalEditPart) {
                    GraphicalEditPart ep = (GraphicalEditPart) getSingleInput ();
                    fillColor = FigureUtilities.integerToRGB ((Integer) ep.getStructuralFeatureValue (NotationPackage.eINSTANCE.getFillStyle_FillColor ()));
                } else fillColor = DEFAULT_PREF_COLOR;

            }

        }

        );
    }

    protected void changeFillColor (SelectionEvent event) {
        fillColor = changeColor (event, fillColorButton, IPreferenceConstants.PREF_FILL_COLOR, Properties.ID_FILLCOLOR, FILL_COLOR_COMMAND_NAME, DiagramUIPropertiesImages.DESC_FILL_COLOR);
    }

    public void refresh () {
        super.refresh ();
        if (! isDisposed ()) {
            Image overlyedImage = new ColorOverlayImageDescriptor (DiagramUIPropertiesImages.DESC_FILL_COLOR.getImageData (), fillColor).createImage ();
            disposeImage (fillColorButton.getImage ());
            fillColorButton.setImage (overlyedImage);
        }
    }

}

