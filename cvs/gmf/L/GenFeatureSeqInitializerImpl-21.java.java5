package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;

import org.eclipse.emf.ecore.util.EcoreUtil;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenReferenceNewElementSpec;

import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

public class GenFeatureSeqInitializerImpl extends EObjectImpl implements GenFeatureSeqInitializer {
    protected EList < GenFeatureInitializer > initializers;
    protected GenClass elementClass;

    protected GenFeatureSeqInitializerImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenFeatureSeqInitializer ();
    }

    public TypeModelFacet getTypeModelFacet () {
        TypeModelFacet typeModelFacet = basicGetTypeModelFacet ();
        return typeModelFacet != null && typeModelFacet.eIsProxy () ? (TypeModelFacet) eResolveProxy ((InternalEObject) typeModelFacet) : typeModelFacet;
    }

    public EList < GenFeatureInitializer > getInitializers () {
        if (initializers == null) {
            initializers = new EObjectContainmentWithInverseEList < GenFeatureInitializer > (GenFeatureInitializer.class, this, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS, GMFGenPackage.GEN_FEATURE_INITIALIZER__FEATURE_SEQ_INITIALIZER);
        }
        return initializers;
    }

    public GenClass getElementClass () {
        if (getCreatingInitializer () == null) {
            return (getTypeModelFacet () != null) ? getTypeModelFacet ().getMetaClass () : null;
        }
        GenClass genClass = getElementClassGen ();
        if (genClass != null) {
            return genClass;
        }
        return (getCreatingInitializer ().getFeature () != null) ? getCreatingInitializer ().getFeature ().getTypeGenClass () : null;
    }

    public GenClass getElementClassGen () {
        if (elementClass != null && elementClass.eIsProxy ()) {
            InternalEObject oldElementClass = (InternalEObject) elementClass;
            elementClass = (GenClass) eResolveProxy (oldElementClass);
            if (elementClass != oldElementClass) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS, oldElementClass, elementClass));

            }
        }
        return elementClass;
    }

    public TypeModelFacet basicGetTypeModelFacet () {
        EObject container = eContainer ();
        while (container != null && ! (container instanceof TypeModelFacet)) {
            container = container.eContainer ();
        }
        return (container != null) ? (TypeModelFacet) container : null;
    }

    public String getInitializerFieldName (String elementID) {
        StringBuffer buf = new StringBuffer ();
        if (getCreatingInitializer () != null && getCreatingInitializer ().getFeatureSeqInitializer () != null) {
            GenFeatureSeqInitializer parentFSeqInitializer = getCreatingInitializer ().getFeatureSeqInitializer ();
            if (parentFSeqInitializer.getCreatingInitializer () != null) {
                buf.append (parentFSeqInitializer.getInitializerFieldName (elementID)).append ('_');
            }
            if (getCreatingInitializer ().getFeature () != null) {
                buf.append (getCreatingInitializer ().getFeature ().getName ());
                EList < GenFeatureSeqInitializer > siblingInitalizers = getCreatingInitializer ().getNewElementInitializers ();
                if (siblingInitalizers.size () > 1) {
                    int pos = siblingInitalizers.indexOf (this);
                    buf.append ('_').append (pos + 1);
                }
            }
        } else {
            buf.append (elementID);
        }
        return buf.toString ();
    }

    @SuppressWarnings("unchecked")
    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return ((InternalEList < InternalEObject >) (InternalEList < ? >) getInitializers ()).basicAdd (otherEnd, msgs);
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return basicSetCreatingInitializer ((GenReferenceNewElementSpec) otherEnd, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return ((InternalEList < ? >) getInitializers ()).basicRemove (otherEnd, msgs);
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                return basicSetCreatingInitializer (null, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_REFERENCE_NEW_ELEMENT_SPEC__NEW_ELEMENT_INITIALIZERS, GenReferenceNewElementSpec.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__TYPE_MODEL_FACET :
                if (resolve) return getTypeModelFacet ();

                return basicGetTypeModelFacet ();
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return getInitializers ();
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS :
                if (resolve) return getElementClass ();

                return basicGetElementClass ();
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                return getCreatingInitializer ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @SuppressWarnings("unchecked")
    @Override
    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                getInitializers ().addAll ((Collection < ? extends GenFeatureInitializer >) newValue);
                return;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS :
                setElementClass ((GenClass) newValue);
                return;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                setCreatingInitializer ((GenReferenceNewElementSpec) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    @Override
    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                return;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS :
                setElementClass ((GenClass) null);
                return;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                setCreatingInitializer ((GenReferenceNewElementSpec) null);
                return;
        }
        super.eUnset (featureID);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__TYPE_MODEL_FACET :
                return basicGetTypeModelFacet () != null;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return initializers != null && ! initializers.isEmpty ();
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS :
                return elementClass != null;
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER :
                return getCreatingInitializer () != null;
        }
        return super.eIsSet (featureID);
    }

    public GenClass basicGetElementClass () {
        return elementClass;
    }

    public void setElementClass (GenClass newElementClass) {
        if (getCreatingInitializer () == null && eContainer () != null) {
            return;
        }
        setElementClassGen (newElementClass);
    }

    public void setElementClassGen (GenClass newElementClass) {
        GenClass oldElementClass = elementClass;
        elementClass = newElementClass;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__ELEMENT_CLASS, oldElementClass, elementClass));

    }

    public GenReferenceNewElementSpec getCreatingInitializer () {
        if (eContainerFeatureID != GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER) return null;

        return (GenReferenceNewElementSpec) eContainer ();
    }

    public NotificationChain basicSetCreatingInitializer (GenReferenceNewElementSpec newCreatingInitializer, NotificationChain msgs) {
        msgs = eBasicSetContainer ((InternalEObject) newCreatingInitializer, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER, msgs);
        return msgs;
    }

    public void setCreatingInitializer (GenReferenceNewElementSpec newCreatingInitializer) {
        if (newCreatingInitializer != eInternalContainer () || (eContainerFeatureID != GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER && newCreatingInitializer != null)) {
            if (EcoreUtil.isAncestor (this, newCreatingInitializer)) throw new IllegalArgumentException ("Recursive containment not allowed for " + toString ());

            NotificationChain msgs = null;
            if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

            if (newCreatingInitializer != null) msgs = ((InternalEObject) newCreatingInitializer).eInverseAdd (this, GMFGenPackage.GEN_REFERENCE_NEW_ELEMENT_SPEC__NEW_ELEMENT_INITIALIZERS, GenReferenceNewElementSpec.class, msgs);

            msgs = basicSetCreatingInitializer (newCreatingInitializer, msgs);
            if (msgs != null) msgs.dispatch ();

        } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__CREATING_INITIALIZER, newCreatingInitializer, newCreatingInitializer));

    }

}

