package org.eclipse.gmf.runtime.diagram.ui.resources.editor.document;

import org.eclipse.jface.resource.ImageDescriptor;

import org.eclipse.ui.IEditorInput;

import org.eclipse.ui.IPersistableElement;

import org.eclipse.gmf.runtime.common.core.util.HashUtil;

import org.eclipse.gmf.runtime.emf.core.edit.MEditingDomain;

public class EditorInputProxy implements IEditorInput, MEditingDomainElement {
    protected IEditorInput fProxied = null;
    protected MEditingDomain editingDomain = null;

    public EditorInputProxy (IEditorInput input, MEditingDomain domain) {
        assert input != null && domain != null;
        fProxied = input;
        editingDomain = domain;
    }

    public boolean exists () {
        return fProxied.exists ();
    }

    public ImageDescriptor getImageDescriptor () {
        return fProxied.getImageDescriptor ();
    }

    public String getName () {
        return fProxied.getName ();
    }

    public IPersistableElement getPersistable () {
        return fProxied.getPersistable ();
    }

    public String getToolTipText () {
        return fProxied.getToolTipText ();
    }

    public Object getAdapter (Class adapter) {
        return fProxied.getAdapter (adapter);
    }

    public MEditingDomain getEditingDomain () {
        return editingDomain;
    }

    public boolean equals (Object arg0) {
        if (this == arg0) return true;

        if (arg0 instanceof EditorInputProxy) {
            EditorInputProxy proxy = (EditorInputProxy) arg0;
            if (proxy.editingDomain.equals (editingDomain) && proxy.fProxied.equals (fProxied)) return true;

        }
        return false;
    }

    public int hashCode () {
        return HashUtil.hash (HashUtil.hash (fProxied), editingDomain);
    }

}

