package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.runtime.notation.Guide;

import org.eclipse.gmf.runtime.notation.GuideStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class GuideStyleImpl extends EObjectImpl implements GuideStyle {
    protected EList horizontalGuides = null;
    protected EList verticalGuides = null;

    protected GuideStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.eINSTANCE.getGuideStyle ();
    }

    public EList getHorizontalGuides () {
        if (horizontalGuides == null) {
            horizontalGuides = new EObjectContainmentEList (Guide.class, this, NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES);
        }
        return horizontalGuides;
    }

    public EList getVerticalGuides () {
        if (verticalGuides == null) {
            verticalGuides = new EObjectContainmentEList (Guide.class, this, NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES);
        }
        return verticalGuides;
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES :
                    return ((InternalEList) getHorizontalGuides ()).basicRemove (otherEnd, msgs);
                case NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES :
                    return ((InternalEList) getVerticalGuides ()).basicRemove (otherEnd, msgs);
                default :
                    return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
            }
        }
        return eBasicSetContainer (null, featureID, msgs);
    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES :
                return getHorizontalGuides ();
            case NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES :
                return getVerticalGuides ();
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES :
                getHorizontalGuides ().clear ();
                getHorizontalGuides ().addAll ((Collection) newValue);
                return;
            case NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES :
                getVerticalGuides ().clear ();
                getVerticalGuides ().addAll ((Collection) newValue);
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES :
                getHorizontalGuides ().clear ();
                return;
            case NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES :
                getVerticalGuides ().clear ();
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.GUIDE_STYLE__HORIZONTAL_GUIDES :
                return horizontalGuides != null && ! horizontalGuides.isEmpty ();
            case NotationPackage.GUIDE_STYLE__VERTICAL_GUIDES :
                return verticalGuides != null && ! verticalGuides.isEmpty ();
        }
        return eDynamicIsSet (eFeature);
    }

}

