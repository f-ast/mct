package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectEList;

import org.eclipse.gmf.runtime.notation.Diagram;

import org.eclipse.gmf.runtime.notation.MultiDiagramLinkStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class MultiDiagramLinkStyleImpl extends NotationObjectImpl implements MultiDiagramLinkStyle {
    protected EList diagramLinks;

    protected MultiDiagramLinkStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.MULTI_DIAGRAM_LINK_STYLE;
    }

    public EList getDiagramLinks () {
        if (diagramLinks == null) {
            diagramLinks = new EObjectEList (Diagram.class, this, NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS);
        }
        return diagramLinks;
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID :
                return getUUID ();
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS :
                return getDiagramLinks ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID :
                setUUID ((byte []) newValue);
                return;
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS :
                getDiagramLinks ().clear ();
                getDiagramLinks ().addAll ((Collection) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID :
                setUUID (UUID_EDEFAULT);
                return;
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS :
                getDiagramLinks ().clear ();
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__UUID :
                return UUID_EDEFAULT == null ? uUID != null : ! UUID_EDEFAULT.equals (uUID);
            case NotationPackage.MULTI_DIAGRAM_LINK_STYLE__DIAGRAM_LINKS :
                return diagramLinks != null && ! diagramLinks.isEmpty ();
        }
        return eDynamicIsSet (featureID);
    }

}

