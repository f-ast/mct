package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;

import org.eclipse.emf.codegen.ecore.genmodel.GenFeature;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenConstraint;

import org.eclipse.gmf.codegen.gmfgen.GenElementInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenTopLevelNode;

import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

public class TypeModelFacetImpl extends EObjectImpl implements TypeModelFacet {
    protected GenClass metaClass;
    protected GenFeature containmentMetaFeature;
    protected GenFeature childMetaFeature;
    protected GenConstraint modelElementSelector;
    protected GenElementInitializer modelElementInitializer;

    protected TypeModelFacetImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getTypeModelFacet ();
    }

    public GenClass getMetaClass () {
        if (metaClass != null && metaClass.eIsProxy ()) {
            InternalEObject oldMetaClass = (InternalEObject) metaClass;
            metaClass = (GenClass) eResolveProxy (oldMetaClass);
            if (metaClass != oldMetaClass) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.TYPE_MODEL_FACET__META_CLASS, oldMetaClass, metaClass));

            }
        }
        return metaClass;
    }

    public GenClass basicGetMetaClass () {
        return metaClass;
    }

    public void setMetaClass (GenClass newMetaClass) {
        GenClass oldMetaClass = metaClass;
        metaClass = newMetaClass;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__META_CLASS, oldMetaClass, metaClass));

    }

    public GenFeature getContainmentMetaFeature () {
        if (containmentMetaFeature != null && containmentMetaFeature.eIsProxy ()) {
            InternalEObject oldContainmentMetaFeature = (InternalEObject) containmentMetaFeature;
            containmentMetaFeature = (GenFeature) eResolveProxy (oldContainmentMetaFeature);
            if (containmentMetaFeature != oldContainmentMetaFeature) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE, oldContainmentMetaFeature, containmentMetaFeature));

            }
        }
        return containmentMetaFeature;
    }

    public GenFeature basicGetContainmentMetaFeature () {
        return containmentMetaFeature;
    }

    public void setContainmentMetaFeature (GenFeature newContainmentMetaFeature) {
        GenFeature oldContainmentMetaFeature = containmentMetaFeature;
        containmentMetaFeature = newContainmentMetaFeature;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE, oldContainmentMetaFeature, containmentMetaFeature));

    }

    public GenFeature getChildMetaFeatureGen () {
        if (childMetaFeature != null && childMetaFeature.eIsProxy ()) {
            InternalEObject oldChildMetaFeature = (InternalEObject) childMetaFeature;
            childMetaFeature = (GenFeature) eResolveProxy (oldChildMetaFeature);
            if (childMetaFeature != oldChildMetaFeature) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.TYPE_MODEL_FACET__CHILD_META_FEATURE, oldChildMetaFeature, childMetaFeature));

            }
        }
        return childMetaFeature;
    }

    public GenFeature getChildMetaFeature () {
        GenFeature f = getChildMetaFeatureGen ();
        if (f == null) {
            return getContainmentMetaFeature ();
        }
        return f;
    }

    public GenFeature basicGetChildMetaFeature () {
        return childMetaFeature;
    }

    public void setChildMetaFeature (GenFeature newChildMetaFeature) {
        GenFeature oldChildMetaFeature = childMetaFeature;
        childMetaFeature = newChildMetaFeature;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__CHILD_META_FEATURE, oldChildMetaFeature, childMetaFeature));

    }

    public GenConstraint getModelElementSelector () {
        if (modelElementSelector != null && modelElementSelector.eIsProxy ()) {
            InternalEObject oldModelElementSelector = (InternalEObject) modelElementSelector;
            modelElementSelector = (GenConstraint) eResolveProxy (oldModelElementSelector);
            if (modelElementSelector != oldModelElementSelector) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR, oldModelElementSelector, modelElementSelector));

            }
        }
        return modelElementSelector;
    }

    public GenConstraint basicGetModelElementSelector () {
        return modelElementSelector;
    }

    public void setModelElementSelector (GenConstraint newModelElementSelector) {
        GenConstraint oldModelElementSelector = modelElementSelector;
        modelElementSelector = newModelElementSelector;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR, oldModelElementSelector, modelElementSelector));

    }

    public GenElementInitializer getModelElementInitializer () {
        return modelElementInitializer;
    }

    public NotificationChain basicSetModelElementInitializer (GenElementInitializer newModelElementInitializer, NotificationChain msgs) {
        GenElementInitializer oldModelElementInitializer = modelElementInitializer;
        modelElementInitializer = newModelElementInitializer;
        if (eNotificationRequired ()) {
            ENotificationImpl notification = new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, oldModelElementInitializer, newModelElementInitializer);
            if (msgs == null) msgs = notification;
            else msgs.add (notification);

        }
        return msgs;
    }

    public void setModelElementInitializer (GenElementInitializer newModelElementInitializer) {
        if (newModelElementInitializer != modelElementInitializer) {
            NotificationChain msgs = null;
            if (modelElementInitializer != null) msgs = ((InternalEObject) modelElementInitializer).eInverseRemove (this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, null, msgs);

            if (newModelElementInitializer != null) msgs = ((InternalEObject) newModelElementInitializer).eInverseAdd (this, EOPPOSITE_FEATURE_BASE - GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, null, msgs);

            msgs = basicSetModelElementInitializer (newModelElementInitializer, msgs);
            if (msgs != null) msgs.dispatch ();

        } else if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER, newModelElementInitializer, newModelElementInitializer));

    }

    public boolean isPhantomElement () {
        return eContainer () instanceof GenTopLevelNode && getContainmentMetaFeature () == null;
    }

    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER :
                return basicSetModelElementInitializer (null, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.TYPE_MODEL_FACET__META_CLASS :
                if (resolve) return getMetaClass ();

                return basicGetMetaClass ();
            case GMFGenPackage.TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE :
                if (resolve) return getContainmentMetaFeature ();

                return basicGetContainmentMetaFeature ();
            case GMFGenPackage.TYPE_MODEL_FACET__CHILD_META_FEATURE :
                if (resolve) return getChildMetaFeature ();

                return basicGetChildMetaFeature ();
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR :
                if (resolve) return getModelElementSelector ();

                return basicGetModelElementSelector ();
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER :
                return getModelElementInitializer ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @Override
    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.TYPE_MODEL_FACET__META_CLASS :
                setMetaClass ((GenClass) newValue);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE :
                setContainmentMetaFeature ((GenFeature) newValue);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__CHILD_META_FEATURE :
                setChildMetaFeature ((GenFeature) newValue);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR :
                setModelElementSelector ((GenConstraint) newValue);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER :
                setModelElementInitializer ((GenElementInitializer) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    @Override
    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.TYPE_MODEL_FACET__META_CLASS :
                setMetaClass ((GenClass) null);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE :
                setContainmentMetaFeature ((GenFeature) null);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__CHILD_META_FEATURE :
                setChildMetaFeature ((GenFeature) null);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR :
                setModelElementSelector ((GenConstraint) null);
                return;
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER :
                setModelElementInitializer ((GenElementInitializer) null);
                return;
        }
        super.eUnset (featureID);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.TYPE_MODEL_FACET__META_CLASS :
                return metaClass != null;
            case GMFGenPackage.TYPE_MODEL_FACET__CONTAINMENT_META_FEATURE :
                return containmentMetaFeature != null;
            case GMFGenPackage.TYPE_MODEL_FACET__CHILD_META_FEATURE :
                return childMetaFeature != null;
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_SELECTOR :
                return modelElementSelector != null;
            case GMFGenPackage.TYPE_MODEL_FACET__MODEL_ELEMENT_INITIALIZER :
                return modelElementInitializer != null;
        }
        return super.eIsSet (featureID);
    }

}

