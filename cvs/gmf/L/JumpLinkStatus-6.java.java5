package org.eclipse.gmf.runtime.notation;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class JumpLinkStatus extends AbstractEnumerator {
    public static final int NONE = 0;
    public static final int ALL = 1;
    public static final int BELOW = 2;
    public static final int ABOVE = 3;
    public static final JumpLinkStatus NONE_LITERAL = new JumpLinkStatus (NONE, "None", "None");
    public static final JumpLinkStatus ALL_LITERAL = new JumpLinkStatus (ALL, "All", "All");
    public static final JumpLinkStatus BELOW_LITERAL = new JumpLinkStatus (BELOW, "Below", "Below");
    public static final JumpLinkStatus ABOVE_LITERAL = new JumpLinkStatus (ABOVE, "Above", "Above");
    private static final JumpLinkStatus [] VALUES_ARRAY = new JumpLinkStatus [] {NONE_LITERAL, ALL_LITERAL, BELOW_LITERAL, ABOVE_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static JumpLinkStatus get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            JumpLinkStatus result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static JumpLinkStatus getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            JumpLinkStatus result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static JumpLinkStatus get (int value) {
        switch (value) {
            case NONE :
                return NONE_LITERAL;
            case ALL :
                return ALL_LITERAL;
            case BELOW :
                return BELOW_LITERAL;
            case ABOVE :
                return ABOVE_LITERAL;
        }
        return null;
    }

    private JumpLinkStatus (int value, String name, String literal) {
        super (value, name, literal);
    }

}

