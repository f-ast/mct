package org.eclipse.gmf.codegen.gmfgen.impl;

import java.util.Collection;

import org.eclipse.emf.codegen.ecore.genmodel.GenClass;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureSeqInitializer;

import org.eclipse.gmf.codegen.gmfgen.GenFeatureValueSpec;

import org.eclipse.gmf.codegen.gmfgen.TypeModelFacet;

public class GenFeatureSeqInitializerImpl extends GenElementInitializerImpl implements GenFeatureSeqInitializer {
    protected EList initializers = null;

    protected GenFeatureSeqInitializerImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenFeatureSeqInitializer ();
    }

    public EList getInitializers () {
        if (initializers == null) {
            initializers = new EObjectContainmentWithInverseEList (GenFeatureValueSpec.class, this, GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS, GMFGenPackage.GEN_FEATURE_VALUE_SPEC__FEATURE_SEQ_INITIALIZER);
        }
        return initializers;
    }

    public String getElementClassAccessorName () {
        GenClass genClass = getElementClass ();
        return (genClass != null) ? genClass.getClassifierAccessorName () : null;
    }

    public String getElementQualifiedPackageInterfaceName () {
        GenClass genClass = getElementClass ();
        return (genClass != null) ? genClass.getGenPackage ().getQualifiedPackageInterfaceName () : null;
    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return ((InternalEList) getInitializers ()).basicAdd (otherEnd, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return ((InternalEList) getInitializers ()).basicRemove (otherEnd, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return getInitializers ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                getInitializers ().addAll ((Collection) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                getInitializers ().clear ();
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_FEATURE_SEQ_INITIALIZER__INITIALIZERS :
                return initializers != null && ! initializers.isEmpty ();
        }
        return super.eIsSet (featureID);
    }

    private GenClass getElementClass () {
        TypeModelFacet typeModelFacet = getTypeModelFacet ();
        if (typeModelFacet == null) {
            return null;
        }
        return typeModelFacet.getMetaClass ();
    }

}

