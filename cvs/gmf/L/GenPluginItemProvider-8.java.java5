package org.eclipse.gmf.codegen.gmfgen.provider;

import java.util.Collection;

import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;

import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;

import org.eclipse.emf.edit.provider.IItemLabelProvider;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.IItemPropertySource;

import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;

import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;

import org.eclipse.emf.edit.provider.ItemProviderAdapter;

import org.eclipse.emf.edit.provider.ViewerNotification;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenPlugin;

import org.eclipse.gmf.codegen.gmfgen.presentation.EditorPlugin;

public class GenPluginItemProvider extends ItemProviderAdapter implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {

    public GenPluginItemProvider (AdapterFactory adapterFactory) {
        super (adapterFactory);
    }

    @Override
    public List < IItemPropertyDescriptor > getPropertyDescriptors (Object object) {
        if (itemPropertyDescriptors == null) {
            super.getPropertyDescriptors (object);
            addIDPropertyDescriptor (object);
            addNamePropertyDescriptor (object);
            addProviderPropertyDescriptor (object);
            addVersionPropertyDescriptor (object);
            addPrintingEnabledPropertyDescriptor (object);
            addRequiredPluginsPropertyDescriptor (object);
            addActivatorClassNamePropertyDescriptor (object);
        }
        return itemPropertyDescriptors;
    }

    protected void addIDPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_iD_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_iD_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_ID (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_name_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_name_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_Name (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addProviderPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_provider_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_provider_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_Provider (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addVersionPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_version_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_version_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_Version (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addPrintingEnabledPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_printingEnabled_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_printingEnabled_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_PrintingEnabled (), true, false, false, ItemPropertyDescriptor.BOOLEAN_VALUE_IMAGE, null, null));
    }

    protected void addRequiredPluginsPropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_requiredPlugins_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_requiredPlugins_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_RequiredPlugins (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    protected void addActivatorClassNamePropertyDescriptor (Object object) {
        itemPropertyDescriptors.add (createItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString ("_UI_GenPlugin_activatorClassName_feature"), getString ("_UI_PropertyDescriptor_description", "_UI_GenPlugin_activatorClassName_feature", "_UI_GenPlugin_type"), GMFGenPackage.eINSTANCE.getGenPlugin_ActivatorClassName (), true, false, false, ItemPropertyDescriptor.GENERIC_VALUE_IMAGE, null, null));
    }

    @Override
    public Object getImage (Object object) {
        return overlayImage (object, getResourceLocator ().getImage ("full/obj16/GenPlugin"));
    }

    @Override
    public String getText (Object object) {
        String label = ((GenPlugin) object).getName ();
        return label == null || label.length () == 0 ? getString ("_UI_GenPlugin_type") : getString ("_UI_GenPlugin_type") + " " + label;
    }

    @Override
    public void notifyChanged (Notification notification) {
        updateChildren (notification);
        switch (notification.getFeatureID (GenPlugin.class)) {
            case GMFGenPackage.GEN_PLUGIN__ID :
            case GMFGenPackage.GEN_PLUGIN__NAME :
            case GMFGenPackage.GEN_PLUGIN__PROVIDER :
            case GMFGenPackage.GEN_PLUGIN__VERSION :
            case GMFGenPackage.GEN_PLUGIN__PRINTING_ENABLED :
            case GMFGenPackage.GEN_PLUGIN__REQUIRED_PLUGINS :
            case GMFGenPackage.GEN_PLUGIN__ACTIVATOR_CLASS_NAME :
                fireNotifyChanged (new ViewerNotification (notification, notification.getNotifier (), false, true));
                return;
        }
        super.notifyChanged (notification);
    }

    @Override
    protected void collectNewChildDescriptors (Collection < Object > newChildDescriptors, Object object) {
        super.collectNewChildDescriptors (newChildDescriptors, object);
    }

    @Override
    public ResourceLocator getResourceLocator () {
        return EditorPlugin.INSTANCE;
    }

}

