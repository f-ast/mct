package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.codegen.ecore.genmodel.GenPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.GenEditorGenerator;

import org.eclipse.gmf.codegen.gmfgen.GenEditorView;

public class GenEditorViewImpl extends EObjectImpl implements GenEditorView {
    protected static final String PACKAGE_NAME_EDEFAULT = null;
    protected String packageName = PACKAGE_NAME_EDEFAULT;
    protected static final String ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT = null;
    protected String actionBarContributorClassName = ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT;
    protected static final String CLASS_NAME_EDEFAULT = null;
    protected String className = CLASS_NAME_EDEFAULT;
    protected static final String ICON_PATH_EDEFAULT = null;
    protected String iconPath = ICON_PATH_EDEFAULT;
    protected static final String ID_EDEFAULT = null;
    protected String iD = ID_EDEFAULT;

    protected GenEditorViewImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getGenEditorView ();
    }

    public GenEditorGenerator getEditorGen () {
        if (eContainerFeatureID != GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN) return null;

        return (GenEditorGenerator) eContainer ();
    }

    public String getPackageNameGen () {
        return packageName;
    }

    public String getPackageName () {
        String value = getPackageNameGen ();
        if (value == null) {
            value = getEditorGen ().getPackageNamePrefix () + ".part";
        }
        return value;
    }

    public void setPackageName (String newPackageName) {
        String oldPackageName = packageName;
        packageName = newPackageName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME, oldPackageName, packageName));

    }

    public String getActionBarContributorClassNameGen () {
        return actionBarContributorClassName;
    }

    public String getActionBarContributorClassName () {
        String value = getActionBarContributorClassNameGen ();
        if (value == null || value.trim ().length () == 0) {
            value = getDomainModelCapName () + "DiagramActionBarContributor";
        }
        return value;
    }

    public void setActionBarContributorClassName (String newActionBarContributorClassName) {
        String oldActionBarContributorClassName = actionBarContributorClassName;
        actionBarContributorClassName = newActionBarContributorClassName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME, oldActionBarContributorClassName, actionBarContributorClassName));

    }

    public String getClassNameGen () {
        return className;
    }

    public String getClassName () {
        String value = getClassNameGen ();
        if (value == null || value.trim ().length () == 0) {
            value = getDomainModelCapName () + "DiagramEditor";
        }
        return value;
    }

    public void setClassName (String newClassName) {
        String oldClassName = className;
        className = newClassName;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME, oldClassName, className));

    }

    public String getIconPathGen () {
        return iconPath;
    }

    public String getIconPath () {
        String value = getIconPathGen ();
        if (GenCommonBaseImpl.isEmpty (value)) {
            if (getEditorGen ().getDiagram () != null) {
                return getEditorGen ().getDiagram ().getCreationWizardIconPath ();
            } else {
                return createDefaultIconPath ();
            }
        }
        return value;
    }

    public String getIconPathX () {
        String value = getIconPath ();
        if (GenDiagramImpl.REUSE_ICON_VALUE.equalsIgnoreCase (value)) {
            if (getEditorGen ().getDiagram () != null && getEditorGen ().getDiagram ().getDomainDiagramElement () != null) {
                GenPackage domainMetaModel = getEditorGen ().getDiagram ().getDomainDiagramElement ().getGenPackage ();
                return "../" + getEditorGen ().getDomainGenModel ().getEditorPluginID () + "/icons/full/obj16/" + domainMetaModel.getPrefix () + "ModelFile.gif";
            } else {
                return createDefaultIconPath ();
            }
        }
        return value;
    }

    private static String createDefaultIconPath () {
        return new GenDiagramImpl ().getCreationWizardIconPath ();
    }

    public void setIconPath (String newIconPath) {
        String oldIconPath = iconPath;
        iconPath = newIconPath;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH, oldIconPath, iconPath));

    }

    public String getIDGen () {
        return iD;
    }

    public String getID () {
        String value = getIDGen ();
        if (value == null || value.trim ().length () == 0) {
            return getQualifiedClassName () + "ID";
        }
        return value;
    }

    public void setID (String newID) {
        String oldID = iD;
        iD = newID;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGenPackage.GEN_EDITOR_VIEW__ID, oldID, iD));

    }

    public String getActionBarContributorQualifiedClassName () {
        return getPackageName () + '.' + getActionBarContributorClassName ();
    }

    public String getQualifiedClassName () {
        return getPackageName () + '.' + getClassName ();
    }

    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return eBasicSetContainer (otherEnd, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN :
                return eBasicSetContainer (null, GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.GEN_EDITOR_GENERATOR__EDITOR, GenEditorGenerator.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN :
                return getEditorGen ();
            case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME :
                return getPackageName ();
            case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME :
                return getActionBarContributorClassName ();
            case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME :
                return getClassName ();
            case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH :
                return getIconPath ();
            case GMFGenPackage.GEN_EDITOR_VIEW__ID :
                return getID ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME :
                setPackageName ((String) newValue);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME :
                setActionBarContributorClassName ((String) newValue);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME :
                setClassName ((String) newValue);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH :
                setIconPath ((String) newValue);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__ID :
                setID ((String) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME :
                setPackageName (PACKAGE_NAME_EDEFAULT);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME :
                setActionBarContributorClassName (ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME :
                setClassName (CLASS_NAME_EDEFAULT);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH :
                setIconPath (ICON_PATH_EDEFAULT);
                return;
            case GMFGenPackage.GEN_EDITOR_VIEW__ID :
                setID (ID_EDEFAULT);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.GEN_EDITOR_VIEW__EDITOR_GEN :
                return getEditorGen () != null;
            case GMFGenPackage.GEN_EDITOR_VIEW__PACKAGE_NAME :
                return PACKAGE_NAME_EDEFAULT == null ? packageName != null : ! PACKAGE_NAME_EDEFAULT.equals (packageName);
            case GMFGenPackage.GEN_EDITOR_VIEW__ACTION_BAR_CONTRIBUTOR_CLASS_NAME :
                return ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT == null ? actionBarContributorClassName != null : ! ACTION_BAR_CONTRIBUTOR_CLASS_NAME_EDEFAULT.equals (actionBarContributorClassName);
            case GMFGenPackage.GEN_EDITOR_VIEW__CLASS_NAME :
                return CLASS_NAME_EDEFAULT == null ? className != null : ! CLASS_NAME_EDEFAULT.equals (className);
            case GMFGenPackage.GEN_EDITOR_VIEW__ICON_PATH :
                return ICON_PATH_EDEFAULT == null ? iconPath != null : ! ICON_PATH_EDEFAULT.equals (iconPath);
            case GMFGenPackage.GEN_EDITOR_VIEW__ID :
                return ID_EDEFAULT == null ? iD != null : ! ID_EDEFAULT.equals (iD);
        }
        return super.eIsSet (featureID);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (packageName: ");
        result.append (packageName);
        result.append (", actionBarContributorClassName: ");
        result.append (actionBarContributorClassName);
        result.append (", className: ");
        result.append (className);
        result.append (", iconPath: ");
        result.append (iconPath);
        result.append (", iD: ");
        result.append (iD);
        result.append (')');
        return result.toString ();
    }

    private String getDomainModelCapName () {
        return ((GenEditorGeneratorImpl) getEditorGen ()).getDomainModelCapName ();
    }

}

