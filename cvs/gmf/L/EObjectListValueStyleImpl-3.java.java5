package org.eclipse.gmf.runtime.notation.impl;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.eclipse.gmf.runtime.notation.EObjectListValueStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class EObjectListValueStyleImpl extends NamedStyleImpl implements EObjectListValueStyle {
    protected EList eObjectListValue;

    protected EObjectListValueStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.Literals.EOBJECT_LIST_VALUE_STYLE;
    }

    public EList getEObjectListValue () {
        if (eObjectListValue == null) {
            eObjectListValue = new EObjectResolvingEList (EObject.class, this, NotationPackage.EOBJECT_LIST_VALUE_STYLE__EOBJECT_LIST_VALUE);
        }
        return eObjectListValue;
    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__NAME :
                return getName ();
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__EOBJECT_LIST_VALUE :
                return getEObjectListValue ();
        }
        return eDynamicGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__NAME :
                setName ((String) newValue);
                return;
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__EOBJECT_LIST_VALUE :
                getEObjectListValue ().clear ();
                getEObjectListValue ().addAll ((Collection) newValue);
                return;
        }
        eDynamicSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__NAME :
                setName (NAME_EDEFAULT);
                return;
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__EOBJECT_LIST_VALUE :
                getEObjectListValue ().clear ();
                return;
        }
        eDynamicUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__NAME :
                return NAME_EDEFAULT == null ? name != null : ! NAME_EDEFAULT.equals (name);
            case NotationPackage.EOBJECT_LIST_VALUE_STYLE__EOBJECT_LIST_VALUE :
                return eObjectListValue != null && ! eObjectListValue.isEmpty ();
        }
        return eDynamicIsSet (featureID);
    }

}

