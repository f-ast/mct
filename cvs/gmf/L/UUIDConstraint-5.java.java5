package org.eclipse.gmf.runtime.emf.core.internal.validation;

import org.eclipse.core.runtime.IStatus;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.resource.Resource;

import org.eclipse.emf.ecore.xmi.XMLResource;

import org.eclipse.emf.validation.AbstractModelConstraint;

import org.eclipse.emf.validation.IValidationContext;

import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;

public class UUIDConstraint extends AbstractModelConstraint {
    public static final String RULE_ID = "org.eclipse.gmf.runtime.emf.core.UUIDConstraint";

    public UUIDConstraint () {
        super ();
    }

    private String getEObjectLabel (EObject eObject) {
        return EMFCoreUtil.getQualifiedName (eObject, true);
    }

    public IStatus validate (IValidationContext ctx) {
        EObject target = ctx.getTarget ();
        Resource resource = target.eResource ();
        if (! (resource instanceof XMLResource)) return ctx.createSuccessStatus ();

        XMLResource xmlResource = (XMLResource) resource;
        String id = xmlResource.getID (target);
        if (null != id) {
            EObject eObject = xmlResource.getEObject (id);
            if (eObject != target) {
                return ctx.createFailureStatus (new Object [] {getEObjectLabel (target)});
            }
        }
        return ctx.createSuccessStatus ();
    }

}

