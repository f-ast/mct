package org.eclipse.gmf.runtime.diagram.ui.printing.render.util;

import java.util.List;

import org.eclipse.gmf.runtime.common.ui.printing.IPrintHelper;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.dialogs.JPSPrintDialog;

import org.eclipse.gmf.runtime.diagram.ui.printing.render.model.PrintOptions;

import org.eclipse.jface.dialogs.IDialogConstants;

import org.eclipse.swt.printing.PrinterData;

import org.eclipse.ui.PlatformUI;

public class PrintHelper implements IPrintHelper {
    private final PrintOptions options = new PrintOptions ();

    public PrintHelper () {
        initPrintOptions ();
    }

    private void initPrintOptions () {
        options.setPercentScaling (true);
        options.setScaleFactor (100);
        options.setFitToPagesWidth (1);
        options.setFitToPagesHeight (1);
        options.setAllPages (true);
        options.setRangeFrom (1);
        options.setRangeTo (1);
        options.setCopies (1);
        options.setCollate (false);
        options.setQualityHigh (true);
        options.setSideOneSided (true);
        options.setChromaticityColor (true);
    }

    public PrinterData openPrintDlg (List diagramList) {
        PrinterData result = null;
        JPSPrintDialog dlg = new JPSPrintDialog (PlatformUI.getWorkbench ().getActiveWorkbenchWindow (), options);
        if (dlg.open () == IDialogConstants.OK_ID) {
            if (options.getDestination () != null) {
                result = options.getDestination ().getPrinterData ();
            }
        } else {
            initPrintOptions ();
        }
        return result;
    }

    public boolean getDlgCollate () {
        return options.isCollate ();
    }

    public int getDlgNumberOfCopies () {
        return options.getCopies ();
    }

    public int getDlgPagesFrom () {
        return options.getRangeFrom ();
    }

    public int getDlgPagesTo () {
        return options.getRangeTo ();
    }

    public boolean getDlgPrintRangeAll () {
        return options.isAllPages ();
    }

    public boolean getDlgPrintRangePages () {
        return ! getDlgPrintRangeAll ();
    }

    public int getDlgScaleFitToM () {
        return options.getFitToPagesWidth ();
    }

    public int getDlgScaleFitToN () {
        return options.getFitToPagesHeight ();
    }

    public int getDlgScalePercent () {
        return options.isPercentScaling () ? options.getScaleFactor () : - 1;
    }

    public void setDlgOrientation (boolean landscape) {
    }

    public void setDlgPaperSize (int index, double width, double length) {
    }

    public boolean getDlgDiagramPrintRangeCurrent () {
        return true;
    }

    public boolean getDlgDiagramPrintRangeSelection () {
        return false;
    }

    public boolean isDlgDiagramSelected (int index) {
        return false;
    }

    public boolean getDlgDiagramPrintRangeAll () {
        return false;
    }

    public PrintOptions getPrintOptions () {
        return options;
    }

}

