package org.eclipse.gmf.runtime.diagram.ui.internal.tools;

import org.eclipse.draw2d.Cursors;

import org.eclipse.gef.GraphicalEditPart;

import org.eclipse.gef.Request;

import org.eclipse.gef.tools.ResizeTracker;

import org.eclipse.swt.graphics.Cursor;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IRotatableEditPart;

import org.eclipse.gmf.runtime.gef.ui.internal.requests.RotateShapeRequest;

public class RotateTracker extends ResizeTracker {
    private int direction;

    public RotateTracker (GraphicalEditPart owner, int direction) {
        super (owner, direction);
        this.direction = direction;
    }

    private boolean isRotationRequired () {
        boolean result = true;
        for (int i = 0;
        i < getOperationSet ().size () && result; i ++) {
            result = getOperationSet ().get (i) instanceof IRotatableEditPart ? ((IRotatableEditPart) getOperationSet ().get (i)).isRotatable () : false;
        }
        return result;
    }

    protected void updateSourceRequest () {
        super.updateSourceRequest ();
        RotateShapeRequest request = (RotateShapeRequest) getSourceRequest ();
        request.setRotate (isRotationRequired ());
    }

    protected Request createSourceRequest () {
        RotateShapeRequest request;
        request = new RotateShapeRequest (REQ_RESIZE);
        request.setResizeDirection (getResizeDirection ());
        return request;
    }

    protected Cursor getDefaultCursor () {
        return isRotationRequired () ? Cursors.HAND : Cursors.getDirectionalCursor (direction);
    }

}

