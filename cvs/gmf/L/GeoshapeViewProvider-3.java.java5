package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.providers;

import java.util.HashMap;

import java.util.Map;

import org.eclipse.core.runtime.IAdaptable;

import org.eclipse.gmf.runtime.diagram.core.internal.services.view.AbstractViewProvider;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.views.factories.GeoShapeViewFactory;

import org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.views.factories.LineViewFactory;

import org.eclipse.gmf.runtime.notation.View;

public class GeoshapeViewProvider extends AbstractViewProvider {
    private Map shapeMap = new HashMap ();

    {
        shapeMap.put (GeoshapeConstants.TOOL_OVAL, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_TRIANGLE, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_RECTANGLE, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_SHADOWRECTANGLE, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_3DRECTANGLE, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_ROUNDRECTANGLE, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_HEXAGON, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_OCTAGON, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_PENTAGON, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_DIAMOND, GeoShapeViewFactory.class);
        shapeMap.put (GeoshapeConstants.TOOL_CYLINDER, GeoShapeViewFactory.class);
    }

    private Map connectorMap = new HashMap ();

    {
        connectorMap.put (GeoshapeConstants.TOOL_LINE, LineViewFactory.class);
    }

    protected Class getNodeViewClass (IAdaptable semanticAdapter, View containerView, String semanticHint) {
        return (Class) shapeMap.get (semanticHint);
    }

    protected Class getConnectorViewClass (IAdaptable semanticAdapter, View containerView, String semanticHint) {
        return (Class) connectorMap.get (semanticHint);
    }

}

