package org.eclipse.gmf.mappings.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.gmf.mappings.FeatureValueSpec;

import org.eclipse.gmf.mappings.GMFMapPackage;

public class FeatureValueSpecImpl extends ValueExpressionImpl implements FeatureValueSpec {
    protected EStructuralFeature feature = null;

    protected FeatureValueSpecImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFMapPackage.eINSTANCE.getFeatureValueSpec ();
    }

    public EStructuralFeature getFeature () {
        if (feature != null && feature.eIsProxy ()) {
            InternalEObject oldFeature = (InternalEObject) feature;
            feature = (EStructuralFeature) eResolveProxy (oldFeature);
            if (feature != oldFeature) {
                if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE, oldFeature, feature));

            }
        }
        return feature;
    }

    public EStructuralFeature basicGetFeature () {
        return feature;
    }

    public void setFeature (EStructuralFeature newFeature) {
        EStructuralFeature oldFeature = feature;
        feature = newFeature;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE, oldFeature, feature));

    }

    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE :
                if (resolve) return getFeature ();

                return basicGetFeature ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    public void eSet (int featureID, Object newValue) {
        switch (featureID) {
            case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE :
                setFeature ((EStructuralFeature) newValue);
                return;
        }
        super.eSet (featureID, newValue);
    }

    public void eUnset (int featureID) {
        switch (featureID) {
            case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE :
                setFeature ((EStructuralFeature) null);
                return;
        }
        super.eUnset (featureID);
    }

    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFMapPackage.FEATURE_VALUE_SPEC__FEATURE :
                return feature != null;
        }
        return super.eIsSet (featureID);
    }

}

