package org.eclipse.gmf.runtime.notation.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.runtime.notation.LineStyle;

import org.eclipse.gmf.runtime.notation.NotationPackage;

public class LineStyleImpl extends EObjectImpl implements LineStyle {
    protected static final int LINE_COLOR_EDEFAULT = 11579568;
    protected int lineColor = LINE_COLOR_EDEFAULT;

    protected LineStyleImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return NotationPackage.eINSTANCE.getLineStyle ();
    }

    public int getLineColor () {
        return lineColor;
    }

    public void setLineColor (int newLineColor) {
        int oldLineColor = lineColor;
        lineColor = newLineColor;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.LINE_STYLE__LINE_COLOR, oldLineColor, lineColor));

    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.LINE_STYLE__LINE_COLOR :
                return new Integer (getLineColor ());
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.LINE_STYLE__LINE_COLOR :
                setLineColor (((Integer) newValue).intValue ());
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.LINE_STYLE__LINE_COLOR :
                setLineColor (LINE_COLOR_EDEFAULT);
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case NotationPackage.LINE_STYLE__LINE_COLOR :
                return lineColor != LINE_COLOR_EDEFAULT;
        }
        return eDynamicIsSet (eFeature);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (lineColor: ");
        result.append (lineColor);
        result.append (')');
        return result.toString ();
    }

}

