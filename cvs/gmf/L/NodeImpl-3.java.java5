package org.eclipse.gmf.gmfgraph.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.gmf.gmfgraph.Direction;

import org.eclipse.gmf.gmfgraph.Figure;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.Node;

public class NodeImpl extends DiagramElementImpl implements Node {
    protected static final Direction RESIZE_CONSTRAINT_EDEFAULT = Direction.NONE_LITERAL;
    protected Direction resizeConstraint = RESIZE_CONSTRAINT_EDEFAULT;

    protected NodeImpl () {
        super ();
    }

    protected EClass eStaticClass () {
        return GMFGraphPackage.eINSTANCE.getNode ();
    }

    public Direction getResizeConstraint () {
        return resizeConstraint;
    }

    public void setResizeConstraint (Direction newResizeConstraint) {
        Direction oldResizeConstraint = resizeConstraint;
        resizeConstraint = newResizeConstraint == null ? RESIZE_CONSTRAINT_EDEFAULT : newResizeConstraint;
        if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, GMFGraphPackage.NODE__RESIZE_CONSTRAINT, oldResizeConstraint, resizeConstraint));

    }

    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, Class baseClass, NotificationChain msgs) {
        if (featureID >= 0) {
            switch (eDerivedStructuralFeatureID (featureID, baseClass)) {
                case GMFGraphPackage.NODE__FACETS :
                    return ((InternalEList) getFacets ()).basicRemove (otherEnd, msgs);
                default :
                    return eDynamicInverseRemove (otherEnd, featureID, baseClass, msgs);
            }
        }
        return eBasicSetContainer (null, featureID, msgs);
    }

    public Object eGet (EStructuralFeature eFeature, boolean resolve) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGraphPackage.NODE__NAME :
                return getName ();
            case GMFGraphPackage.NODE__FIGURE :
                if (resolve) return getFigure ();

                return basicGetFigure ();
            case GMFGraphPackage.NODE__FACETS :
                return getFacets ();
            case GMFGraphPackage.NODE__RESIZE_CONSTRAINT :
                return getResizeConstraint ();
        }
        return eDynamicGet (eFeature, resolve);
    }

    public void eSet (EStructuralFeature eFeature, Object newValue) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGraphPackage.NODE__NAME :
                setName ((String) newValue);
                return;
            case GMFGraphPackage.NODE__FIGURE :
                setFigure ((Figure) newValue);
                return;
            case GMFGraphPackage.NODE__FACETS :
                getFacets ().clear ();
                getFacets ().addAll ((Collection) newValue);
                return;
            case GMFGraphPackage.NODE__RESIZE_CONSTRAINT :
                setResizeConstraint ((Direction) newValue);
                return;
        }
        eDynamicSet (eFeature, newValue);
    }

    public void eUnset (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGraphPackage.NODE__NAME :
                setName (NAME_EDEFAULT);
                return;
            case GMFGraphPackage.NODE__FIGURE :
                setFigure ((Figure) null);
                return;
            case GMFGraphPackage.NODE__FACETS :
                getFacets ().clear ();
                return;
            case GMFGraphPackage.NODE__RESIZE_CONSTRAINT :
                setResizeConstraint (RESIZE_CONSTRAINT_EDEFAULT);
                return;
        }
        eDynamicUnset (eFeature);
    }

    public boolean eIsSet (EStructuralFeature eFeature) {
        switch (eDerivedStructuralFeatureID (eFeature)) {
            case GMFGraphPackage.NODE__NAME :
                return NAME_EDEFAULT == null ? name != null : ! NAME_EDEFAULT.equals (name);
            case GMFGraphPackage.NODE__FIGURE :
                return figure != null;
            case GMFGraphPackage.NODE__FACETS :
                return facets != null && ! facets.isEmpty ();
            case GMFGraphPackage.NODE__RESIZE_CONSTRAINT :
                return resizeConstraint != RESIZE_CONSTRAINT_EDEFAULT;
        }
        return eDynamicIsSet (eFeature);
    }

    public String toString () {
        if (eIsProxy ()) return super.toString ();

        StringBuffer result = new StringBuffer (super.toString ());
        result.append (" (resizeConstraint: ");
        result.append (resizeConstraint);
        result.append (')');
        return result.toString ();
    }

}

