package org.eclipse.gmf.gmfgraph;

import java.util.Arrays;

import java.util.Collections;

import java.util.List;

import org.eclipse.emf.common.util.AbstractEnumerator;

public final class Direction extends AbstractEnumerator {
    public static final int NONE = 0;
    public static final int NORTH = 1;
    public static final int SOUTH = 2;
    public static final int EAST = 4;
    public static final int WEST = 8;
    public static final int NORTH_WEST = 16;
    public static final int NORTH_EAST = 32;
    public static final int SOUTH_WEST = 64;
    public static final int SOUTH_EAST = 128;
    public static final int VERTICAL = 3;
    public static final int HORIZONTAL = 12;
    public static final Direction NONE_LITERAL = new Direction (NONE, "NONE", "NONE");
    public static final Direction NORTH_LITERAL = new Direction (NORTH, "NORTH", "NORTH");
    public static final Direction SOUTH_LITERAL = new Direction (SOUTH, "SOUTH", "SOUTH");
    public static final Direction EAST_LITERAL = new Direction (EAST, "EAST", "EAST");
    public static final Direction WEST_LITERAL = new Direction (WEST, "WEST", "WEST");
    public static final Direction NORTH_WEST_LITERAL = new Direction (NORTH_WEST, "NORTH_WEST", "NORTH_WEST");
    public static final Direction NORTH_EAST_LITERAL = new Direction (NORTH_EAST, "NORTH_EAST", "NORTH_EAST");
    public static final Direction SOUTH_WEST_LITERAL = new Direction (SOUTH_WEST, "SOUTH_WEST", "SOUTH_WEST");
    public static final Direction SOUTH_EAST_LITERAL = new Direction (SOUTH_EAST, "SOUTH_EAST", "SOUTH_EAST");
    public static final Direction VERTICAL_LITERAL = new Direction (VERTICAL, "VERTICAL", "VERTICAL");
    public static final Direction HORIZONTAL_LITERAL = new Direction (HORIZONTAL, "HORIZONTAL", "HORIZONTAL");
    private static final Direction [] VALUES_ARRAY = new Direction [] {NONE_LITERAL, NORTH_LITERAL, SOUTH_LITERAL, EAST_LITERAL, WEST_LITERAL, NORTH_WEST_LITERAL, NORTH_EAST_LITERAL, SOUTH_WEST_LITERAL, SOUTH_EAST_LITERAL, VERTICAL_LITERAL, HORIZONTAL_LITERAL,};
    public static final List VALUES = Collections.unmodifiableList (Arrays.asList (VALUES_ARRAY));

    public static Direction get (String literal) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            Direction result = VALUES_ARRAY [i];
            if (result.toString ().equals (literal)) {
                return result;
            }
        }
        return null;
    }

    public static Direction getByName (String name) {
        for (int i = 0;
        i < VALUES_ARRAY.length; ++ i) {
            Direction result = VALUES_ARRAY [i];
            if (result.getName ().equals (name)) {
                return result;
            }
        }
        return null;
    }

    public static Direction get (int value) {
        switch (value) {
            case NONE :
                return NONE_LITERAL;
            case NORTH :
                return NORTH_LITERAL;
            case SOUTH :
                return SOUTH_LITERAL;
            case EAST :
                return EAST_LITERAL;
            case WEST :
                return WEST_LITERAL;
            case NORTH_WEST :
                return NORTH_WEST_LITERAL;
            case NORTH_EAST :
                return NORTH_EAST_LITERAL;
            case SOUTH_WEST :
                return SOUTH_WEST_LITERAL;
            case SOUTH_EAST :
                return SOUTH_EAST_LITERAL;
            case VERTICAL :
                return VERTICAL_LITERAL;
            case HORIZONTAL :
                return HORIZONTAL_LITERAL;
        }
        return null;
    }

    private Direction (int value, String name, String literal) {
        super (value, name, literal);
    }

}

