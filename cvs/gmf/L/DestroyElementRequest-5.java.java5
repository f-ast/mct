package org.eclipse.gmf.runtime.emf.type.core.requests;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.transaction.TransactionalEditingDomain;

import org.eclipse.emf.transaction.util.TransactionUtil;

import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;

import org.eclipse.gmf.runtime.emf.type.core.edithelper.AbstractEditHelper;

public class DestroyElementRequest extends DestroyRequest {
    private EObject elementToDestroy;
    private DestroyElementCommand basicDestroyCommand;

    public DestroyElementRequest (TransactionalEditingDomain editingDomain, boolean confirmationRequired) {
        this (editingDomain, null, confirmationRequired);
    }

    public DestroyElementRequest (TransactionalEditingDomain editingDomain, EObject elementToDestroy, boolean confirmationRequired) {
        super (editingDomain, confirmationRequired);
        this.elementToDestroy = elementToDestroy;
    }

    public DestroyElementRequest (boolean confirmationRequired) {
        this (null, null, confirmationRequired);
    }

    public DestroyElementRequest (EObject elementToDestroy, boolean confirmationRequired) {
        this (TransactionUtil.getEditingDomain (elementToDestroy), elementToDestroy, confirmationRequired);
    }

    public EObject getElementToDestroy () {
        return elementToDestroy;
    }

    public void setElementToDestroy (EObject elementToDestroy) {
        this.elementToDestroy = elementToDestroy;
    }

    public EObject getContainer () {
        if (getElementToDestroy () != null) {
            return getElementToDestroy ().eContainer ();
        }
        return null;
    }

    public TransactionalEditingDomain getEditingDomain () {
        TransactionalEditingDomain result = super.getEditingDomain ();
        if (result == null) {
            result = TransactionUtil.getEditingDomain (getElementToDestroy ());
        }
        return result;
    }

    public void setBasicDestroyCommand (DestroyElementCommand command) {
        basicDestroyCommand = command;
    }

    public DestroyElementCommand getBasicDestroyCommand () {
        return basicDestroyCommand;
    }

}

