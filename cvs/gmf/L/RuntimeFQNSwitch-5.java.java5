package org.eclipse.gmf.gmfgraph.util;

import java.util.Arrays;

import java.util.Iterator;

import org.eclipse.emf.common.util.UniqueEList;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.gmf.gmfgraph.FigureGallery;

import org.eclipse.gmf.gmfgraph.GMFGraphPackage;

import org.eclipse.gmf.gmfgraph.GridLayout;

import org.eclipse.gmf.gmfgraph.GridLayoutData;

import org.eclipse.gmf.gmfgraph.Label;

import org.eclipse.gmf.gmfgraph.PolylineConnection;

public class RuntimeFQNSwitch extends PureGEFFigureQualifiedNameSwitch {

    protected void collectDependencies (FigureGallery gallery, UniqueEList result) {
        super.collectDependencies (gallery, result);
        final String pluginRuntimeDraw2d = "org.eclipse.gmf.runtime.draw2d.ui";
        if (usesEClassWithID (gallery, new int [] {GMFGraphPackage.POLYLINE_CONNECTION, GMFGraphPackage.LABEL})) {
            result.add (pluginRuntimeDraw2d);
        }
    }

    private boolean usesEClassWithID (FigureGallery gallery, int [] ids) {
        Arrays.sort (ids);
        for (Iterator it = gallery.eAllContents ();
        it.hasNext ();) {
            Object next = it.next ();
            assert next instanceof EObject;
            if (Arrays.binarySearch (ids, ((EObject) next).eClass ().getClassifierID ()) >= 0) {
                return true;
            }
        }
        return false;
    }

    public Object caseGridLayout (GridLayout object) {
        return "org.eclipse.gmf.internal.codegen.draw2d.GridLayout";
    }

    public Object caseGridLayoutData (GridLayoutData object) {
        return "org.eclipse.gmf.internal.codegen.draw2d.GridLayoutData";
    }

    public Object casePolylineConnection (PolylineConnection object) {
        return "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx";
    }

    public Object caseLabel (Label object) {
        return "org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel";
    }

}

