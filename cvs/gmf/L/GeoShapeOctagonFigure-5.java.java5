package org.eclipse.gmf.runtime.diagram.ui.geoshapes.internal.draw2d.figures;

import org.eclipse.draw2d.geometry.Point;

import org.eclipse.draw2d.geometry.PointList;

import org.eclipse.draw2d.geometry.PrecisionPoint;

import org.eclipse.draw2d.geometry.Rectangle;

import org.eclipse.gmf.runtime.draw2d.ui.geometry.PrecisionPointList;

public class GeoShapeOctagonFigure extends GeoShapePolygonFigure {
    private static double factor = 1.0 / (2.0 + Math.sqrt (2.0));

    public GeoShapeOctagonFigure (int width, int height, int spacing) {
        super (width, height, spacing);
    }

    public GeoShapeOctagonFigure (int size, int spacing) {
        super (size, size, spacing);
    }

    protected PointList calculatePoints (Rectangle rect) {
        double xOffset = rect.preciseWidth () * factor;
        double yOffset = rect.preciseHeight () * factor;
        PointList points = new PrecisionPointList ();
        Point p1 = new PrecisionPoint (rect.preciseX (), rect.preciseY () + yOffset);
        Point p2 = new PrecisionPoint (rect.preciseX () + xOffset, rect.preciseY ());
        Point p3 = new PrecisionPoint (rect.preciseX () + rect.preciseWidth () - xOffset, rect.preciseY ());
        Point p4 = new PrecisionPoint (rect.preciseX () + rect.preciseWidth () - 1, rect.preciseY () + yOffset);
        Point p5 = new PrecisionPoint (p4.preciseX (), rect.preciseY () + rect.preciseHeight () - yOffset);
        Point p6 = new PrecisionPoint (p3.preciseX (), rect.preciseY () + rect.preciseHeight () - 1);
        Point p7 = new PrecisionPoint (p2.preciseX (), p6.preciseY ());
        Point p8 = new PrecisionPoint (rect.preciseX (), p5.preciseY ());
        points.addPoint (p1);
        points.addPoint (p2);
        points.addPoint (p3);
        points.addPoint (p4);
        points.addPoint (p5);
        points.addPoint (p6);
        points.addPoint (p7);
        points.addPoint (p8);
        points.addPoint (p1);
        return points;
    }

}

