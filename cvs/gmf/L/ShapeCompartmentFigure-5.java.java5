package org.eclipse.gmf.runtime.diagram.ui.figures;

import java.beans.PropertyChangeListener;

import org.eclipse.draw2d.FreeformLayer;

import org.eclipse.draw2d.FreeformLayout;

import org.eclipse.draw2d.FreeformViewport;

import org.eclipse.draw2d.IFigure;

import org.eclipse.draw2d.MarginBorder;

import org.eclipse.draw2d.Orientable;

import org.eclipse.draw2d.ScrollPane;

import org.eclipse.draw2d.geometry.Dimension;

import org.eclipse.draw2d.geometry.Insets;

import org.eclipse.gmf.runtime.draw2d.ui.figures.ListScrollBar;

import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.OverlayScrollPaneLayout;

import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;

import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;

import org.eclipse.swt.SWT;

import org.eclipse.swt.graphics.Font;

import org.eclipse.swt.graphics.FontData;

public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
    public static final Font FONT_TITLE = new Font (null, new FontData ("Helvetica", 9, SWT.BOLD));

    public ShapeCompartmentFigure () {
        this (null, MapModeUtil.getMapMode ().DPtoLP (ResizableCompartmentFigure.MIN_CLIENT_DP));
    }

    public ShapeCompartmentFigure (String title) {
        this (title, MapModeUtil.getMapMode ().DPtoLP (ResizableCompartmentFigure.MIN_CLIENT_DP));
    }

    public ShapeCompartmentFigure (String title, int minClientSize) {
        super (title, minClientSize);
        configureFigure ();
    }

    public ShapeCompartmentFigure (String title, IMapMode mm) {
        super (title, mm);
        configureFigure (mm);
    }

    protected void configureFigure () {
        configureFigure (MapModeUtil.getMapMode (this));
    }

    protected void configureFigure (IMapMode mm) {
        ScrollPane scrollpane = getScrollPane ();
        scrollpane.setViewport (new FreeformViewport ());
        Insets insets = new Insets (mm.DPtoLP (1), mm.DPtoLP (2), mm.DPtoLP (1), mm.DPtoLP (0));
        Dimension size = new Dimension (mm.DPtoLP (15), mm.DPtoLP (15));
        scrollpane.setHorizontalScrollBar (new ListScrollBar (Orientable.HORIZONTAL, insets, size, mm.DPtoLP (10), mm.DPtoLP (50)));
        scrollpane.setVerticalScrollBar (new ListScrollBar (Orientable.VERTICAL, insets, size, mm.DPtoLP (10), mm.DPtoLP (50)));
        scrollpane.setScrollBarVisibility (ScrollPane.AUTOMATIC);
        scrollpane.setLayoutManager (new OverlayScrollPaneLayout ());
        IFigure contents = new FreeformLayer ();
        contents.setLayoutManager (new FreeformLayout ());
        scrollpane.setContents (contents);
        int MB = mm.DPtoLP (5);
        scrollpane.setBorder (new MarginBorder (MB, MB, MB, MB));
        int SZ = mm.DPtoLP (10);
        scrollpane.setMinimumSize (new Dimension (SZ, SZ));
        this.setFont (FONT_TITLE);
    }

    public void addPropertyChangeListener (PropertyChangeListener listener) {
        getScrollPane ().getViewport ().getVerticalRangeModel ().addPropertyChangeListener (listener);
        getScrollPane ().getViewport ().getHorizontalRangeModel ().addPropertyChangeListener (listener);
    }

    public void removePropertyChangeListener (PropertyChangeListener listener) {
        getScrollPane ().getViewport ().getVerticalRangeModel ().removePropertyChangeListener (listener);
        getScrollPane ().getViewport ().getHorizontalRangeModel ().removePropertyChangeListener (listener);
    }

}

