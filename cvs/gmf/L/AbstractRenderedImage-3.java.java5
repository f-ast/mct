package org.eclipse.gmf.runtime.draw2d.ui.render.internal;

import java.awt.image.BufferedImage;

import java.security.InvalidParameterException;

import org.eclipse.swt.graphics.Image;

import org.eclipse.gmf.runtime.draw2d.ui.render.RenderInfo;

import org.eclipse.gmf.runtime.draw2d.ui.render.RenderedImage;

import org.eclipse.gmf.runtime.draw2d.ui.render.factory.RenderedImageFactory;

import org.eclipse.gmf.runtime.draw2d.ui.render.image.ImageConverter;

abstract public class AbstractRenderedImage implements RenderedImage {

    public AbstractRenderedImage (byte [] buff, RenderInfo key) {
        if (buff == null || key == null) throw new InvalidParameterException ();

        this.buffer = new byte [buff.length];
        this.key = key;
        System.arraycopy (buff, 0, this.buffer, 0, buff.length);
    }

    private byte [] buffer = null;
    private RenderInfo key = null;
    protected Image img = null;

    public byte [] getBuffer () {
        return buffer;
    }

    public RenderInfo getKey () {
        return key;
    }

    protected void finalize () throws Throwable {
        if (img != null) {
            img.dispose ();
            img = null;
        }
        key = null;
        super.finalize ();
    }

    public RenderInfo getRenderInfo () {
        return RenderedImageFactory.createInfo (key.getWidth (), key.getHeight (), key.getFillColor (), key.getOutlineColor (), key.shouldMaintainAspectRatio (), key.shouldAntiAlias ());
    }

    public RenderedImage getNewRenderedImage (RenderInfo info) {
        if (! getRenderInfo ().equals (info)) {
            return RenderedImageFactory.getInstance (this.buffer, info);
        }
        return this;
    }

    public BufferedImage getBufferedImage () {
        return ImageConverter.convert (getSWTImage ());
    }

}

