package org.eclipse.gmf.runtime.diagram.ui.commands;

import org.eclipse.core.commands.ExecutionException;

import org.eclipse.core.runtime.NullProgressMonitor;

import org.eclipse.gef.commands.Command;

import org.eclipse.jface.util.Assert;

import org.eclipse.gmf.runtime.common.core.command.ICommand;

import org.eclipse.gmf.runtime.common.core.util.Log;

import org.eclipse.gmf.runtime.common.core.util.Trace;

import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIDebugOptions;

import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIPlugin;

import org.eclipse.gmf.runtime.diagram.ui.internal.DiagramUIStatusCodes;

public class ICommandProxy extends Command {
    private ICommand iCommand;

    public ICommandProxy (ICommand iCommand) {
        super (iCommand.getLabel ());
        Assert.isNotNull (iCommand);
        this.iCommand = iCommand;
    }

    public ICommand getICommand () {
        return iCommand;
    }

    public boolean canExecute () {
        return getICommand ().canExecute ();
    }

    public boolean canUndo () {
        return getICommand ().canUndo ();
    }

    public void execute () {
        try {
            getICommand ().execute (new NullProgressMonitor (), null);
        } catch (ExecutionException e) {
            Trace.catching (DiagramUIPlugin.getInstance (), DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass (), "execute", e);
            Log.error (DiagramUIPlugin.getInstance (), DiagramUIStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
        }
    }

    public void redo () {
        try {
            getICommand ().redo (new NullProgressMonitor (), null);
        } catch (ExecutionException e) {
            Trace.catching (DiagramUIPlugin.getInstance (), DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass (), "redo", e);
            Log.error (DiagramUIPlugin.getInstance (), DiagramUIStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
        }
    }

    public void undo () {
        try {
            getICommand ().undo (new NullProgressMonitor (), null);
        } catch (ExecutionException e) {
            Trace.catching (DiagramUIPlugin.getInstance (), DiagramUIDebugOptions.EXCEPTIONS_CATCHING, getClass (), "undo", e);
            Log.error (DiagramUIPlugin.getInstance (), DiagramUIStatusCodes.COMMAND_FAILURE, e.getLocalizedMessage (), e);
        }
    }

}

