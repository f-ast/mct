package org.eclipse.gmf.graphdef.editor.edit.policies;

import java.util.Iterator;

import org.eclipse.emf.ecore.EAnnotation;

import org.eclipse.gef.commands.Command;

import org.eclipse.gef.commands.CompoundCommand;

import org.eclipse.gmf.graphdef.editor.edit.parts.Ellipse3EditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.FigureDescriptorEditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.FigureGalleryFiguresEditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.Polyline3EditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.Rectangle3EditPart;

import org.eclipse.gmf.graphdef.editor.edit.parts.RoundedRectangle3EditPart;

import org.eclipse.gmf.graphdef.editor.part.GMFGraphVisualIDRegistry;

import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;

import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;

import org.eclipse.gmf.runtime.notation.Node;

import org.eclipse.gmf.runtime.notation.View;

public class FigureGalleryItemSemanticEditPolicy extends GMFGraphBaseItemSemanticEditPolicy {

    protected Command getDestroyElementCommand (DestroyElementRequest req) {
        CompoundCommand cc = getDestroyEdgesCommand ();
        addDestroyChildNodesCommand (cc);
        addDestroyShortcutsCommand (cc);
        View view = (View) getHost ().getModel ();
        if (view.getEAnnotation ("Shortcut") != null) {
            req.setElementToDestroy (view);
        }
        cc.add (getGEFWrapper (new DestroyElementCommand (req)));
        return cc.unwrap ();
    }

    protected void addDestroyChildNodesCommand (CompoundCommand cmd) {
        View view = (View) getHost ().getModel ();
        EAnnotation annotation = view.getEAnnotation ("Shortcut");
        if (annotation != null) {
            return;
        }
        for (Iterator it = view.getChildren ().iterator ();
        it.hasNext ();) {
            Node node = (Node) it.next ();
            switch (GMFGraphVisualIDRegistry.getVisualID (node)) {
                case FigureGalleryFiguresEditPart.VISUAL_ID :
                    for (Iterator cit = node.getChildren ().iterator ();
                    cit.hasNext ();) {
                        Node cnode = (Node) cit.next ();
                        switch (GMFGraphVisualIDRegistry.getVisualID (cnode)) {
                            case FigureDescriptorEditPart.VISUAL_ID :
                                cmd.add (getDestroyElementCommand (cnode));
                                break;
                            case Rectangle3EditPart.VISUAL_ID :
                                cmd.add (getDestroyElementCommand (cnode));
                                break;
                            case Ellipse3EditPart.VISUAL_ID :
                                cmd.add (getDestroyElementCommand (cnode));
                                break;
                            case RoundedRectangle3EditPart.VISUAL_ID :
                                cmd.add (getDestroyElementCommand (cnode));
                                break;
                            case Polyline3EditPart.VISUAL_ID :
                                cmd.add (getDestroyElementCommand (cnode));
                                break;
                        }
                    }
                    break;
            }
        }
    }

}

