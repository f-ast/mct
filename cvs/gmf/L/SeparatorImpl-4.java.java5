package org.eclipse.gmf.codegen.gmfgen.impl;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.gmf.codegen.gmfgen.GMFGenPackage;

import org.eclipse.gmf.codegen.gmfgen.Separator;

import org.eclipse.gmf.codegen.gmfgen.ToolGroup;

public class SeparatorImpl extends EObjectImpl implements Separator {

    protected SeparatorImpl () {
        super ();
    }

    @Override
    protected EClass eStaticClass () {
        return GMFGenPackage.eINSTANCE.getSeparator ();
    }

    public ToolGroup getGroup () {
        if (eContainerFeatureID != GMFGenPackage.SEPARATOR__GROUP) return null;

        return (ToolGroup) eContainer ();
    }

    @Override
    public NotificationChain eInverseAdd (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.SEPARATOR__GROUP :
                if (eInternalContainer () != null) msgs = eBasicRemoveFromContainer (msgs);

                return eBasicSetContainer (otherEnd, GMFGenPackage.SEPARATOR__GROUP, msgs);
        }
        return super.eInverseAdd (otherEnd, featureID, msgs);
    }

    @Override
    public NotificationChain eInverseRemove (InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case GMFGenPackage.SEPARATOR__GROUP :
                return eBasicSetContainer (null, GMFGenPackage.SEPARATOR__GROUP, msgs);
        }
        return super.eInverseRemove (otherEnd, featureID, msgs);
    }

    @Override
    public NotificationChain eBasicRemoveFromContainerFeature (NotificationChain msgs) {
        switch (eContainerFeatureID) {
            case GMFGenPackage.SEPARATOR__GROUP :
                return eInternalContainer ().eInverseRemove (this, GMFGenPackage.TOOL_GROUP__ENTRIES, ToolGroup.class, msgs);
        }
        return super.eBasicRemoveFromContainerFeature (msgs);
    }

    @Override
    public Object eGet (int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case GMFGenPackage.SEPARATOR__GROUP :
                return getGroup ();
        }
        return super.eGet (featureID, resolve, coreType);
    }

    @Override
    public boolean eIsSet (int featureID) {
        switch (featureID) {
            case GMFGenPackage.SEPARATOR__GROUP :
                return getGroup () != null;
        }
        return super.eIsSet (featureID);
    }

}

