package org.eclipse.gmf.runtime.diagram.ui.figures;

import java.beans.PropertyChangeListener;

import org.eclipse.draw2d.FreeformLayer;

import org.eclipse.draw2d.FreeformLayout;

import org.eclipse.draw2d.FreeformViewport;

import org.eclipse.draw2d.IFigure;

import org.eclipse.draw2d.MarginBorder;

import org.eclipse.draw2d.ScrollPane;

import org.eclipse.draw2d.geometry.Dimension;

import org.eclipse.gmf.runtime.diagram.ui.layout.FreeFormLayoutEx;

import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.AnimatableScrollPane;

import org.eclipse.gmf.runtime.draw2d.ui.internal.figures.OverlayScrollPaneLayout;

import org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode;

import org.eclipse.gmf.runtime.draw2d.ui.mapmode.MapModeUtil;

import org.eclipse.swt.SWT;

import org.eclipse.swt.graphics.Font;

import org.eclipse.swt.graphics.FontData;

public class ShapeCompartmentFigure extends ResizableCompartmentFigure {
    public static final Font FONT_TITLE = new Font (null, new FontData ("Helvetica", 9, SWT.BOLD));

    public ShapeCompartmentFigure (String title, IMapMode mm) {
        super (title, mm);
    }

    protected AnimatableScrollPane createScrollpane (IMapMode mm) {
        configureFigure (mm);
        return (AnimatableScrollPane) getScrollPane ();
    }

    protected void configureFigure () {
        configureFigure (MapModeUtil.getMapMode (this));
    }

    protected void configureFigure (IMapMode mm) {
        ScrollPane scrollpane = getScrollPane ();
        if (scrollpane == null) {
            scrollpane = scrollPane = new AnimatableScrollPane ();
        }
        scrollpane.setViewport (new FreeformViewport ());
        scrollPane.setScrollBarVisibility (ScrollPane.AUTOMATIC);
        scrollpane.setLayoutManager (new OverlayScrollPaneLayout ());
        IFigure contents = new BorderItemsAwareFreeFormLayer ();
        contents.setLayoutManager (new FreeFormLayoutEx ());
        scrollpane.setContents (contents);
        int MB = mm.DPtoLP (5);
        scrollpane.setBorder (new MarginBorder (MB, MB, MB, MB));
        int SZ = mm.DPtoLP (10);
        scrollpane.setMinimumSize (new Dimension (SZ, SZ));
        this.setFont (FONT_TITLE);
    }

    public void addPropertyChangeListener (PropertyChangeListener listener) {
        getScrollPane ().getViewport ().getVerticalRangeModel ().addPropertyChangeListener (listener);
        getScrollPane ().getViewport ().getHorizontalRangeModel ().addPropertyChangeListener (listener);
    }

    public void removePropertyChangeListener (PropertyChangeListener listener) {
        getScrollPane ().getViewport ().getVerticalRangeModel ().removePropertyChangeListener (listener);
        getScrollPane ().getViewport ().getHorizontalRangeModel ().removePropertyChangeListener (listener);
    }

}

