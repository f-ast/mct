head	1.4;
access;
symbols
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	M5_10:1.3
	S20060303-1600:1.3
	I20060227-1730:1.3
	I20060216-1945:1.3
	I20060210-1715:1.2
	I20060209-1815:1.2
	I20060203-0830:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.2
	M4_10:1.2
	I20060107-1100:1.2
	I20060105-1630:1.2
	I20051230-1230:1.2
	I20051223-1100:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.4
date	2006.03.07.02.40.42;	author ldamus;	state dead;
branches;
next	1.3;

1.3
date	2006.02.13.19.11.05;	author ldamus;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.25.16;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.26.47;	author sshaw;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[129773] gmf_head cdamus 060306 EMFCoreUtil.destroy() cannot destroy non-contained dependents
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.emf.commands.core.commands;

import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.gmf.runtime.common.core.command.CommandResult;
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;

/**
 * A command that destroys model elements.
 * 
 * @@author khussey
 */
public class DestroyEObjectCommand
	extends AbstractTransactionalCommand {

	/**
	 * The list of elements to be destroyed.
	 */
	private final List elements;

	/**
	 * Retrieves the value of the <code>elements</code> instance variable.
	 * 
	 * @@return The value of the <code>elements</code> instance variable.
	 */
	protected List getElements() {
		return elements;
	}

	/**
	 * Constructs a new destroy element command with the specified label,
	 * model operation context, and element.
	 * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param label The label for the new command.
	 * @@param element The element to be destroyed.
	 */
	public DestroyEObjectCommand(TransactionalEditingDomain editingDomain, String label, EObject element) {

		this(editingDomain, label, Arrays.asList(new EObject[] {element }));
	}

	/**
	 * Constructs a new destroy element command with the specified label,
	 * and list of elements.
	 * 
     * @@param editingDomain
     *            the editing domain through which model changes are made
	 * @@param label The label for the new command.
	 * @@param elements The list of elements to be destroyed.
	 */
	public DestroyEObjectCommand(TransactionalEditingDomain editingDomain, String label, List elements) {

		super(editingDomain, label, getWorkspaceFiles(elements));

		this.elements = elements;
	}

	/**
	 * Executes this command by destroying the specified element(s).
	 */
	protected CommandResult doExecuteWithResult(
            IProgressMonitor progressMonitor, IAdaptable info)
        throws ExecutionException {
        
		for (Iterator i = getElements().iterator(); i.hasNext();) {
			EObject element = (EObject) i.next();

			if (element.eResource() != null) {
				EMFCoreUtil.destroy(element);
			}
		}
		return CommandResult.newOKCommandResult();
	}

}
@


1.3
log
@[112826] gmf_head ldamus 060213 Adopt Eclipse 3.1 Operation History Framework
@
text
@@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2004 IBM Corporation and others.
d18 2
d22 1
a22 1

d24 2
a25 3
import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand;
import org.eclipse.gmf.runtime.emf.core.edit.MObjectState;
import org.eclipse.gmf.runtime.emf.core.util.EObjectUtil;
d33 1
a33 1
	extends AbstractModelCommand {
d53 2
d58 1
a58 1
	public DestroyEObjectCommand(String label, EObject element) {
d60 1
a60 1
		this(label, Arrays.asList(new EObject[] {element }));
d67 2
d72 1
a72 1
	public DestroyEObjectCommand(String label, List elements) {
d74 1
a74 1
		super(label, elements.isEmpty() ? null : (EObject) (elements.get(0)));
a80 2
	 * 
	 * @@see AbstractCommand#doExecute(IProgressMonitor)
d82 4
a85 1
	protected CommandResult doExecute(IProgressMonitor progressMonitor) {
d89 2
a90 3
			MObjectState elementState = EObjectUtil.getState(element);
			if (MObjectState.DETACHED != elementState) {
				EObjectUtil.destroy(element);
d93 1
a93 1
		return newOKCommandResult();
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2004.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

