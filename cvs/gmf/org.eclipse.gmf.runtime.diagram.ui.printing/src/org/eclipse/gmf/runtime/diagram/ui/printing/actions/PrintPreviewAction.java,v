head	1.8;
access;
symbols
	v20081020-0700:1.8
	v20080911-1728:1.8
	v20080911-1506:1.8
	v20080722-1827:1.8
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080407-2250:1.7
	v20080407-0930:1.7
	v20080404-1111:1.7
	v20080328-1605:1.7
	v20080322-0000:1.7
	v20080222-1200:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070809-0000:1.6
	R2_0_maintenance:1.6.0.2
	R2_0:1.6
	R4_20:1.6
	v20070621-0000:1.6
	RC3_20:1.6
	v20070601-1400:1.6
	v20070330-1300:1.6
	v20060316-0600:1.6
	v20070208-1800:1.6
	v20070202-0200:1.5.2.1
	M4_20:1.6
	v20061218-1500:1.5.2.1
	v20061214-0000:1.6
	M3_20:1.6
	v20061117-0800:1.6
	v20061027-1200:1.5.2.1
	v20061020-1000:1.5.2.1
	v20061013-1330:1.6
	v20060919-0800:1.5.2.1
	M1_20:1.5
	v20060721-1130:1.5.2.1
	v20060713-1700:1.5.2.1
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060616-1200:1.5
	v20060531-1730:1.5
	I20060424-0500:1.5
	I20060424-0300:1.4
	M6_10:1.4
	I20060407-1200:1.4
	I20060331-1000:1.4
	I20060324-0300:1.4
	I20060317-1300:1.4
	I20060317-1200:1.4
	I20060316-1300:1.4
	I20060309-1300:1.4
	M5_10:1.4
	S20060303-1600:1.4
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.3
	M4_10:1.3
	I20060107-1100:1.3
	I20060105-1630:1.3
	I20051230-1230:1.3
	I20051223-1100:1.3
	I20051201-1800:1.3
	I20051124-2000:1.2
	M3_10:1.2
	I20051118-1245:1.2
	I20051111-1800:1.2
	I20051106-0900:1.2
	v20051030:1.2;
locks; strict;
comment	@# @;


1.8
date	2008.04.24.14.45.40;	author ahunter;	state Exp;
branches;
next	1.7;
commitid	6ec548109d134567;

1.7
date	2008.03.07.16.51.36;	author ahunter;	state Exp;
branches;
next	1.6;
commitid	29ec47d172944567;

1.6
date	2006.10.03.15.03.03;	author ahunter;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.18.20.51.18;	author cmahoney;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2006.02.07.20.25.34;	author ldamus;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.25.19.38.16;	author cmahoney;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.12.21.28.04;	author sshaw;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.30.03.18.52;	author sshaw;	state Exp;
branches;
next	;

1.5.2.1
date	2006.07.11.18.02.48;	author cmahoney;	state Exp;
branches;
next	;


desc
@@


1.8
log
@[227373] gmf-head jbruck 080424 [Printing] Combined commit for Bug 228057 , Bug 227796 , Bug 227006 and Bug 227373
@
text
@/******************************************************************************
 * Copyright (c) 2002, 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    IBM Corporation - initial API and implementation 
 ****************************************************************************/

package org.eclipse.gmf.runtime.diagram.ui.printing.actions;

import org.eclipse.gmf.runtime.common.ui.action.actions.IPrintActionHelper;
import org.eclipse.gmf.runtime.diagram.ui.printing.internal.l10n.DiagramUIPrintingMessages;
import org.eclipse.gmf.runtime.diagram.ui.printing.internal.printpreview.PrintPreviewHelper;
import org.eclipse.jface.action.Action;

/**
 * This is the action for print preview. It opens a dialog showing how the
 * diagram will look when printed. The <code>PrintPreviewHelper</code> passed
 * into the constructor does the actual work of the print preview. The
 * <code>IPrintActionHelper</code> passed into the constructor does the actual
 * work of showing the print settings dialog and doing the print if the user
 * were to initiate a print from within the print preview dialog.
 * 
 * @@author Wayne Diu, wdiu
 */
public class PrintPreviewAction
	extends Action {

	/**
	 * ID of the print preview action.
	 */
	public static final String ID = "printPreviewAction"; //$NON-NLS-1$

	/**
	 * Print action helper used if the user does a print from within the print preview dialog.
	 */
	private IPrintActionHelper printActionHelper;
	
	/**
	 * The <code>PrintPreviewHelper</code> on which <code>doPrintPreview()</code> is called.
	 */
	private PrintPreviewHelper printPreviewHelper;

	/**
	 * Creates a new instance.
	 * 
	 * @@param printActionHelper
	 *            the helper class used to show the print settings dialog and do
	 *            a print if the user were to try to print from within the print
	 *            preview dialog.
	 * @@param printPreviewHelper
	 *            the helper class that creates that creates the print preview
	 *            dialog
	 */
	protected PrintPreviewAction(IPrintActionHelper printActionHelper, PrintPreviewHelper printPreviewHelper) {
		setId(ID);
		setText(DiagramUIPrintingMessages.PrintPreview_ActionLabel);
		setPrintActionHelper(printActionHelper);
		setPrintPreviewHelper(printPreviewHelper);
	}
	
	/**
	 * Creates a new instance.
	 * 
	 * @@param printActionHelper
	 *            the helper class used to show the print settings dialog and
	 *            perform the actual printing if the user were to print from
	 *            within the print preview dialog.
	 */
	public PrintPreviewAction(IPrintActionHelper printActionHelper) {
		this(printActionHelper, new PrintPreviewHelper());
	}
	
	/**
	 * Opens a dialog showing how the diagram will look when printed. Uses the
	 * print preview helper and optionally the print action helper.
	 */
	public void run() {
		getPrintPreviewHelper().doPrintPreview(getPrintActionHelper());
	}

	/**
	 * Return the print action helper that helps perform the print action in
	 * the print preview dialog.
	 * @@return IPrintActionHelper the print action helper.
	 */
	private IPrintActionHelper getPrintActionHelper() {
		return printActionHelper;
	}

	/**
	 * Set the print action helper that helps perform the print action in the
	 * print preview dialog.
	 * @@param printActionHelper the IPrintActionHelper
	 */
	protected void setPrintActionHelper(IPrintActionHelper printActionHelper) {
		this.printActionHelper = printActionHelper;
	}

	/**
	 * Return the print preview helper responsible for performing the print
	 * preview.
	 * @@return PrintPreviewHelper the print preview helper.
	 */
	private PrintPreviewHelper getPrintPreviewHelper() {
		return printPreviewHelper;
	}

	/**
	 * Set the print preview helper responsible for performing the print
	 * preview.
	 * @@return printPreviewHelper the PrintPreviewHelper
	 */
	protected void setPrintPreviewHelper(PrintPreviewHelper printPreviewHelper) {
		this.printPreviewHelper = printPreviewHelper;
	}    
    
}@


1.7
log
@[196834] gmf-head jbruck 080307 [Printing] Multi-platform Diagram Printing
@
text
@a13 1
import org.eclipse.core.runtime.Platform;
@


1.6
log
@gmf_head ahunter 061003 Merge 1.0.1 Runtime to HEAD 2.0
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2006 IBM Corporation and others.
d120 1
a120 12
	}
    
    
    //TODO: remove the following two methods when printing on
    //other platforms is supported.

    /**
     * Enable the menu item if Platform is running on Windows.
     */
    public boolean isEnabled() {
        return isWindows();
    }
a121 6
    private boolean isWindows() {
        if (Platform.getOS() != null) 
            if (Platform.getOS().startsWith(Platform.OS_WIN32))
                return true;
        return false;
    }
@


1.5
log
@Bugzilla#109422 gmf_head cmahoney 060418 Remove deprecated API
@
text
@d14 1
d121 18
a138 1

@


1.5.2.1
log
@Bugzilla#145823 gmf_R1_0_maintenance cmahoney 060711 Print Preview enabled on non windows
Contributed by: Syed Atif Ali
@
text
@a13 1
import org.eclipse.core.runtime.Platform;
d120 1
a120 18
    
    
    //TODO: remove the following two methods when printing on
    //other platforms is supported.

    /**
     * Enable the menu item if Platform is running on Windows.
     */
    public boolean isEnabled() {
        return isWindows();
    }
    
    private boolean isWindows() {
        if (Platform.getOS() != null) 
            if (Platform.getOS().startsWith(Platform.OS_WIN32))
                return true;
        return false;
    }
@


1.4
log
@[126635] gmf_head wdiu 060207 Can't instantiate PrintPreviewAction without using internal API
@
text
@a56 1
	 * @@deprecated please use the other constructor as this will be protected
d58 1
a58 1
	public PrintPreviewAction(IPrintActionHelper printActionHelper, PrintPreviewHelper printPreviewHelper) {
@


1.3
log
@Bugzilla#113812 gmf_head cmahoney 051125 Deprecating DiagramResourceManager
@
text
@d2 1
a2 1
 * Copyright (c) 2002, 2005 IBM Corporation and others.
d40 1
a40 1
	IPrintActionHelper printActionHelper;
d45 1
a45 1
	PrintPreviewHelper printPreviewHelper;
d57 1
d62 14
a75 2
		this.printActionHelper = printActionHelper;
		this.printPreviewHelper = printPreviewHelper;
d77 1
a77 1

d83 37
a119 1
		printPreviewHelper.doPrintPreview(printActionHelper);
d122 1
a122 1
}
@


1.2
log
@Bugzilla 108765 gmf_head tmacdoug 050912 - Update copyrights of GMF and EMFT plugins content to Eclipse copyright (EPL)
@
text
@a13 2
import org.eclipse.jface.action.Action;

d15 1
a15 1
import org.eclipse.gmf.runtime.diagram.ui.printing.internal.l10n.DiagramPrintingResourceManager;
d17 1
d60 1
a60 1
		setText(DiagramPrintingResourceManager.getI18NString("PrintPreview.ActionLabel")); //$NON-NLS-1$
@


1.1
log
@Refactoring of the IBM gmf runtime contribution to the org.eclipse.gmf.runtime namespace.
@
text
@d1 11
a11 9
/*
 *+------------------------------------------------------------------------+
 *| Licensed Materials - Property of IBM                                   |
 *| (C) Copyright IBM Corp. 2002, 2005.  All Rights Reserved.              |
 *|                                                                        |
 *| US Government Users Restricted Rights - Use, duplication or disclosure |
 *| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
 *+------------------------------------------------------------------------+
 */
@

