<<<
public class DrawApplication extends JFrame implements DrawingEditor, PaletteListener {
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<

    protected JMenu createFileMenu () {
        JMenu menu = new JMenu ("File");
        JMenuItem mi = new JMenuItem ("New", new MenuShortcut ('n').getKey ());
        mi.addActionListener (new ActionListener () {

            public void actionPerformed (ActionEvent event);
        }

        );
        menu.add (mi);
        mi = new JMenuItem ("Open...", new MenuShortcut ('o').getKey ());
        mi.addActionListener (new ActionListener () {

            public void actionPerformed (ActionEvent event);
        }

        );
        menu.add (mi);
        mi = new JMenuItem ("Save As...", new MenuShortcut ('s').getKey ());
        mi.addActionListener (new ActionListener () {

            public void actionPerformed (ActionEvent event);
        }

        );
        menu.add (mi);
        menu.addSeparator ();
        mi = new JMenuItem ("Print...", new MenuShortcut ('p').getKey ());
        mi.addActionListener (new ActionListener () {

            public void actionPerformed (ActionEvent event);
        }

        );
        menu.add (mi);
        menu.addSeparator ();
        mi = new JMenuItem ("Exit");
        mi.addActionListener (new ActionListener () {

            public void actionPerformed (ActionEvent event);
        }

        );
        menu.add (mi);
        return menu;
    } <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<

    protected void initDrawing (); <<<
    <<<
    <<<
    <<<
    <<<

    public Drawing drawing (); <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<

    public void newWindow (); <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<
    <<<

    public void setDrawing (Drawing drawing); <<<
    <<<

}

>>>
public class DrawApplication extends JFrame implements DrawingEditor, PaletteListener, VersionRequester {
    >>>
    >>>
    >>>
    >>>
    >>>

    protected DrawingView createDrawingView (Drawing newDrawing); >>>
    >>>
    >>>
    >>>
    >>>
    >>>
    >>>
    >>>
    >>>

    protected JMenu createFileMenu () {
        CommandMenu menu = new CommandMenu ("File");
        Command cmd = new AbstractCommand ("New", this, false) {

            public void execute ();
        }

        ;
        menu.add (cmd, new MenuShortcut ('n'));
        cmd = new AbstractCommand ("Open...", this, false) {

            public void execute ();
        }

        ;
        menu.add (cmd, new MenuShortcut ('o'));
        cmd = new AbstractCommand ("Save As...", this, true) {

            public void execute ();
        }

        ;
        menu.add (cmd, new MenuShortcut ('s'));
        menu.addSeparator ();
        cmd = new AbstractCommand ("Print...", this, true) {

            public void execute ();
        }

        ;
        menu.add (cmd, new MenuShortcut ('p'));
        menu.addSeparator ();
        cmd = new AbstractCommand ("Exit", this, true) {

            public void execute ();
        }

        ;
        menu.add (cmd);
        return menu;
    } >>>
    >>>
    >>>
    >>>
    >>>

    protected String getDefaultDrawingTitle (); >>>
    >>>
    >>>

    protected VersionControlStrategy getVersionControlStrategy ();
    final protected void setStorageFormatManager (StorageFormatManager storageFormatManager); protected static String fgUntitled = "untitled";
    protected static int winCount = 0;
    >>>
    >>>
    >>>
    >>>
    >>>

    protected void fireViewCreatedEvent (DrawingView view);
    protected void fireViewDestroyingEvent (DrawingView view);
    protected void fireViewSelectionChangedEvent (DrawingView oldView, DrawingView newView); >>>

    protected void open (DrawingView newDrawingView); >>>
    >>>

    protected void setUndoManager (UndoManager newUndoManager);
    protected void setView (DrawingView newView); >>>
    >>>

    public DrawingView [] views (); >>>
    >>>
    >>>
    >>>

    public String [] getRequiredVersions (); >>>
    >>>

    public UndoManager getUndoManager (); >>>
    >>>
    >>>
    >>>
    >>>

    public void addViewChangeListener (ViewChangeListener vsl); >>>
    >>>
    >>>

    public void newWindow (Drawing initialDrawing); >>>
    >>>
    >>>
    >>>
    >>>
    >>>
    >>>

    public void removeViewChangeListener (ViewChangeListener vsl); >>>
    >>>
    >>>

}

