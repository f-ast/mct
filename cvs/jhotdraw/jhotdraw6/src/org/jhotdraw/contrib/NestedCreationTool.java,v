head	1.3;
access;
symbols
	jhotdraw60b1-release:1.3
	package_rename:1.3
	directory_rename:1.2
	reorg_6x_split_initial:1.2
	MVC_PHASE1:1.2.0.4
	NEW_ATTRIBUTES:1.2.0.2
	DNOYEB1_ALPHA-2:1.1.4.3
	release_JHD54b1:1.2
	BUGFIX_670992:1.1.0.6
	DNOYEB1_ALPHA-1:1.1.4.3
	dnoyeb1:1.1.0.4
	repack:1.1.0.2
	Root_repack:1.1
	Before_FigureVisitor:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.30.00.27.33;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.04.22.39.17;	author mrfloppy;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.10.04.54.31;	author dnoyeb;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.01.15.21.04.10;	author dnoyeb;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.01.21.00.04.07;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.3
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)CreationTool2.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.contrib;

import org.jhotdraw.standard.CreationTool;
import org.jhotdraw.standard.CompositeFigure;
import org.jhotdraw.framework.Figure;
import org.jhotdraw.framework.DrawingEditor;

import java.awt.event.MouseEvent;

/**
 * @@author	Wolfram Kaiser
 * @@version <$CURRENT_VERSION$>
 */
public class NestedCreationTool extends CreationTool {
	private CompositeFigure myContainerFigure;

	public NestedCreationTool(DrawingEditor newDrawingEditor, Figure prototype) {
		super(newDrawingEditor, prototype);
	}

	public void mouseDown(MouseEvent e, int x, int y) {
		Figure figure = drawing().findFigure(e.getX(), e.getY());
		if (figure != null) {
			figure = figure.getDecoratedFigure();
			if (figure instanceof CompositeFigure) {
				setContainerFigure((CompositeFigure)figure);
				super.mouseDown(e, x, y);
			}
			else {
				toolDone();
			}
		}
		else {
			toolDone();
		}
	}

	public void mouseMove(MouseEvent e, int x, int y) {
		if ((getContainerFigure() != null) && !getContainerFigure().containsPoint(e.getX(), e.getY())) {
			// here you might want to constrain the mouse movements to the size of the
			// container figure: not sure whether this works...
			toolDone();
		}
		else {
			super.mouseMove(e, x, y);
		}
	}

	public void mouseUp(MouseEvent e, int x, int y) {
		if ((getContainerFigure() != null) && (getCreatedFigure() != null)
				&& getContainerFigure().containsPoint(e.getX(), e.getY())) {
			getContainerFigure().add(getCreatedFigure());
		}
		toolDone();
	}

	protected void setContainerFigure(CompositeFigure newContainerFigure) {
		myContainerFigure = newContainerFigure;
	}

	public CompositeFigure getContainerFigure() {
		return myContainerFigure;
	}

	protected void toolDone() {
		setCreatedFigure(null);
		setAddedFigure(null);
		setContainerFigure(null);
		editor().toolDone();
	}
}
@


1.2
log
@prepare for 5.4 release: various bug fixes
@
text
@d12 1
a12 1
package CH.ifa.draw.contrib;
d14 4
a17 4
import CH.ifa.draw.standard.CreationTool;
import CH.ifa.draw.standard.CompositeFigure;
import CH.ifa.draw.framework.Figure;
import CH.ifa.draw.framework.DrawingEditor;
@


1.1
log
@after variou merges... (before 5.4 release)
@
text
@a15 1
import CH.ifa.draw.standard.DecoratorFigure;
d33 10
a42 4
		Figure figure = getFigureWithoutDecoration(drawing().findFigure(e.getX(), e.getY()));
		if ((figure != null) && (figure instanceof CompositeFigure)) {
			setContainerFigure((CompositeFigure)figure);
			super.mouseDown(e, x, y);
a45 9
		}
	}

	private Figure getFigureWithoutDecoration(Figure peelFigure) {
		if (peelFigure instanceof DecoratorFigure) {
			return getFigureWithoutDecoration(((DecoratorFigure)peelFigure).getDecoratedFigure());
		}
		else {
			return peelFigure;
@


1.1.4.1
log
@1.  Tool now accepts DrawingViewMouseEvent as opposed to java.awt.MouseEvent and x,y ints.
2. compositeFigure now uses constrained mouse values throughout.
3. nested CreationTOol was calling drawing() before it was setting the view.  should lead to NPE.  this tool still seems broken
   i dont think its needed anymore?
4. bug in splitConnectionTool mouse down. setEndConnector(findConnector(ex, ex, c)); needs to be ex and ey
5. made some of StandardDrawingViews inner class listners protected.
@
text
@d19 2
a20 1
import CH.ifa.draw.framework.DrawingViewMouseEvent;
d33 2
a34 6
	public void mouseDown(DrawingViewMouseEvent dvme) {
		setView( dvme.getDrawingView() );
		setAnchorX( dvme.getX() );
		setAnchorY( dvme.getY() );
		
		Figure figure = getFigureWithoutDecoration(drawing().findFigure( getAnchorX(), getAnchorY()));
d37 1
a37 1
			super.mouseDown(dvme);
d53 2
a54 2
	public void mouseMove(DrawingViewMouseEvent dvme) {
		if ((getContainerFigure() != null) && !getContainerFigure().containsPoint(dvme.getMouseEvent().getX(), dvme.getMouseEvent().getY())) {
a56 1
			//why would you cancel the tool just because it ventured outside of container?
d60 1
a60 1
			super.mouseMove(dvme);
d64 1
a64 1
	public void mouseUp(DrawingViewMouseEvent dvme) {
d66 1
a66 1
				&& getContainerFigure().containsPoint(dvme.getMouseEvent().getX(), dvme.getMouseEvent().getY())) {
@


1.1.4.2
log
@
Lets have a moment of silence for DecoratorFigure.....It was a good figure ;{

Anything which happens inside the drawing after figure add must be undone before figure orphan.  It must also not
be exposed to anyobject outside the drawing.
Decorator figure retired in favor of a figureManipulator and the other functions being implemented by a composite
figure(BorderDecorator).
AdnimationDecorator retired in favor of AnimationManipulator.
A figure can have only 1 container. This is making the border tool have a hard time.

Lots of comments added

next phase:
orphan will disappear.  only add and remove remain.  All figure related resources belong to the figures and no other
object should care about figure.release.
split the figureListener into a figureContainer listener and a figureChangeListener.
Fix BorderDecorator.
Fix ConnectedText.
view.checkDamage to call drawing.update()
@
text
@d16 1
a16 1

d37 1
a37 1
		Figure figure = drawing().findFigure( getAnchorX(), getAnchorY());
d44 9
@


1.1.4.3
log
@Restored the ContainerFigure.  Its very problematic for tools, but I have a better understanding of the undo system now.
As a result I have restored most of what was their again with explanations on how it works for the next traveler...
Also fixed a few issues with grouping and ungrouping. since figures can no longer be in 2 containers at once the container
hopping that was being done by the group command would fail.  I believe border tool did similar hopping by having a figure
as part of the drawing and part of the borderFigure temporarily.  Cant do that anymore.
@
text
@d16 1
a16 1
import CH.ifa.draw.standard.DecoratorFigure;
a46 8
	private Figure getFigureWithoutDecoration(Figure peelFigure) {
		if (peelFigure instanceof DecoratorFigure) {
			return getFigureWithoutDecoration(((DecoratorFigure)peelFigure).getDecoratedFigure());
		}
		else {
			return peelFigure;
		}
	}
@


