head	1.6;
access;
symbols
	jhotdraw60b1-release:1.6
	package_rename:1.6
	directory_rename:1.5
	reorg_6x_split_initial:1.5
	MVC_PHASE1:1.3.0.10
	NEW_ATTRIBUTES:1.3.0.8
	DNOYEB1_ALPHA-2:1.3
	release_JHD54b1:1.3
	BUGFIX_670992:1.3.0.6
	DNOYEB1_ALPHA-1:1.3
	dnoyeb1:1.3.0.4
	repack:1.3.0.2
	Root_repack:1.3
	Before_FigureVisitor:1.3
	JHotDraw_5-3:1.2
	JHotDraw_5-2_merged:1.1;
locks; strict;
comment	@# @;


1.6
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.25.09.37.01;	author pmorch;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.14.18.34.17;	author pmorch;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.09.15.31.46;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.6
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)Layouter.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.contrib;

import org.jhotdraw.util.Storable;
import java.io.Serializable;
import java.awt.*;

/**
 * A Layouter encapsulates a algorithm to layout
 * a figure. It is passed on to a figure which delegates the 
 * layout task to the Layouter's layout method. 
 * The Layouter might need access to some information 
 * specific to a certain figure in order to layout it out properly.
 *
 * Note: Currently, only the GraphicalCompositeFigure uses
 *       such a Layouter to layout its child components.
 *
 * @@see		GraphicalCompositeFigure
 *
 * @@author	Wolfram Kaiser
 * @@version <$CURRENT_VERSION$>
 */
public interface Layouter extends Serializable, Storable {

	/**
	 * Calculate the layout for the figure and all its
	 * subelements. The layout is not actually performed but just
	 * its dimensions are calculated.
	 *
	 * @@param origin start point for the layout
	 * @@param corner minimum corner point for the layout
	 * @@return size including space for insets
	 */	
	public Rectangle calculateLayout(Point origin, Point corner);

	/**
	 * Method which lays out a figure. It is called by the figure
	 * if a layout task is to be performed. Implementing classes
	 * specify a certain layout algorithm in this method.
	 *
	 * @@param origin start point for the layout
	 * @@param corner minimum corner point for the layout
	 */	
	public Rectangle layout(Point origin, Point corner);

	/**
	 * Set the insets for spacing between the figure and its subfigures
	 *
	 * @@param newInsets new spacing dimensions
	 */
	public void setInsets(Insets newInsets);

	/**
	 * Get the insets for spacing between the figure and its subfigures
	 *
	 * @@return spacing dimensions
	 */	
	public Insets getInsets();

	/**
	 * Create a new instance of this type and sets the layoutable
	 */
	public Layouter create(Layoutable newLayoutable);
}
@


1.5
log
@This is a fix as described in
"StandardLayouter.calculateLayout and insets"
in the Open Discussion forum.

The return value from StandardLayouter.calculateLayout(Point, Point) did not include the insets for itself, but did grow subfigures with their respective insets (it assumed that the subfigures also did't include the insets in their return values).

However, the fact that calculateLayout did not include inset dimensions was in contradiction to SimpleLayouter and how the Layouter is used in GraphicalCompositeFigure. There insets *are* assumed to be included in the return value from calculateLayout.

StandardLayouter now includes insets in calculateLayout() and the comment in the Layouter interface has been modified to directly specify that the inset dimensions must be included

This also deprecates my two earlier proposed fixes in these two postings:
"Pls approve fix for StandardLayouter.java"
"Patch for StandardLayouter.layout weirdness"
@
text
@d12 1
a12 1
package CH.ifa.draw.contrib;
d14 1
a14 1
import CH.ifa.draw.util.Storable;
@


1.4
log
@Make comment for Layouter.create a javadoc comment
@
text
@d36 3
a38 2
	 * Calculate the layout for the figure and all its subelements. The
	 * layout is not actually performed but just its dimensions are calculated.
d42 1
@


1.3
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@d35 1
a35 1
	/*
d72 1
a72 1
}@


1.2
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d67 5
@


1.1
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)Layouter.java 5.2
d4 6
d11 1
d29 1
d31 1
@

