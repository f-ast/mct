head	1.2;
access;
symbols
	jhotdraw60b1-release:1.2
	package_rename:1.2
	directory_rename:1.1
	reorg_6x_split_initial:1.1
	MVC_PHASE1:1.1.0.10
	NEW_ATTRIBUTES:1.1.0.8
	DNOYEB1_ALPHA-2:1.1
	release_JHD54b1:1.1
	BUGFIX_670992:1.1.0.6
	DNOYEB1_ALPHA-1:1.1
	dnoyeb1:1.1.0.4
	repack:1.1.0.2
	Root_repack:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.08.17.06.29;	author mtnygard;	state Exp;
branches;
next	;


desc
@@


1.2
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@package org.jhotdraw.contrib;

import org.jhotdraw.application.DrawApplication;
import org.jhotdraw.samples.javadraw.JavaDrawApp;
import org.jhotdraw.util.StorageFormatManager;

/**
 * @@author mtnygard
 *
 * To change this generated comment edit the template variable "typecomment":
 * Window>Preferences>Java>Templates.
 * To enable and disable the creation of type comments go to
 * Window>Preferences>Java>Code Generation.
 */
public class SVGDrawApp extends JavaDrawApp {
	public static void main(String[] args) {
		SVGDrawApp window = new SVGDrawApp();
		window.open();
	}
	
	public SVGDrawApp() {
		super("JHotDraw");
	}

	/**
	 * Factory method which create a new instance of this
	 * application.
	 *
	 * @@return	newly created application
	 */
	protected DrawApplication createApplication() {
		return new SVGDrawApp();
	}

	/**
	 * Factory method to create a StorageFormatManager for supported storage formats.
	 * Different applications might want to use different storage formats and can return
	 * their own format manager by overriding this method.
	 * 
	 * TODO: Read storage formats from a config file.
	 */
	public StorageFormatManager createStorageFormatManager() {
		StorageFormatManager storageFormatManager = new StorageFormatManager();
		SVGStorageFormat format = new SVGStorageFormat();
		storageFormatManager.addStorageFormat(format);
		storageFormatManager.setDefaultStorageFormat(format);
		return storageFormatManager;
	}
}
@


1.1
log
@Add support for export to SVG.  See CH.ifa.draw.contrib.SVGStorageFormat.
Cannot presently re-import from SVG, as much semantic value is lost when
flattening output.

SVG support requires Apache Batik 1.5.
@
text
@d1 1
a1 1
package CH.ifa.draw.contrib;
d3 3
a5 3
import CH.ifa.draw.application.DrawApplication;
import CH.ifa.draw.samples.javadraw.JavaDrawApp;
import CH.ifa.draw.util.StorageFormatManager;
@

