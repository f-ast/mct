head	1.7;
access;
symbols
	jhotdraw60b1-release:1.7
	package_rename:1.7
	directory_rename:1.6
	reorg_6x_split_initial:1.6
	MVC_PHASE1:1.6.0.4
	NEW_ATTRIBUTES:1.6.0.2
	DNOYEB1_ALPHA-2:1.4.4.2
	release_JHD54b1:1.6
	BUGFIX_670992:1.4.0.6
	DNOYEB1_ALPHA-1:1.4
	dnoyeb1:1.4.0.4
	repack:1.4.0.2
	Root_repack:1.4
	Before_FigureVisitor:1.3;
locks; strict;
comment	@# @;


1.7
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.30.00.27.33;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.24.20.30.43;	author dnoyeb;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.23.07.47.26;	author mrfloppy;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2002.09.22.08.20.27;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.04.22.39.17;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	;

1.4.4.1
date	2003.01.24.20.19.20;	author dnoyeb;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2003.01.24.20.34.06;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.7
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)SimpleLayouter.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.contrib;

import org.jhotdraw.framework.FigureEnumeration;
import org.jhotdraw.framework.Figure;
import org.jhotdraw.util.StorableInput;
import org.jhotdraw.util.StorableOutput;

import java.awt.*;
import java.io.IOException;

/**
 * @@author	Wolfram Kaiser
 * @@version <$CURRENT_VERSION$>
 */
public class SimpleLayouter implements Layouter {

	/**
	 * The Layoutable which should be laid out.
	 */
	private Layoutable myLayoutable;

	/**
	 * Insets to calculate a border
	 */
	private Insets myInsets;

	static final long serialVersionUID = 2928651014089117493L;

	private SimpleLayouter() {
		// do nothing: for JDO-compliance only
	}

	public SimpleLayouter(Layoutable newLayoutable) {
		setLayoutable(newLayoutable);
		setInsets(new Insets(0, 0, 0, 0));
	}

	/**
	 * Get the figure upon which the layout strategy operates.
	 *
	 * @@return associated figure which should be laid out
	 */
	public Layoutable getLayoutable() {
		return myLayoutable;
	}

	/**
	 * Set the figure upon which the layout strategy operates.
	 *
	 * @@param	newLayoutable	Layoutable to be laid out
	 */
	public void setLayoutable(Layoutable newLayoutable) {
		myLayoutable = newLayoutable;
	}

	/**
	 * Set the insets for spacing between the figure and its subfigures
	 *
	 * @@param newInsets new spacing dimensions
	 */
	public void setInsets(Insets newInsets) {
		myInsets = newInsets;
	}

	/**
	 * Get the insets for spacing between the figure and its subfigures
	 *
	 * @@return spacing dimensions
	 */
	public Insets getInsets() {
		return myInsets;
	}

	/**
	 * Create a new instance of this type and sets the layoutable
	 */
	public Layouter create(Layoutable newLayoutable) {
		SimpleLayouter newLayouter = new SimpleLayouter(newLayoutable);
		newLayouter.setInsets((Insets)getInsets().clone());
		return newLayouter;
	}

	public Rectangle calculateLayout(Point origin, Point corner) {
		Rectangle maxRect = new Rectangle(origin);
		maxRect.add(corner);
		FigureEnumeration fe = getLayoutable().figures();
		while (fe.hasNextFigure()) {
			Figure currentFigure = fe.nextFigure();
			maxRect.union(currentFigure.displayBox());
		}
		maxRect.width += getInsets().left + getInsets().right;
		maxRect.height += getInsets().top + getInsets().bottom;
		return maxRect;
	}

	public Rectangle layout(Point origin, Point corner) {
		return calculateLayout(origin, corner);
	}

	/**
	 * Reads the contained figures from StorableInput.
	 */
	public void read(StorableInput dr) throws IOException {
		setLayoutable((Layoutable)dr.readStorable());
		setInsets(new Insets(dr.readInt(), dr.readInt(), dr.readInt(), dr.readInt()));
	}

	/**
	 * Writes the contained figures to the StorableOutput.
	 */
	public void write(StorableOutput dw) {
		dw.writeStorable(getLayoutable());
		Insets i = getInsets();
		dw.writeInt(i.top);
		dw.writeInt(i.left);
		dw.writeInt(i.bottom);
		dw.writeInt(i.right);
	}
}
@


1.6
log
@prepare for 5.4 release: various bug fixes
@
text
@d12 1
a12 1
package CH.ifa.draw.contrib;
d14 4
a17 4
import CH.ifa.draw.framework.FigureEnumeration;
import CH.ifa.draw.framework.Figure;
import CH.ifa.draw.util.StorableInput;
import CH.ifa.draw.util.StorableOutput;
@


1.5
log
@Fix [ 674243 ] GraphicalCompositeFigure not storing Layouter
fix - SimpleLayouter not fully storable
@
text
@d116 1
a116 1
		setInsets( new Insets( dr.readInt(),dr.readInt(),dr.readInt(),dr.readInt()));
d125 4
a128 4
		dw.writeInt( i.top);
		dw.writeInt( i.left);
		dw.writeInt( i.bottom);
		dw.writeInt( i.right);
@


1.4
log
@Fixed problem with TextArea figures + cascading FigureChangeEvent
@
text
@d116 1
d124 5
@


1.4.4.1
log
@Fix for [ 674243 ] GraphicalCompositeFigure not storing Layouter
@
text
@d39 2
a40 4
	/**
	 * For serilization support.
	 */
	public SimpleLayouter() {
a115 1
		setInsets( new Insets(dr.readInt(),dr.readInt(),dr.readInt(),dr.readInt()));
a122 4
		dw.writeInt( myInsets.top );
		dw.writeInt( myInsets.left );
		dw.writeInt( myInsets.bottom );
		dw.writeInt( myInsets.right );
@


1.4.4.2
log
@correction to write method
@
text
@d126 4
a129 5
		Insets i = getInsets();
		dw.writeInt( i.top );
		dw.writeInt( i.left );
		dw.writeInt( i.bottom );
		dw.writeInt( i.right );
@


1.3
log
@no message
@
text
@d96 1
@


1.2
log
@after variou merges... (before 5.4 release)
@
text
@d89 3
a91 1
		return new SimpleLayouter(newLayoutable);
d95 1
a95 1
		Rectangle maxRect = new Rectangle();
d101 2
d107 1
a107 8
		FigureEnumeration fe = getLayoutable().figures();
		while (fe.hasNextFigure()) {
			Figure currentFigure = fe.nextFigure();
			currentFigure.basicDisplayBox(origin, corner);
		}
		Rectangle r = new Rectangle(origin);
		r.add(corner);
		return r;
@


1.1
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@d16 2
d20 1
d26 17
a42 1
public class SimpleLayouter extends StandardLayouter {
d45 38
a82 1
		super(newLayoutable);
d94 3
a96 3
		FigureEnumeration enum = getLayoutable().figures();
		while (enum.hasMoreElements()) {
			Figure currentFigure = enum.nextFigure();
d103 3
a105 3
		FigureEnumeration enum = getLayoutable().figures();
		while (enum.hasMoreElements()) {
			Figure currentFigure = enum.nextFigure();
d111 14
@

