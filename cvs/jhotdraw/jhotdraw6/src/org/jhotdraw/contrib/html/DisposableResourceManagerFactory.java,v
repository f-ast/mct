head	1.4;
access;
symbols
	jhotdraw60b1-release:1.4
	package_rename:1.4
	directory_rename:1.3
	reorg_6x_split_initial:1.3
	MVC_PHASE1:1.3.0.2
	NEW_ATTRIBUTES:1.2.0.8
	DNOYEB1_ALPHA-2:1.2
	release_JHD54b1:1.2
	BUGFIX_670992:1.2.0.6
	DNOYEB1_ALPHA-1:1.2
	dnoyeb1:1.2.0.4
	repack:1.2.0.2
	Root_repack:1.2
	Before_FigureVisitor:1.2;
locks; strict;
comment	@# @;


1.4
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.22.23.58.33;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.07.12.27.28;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)DisposableResourceManagerFactory.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.contrib.html;

/**
 * DisposableResourceManagerFactory creates DisposableResourceHolders on behalf
 * of requesting clients. It automatically registers the holders with its singleton
 * standard resource manager
 *
 * @@author  Eduardo Francos - InContext
 * @@created 2 mai 2002
 * @@version <$CURRENT_VERSION$>
 */
public abstract class DisposableResourceManagerFactory {

	/** The default periodicity for resource disposal */
	public static long DEFAULT_DISPOSAL_PERIODICITY = 60000;

	/** The singleton current resource manager */
	protected static DisposableResourceManager currentManager = null;

	protected static ResourceDisposabilityStrategy currentStrategy = null;

	protected static DisposableResourceHolder holderPrototype = null;

	/**
	 * Gets the current manager.
	 *
	 * @@return   The currentManager
	 */
	public static DisposableResourceManager getManager() {
		return currentManager;
	}

	/**
	 * Sets the strategy of the DisposableResourceManagerFactory
	 * class. This is a one shot thing that should be initialized before using it
	 * so if there is already a strategy this returns without further notice.
	 *
	 * @@param strategy  The new disposalStrategy
	 */
	public static void setStrategy(ResourceDisposabilityStrategy strategy) {
		currentStrategy = strategy;
	}

	/**
	 * Returns a new standard resource holder already registered with the default
	 * resource manager
	 *
	 * @@param resource  Description of the Parameter
	 * @@return          the newly created resource holder
	 */
	public static DisposableResourceHolder createStandardHolder(Object resource) {
		// ensure the manager is set and running
		initManager();

		// now create the holder and register it
		DisposableResourceHolder holder = (DisposableResourceHolder)holderPrototype.clone();
		holder.setResource(resource);
		getManager().registerResource(holder);

		return holder;
	}

	/** Initializes the standard resource disposal manager */
	protected static void initManager() {
		if (currentManager == null) {
			// ensure we have a holder prototype
			if (holderPrototype == null) {
				holderPrototype = new StandardDisposableResourceHolder();
			}
			// ensure we have a strategy
			if (currentStrategy == null) {
				currentStrategy = new ETSLADisposalStrategy(DEFAULT_DISPOSAL_PERIODICITY);
			}
			// ensure we have a manager
			if (currentManager == null) {
			   currentManager = new StandardDisposableResourceManager(currentStrategy);
			}

			// start the whole thing
			try {
				currentManager.startDisposing();
			}
			catch (ResourceManagerNotSetException ex) {
				// we set it so we shouldn't get here
			}
		}
	}
}
@


1.3
log
@no message
@
text
@d11 1
a11 1
package CH.ifa.draw.contrib.html;
@


1.2
log
@removed remains of FigureAttributeConstant.getName() and some code-clean up
@
text
@d2 1
a2 1
 *  @@(#)TextAreaFigure.java
d4 6
a9 6
 *  Project:		JHotdraw - a GUI framework for technical drawings
 *  http://www.jhotdraw.org
 *  http://jhotdraw.sourceforge.net
 *  Copyright:	© by the original author(s) and all contributors
 *  License:		Lesser GNU Public License (LGPL)
 *  http://www.opensource.org/licenses/lgpl-license.html
d18 3
a20 3
 * @@author    Eduardo Francos - InContext
 * @@created   2 mai 2002
 * @@version   1.0
a21 1

a42 1

a53 1

a71 1

@


1.1
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@d81 1
a81 1
			if (holderPrototype == null){
@

