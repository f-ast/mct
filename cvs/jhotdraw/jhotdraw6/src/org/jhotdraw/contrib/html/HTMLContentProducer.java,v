head	1.4;
access;
symbols
	jhotdraw60b1-release:1.4
	package_rename:1.4
	directory_rename:1.3
	reorg_6x_split_initial:1.3
	MVC_PHASE1:1.3.0.2
	NEW_ATTRIBUTES:1.2.0.2
	DNOYEB1_ALPHA-2:1.1
	release_JHD54b1:1.1
	BUGFIX_670992:1.1.0.6
	DNOYEB1_ALPHA-1:1.1
	dnoyeb1:1.1.0.4
	repack:1.1.0.2
	Root_repack:1.1
	Before_FigureVisitor:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.22.23.58.33;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.04.05.21.24;	author ricardo_padilha;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)HTMLContentProducer.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.contrib.html;

import java.io.Serializable;

/**
 * HTMLContentProducer produces HTML suitable  values and encoded strings for
 * various types of values.<br>
 * It can also transform values into their HTML equivalents, like for instance
 * a mapping between font sizes in points and the HTML valid font size values.<br>
 *
 * @@author  Eduardo Francos - InContext
 * @@created 30 avril 2002
 * @@version <$CURRENT_VERSION$>
 */
public class HTMLContentProducer extends AttributeFigureContentProducer
		 implements Serializable {

	/** Table of font size equivalents between points and HTML font sizes */
	protected final static int[][] htmlFontSizeEquivalences =
			{
	// 0 to 9 points ==> size 1
			{1, 0, 9},
	// 10 to 11 points ==> size 2
			{2, 10, 11},
	// 12 to 13 points ==> size 3
			{3, 12, 13},
	// 14 to 17 points ==> size 4
			{4, 14, 17},
	// 18 to 23 points ==> size 5
			{5, 18, 23},
	// 24 to 35 points ==> size 6
			{6, 24, 35},
	// 36 and higher points ==> size 7
			{7, 36, Integer.MAX_VALUE}
			};

	/**
	 * Constructor for the HTMLContentProducer object
	 */
	public HTMLContentProducer() { }

	/**
	 * Gets the HTML content value for the requested attribute
	 *
	 * @@param context       the calling client context
	 * @@param ctxAttrName   the attribute name (FontSize, etc...)
	 * @@param ctxAttrValue  the attribute value that led to the call to this
	 * @@return              The content value
	 */
	public Object getContent(ContentProducerContext context, String ctxAttrName, Object ctxAttrValue) {
		HTMLContentProducerContext htmlContext = (HTMLContentProducerContext)context;

		if (ctxAttrName.compareTo(ContentProducer.ENTITY_FONT_SIZE) == 0) {
			return Integer.toString(getHTMLFontSizeEquivalent(htmlContext.getFont().getSize()));
		}

		return super.getContent(context, ctxAttrName, ctxAttrValue);
	}

	/**
	 * Gets the hTMLFontSizeEquivalent attribute of the HTMLTextAreaFigure object
	 *
	 * @@param pointSize  the font size in points
	 * @@return           The hTMLFontSizeEquivalent value
	 */
	public int getHTMLFontSizeEquivalent(int pointSize) {
		for (int i = 0; i < htmlFontSizeEquivalences.length; i++) {
			if (pointSize >= htmlFontSizeEquivalences[i][1] &&
					pointSize <= htmlFontSizeEquivalences[i][2]) {
				return htmlFontSizeEquivalences[i][0];
			}
		}
		// not found?!?!?! return the "normal" font size
		return 3;
	}
}
@


1.3
log
@no message
@
text
@d11 1
a11 1
package CH.ifa.draw.contrib.html;
@


1.2
log
@Removed unused imports.
@
text
@d2 1
a2 1
 *  @@(#)TextAreaFigure.java
d4 6
a9 6
 *  Project:		JHotdraw - a GUI framework for technical drawings
 *  http://www.jhotdraw.org
 *  http://jhotdraw.sourceforge.net
 *  Copyright:	© by the original author(s) and all contributors
 *  License:		Lesser GNU Public License (LGPL)
 *  http://www.opensource.org/licenses/lgpl-license.html
d21 3
a23 3
 * @@author    Eduardo Francos - InContext
 * @@created   30 avril 2002
 * @@version   1.0
a24 1

d47 3
a49 2

	/**Constructor for the HTMLContentProducer object */
a51 1

a69 1

a85 2


@


1.1
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@a12 1
import java.awt.Color;
a13 1
import CH.ifa.draw.util.Storable;
@

