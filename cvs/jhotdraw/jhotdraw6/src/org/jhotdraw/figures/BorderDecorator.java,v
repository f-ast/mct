head	1.7;
access;
symbols
	jhotdraw60b1-release:1.7
	package_rename:1.7
	directory_rename:1.6
	reorg_6x_split_initial:1.6
	MVC_PHASE1:1.6.0.10
	NEW_ATTRIBUTES:1.6.0.8
	DNOYEB1_ALPHA-2:1.6.4.4
	release_JHD54b1:1.6
	BUGFIX_670992:1.6.0.6
	DNOYEB1_ALPHA-1:1.6.4.4
	dnoyeb1:1.6.0.4
	repack:1.6.0.2
	Root_repack:1.6
	Before_FigureVisitor:1.5
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2004.01.09.22.53.41;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.23.07.47.22;	author mrfloppy;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2002.08.04.22.43.22;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.21.15.18;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.46;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches;
next	;

1.6.4.1
date	2003.01.15.21.04.11;	author dnoyeb;	state Exp;
branches;
next	1.6.4.2;

1.6.4.2
date	2003.01.16.06.03.52;	author dnoyeb;	state Exp;
branches;
next	1.6.4.3;

1.6.4.3
date	2003.01.18.04.49.03;	author dnoyeb;	state Exp;
branches;
next	1.6.4.4;

1.6.4.4
date	2003.01.21.00.33.34;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.7
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)BorderDecorator.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.figures;

import java.awt.*;

import org.jhotdraw.framework.*;
import org.jhotdraw.standard.*;

/**
 * BorderDecorator decorates an arbitrary Figure with
 * a border.
 *
 * @@version <$CURRENT_VERSION$>
 */
public  class BorderDecorator extends DecoratorFigure {

	/*
	 * Serialization support.
	 */
	private static final long serialVersionUID = 1205601808259084917L;
	private int borderDecoratorSerializedDataVersion = 1;

	private Point myBorderOffset;
	private Color myBorderColor;
	private Color myShadowColor;

	public BorderDecorator() {
	}

	public BorderDecorator(Figure figure) {
		super(figure);
	}

	/**
	 * Performs additional initialization code before the figure is decorated
	 * Subclasses may override this method.
	 */
	protected void initialize() {
		setBorderOffset(new Point(3,3));
	}

	public void setBorderOffset(Point newBorderOffset) {
		myBorderOffset = newBorderOffset;
	}
		
	public Point getBorderOffset() {
		if (myBorderOffset == null) {
			return new Point(0,0);
		}
		else {
			return myBorderOffset;
		}
	}

	/**
	 * Draws a the figure and decorates it with a border.
	 */
	public void draw(Graphics g) {
		Rectangle r = displayBox();
		super.draw(g);
		g.setColor(Color.white);
		g.drawLine(r.x, r.y, r.x, r.y + r.height);
		g.drawLine(r.x, r.y, r.x + r.width, r.y);
		g.setColor(Color.gray);
		g.drawLine(r.x + r.width, r.y, r.x + r.width, r.y + r.height);
		g.drawLine(r.x , r.y + r.height, r.x + r.width, r.y + r.height);
	}

	/**
	 * Gets the displaybox including the border.
	 */
	public Rectangle displayBox() {
		Rectangle r = getDecoratedFigure().displayBox();
		r.grow(getBorderOffset().x, getBorderOffset().y);
		return r;
	}

	/**
	 * Invalidates the figure extended by its border.
	 */
	public void figureInvalidated(FigureChangeEvent e) {
		Rectangle rect = e.getInvalidatedRectangle();
		rect.grow(getBorderOffset().x, getBorderOffset().y);
		super.figureInvalidated(new FigureChangeEvent(this, rect, e));
	}

	public Insets connectionInsets() {
		Insets i = super.connectionInsets();
		i.top -= getBorderOffset().y;
		i.bottom -= getBorderOffset().y;
		i.left -= getBorderOffset().x;
		i.right -= getBorderOffset().x;

		return i;
	}
}
@


1.6
log
@Fixed problem with TextArea figures + cascading FigureChangeEvent
@
text
@d12 1
a12 1
package CH.ifa.draw.figures;
d16 2
a17 2
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
@


1.6.4.1
log
@
Lets have a moment of silence for DecoratorFigure.....It was a good figure ;{

Anything which happens inside the drawing after figure add must be undone before figure orphan.  It must also not
be exposed to anyobject outside the drawing.
Decorator figure retired in favor of a figureManipulator and the other functions being implemented by a composite
figure(BorderDecorator).
AdnimationDecorator retired in favor of AnimationManipulator.
A figure can have only 1 container. This is making the border tool have a hard time.

Lots of comments added

next phase:
orphan will disappear.  only add and remove remain.  All figure related resources belong to the figures and no other
object should care about figure.release.
split the figureListener into a figureContainer listener and a figureChangeListener.
Fix BorderDecorator.
Fix ConnectedText.
view.checkDamage to call drawing.update()
@
text
@d21 1
a21 8
 * a border.  Therein lies the problem.  It can not handle an arbitrary Figure.
 * It will not forward calls which do not come on the Figure interface.  Therefore,
 * it can only handle a plain Figure.  Any Tool or Command seeking a specific
 * Figure type will have to try and determine if DecoratorFigure contains such a
 * type.  This is doable, but burdens every occurance of Figure with this question.
 *
 * This figure has been changed to a CompositeFigure since most Tools and Commands
 * are prepared to deal with CompositeFigures.  Should produce the same results.
d25 1
a25 1
public  class BorderDecorator extends CompositeFigure {
d37 1
a37 2
	protected BorderDecorator() {
		initialize();
d41 1
a41 2
		initialize();
		add(figure);
d91 1
a91 1
	protected void figureInvalidated(FigureChangeEvent e) {
a105 19
	
	/**
	 * Forwards basicDisplayBox to its contained figure.
	 * What about the size of the decoration? ???dnoyeb???
	 */
	public void basicDisplayBox(Point origin, Point corner) {
		getDecoratedFigure().basicDisplayBox(origin, corner);
	}
	
	/**
	 * Forwards handles to its contained figure.
	 * What about the size of the border ???dnoyeb???
	 */
	public HandleEnumeration handles() {
		return getDecoratedFigure().handles();
	}
	public Figure getDecoratedFigure() {
		return (Figure)getFigures().get(0);
	}	
@


1.6.4.2
log
@New FigureDecorator using decorator pattern now installed.
A few other minor cleanups.
@
text
@d21 8
a28 2
 * a border.
 * @@deprecated
d32 1
a32 1
public  class BorderDecorator extends DecoratorFigure {
d44 2
a45 1
	public BorderDecorator() {
d49 2
a50 1
		super(figure);
d100 1
a100 1
	public void figureInvalidated(FigureChangeEvent e) {
d115 19
@


1.6.4.3
log
@Decorator Figure returns...To apease the brave hearted :-)
Its not very well integrated with the current state of affairs.  It works as well as it always
has though.
@
text
@a49 1
		super.initialize();
@


1.6.4.4
log
@As per usual the DecoratorFigures are disagreeable.  Nevertheless the border decorator is working once again.
'twas the container hopping I mentioned in my last update.  its working but on shaky ground...
Use as own risk ;)
@
text
@d22 1
@


1.5
log
@after variou merges... (before 5.4 release)
@
text
@d94 1
a94 1
		super.figureInvalidated(new FigureChangeEvent(e.getFigure(), rect));
@


1.4
log
@merge dnd (before 5.3)
@
text
@a14 1
import java.util.*;
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d28 5
a32 5
    /*
     * Serialization support.
     */
    private static final long serialVersionUID = 1205601808259084917L;
    private int borderDecoratorSerializedDataVersion = 1;
d38 1
a38 1
    public BorderDecorator() {
d41 3
a43 3
    public BorderDecorator(Figure figure) {
        super(figure);
    }
d47 1
a47 1
     * Subclasses may override this method.
d49 7
a55 7
    protected void initialize() {
        setBorderOffset(new Point(3,3));
    }

    public void setBorderOffset(Point newBorderOffset) {
        myBorderOffset = newBorderOffset;
    }
d57 22
a78 47
    public Point getBorderOffset() {
        if (myBorderOffset == null) {
        	return new Point(0,0);
        }
        else {
            return myBorderOffset;
    	}
    }

    /**
     * Draws a the figure and decorates it with a border.
     */
    public void draw(Graphics g) {
        Rectangle r = displayBox();
        super.draw(g);
        g.setColor(Color.white);
        g.drawLine(r.x, r.y, r.x, r.y + r.height);
        g.drawLine(r.x, r.y, r.x + r.width, r.y);
        g.setColor(Color.gray);
        g.drawLine(r.x + r.width, r.y, r.x + r.width, r.y + r.height);
        g.drawLine(r.x , r.y + r.height, r.x + r.width, r.y + r.height);
    }

    /**
     * Gets the displaybox including the border.
     */
    public Rectangle displayBox() {
        Rectangle r = getDecoratedFigure().displayBox();
        r.grow(getBorderOffset().x, getBorderOffset().y);
        return r;
    }

    /**
     * Invalidates the figure extended by its border.
     */
    public void figureInvalidated(FigureChangeEvent e) {
        Rectangle rect = e.getInvalidatedRectangle();
        rect.grow(getBorderOffset().x, getBorderOffset().y);
        super.figureInvalidated(new FigureChangeEvent(e.getFigure(), rect));
    }

    public Insets connectionInsets() {
        Insets i = super.connectionInsets();
        i.top -= getBorderOffset().y;
        i.bottom -= getBorderOffset().y;
        i.left -= getBorderOffset().x;
        i.right -= getBorderOffset().x;
d80 27
a106 2
        return i;
    }
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)BorderDecorator.java 5.2
d4 6
d23 2
d84 1
a84 1
        Rectangle r = fComponent.displayBox();
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)BorderDecorator.java 5.1
d26 7
a32 1
    public BorderDecorator() { }
d37 19
a55 2
    private Point border() {
        return new Point(3,3);
d77 1
a77 1
        r.grow(border().x, border().y);
d86 1
a86 1
        rect.grow(border().x, border().y);
d92 5
a96 4
        i.top -= 3;
        i.bottom -= 3;
        i.left -= 3;
        i.right -= 3;
@


1.1.1.1
log
@
Initial revision.
@
text
@@
