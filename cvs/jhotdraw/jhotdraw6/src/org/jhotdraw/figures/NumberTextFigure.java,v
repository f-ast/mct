head	1.7;
access;
symbols
	jhotdraw60b1-release:1.7
	package_rename:1.7
	directory_rename:1.6
	reorg_6x_split_initial:1.6
	MVC_PHASE1:1.6.0.4
	NEW_ATTRIBUTES:1.6.0.2
	DNOYEB1_ALPHA-2:1.5
	release_JHD54b1:1.6
	BUGFIX_670992:1.5.0.6
	DNOYEB1_ALPHA-1:1.5
	dnoyeb1:1.5.0.4
	repack:1.5.0.2
	Root_repack:1.5
	Before_FigureVisitor:1.5
	JHotDraw_5-3:1.3
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2004.01.09.22.53.41;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.30.00.27.32;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.04.22.43.22;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.30.20.40.06;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.46;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.7
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)NumberTextFigure.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.figures;

import org.jhotdraw.framework.Figure;

/**
 * A TextFigure specialized to edit numbers.
 *
 * @@version <$CURRENT_VERSION$>
 */
public  class NumberTextFigure extends TextFigure {

	/*
	 * Serialization support.
	 */
	private static final long serialVersionUID = -4056859232918336475L;
	private int numberTextFigureSerializedDataVersion = 1;

	/**
	 * Gets the number of columns to be used by the text overlay.
	 * @@see org.jhotdraw.util.FloatingTextField
	 */
	public int overlayColumns() {
		return Math.max(4, getText().length());
	}

	/**
	 * Gets the numerical value of the contained text.
	 * return the value or 0 in the case of an illegal number format.
	 */
	public int getValue() {
		int value = 0;
		try {
			value = Integer.parseInt(getText());
		}
		catch (NumberFormatException e) {
			value = 0;
		}
		return value;
	}

	/**
	 * Sets the numberical value of the contained text.
	 */
	public void setValue(int value) {
		setText(Integer.toString(value));
	}

	/**
	 * Usually, a TextHolders is implemented by a Figure subclass. To avoid casting
	 * a TextHolder to a Figure this method can be used for polymorphism (in this
	 * case, let the (same) object appear to be of another type).
	 * Note, that the figure returned is not the figure to which the TextHolder is
	 * (and its representing figure) connected.
	 * @@return figure responsible for representing the content of this TextHolder
	 */
	public Figure getRepresentingFigure() {
		return this;
	}
}
@


1.6
log
@prepare for 5.4 release: various bug fixes
@
text
@d12 1
a12 1
package CH.ifa.draw.figures;
d14 1
a14 1
import CH.ifa.draw.framework.Figure;
d31 1
a31 1
	 * @@see CH.ifa.draw.util.FloatingTextField
@


1.5
log
@after variou merges... (before 5.4 release)
@
text
@d14 2
d59 11
@


1.4
log
@no message
@
text
@a13 6
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import java.util.*;
import java.awt.*;
import java.io.IOException;

@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d14 2
a18 2
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)NumberTextFigure.java 5.2
d4 6
d22 2
d27 35
a61 34
    /*
     * Serialization support.
     */
    private static final long serialVersionUID = -4056859232918336475L;
    private int numberTextFigureSerializedDataVersion = 1;

    /**
     * Gets the number of columns to be used by the text overlay.
     * @@see CH.ifa.draw.util.FloatingTextField
     */
    public int overlayColumns() {
        return Math.max(4, getText().length());
    }

    /**
     * Gets the numerical value of the contained text.
     * return the value or 0 in the case of an illegal number format.
     */
    public int getValue() {
        int value = 0;
        try {
            value = Integer.parseInt(getText());
        } catch (NumberFormatException e) {
            value = 0;
        }
        return value;
    }

    /**
     * Sets the numberical value of the contained text.
     */
    public void setValue(int value) {
        setText(Integer.toString(value));
    }
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)NumberTextFigure.java 5.1
d27 1
a27 1
     * @@see FloatingTextField
@


1.1.1.1
log
@
Initial revision.
@
text
@@
