head	1.4;
access;
symbols
	jhotdraw60b1-release:1.4
	package_rename:1.4
	directory_rename:1.3
	reorg_6x_split_initial:1.3
	NEW_ATTRIBUTES:1.1.0.2
	release_JHD54b1:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.09.21.18.45;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.13.22.31.10;	author mtnygard;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.30.01.32.00;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.figures;

import org.jhotdraw.figures.LineConnection;
import junit.framework.TestCase;
// JUnitDoclet begin import
// JUnitDoclet end import

/*
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 */

// JUnitDoclet begin javadoc_class
/**
 * TestCase LineConnectionTest is generated by
 * JUnitDoclet to hold the tests for LineConnection.
 * @@see org.jhotdraw.figures.LineConnection
 */
// JUnitDoclet end javadoc_class
public class LineConnectionTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
	// JUnitDoclet begin class
	// instance variables, helper methods, ... put them in this marker
	private LineConnection lineconnection;
	// JUnitDoclet end class

	/**
	 * Constructor LineConnectionTest is
	 * basically calling the inherited constructor to
	 * initiate the TestCase for use by the Framework.
	 */
	public LineConnectionTest(String name) {
		// JUnitDoclet begin method LineConnectionTest
		super(name);
		// JUnitDoclet end method LineConnectionTest
	}

	/**
	 * Factory method for instances of the class to be tested.
	 */
	public LineConnection createInstance() throws Exception {
		// JUnitDoclet begin method testcase.createInstance
		return new LineConnection();
		// JUnitDoclet end method testcase.createInstance
	}

	/**
	 * Method setUp is overwriting the framework method to
	 * prepare an instance of this TestCase for a single test.
	 * It's called from the JUnit framework only.
	 */
	protected void setUp() throws Exception {
		// JUnitDoclet begin method testcase.setUp
		super.setUp();
		lineconnection = createInstance();
		// JUnitDoclet end method testcase.setUp
	}

	/**
	 * Method tearDown is overwriting the framework method to
	 * clean up after each single test of this TestCase.
	 * It's called from the JUnit framework only.
	 */
	protected void tearDown() throws Exception {
		// JUnitDoclet begin method testcase.tearDown
		lineconnection = null;
		super.tearDown();
		// JUnitDoclet end method testcase.tearDown
	}

	// JUnitDoclet begin javadoc_method canConnect()
	/**
	 * Method testCanConnect is testing canConnect
	 * @@see org.jhotdraw.figures.LineConnection#canConnect()
	 */
	// JUnitDoclet end javadoc_method canConnect()
	public void testCanConnect() throws Exception {
		// JUnitDoclet begin method canConnect
		// JUnitDoclet end method canConnect
	}

	// JUnitDoclet begin javadoc_method connectStart()
	/**
	 * Method testConnectStart is testing connectStart
	 * @@see org.jhotdraw.figures.LineConnection#connectStart(org.jhotdraw.framework.Connector)
	 */
	// JUnitDoclet end javadoc_method connectStart()
	public void testConnectStart() throws Exception {
		// JUnitDoclet begin method connectStart
		// JUnitDoclet end method connectStart
	}

	// JUnitDoclet begin javadoc_method connectEnd()
	/**
	 * Method testConnectEnd is testing connectEnd
	 * @@see org.jhotdraw.figures.LineConnection#connectEnd(org.jhotdraw.framework.Connector)
	 */
	// JUnitDoclet end javadoc_method connectEnd()
	public void testConnectEnd() throws Exception {
		// JUnitDoclet begin method connectEnd
		// JUnitDoclet end method connectEnd
	}

	// JUnitDoclet begin javadoc_method disconnectStart()
	/**
	 * Method testDisconnectStart is testing disconnectStart
	 * @@see org.jhotdraw.figures.LineConnection#disconnectStart()
	 */
	// JUnitDoclet end javadoc_method disconnectStart()
	public void testDisconnectStart() throws Exception {
		// JUnitDoclet begin method disconnectStart
		// JUnitDoclet end method disconnectStart
	}

	// JUnitDoclet begin javadoc_method disconnectEnd()
	/**
	 * Method testDisconnectEnd is testing disconnectEnd
	 * @@see org.jhotdraw.figures.LineConnection#disconnectEnd()
	 */
	// JUnitDoclet end javadoc_method disconnectEnd()
	public void testDisconnectEnd() throws Exception {
		// JUnitDoclet begin method disconnectEnd
		// JUnitDoclet end method disconnectEnd
	}

	// JUnitDoclet begin javadoc_method connectsSame()
	/**
	 * Method testConnectsSame is testing connectsSame
	 * @@see org.jhotdraw.figures.LineConnection#connectsSame(org.jhotdraw.framework.ConnectionFigure)
	 */
	// JUnitDoclet end javadoc_method connectsSame()
	public void testConnectsSame() throws Exception {
		// JUnitDoclet begin method connectsSame
		// JUnitDoclet end method connectsSame
	}

	// JUnitDoclet begin javadoc_method startFigure()
	/**
	 * Method testStartFigure is testing startFigure
	 * @@see org.jhotdraw.figures.LineConnection#startFigure()
	 */
	// JUnitDoclet end javadoc_method startFigure()
	public void testStartFigure() throws Exception {
		// JUnitDoclet begin method startFigure
		// JUnitDoclet end method startFigure
	}

	// JUnitDoclet begin javadoc_method endFigure()
	/**
	 * Method testEndFigure is testing endFigure
	 * @@see org.jhotdraw.figures.LineConnection#endFigure()
	 */
	// JUnitDoclet end javadoc_method endFigure()
	public void testEndFigure() throws Exception {
		// JUnitDoclet begin method endFigure
		// JUnitDoclet end method endFigure
	}

	// JUnitDoclet begin javadoc_method getStartConnector()
	/**
	 * Method testGetStartConnector is testing getStartConnector
	 * @@see org.jhotdraw.figures.LineConnection#getStartConnector()
	 */
	// JUnitDoclet end javadoc_method getStartConnector()
	public void testGetStartConnector() throws Exception {
		// JUnitDoclet begin method getStartConnector
		// JUnitDoclet end method getStartConnector
	}

	// JUnitDoclet begin javadoc_method getEndConnector()
	/**
	 * Method testGetEndConnector is testing getEndConnector
	 * @@see org.jhotdraw.figures.LineConnection#getEndConnector()
	 */
	// JUnitDoclet end javadoc_method getEndConnector()
	public void testGetEndConnector() throws Exception {
		// JUnitDoclet begin method getEndConnector
		// JUnitDoclet end method getEndConnector
	}

	// JUnitDoclet begin javadoc_method startPoint()
	/**
	 * Method testStartPoint is testing startPoint
	 * @@see org.jhotdraw.figures.LineConnection#startPoint(int, int)
	 */
	// JUnitDoclet end javadoc_method startPoint()
	public void testStartPoint() throws Exception {
		// JUnitDoclet begin method startPoint
		// JUnitDoclet end method startPoint
	}

	// JUnitDoclet begin javadoc_method endPoint()
	/**
	 * Method testEndPoint is testing endPoint
	 * @@see org.jhotdraw.figures.LineConnection#endPoint(int, int)
	 */
	// JUnitDoclet end javadoc_method endPoint()
	public void testEndPoint() throws Exception {
		// JUnitDoclet begin method endPoint
		// JUnitDoclet end method endPoint
	}

	// JUnitDoclet begin javadoc_method handles()
	/**
	 * Method testHandles is testing handles
	 * @@see org.jhotdraw.figures.LineConnection#handles()
	 */
	// JUnitDoclet end javadoc_method handles()
	public void testHandles() throws Exception {
		// JUnitDoclet begin method handles
		// JUnitDoclet end method handles
	}

	// JUnitDoclet begin javadoc_method setPointAt()
	/**
	 * Method testSetPointAt is testing setPointAt
	 * @@see org.jhotdraw.figures.LineConnection#setPointAt(java.awt.Point, int)
	 */
	// JUnitDoclet end javadoc_method setPointAt()
	public void testSetPointAt() throws Exception {
		// JUnitDoclet begin method setPointAt
		// JUnitDoclet end method setPointAt
	}

	// JUnitDoclet begin javadoc_method insertPointAt()
	/**
	 * Method testInsertPointAt is testing insertPointAt
	 * @@see org.jhotdraw.figures.LineConnection#insertPointAt(java.awt.Point, int)
	 */
	// JUnitDoclet end javadoc_method insertPointAt()
	public void testInsertPointAt() throws Exception {
		// JUnitDoclet begin method insertPointAt
		// JUnitDoclet end method insertPointAt
	}

	// JUnitDoclet begin javadoc_method removePointAt()
	/**
	 * Method testRemovePointAt is testing removePointAt
	 * @@see org.jhotdraw.figures.LineConnection#removePointAt(int)
	 */
	// JUnitDoclet end javadoc_method removePointAt()
	public void testRemovePointAt() throws Exception {
		// JUnitDoclet begin method removePointAt
		// JUnitDoclet end method removePointAt
	}

	// JUnitDoclet begin javadoc_method updateConnection()
	/**
	 * Method testUpdateConnection is testing updateConnection
	 * @@see org.jhotdraw.figures.LineConnection#updateConnection()
	 */
	// JUnitDoclet end javadoc_method updateConnection()
	public void testUpdateConnection() throws Exception {
		// JUnitDoclet begin method updateConnection
		// JUnitDoclet end method updateConnection
	}

	// JUnitDoclet begin javadoc_method layoutConnection()
	/**
	 * Method testLayoutConnection is testing layoutConnection
	 * @@see org.jhotdraw.figures.LineConnection#layoutConnection()
	 */
	// JUnitDoclet end javadoc_method layoutConnection()
	public void testLayoutConnection() throws Exception {
		// JUnitDoclet begin method layoutConnection
		// JUnitDoclet end method layoutConnection
	}

	// JUnitDoclet begin javadoc_method figureChanged()
	/**
	 * Method testFigureChanged is testing figureChanged
	 * @@see org.jhotdraw.figures.LineConnection#figureChanged(org.jhotdraw.framework.FigureChangeEvent)
	 */
	// JUnitDoclet end javadoc_method figureChanged()
	public void testFigureChanged() throws Exception {
		// JUnitDoclet begin method figureChanged
		// JUnitDoclet end method figureChanged
	}

	// JUnitDoclet begin javadoc_method figureRemoved()
	/**
	 * Method testFigureRemoved is testing figureRemoved
	 * @@see org.jhotdraw.figures.LineConnection#figureRemoved(org.jhotdraw.framework.FigureChangeEvent)
	 */
	// JUnitDoclet end javadoc_method figureRemoved()
	public void testFigureRemoved() throws Exception {
		// JUnitDoclet begin method figureRemoved
		// JUnitDoclet end method figureRemoved
	}

	// JUnitDoclet begin javadoc_method figureRequestRemove()
	/**
	 * Method testFigureRequestRemove is testing figureRequestRemove
	 * @@see org.jhotdraw.figures.LineConnection#figureRequestRemove(org.jhotdraw.framework.FigureChangeEvent)
	 */
	// JUnitDoclet end javadoc_method figureRequestRemove()
	public void testFigureRequestRemove() throws Exception {
		// JUnitDoclet begin method figureRequestRemove
		// JUnitDoclet end method figureRequestRemove
	}

	// JUnitDoclet begin javadoc_method figureInvalidated()
	/**
	 * Method testFigureInvalidated is testing figureInvalidated
	 * @@see org.jhotdraw.figures.LineConnection#figureInvalidated(org.jhotdraw.framework.FigureChangeEvent)
	 */
	// JUnitDoclet end javadoc_method figureInvalidated()
	public void testFigureInvalidated() throws Exception {
		// JUnitDoclet begin method figureInvalidated
		// JUnitDoclet end method figureInvalidated
	}

	// JUnitDoclet begin javadoc_method figureRequestUpdate()
	/**
	 * Method testFigureRequestUpdate is testing figureRequestUpdate
	 * @@see org.jhotdraw.figures.LineConnection#figureRequestUpdate(org.jhotdraw.framework.FigureChangeEvent)
	 */
	// JUnitDoclet end javadoc_method figureRequestUpdate()
	public void testFigureRequestUpdate() throws Exception {
		// JUnitDoclet begin method figureRequestUpdate
		// JUnitDoclet end method figureRequestUpdate
	}

	// JUnitDoclet begin javadoc_method release()
	/**
	 * Method testRelease is testing release
	 * @@see org.jhotdraw.figures.LineConnection#release()
	 */
	// JUnitDoclet end javadoc_method release()
	public void testRelease() throws Exception {
		// JUnitDoclet begin method release
		// JUnitDoclet end method release
	}

	// JUnitDoclet begin javadoc_method write()
	/**
	 * Method testWrite is testing write
	 * @@see org.jhotdraw.figures.LineConnection#write(org.jhotdraw.util.StorableOutput)
	 */
	// JUnitDoclet end javadoc_method write()
	public void testWrite() throws Exception {
		// JUnitDoclet begin method write
		// JUnitDoclet end method write
	}

	// JUnitDoclet begin javadoc_method read()
	/**
	 * Method testRead is testing read
	 * @@see org.jhotdraw.figures.LineConnection#read(org.jhotdraw.util.StorableInput)
	 */
	// JUnitDoclet end javadoc_method read()
	public void testRead() throws Exception {
		// JUnitDoclet begin method read
		// JUnitDoclet end method read
	}

	// JUnitDoclet begin javadoc_method visit()
	/**
	 * Method testVisit is testing visit
	 * @@see org.jhotdraw.figures.LineConnection#visit(org.jhotdraw.framework.FigureVisitor)
	 */
	// JUnitDoclet end javadoc_method visit()
	public void testVisit() throws Exception {
		// JUnitDoclet begin method visit
		// JUnitDoclet end method visit
	}

	// JUnitDoclet begin javadoc_method testVault
	/**
	 * JUnitDoclet moves marker to this method, if there is not match
	 * for them in the regenerated code and if the marker is not empty.
	 * This way, no test gets lost when regenerating after renaming.
	 * <b>Method testVault is supposed to be empty.</b>
	 */
	// JUnitDoclet end javadoc_method testVault
	public void testVault() throws Exception {
		// JUnitDoclet begin method testcase.testVault
		// JUnitDoclet end method testcase.testVault
	}

}
@


1.3
log
@TestSuite: adjusting auto-generated sourcecode (JunitDoclet) to coding style
@
text
@d11 1
a11 1
package CH.ifa.draw.test.figures;
d13 1
a13 1
import CH.ifa.draw.figures.LineConnection;
d30 1
a30 1
 * @@see CH.ifa.draw.figures.LineConnection
d57 1
a57 1
	public CH.ifa.draw.figures.LineConnection createInstance() throws Exception {
d59 1
a59 1
		return new CH.ifa.draw.figures.LineConnection();
d90 1
a90 1
	 * @@see CH.ifa.draw.figures.LineConnection#canConnect()
d101 1
a101 1
	 * @@see CH.ifa.draw.figures.LineConnection#connectStart(CH.ifa.draw.framework.Connector)
d112 1
a112 1
	 * @@see CH.ifa.draw.figures.LineConnection#connectEnd(CH.ifa.draw.framework.Connector)
d123 1
a123 1
	 * @@see CH.ifa.draw.figures.LineConnection#disconnectStart()
d134 1
a134 1
	 * @@see CH.ifa.draw.figures.LineConnection#disconnectEnd()
d145 1
a145 1
	 * @@see CH.ifa.draw.figures.LineConnection#connectsSame(CH.ifa.draw.framework.ConnectionFigure)
d156 1
a156 1
	 * @@see CH.ifa.draw.figures.LineConnection#startFigure()
d167 1
a167 1
	 * @@see CH.ifa.draw.figures.LineConnection#endFigure()
d178 1
a178 1
	 * @@see CH.ifa.draw.figures.LineConnection#getStartConnector()
d189 1
a189 1
	 * @@see CH.ifa.draw.figures.LineConnection#getEndConnector()
d200 1
a200 1
	 * @@see CH.ifa.draw.figures.LineConnection#startPoint(int, int)
d211 1
a211 1
	 * @@see CH.ifa.draw.figures.LineConnection#endPoint(int, int)
d222 1
a222 1
	 * @@see CH.ifa.draw.figures.LineConnection#handles()
d233 1
a233 1
	 * @@see CH.ifa.draw.figures.LineConnection#setPointAt(java.awt.Point, int)
d244 1
a244 1
	 * @@see CH.ifa.draw.figures.LineConnection#insertPointAt(java.awt.Point, int)
d255 1
a255 1
	 * @@see CH.ifa.draw.figures.LineConnection#removePointAt(int)
d266 1
a266 1
	 * @@see CH.ifa.draw.figures.LineConnection#updateConnection()
d277 1
a277 1
	 * @@see CH.ifa.draw.figures.LineConnection#layoutConnection()
d288 1
a288 1
	 * @@see CH.ifa.draw.figures.LineConnection#figureChanged(CH.ifa.draw.framework.FigureChangeEvent)
d299 1
a299 1
	 * @@see CH.ifa.draw.figures.LineConnection#figureRemoved(CH.ifa.draw.framework.FigureChangeEvent)
d310 1
a310 1
	 * @@see CH.ifa.draw.figures.LineConnection#figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)
d321 1
a321 1
	 * @@see CH.ifa.draw.figures.LineConnection#figureInvalidated(CH.ifa.draw.framework.FigureChangeEvent)
d332 1
a332 1
	 * @@see CH.ifa.draw.figures.LineConnection#figureRequestUpdate(CH.ifa.draw.framework.FigureChangeEvent)
d343 1
a343 1
	 * @@see CH.ifa.draw.figures.LineConnection#release()
d354 1
a354 1
	 * @@see CH.ifa.draw.figures.LineConnection#write(CH.ifa.draw.util.StorableOutput)
d365 1
a365 1
	 * @@see CH.ifa.draw.figures.LineConnection#read(CH.ifa.draw.util.StorableInput)
d376 1
a376 1
	 * @@see CH.ifa.draw.figures.LineConnection#visit(CH.ifa.draw.framework.FigureVisitor)
@


1.2
log
@Eliminate some deprecated method warnings.
Organize imports to remove Eclipse warnings about unused imports.
@
text
@d1 10
d13 1
d19 6
a24 7
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/

d28 4
a31 4
* TestCase LineConnectionTest is generated by
* JUnitDoclet to hold the tests for LineConnection.
* @@see CH.ifa.draw.figures.LineConnection
*/
d38 359
a396 370
  // JUnitDoclet begin class
  // instance variables, helper methods, ... put them in this marker
  CH.ifa.draw.figures.LineConnection lineconnection = null;
  // JUnitDoclet end class
  
  /**
  * Constructor LineConnectionTest is
  * basically calling the inherited constructor to
  * initiate the TestCase for use by the Framework.
  */
  public LineConnectionTest(String name) {
    // JUnitDoclet begin method LineConnectionTest
    super(name);
    // JUnitDoclet end method LineConnectionTest
  }
  
  /**
  * Factory method for instances of the class to be tested.
  */
  public CH.ifa.draw.figures.LineConnection createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new CH.ifa.draw.figures.LineConnection();
    // JUnitDoclet end method testcase.createInstance
  }
  
  /**
  * Method setUp is overwriting the framework method to
  * prepare an instance of this TestCase for a single test.
  * It's called from the JUnit framework only.
  */
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    lineconnection = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  /**
  * Method tearDown is overwriting the framework method to
  * clean up after each single test of this TestCase.
  * It's called from the JUnit framework only.
  */
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    lineconnection = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  // JUnitDoclet begin javadoc_method canConnect()
  /**
  * Method testCanConnect is testing canConnect
  * @@see CH.ifa.draw.figures.LineConnection#canConnect()
  */
  // JUnitDoclet end javadoc_method canConnect()
  public void testCanConnect() throws Exception {
    // JUnitDoclet begin method canConnect
    // JUnitDoclet end method canConnect
  }
  
  // JUnitDoclet begin javadoc_method connectStart()
  /**
  * Method testConnectStart is testing connectStart
  * @@see CH.ifa.draw.figures.LineConnection#connectStart(CH.ifa.draw.framework.Connector)
  */
  // JUnitDoclet end javadoc_method connectStart()
  public void testConnectStart() throws Exception {
    // JUnitDoclet begin method connectStart
    // JUnitDoclet end method connectStart
  }
  
  // JUnitDoclet begin javadoc_method connectEnd()
  /**
  * Method testConnectEnd is testing connectEnd
  * @@see CH.ifa.draw.figures.LineConnection#connectEnd(CH.ifa.draw.framework.Connector)
  */
  // JUnitDoclet end javadoc_method connectEnd()
  public void testConnectEnd() throws Exception {
    // JUnitDoclet begin method connectEnd
    // JUnitDoclet end method connectEnd
  }
  
  // JUnitDoclet begin javadoc_method disconnectStart()
  /**
  * Method testDisconnectStart is testing disconnectStart
  * @@see CH.ifa.draw.figures.LineConnection#disconnectStart()
  */
  // JUnitDoclet end javadoc_method disconnectStart()
  public void testDisconnectStart() throws Exception {
    // JUnitDoclet begin method disconnectStart
    // JUnitDoclet end method disconnectStart
  }
  
  // JUnitDoclet begin javadoc_method disconnectEnd()
  /**
  * Method testDisconnectEnd is testing disconnectEnd
  * @@see CH.ifa.draw.figures.LineConnection#disconnectEnd()
  */
  // JUnitDoclet end javadoc_method disconnectEnd()
  public void testDisconnectEnd() throws Exception {
    // JUnitDoclet begin method disconnectEnd
    // JUnitDoclet end method disconnectEnd
  }
  
  // JUnitDoclet begin javadoc_method connectsSame()
  /**
  * Method testConnectsSame is testing connectsSame
  * @@see CH.ifa.draw.figures.LineConnection#connectsSame(CH.ifa.draw.framework.ConnectionFigure)
  */
  // JUnitDoclet end javadoc_method connectsSame()
  public void testConnectsSame() throws Exception {
    // JUnitDoclet begin method connectsSame
    // JUnitDoclet end method connectsSame
  }
  
  // JUnitDoclet begin javadoc_method startFigure()
  /**
  * Method testStartFigure is testing startFigure
  * @@see CH.ifa.draw.figures.LineConnection#startFigure()
  */
  // JUnitDoclet end javadoc_method startFigure()
  public void testStartFigure() throws Exception {
    // JUnitDoclet begin method startFigure
    // JUnitDoclet end method startFigure
  }
  
  // JUnitDoclet begin javadoc_method endFigure()
  /**
  * Method testEndFigure is testing endFigure
  * @@see CH.ifa.draw.figures.LineConnection#endFigure()
  */
  // JUnitDoclet end javadoc_method endFigure()
  public void testEndFigure() throws Exception {
    // JUnitDoclet begin method endFigure
    // JUnitDoclet end method endFigure
  }
  
  // JUnitDoclet begin javadoc_method getStartConnector()
  /**
  * Method testGetStartConnector is testing getStartConnector
  * @@see CH.ifa.draw.figures.LineConnection#getStartConnector()
  */
  // JUnitDoclet end javadoc_method getStartConnector()
  public void testGetStartConnector() throws Exception {
    // JUnitDoclet begin method getStartConnector
    // JUnitDoclet end method getStartConnector
  }
  
  // JUnitDoclet begin javadoc_method getEndConnector()
  /**
  * Method testGetEndConnector is testing getEndConnector
  * @@see CH.ifa.draw.figures.LineConnection#getEndConnector()
  */
  // JUnitDoclet end javadoc_method getEndConnector()
  public void testGetEndConnector() throws Exception {
    // JUnitDoclet begin method getEndConnector
    // JUnitDoclet end method getEndConnector
  }
  
  // JUnitDoclet begin javadoc_method startPoint()
  /**
  * Method testStartPoint is testing startPoint
  * @@see CH.ifa.draw.figures.LineConnection#startPoint(int, int)
  */
  // JUnitDoclet end javadoc_method startPoint()
  public void testStartPoint() throws Exception {
    // JUnitDoclet begin method startPoint
    // JUnitDoclet end method startPoint
  }
  
  // JUnitDoclet begin javadoc_method endPoint()
  /**
  * Method testEndPoint is testing endPoint
  * @@see CH.ifa.draw.figures.LineConnection#endPoint(int, int)
  */
  // JUnitDoclet end javadoc_method endPoint()
  public void testEndPoint() throws Exception {
    // JUnitDoclet begin method endPoint
    // JUnitDoclet end method endPoint
  }
  
  // JUnitDoclet begin javadoc_method handles()
  /**
  * Method testHandles is testing handles
  * @@see CH.ifa.draw.figures.LineConnection#handles()
  */
  // JUnitDoclet end javadoc_method handles()
  public void testHandles() throws Exception {
    // JUnitDoclet begin method handles
    // JUnitDoclet end method handles
  }
  
  // JUnitDoclet begin javadoc_method setPointAt()
  /**
  * Method testSetPointAt is testing setPointAt
  * @@see CH.ifa.draw.figures.LineConnection#setPointAt(java.awt.Point, int)
  */
  // JUnitDoclet end javadoc_method setPointAt()
  public void testSetPointAt() throws Exception {
    // JUnitDoclet begin method setPointAt
    // JUnitDoclet end method setPointAt
  }
  
  // JUnitDoclet begin javadoc_method insertPointAt()
  /**
  * Method testInsertPointAt is testing insertPointAt
  * @@see CH.ifa.draw.figures.LineConnection#insertPointAt(java.awt.Point, int)
  */
  // JUnitDoclet end javadoc_method insertPointAt()
  public void testInsertPointAt() throws Exception {
    // JUnitDoclet begin method insertPointAt
    // JUnitDoclet end method insertPointAt
  }
  
  // JUnitDoclet begin javadoc_method removePointAt()
  /**
  * Method testRemovePointAt is testing removePointAt
  * @@see CH.ifa.draw.figures.LineConnection#removePointAt(int)
  */
  // JUnitDoclet end javadoc_method removePointAt()
  public void testRemovePointAt() throws Exception {
    // JUnitDoclet begin method removePointAt
    // JUnitDoclet end method removePointAt
  }
  
  // JUnitDoclet begin javadoc_method updateConnection()
  /**
  * Method testUpdateConnection is testing updateConnection
  * @@see CH.ifa.draw.figures.LineConnection#updateConnection()
  */
  // JUnitDoclet end javadoc_method updateConnection()
  public void testUpdateConnection() throws Exception {
    // JUnitDoclet begin method updateConnection
    // JUnitDoclet end method updateConnection
  }
  
  // JUnitDoclet begin javadoc_method layoutConnection()
  /**
  * Method testLayoutConnection is testing layoutConnection
  * @@see CH.ifa.draw.figures.LineConnection#layoutConnection()
  */
  // JUnitDoclet end javadoc_method layoutConnection()
  public void testLayoutConnection() throws Exception {
    // JUnitDoclet begin method layoutConnection
    // JUnitDoclet end method layoutConnection
  }
  
  // JUnitDoclet begin javadoc_method figureChanged()
  /**
  * Method testFigureChanged is testing figureChanged
  * @@see CH.ifa.draw.figures.LineConnection#figureChanged(CH.ifa.draw.framework.FigureChangeEvent)
  */
  // JUnitDoclet end javadoc_method figureChanged()
  public void testFigureChanged() throws Exception {
    // JUnitDoclet begin method figureChanged
    // JUnitDoclet end method figureChanged
  }
  
  // JUnitDoclet begin javadoc_method figureRemoved()
  /**
  * Method testFigureRemoved is testing figureRemoved
  * @@see CH.ifa.draw.figures.LineConnection#figureRemoved(CH.ifa.draw.framework.FigureChangeEvent)
  */
  // JUnitDoclet end javadoc_method figureRemoved()
  public void testFigureRemoved() throws Exception {
    // JUnitDoclet begin method figureRemoved
    // JUnitDoclet end method figureRemoved
  }
  
  // JUnitDoclet begin javadoc_method figureRequestRemove()
  /**
  * Method testFigureRequestRemove is testing figureRequestRemove
  * @@see CH.ifa.draw.figures.LineConnection#figureRequestRemove(CH.ifa.draw.framework.FigureChangeEvent)
  */
  // JUnitDoclet end javadoc_method figureRequestRemove()
  public void testFigureRequestRemove() throws Exception {
    // JUnitDoclet begin method figureRequestRemove
    // JUnitDoclet end method figureRequestRemove
  }
  
  // JUnitDoclet begin javadoc_method figureInvalidated()
  /**
  * Method testFigureInvalidated is testing figureInvalidated
  * @@see CH.ifa.draw.figures.LineConnection#figureInvalidated(CH.ifa.draw.framework.FigureChangeEvent)
  */
  // JUnitDoclet end javadoc_method figureInvalidated()
  public void testFigureInvalidated() throws Exception {
    // JUnitDoclet begin method figureInvalidated
    // JUnitDoclet end method figureInvalidated
  }
  
  // JUnitDoclet begin javadoc_method figureRequestUpdate()
  /**
  * Method testFigureRequestUpdate is testing figureRequestUpdate
  * @@see CH.ifa.draw.figures.LineConnection#figureRequestUpdate(CH.ifa.draw.framework.FigureChangeEvent)
  */
  // JUnitDoclet end javadoc_method figureRequestUpdate()
  public void testFigureRequestUpdate() throws Exception {
    // JUnitDoclet begin method figureRequestUpdate
    // JUnitDoclet end method figureRequestUpdate
  }
  
  // JUnitDoclet begin javadoc_method release()
  /**
  * Method testRelease is testing release
  * @@see CH.ifa.draw.figures.LineConnection#release()
  */
  // JUnitDoclet end javadoc_method release()
  public void testRelease() throws Exception {
    // JUnitDoclet begin method release
    // JUnitDoclet end method release
  }
  
  // JUnitDoclet begin javadoc_method write()
  /**
  * Method testWrite is testing write
  * @@see CH.ifa.draw.figures.LineConnection#write(CH.ifa.draw.util.StorableOutput)
  */
  // JUnitDoclet end javadoc_method write()
  public void testWrite() throws Exception {
    // JUnitDoclet begin method write
    // JUnitDoclet end method write
  }
  
  // JUnitDoclet begin javadoc_method read()
  /**
  * Method testRead is testing read
  * @@see CH.ifa.draw.figures.LineConnection#read(CH.ifa.draw.util.StorableInput)
  */
  // JUnitDoclet end javadoc_method read()
  public void testRead() throws Exception {
    // JUnitDoclet begin method read
    // JUnitDoclet end method read
  }
  
  // JUnitDoclet begin javadoc_method visit()
  /**
  * Method testVisit is testing visit
  * @@see CH.ifa.draw.figures.LineConnection#visit(CH.ifa.draw.framework.FigureVisitor)
  */
  // JUnitDoclet end javadoc_method visit()
  public void testVisit() throws Exception {
    // JUnitDoclet begin method visit
    // JUnitDoclet end method visit
  }
  
  
  
  // JUnitDoclet begin javadoc_method testVault
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * <b>Method testVault is supposed to be empty.</b>
  */
  // JUnitDoclet end javadoc_method testVault
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  /**
  * Method to execute the TestCase from command line
  * using JUnit's textui.TestRunner .
  */
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(LineConnectionTest.class);
    // JUnitDoclet end method testcase.main
  }
@


1.1
log
@prepare for 5.4 release: adding test suite
@
text
@a4 1
import CH.ifa.draw.figures.LineConnection;
@

