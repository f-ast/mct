head	1.4;
access;
symbols
	jhotdraw60b1-release:1.4
	package_rename:1.4
	directory_rename:1.3
	reorg_6x_split_initial:1.3
	NEW_ATTRIBUTES:1.1.0.2
	release_JHD54b1:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.09.21.18.45;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.13.22.31.11;	author mtnygard;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.30.01.32.00;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.util.collections.jdk11;

import org.jhotdraw.util.collections.jdk11.ListWrapper;
import junit.framework.TestCase;
// JUnitDoclet begin import
// JUnitDoclet end import

/*
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 */

// JUnitDoclet begin javadoc_class
/**
 * TestCase ListWrapperTest is generated by
 * JUnitDoclet to hold the tests for ListWrapper.
 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper
 */
// JUnitDoclet end javadoc_class
public class ListWrapperTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
	// JUnitDoclet begin class
	// instance variables, helper methods, ... put them in this marker
	private ListWrapper listwrapper;
	// JUnitDoclet end class

	/**
	 * Constructor ListWrapperTest is
	 * basically calling the inherited constructor to
	 * initiate the TestCase for use by the Framework.
	 */
	public ListWrapperTest(String name) {
		// JUnitDoclet begin method ListWrapperTest
		super(name);
		// JUnitDoclet end method ListWrapperTest
	}

	/**
	 * Factory method for instances of the class to be tested.
	 */
	public ListWrapper createInstance() throws Exception {
		// JUnitDoclet begin method testcase.createInstance
		return new ListWrapper();
		// JUnitDoclet end method testcase.createInstance
	}

	/**
	 * Method setUp is overwriting the framework method to
	 * prepare an instance of this TestCase for a single test.
	 * It's called from the JUnit framework only.
	 */
	protected void setUp() throws Exception {
		// JUnitDoclet begin method testcase.setUp
		super.setUp();
		listwrapper = createInstance();
		// JUnitDoclet end method testcase.setUp
	}

	/**
	 * Method tearDown is overwriting the framework method to
	 * clean up after each single test of this TestCase.
	 * It's called from the JUnit framework only.
	 */
	protected void tearDown() throws Exception {
		// JUnitDoclet begin method testcase.tearDown
		listwrapper = null;
		super.tearDown();
		// JUnitDoclet end method testcase.tearDown
	}

	// JUnitDoclet begin javadoc_method size()
	/**
	 * Method testSize is testing size
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#size()
	 */
	// JUnitDoclet end javadoc_method size()
	public void testSize() throws Exception {
		// JUnitDoclet begin method size
		// JUnitDoclet end method size
	}

	// JUnitDoclet begin javadoc_method isEmpty()
	/**
	 * Method testIsEmpty is testing isEmpty
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#isEmpty()
	 */
	// JUnitDoclet end javadoc_method isEmpty()
	public void testIsEmpty() throws Exception {
		// JUnitDoclet begin method isEmpty
		// JUnitDoclet end method isEmpty
	}

	// JUnitDoclet begin javadoc_method contains()
	/**
	 * Method testContains is testing contains
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#contains(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method contains()
	public void testContains() throws Exception {
		// JUnitDoclet begin method contains
		// JUnitDoclet end method contains
	}

	// JUnitDoclet begin javadoc_method iterator()
	/**
	 * Method testIterator is testing iterator
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#iterator()
	 */
	// JUnitDoclet end javadoc_method iterator()
	public void testIterator() throws Exception {
		// JUnitDoclet begin method iterator
		// JUnitDoclet end method iterator
	}

	// JUnitDoclet begin javadoc_method toArray()
	/**
	 * Method testToArray is testing toArray
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#toArray()
	 */
	// JUnitDoclet end javadoc_method toArray()
	public void testToArray() throws Exception {
		// JUnitDoclet begin method toArray
		// JUnitDoclet end method toArray
	}

	// JUnitDoclet begin javadoc_method add()
	/**
	 * Method testAdd is testing add
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#add(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method add()
	public void testAdd() throws Exception {
		// JUnitDoclet begin method add
		// JUnitDoclet end method add
	}

	// JUnitDoclet begin javadoc_method remove()
	/**
	 * Method testRemove is testing remove
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#remove(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method remove()
	public void testRemove() throws Exception {
		// JUnitDoclet begin method remove
		// JUnitDoclet end method remove
	}

	// JUnitDoclet begin javadoc_method containsAll()
	/**
	 * Method testContainsAll is testing containsAll
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#containsAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method containsAll()
	public void testContainsAll() throws Exception {
		// JUnitDoclet begin method containsAll
		// JUnitDoclet end method containsAll
	}

	// JUnitDoclet begin javadoc_method addAll()
	/**
	 * Method testAddAll is testing addAll
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#addAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method addAll()
	public void testAddAll() throws Exception {
		// JUnitDoclet begin method addAll
		// JUnitDoclet end method addAll
	}

	// JUnitDoclet begin javadoc_method removeAll()
	/**
	 * Method testRemoveAll is testing removeAll
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#removeAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method removeAll()
	public void testRemoveAll() throws Exception {
		// JUnitDoclet begin method removeAll
		// JUnitDoclet end method removeAll
	}

	// JUnitDoclet begin javadoc_method retainAll()
	/**
	 * Method testRetainAll is testing retainAll
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#retainAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method retainAll()
	public void testRetainAll() throws Exception {
		// JUnitDoclet begin method retainAll
		// JUnitDoclet end method retainAll
	}

	// JUnitDoclet begin javadoc_method clear()
	/**
	 * Method testClear is testing clear
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#clear()
	 */
	// JUnitDoclet end javadoc_method clear()
	public void testClear() throws Exception {
		// JUnitDoclet begin method clear
		// JUnitDoclet end method clear
	}

	// JUnitDoclet begin javadoc_method get()
	/**
	 * Method testGet is testing get
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#get(int)
	 */
	// JUnitDoclet end javadoc_method get()
	public void testGet() throws Exception {
		// JUnitDoclet begin method get
		// JUnitDoclet end method get
	}

	// JUnitDoclet begin javadoc_method set()
	/**
	 * Method testSet is testing set
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#set(int, java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method set()
	public void testSet() throws Exception {
		// JUnitDoclet begin method set
		// JUnitDoclet end method set
	}

	// JUnitDoclet begin javadoc_method indexOf()
	/**
	 * Method testIndexOf is testing indexOf
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#indexOf(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method indexOf()
	public void testIndexOf() throws Exception {
		// JUnitDoclet begin method indexOf
		// JUnitDoclet end method indexOf
	}

	// JUnitDoclet begin javadoc_method lastIndexOf()
	/**
	 * Method testLastIndexOf is testing lastIndexOf
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#lastIndexOf(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method lastIndexOf()
	public void testLastIndexOf() throws Exception {
		// JUnitDoclet begin method lastIndexOf
		// JUnitDoclet end method lastIndexOf
	}

	// JUnitDoclet begin javadoc_method listIterator()
	/**
	 * Method testListIterator is testing listIterator
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#listIterator()
	 */
	// JUnitDoclet end javadoc_method listIterator()
	public void testListIterator() throws Exception {
		// JUnitDoclet begin method listIterator
		// JUnitDoclet end method listIterator
	}

	// JUnitDoclet begin javadoc_method subList()
	/**
	 * Method testSubList is testing subList
	 * @@see org.jhotdraw.util.collections.jdk11.ListWrapper#subList(int, int)
	 */
	// JUnitDoclet end javadoc_method subList()
	public void testSubList() throws Exception {
		// JUnitDoclet begin method subList
		// JUnitDoclet end method subList
	}

	// JUnitDoclet begin javadoc_method testVault
	/**
	 * JUnitDoclet moves marker to this method, if there is not match
	 * for them in the regenerated code and if the marker is not empty.
	 * This way, no test gets lost when regenerating after renaming.
	 * <b>Method testVault is supposed to be empty.</b>
	 */
	// JUnitDoclet end javadoc_method testVault
	public void testVault() throws Exception {
		// JUnitDoclet begin method testcase.testVault
		// JUnitDoclet end method testcase.testVault
	}

}
@


1.3
log
@TestSuite: adjusting auto-generated sourcecode (JunitDoclet) to coding style
@
text
@d11 1
a11 1
package CH.ifa.draw.test.util.collections.jdk11;
d13 1
a13 1
import CH.ifa.draw.util.collections.jdk11.ListWrapper;
d30 1
a30 1
 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper
d57 1
a57 1
	public CH.ifa.draw.util.collections.jdk11.ListWrapper createInstance() throws Exception {
d59 1
a59 1
		return new CH.ifa.draw.util.collections.jdk11.ListWrapper();
d90 1
a90 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#size()
d101 1
a101 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#isEmpty()
d112 1
a112 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#contains(java.lang.Object)
d123 1
a123 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#iterator()
d134 1
a134 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#toArray()
d145 1
a145 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#add(java.lang.Object)
d156 1
a156 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#remove(java.lang.Object)
d167 1
a167 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#containsAll(java.util.Collection)
d178 1
a178 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#addAll(java.util.Collection)
d189 1
a189 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#removeAll(java.util.Collection)
d200 1
a200 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#retainAll(java.util.Collection)
d211 1
a211 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#clear()
d222 1
a222 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#get(int)
d233 1
a233 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#set(int, java.lang.Object)
d244 1
a244 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#indexOf(java.lang.Object)
d255 1
a255 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#lastIndexOf(java.lang.Object)
d266 1
a266 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#listIterator()
d277 1
a277 1
	 * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#subList(int, int)
@


1.2
log
@Eliminate some deprecated method warnings.
Organize imports to remove Eclipse warnings about unused imports.
@
text
@d1 10
d13 1
d19 6
a24 7
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/

d28 4
a31 4
* TestCase ListWrapperTest is generated by
* JUnitDoclet to hold the tests for ListWrapper.
* @@see CH.ifa.draw.util.collections.jdk11.ListWrapper
*/
d38 260
a297 271
  // JUnitDoclet begin class
  // instance variables, helper methods, ... put them in this marker
  CH.ifa.draw.util.collections.jdk11.ListWrapper listwrapper = null;
  // JUnitDoclet end class
  
  /**
  * Constructor ListWrapperTest is
  * basically calling the inherited constructor to
  * initiate the TestCase for use by the Framework.
  */
  public ListWrapperTest(String name) {
    // JUnitDoclet begin method ListWrapperTest
    super(name);
    // JUnitDoclet end method ListWrapperTest
  }
  
  /**
  * Factory method for instances of the class to be tested.
  */
  public CH.ifa.draw.util.collections.jdk11.ListWrapper createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new CH.ifa.draw.util.collections.jdk11.ListWrapper();
    // JUnitDoclet end method testcase.createInstance
  }
  
  /**
  * Method setUp is overwriting the framework method to
  * prepare an instance of this TestCase for a single test.
  * It's called from the JUnit framework only.
  */
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    listwrapper = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  /**
  * Method tearDown is overwriting the framework method to
  * clean up after each single test of this TestCase.
  * It's called from the JUnit framework only.
  */
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    listwrapper = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  // JUnitDoclet begin javadoc_method size()
  /**
  * Method testSize is testing size
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#size()
  */
  // JUnitDoclet end javadoc_method size()
  public void testSize() throws Exception {
    // JUnitDoclet begin method size
    // JUnitDoclet end method size
  }
  
  // JUnitDoclet begin javadoc_method isEmpty()
  /**
  * Method testIsEmpty is testing isEmpty
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#isEmpty()
  */
  // JUnitDoclet end javadoc_method isEmpty()
  public void testIsEmpty() throws Exception {
    // JUnitDoclet begin method isEmpty
    // JUnitDoclet end method isEmpty
  }
  
  // JUnitDoclet begin javadoc_method contains()
  /**
  * Method testContains is testing contains
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#contains(java.lang.Object)
  */
  // JUnitDoclet end javadoc_method contains()
  public void testContains() throws Exception {
    // JUnitDoclet begin method contains
    // JUnitDoclet end method contains
  }
  
  // JUnitDoclet begin javadoc_method iterator()
  /**
  * Method testIterator is testing iterator
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#iterator()
  */
  // JUnitDoclet end javadoc_method iterator()
  public void testIterator() throws Exception {
    // JUnitDoclet begin method iterator
    // JUnitDoclet end method iterator
  }
  
  // JUnitDoclet begin javadoc_method toArray()
  /**
  * Method testToArray is testing toArray
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#toArray()
  */
  // JUnitDoclet end javadoc_method toArray()
  public void testToArray() throws Exception {
    // JUnitDoclet begin method toArray
    // JUnitDoclet end method toArray
  }
  
  // JUnitDoclet begin javadoc_method add()
  /**
  * Method testAdd is testing add
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#add(java.lang.Object)
  */
  // JUnitDoclet end javadoc_method add()
  public void testAdd() throws Exception {
    // JUnitDoclet begin method add
    // JUnitDoclet end method add
  }
  
  // JUnitDoclet begin javadoc_method remove()
  /**
  * Method testRemove is testing remove
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#remove(java.lang.Object)
  */
  // JUnitDoclet end javadoc_method remove()
  public void testRemove() throws Exception {
    // JUnitDoclet begin method remove
    // JUnitDoclet end method remove
  }
  
  // JUnitDoclet begin javadoc_method containsAll()
  /**
  * Method testContainsAll is testing containsAll
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#containsAll(java.util.Collection)
  */
  // JUnitDoclet end javadoc_method containsAll()
  public void testContainsAll() throws Exception {
    // JUnitDoclet begin method containsAll
    // JUnitDoclet end method containsAll
  }
  
  // JUnitDoclet begin javadoc_method addAll()
  /**
  * Method testAddAll is testing addAll
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#addAll(java.util.Collection)
  */
  // JUnitDoclet end javadoc_method addAll()
  public void testAddAll() throws Exception {
    // JUnitDoclet begin method addAll
    // JUnitDoclet end method addAll
  }
  
  // JUnitDoclet begin javadoc_method removeAll()
  /**
  * Method testRemoveAll is testing removeAll
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#removeAll(java.util.Collection)
  */
  // JUnitDoclet end javadoc_method removeAll()
  public void testRemoveAll() throws Exception {
    // JUnitDoclet begin method removeAll
    // JUnitDoclet end method removeAll
  }
  
  // JUnitDoclet begin javadoc_method retainAll()
  /**
  * Method testRetainAll is testing retainAll
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#retainAll(java.util.Collection)
  */
  // JUnitDoclet end javadoc_method retainAll()
  public void testRetainAll() throws Exception {
    // JUnitDoclet begin method retainAll
    // JUnitDoclet end method retainAll
  }
  
  // JUnitDoclet begin javadoc_method clear()
  /**
  * Method testClear is testing clear
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#clear()
  */
  // JUnitDoclet end javadoc_method clear()
  public void testClear() throws Exception {
    // JUnitDoclet begin method clear
    // JUnitDoclet end method clear
  }
  
  // JUnitDoclet begin javadoc_method get()
  /**
  * Method testGet is testing get
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#get(int)
  */
  // JUnitDoclet end javadoc_method get()
  public void testGet() throws Exception {
    // JUnitDoclet begin method get
    // JUnitDoclet end method get
  }
  
  // JUnitDoclet begin javadoc_method set()
  /**
  * Method testSet is testing set
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#set(int, java.lang.Object)
  */
  // JUnitDoclet end javadoc_method set()
  public void testSet() throws Exception {
    // JUnitDoclet begin method set
    // JUnitDoclet end method set
  }
  
  // JUnitDoclet begin javadoc_method indexOf()
  /**
  * Method testIndexOf is testing indexOf
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#indexOf(java.lang.Object)
  */
  // JUnitDoclet end javadoc_method indexOf()
  public void testIndexOf() throws Exception {
    // JUnitDoclet begin method indexOf
    // JUnitDoclet end method indexOf
  }
  
  // JUnitDoclet begin javadoc_method lastIndexOf()
  /**
  * Method testLastIndexOf is testing lastIndexOf
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#lastIndexOf(java.lang.Object)
  */
  // JUnitDoclet end javadoc_method lastIndexOf()
  public void testLastIndexOf() throws Exception {
    // JUnitDoclet begin method lastIndexOf
    // JUnitDoclet end method lastIndexOf
  }
  
  // JUnitDoclet begin javadoc_method listIterator()
  /**
  * Method testListIterator is testing listIterator
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#listIterator()
  */
  // JUnitDoclet end javadoc_method listIterator()
  public void testListIterator() throws Exception {
    // JUnitDoclet begin method listIterator
    // JUnitDoclet end method listIterator
  }
  
  // JUnitDoclet begin javadoc_method subList()
  /**
  * Method testSubList is testing subList
  * @@see CH.ifa.draw.util.collections.jdk11.ListWrapper#subList(int, int)
  */
  // JUnitDoclet end javadoc_method subList()
  public void testSubList() throws Exception {
    // JUnitDoclet begin method subList
    // JUnitDoclet end method subList
  }
  
  
  
  // JUnitDoclet begin javadoc_method testVault
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * <b>Method testVault is supposed to be empty.</b>
  */
  // JUnitDoclet end javadoc_method testVault
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  /**
  * Method to execute the TestCase from command line
  * using JUnit's textui.TestRunner .
  */
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(ListWrapperTest.class);
    // JUnitDoclet end method testcase.main
  }
@


1.1
log
@prepare for 5.4 release: adding test suite
@
text
@a4 1
import CH.ifa.draw.util.collections.jdk11.ListWrapper;
@

