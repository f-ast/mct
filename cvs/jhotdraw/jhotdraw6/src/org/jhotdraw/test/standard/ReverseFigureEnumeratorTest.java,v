head	1.4;
access;
symbols
	jhotdraw60b1-release:1.4
	package_rename:1.4
	directory_rename:1.3
	reorg_6x_split_initial:1.3
	NEW_ATTRIBUTES:1.1.0.2
	release_JHD54b1:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.09.21.18.44;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.13.22.31.10;	author mtnygard;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.30.01.31.58;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.standard;

import java.awt.Point;
import java.util.List;

import junit.framework.TestCase;

// JUnitDoclet begin import
import org.jhotdraw.figures.PolyLineFigure;
import org.jhotdraw.figures.RectangleFigure;
import org.jhotdraw.standard.ReverseFigureEnumerator;
import org.jhotdraw.util.CollectionsFactory;
// JUnitDoclet end import

/*
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 */

// JUnitDoclet begin javadoc_class
/**
 * TestCase ReverseFigureEnumeratorTest is generated by
 * JUnitDoclet to hold the tests for ReverseFigureEnumerator.
 * @@see org.jhotdraw.standard.ReverseFigureEnumerator
 */
// JUnitDoclet end javadoc_class
public class ReverseFigureEnumeratorTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
	// JUnitDoclet begin class
	// instance variables, helper methods, ... put them in this marker
	private ReverseFigureEnumerator reversefigureenumerator;
	// JUnitDoclet end class

	/**
	 * Constructor ReverseFigureEnumeratorTest is
	 * basically calling the inherited constructor to
	 * initiate the TestCase for use by the Framework.
	 */
	public ReverseFigureEnumeratorTest(String name) {
		// JUnitDoclet begin method ReverseFigureEnumeratorTest
		super(name);
		// JUnitDoclet end method ReverseFigureEnumeratorTest
	}

	/**
	 * Factory method for instances of the class to be tested.
	 */
	public ReverseFigureEnumerator createInstance() throws Exception {
		// JUnitDoclet begin method testcase.createInstance
		List l = CollectionsFactory.current().createList();
		l.add(new RectangleFigure(new Point(10, 10), new Point(50, 50)));
		l.add(new PolyLineFigure());
		return new ReverseFigureEnumerator(l);
		// JUnitDoclet end method testcase.createInstance
	}

	/**
	 * Method setUp is overwriting the framework method to
	 * prepare an instance of this TestCase for a single test.
	 * It's called from the JUnit framework only.
	 */
	protected void setUp() throws Exception {
		// JUnitDoclet begin method testcase.setUp
		super.setUp();
		reversefigureenumerator = createInstance();
		// JUnitDoclet end method testcase.setUp
	}

	/**
	 * Method tearDown is overwriting the framework method to
	 * clean up after each single test of this TestCase.
	 * It's called from the JUnit framework only.
	 */
	protected void tearDown() throws Exception {
		// JUnitDoclet begin method testcase.tearDown
		reversefigureenumerator = null;
		super.tearDown();
		// JUnitDoclet end method testcase.tearDown
	}

	// JUnitDoclet begin javadoc_method hasNextFigure()
	/**
	 * Method testHasNextFigure is testing hasNextFigure
	 * @@see org.jhotdraw.standard.ReverseFigureEnumerator#hasNextFigure()
	 */
	// JUnitDoclet end javadoc_method hasNextFigure()
	public void testHasNextFigure() throws Exception {
		// JUnitDoclet begin method hasNextFigure
		// JUnitDoclet end method hasNextFigure
	}

	// JUnitDoclet begin javadoc_method nextFigure()
	/**
	 * Method testNextFigure is testing nextFigure
	 * @@see org.jhotdraw.standard.ReverseFigureEnumerator#nextFigure()
	 */
	// JUnitDoclet end javadoc_method nextFigure()
	public void testNextFigure() throws Exception {
		// JUnitDoclet begin method nextFigure
		// JUnitDoclet end method nextFigure
	}

	// JUnitDoclet begin javadoc_method reset()
	/**
	 * Method testReset is testing reset
	 * @@see org.jhotdraw.standard.ReverseFigureEnumerator#reset()
	 */
	// JUnitDoclet end javadoc_method reset()
	public void testReset() throws Exception {
		// JUnitDoclet begin method reset
		// JUnitDoclet end method reset
	}

	// JUnitDoclet begin javadoc_method testVault
	/**
	 * JUnitDoclet moves marker to this method, if there is not match
	 * for them in the regenerated code and if the marker is not empty.
	 * This way, no test gets lost when regenerating after renaming.
	 * <b>Method testVault is supposed to be empty.</b>
	 */
	// JUnitDoclet end javadoc_method testVault
	public void testVault() throws Exception {
		// JUnitDoclet begin method testcase.testVault
		// JUnitDoclet end method testcase.testVault
	}

}
@


1.3
log
@TestSuite: adjusting auto-generated sourcecode (JunitDoclet) to coding style
@
text
@d11 1
a11 1
package CH.ifa.draw.test.standard;
d19 4
a22 4
import CH.ifa.draw.figures.PolyLineFigure;
import CH.ifa.draw.figures.RectangleFigure;
import CH.ifa.draw.standard.ReverseFigureEnumerator;
import CH.ifa.draw.util.CollectionsFactory;
d37 1
a37 1
 * @@see CH.ifa.draw.standard.ReverseFigureEnumerator
d64 1
a64 1
	public CH.ifa.draw.standard.ReverseFigureEnumerator createInstance() throws Exception {
d69 1
a69 1
		return new CH.ifa.draw.standard.ReverseFigureEnumerator(l);
d100 1
a100 1
	 * @@see CH.ifa.draw.standard.ReverseFigureEnumerator#hasNextFigure()
d111 1
a111 1
	 * @@see CH.ifa.draw.standard.ReverseFigureEnumerator#nextFigure()
d122 1
a122 1
	 * @@see CH.ifa.draw.standard.ReverseFigureEnumerator#reset()
@


1.2
log
@Eliminate some deprecated method warnings.
Organize imports to remove Eclipse warnings about unused imports.
@
text
@d1 10
d21 1
d26 6
a31 7
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/

d35 4
a38 4
* TestCase ReverseFigureEnumeratorTest is generated by
* JUnitDoclet to hold the tests for ReverseFigureEnumerator.
* @@see CH.ifa.draw.standard.ReverseFigureEnumerator
*/
d45 98
a142 109
  // JUnitDoclet begin class
  // instance variables, helper methods, ... put them in this marker
  CH.ifa.draw.standard.ReverseFigureEnumerator reversefigureenumerator = null;
  // JUnitDoclet end class
  
  /**
  * Constructor ReverseFigureEnumeratorTest is
  * basically calling the inherited constructor to
  * initiate the TestCase for use by the Framework.
  */
  public ReverseFigureEnumeratorTest(String name) {
    // JUnitDoclet begin method ReverseFigureEnumeratorTest
    super(name);
    // JUnitDoclet end method ReverseFigureEnumeratorTest
  }
  
  /**
  * Factory method for instances of the class to be tested.
  */
  public CH.ifa.draw.standard.ReverseFigureEnumerator createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
	List l = CollectionsFactory.current().createList();
	l.add(new RectangleFigure(new Point(10, 10), new Point(50, 50)));
	l.add(new PolyLineFigure());
    return new CH.ifa.draw.standard.ReverseFigureEnumerator(l);
    // JUnitDoclet end method testcase.createInstance
  }
  
  /**
  * Method setUp is overwriting the framework method to
  * prepare an instance of this TestCase for a single test.
  * It's called from the JUnit framework only.
  */
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    reversefigureenumerator = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  /**
  * Method tearDown is overwriting the framework method to
  * clean up after each single test of this TestCase.
  * It's called from the JUnit framework only.
  */
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    reversefigureenumerator = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  // JUnitDoclet begin javadoc_method hasNextFigure()
  /**
  * Method testHasNextFigure is testing hasNextFigure
  * @@see CH.ifa.draw.standard.ReverseFigureEnumerator#hasNextFigure()
  */
  // JUnitDoclet end javadoc_method hasNextFigure()
  public void testHasNextFigure() throws Exception {
    // JUnitDoclet begin method hasNextFigure
    // JUnitDoclet end method hasNextFigure
  }
  
  // JUnitDoclet begin javadoc_method nextFigure()
  /**
  * Method testNextFigure is testing nextFigure
  * @@see CH.ifa.draw.standard.ReverseFigureEnumerator#nextFigure()
  */
  // JUnitDoclet end javadoc_method nextFigure()
  public void testNextFigure() throws Exception {
    // JUnitDoclet begin method nextFigure
    // JUnitDoclet end method nextFigure
  }
  
  // JUnitDoclet begin javadoc_method reset()
  /**
  * Method testReset is testing reset
  * @@see CH.ifa.draw.standard.ReverseFigureEnumerator#reset()
  */
  // JUnitDoclet end javadoc_method reset()
  public void testReset() throws Exception {
    // JUnitDoclet begin method reset
    // JUnitDoclet end method reset
  }
  
  
  
  // JUnitDoclet begin javadoc_method testVault
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * <b>Method testVault is supposed to be empty.</b>
  */
  // JUnitDoclet end javadoc_method testVault
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  /**
  * Method to execute the TestCase from command line
  * using JUnit's textui.TestRunner .
  */
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(ReverseFigureEnumeratorTest.class);
    // JUnitDoclet end method testcase.main
  }
@


1.1
log
@prepare for 5.4 release: adding test suite
@
text
@d3 3
d7 1
d9 2
a10 1
import CH.ifa.draw.standard.ReverseFigureEnumerator;
a11 5
import CH.ifa.draw.figures.RectangleFigure;
import CH.ifa.draw.figures.PolyLineFigure;

import java.util.List;
import java.awt.*;
@

