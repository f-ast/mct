head	1.10;
access;
symbols
	jhotdraw60b1-release:1.10
	package_rename:1.10
	directory_rename:1.9
	reorg_6x_split_initial:1.9
	MVC_PHASE1:1.9.0.4
	NEW_ATTRIBUTES:1.9.0.2
	DNOYEB1_ALPHA-2:1.8.4.2
	release_JHD54b1:1.8
	BUGFIX_670992:1.8.0.6
	DNOYEB1_ALPHA-1:1.8.4.2
	dnoyeb1:1.8.0.4
	repack:1.8.0.2
	Root_repack:1.8
	Before_FigureVisitor:1.8
	JHotDraw_5-3:1.8
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.04.05.21.23;	author ricardo_padilha;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.19.18.31.31;	author mrfloppy;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.10.24.21.15.18;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.12;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.13;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.46;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches;
next	;

1.8.4.1
date	2003.01.07.21.22.34;	author dnoyeb;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2003.01.16.22.38.46;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.10
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)DrawingEditor.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.framework;

import org.jhotdraw.util.UndoManager;

/**
 * DrawingEditor defines the interface for coordinating
 * the different objects that participate in a drawing editor.
 *
 * <hr>
 * <b>Design Patterns</b><P>
 * <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
 * <b><a href=../pattlets/sld022.htm>Mediator</a></b><br>
 * DrawingEditor is the mediator. It decouples the participants
 * of a drawing editor.
 *
 * @@see Tool
 * @@see DrawingView
 * @@see Drawing
 *
 * @@version <$CURRENT_VERSION$>
 */
public interface DrawingEditor extends FigureSelectionListener {

	/**
	 * Gets the editor's drawing view.
	 */
	public DrawingView view();

	public DrawingView[] views();
	/**
	 * Gets the editor's drawing.
	 */
//	public Drawing drawing();

	/**
	 * Gets the editor's current tool.
	 */
	public Tool tool();

	/**
	 * Informs the editor that a tool has done its interaction.
	 * This method can be used to switch back to the default tool.
	 */
	public void toolDone();

	/**
	 * Informs that the current figure selection has changed.
	 * Override this method to handle selection changes.
	 */
	public void figureSelectionChanged(DrawingView view);

	public void addViewChangeListener(ViewChangeListener vsl);
	public void removeViewChangeListener(ViewChangeListener vsl);

	/**
	 * Shows a status message in the editor's user interface
	 */
	public void showStatus(String string);

	public UndoManager getUndoManager();
}
@


1.9
log
@Removed unused imports.
@
text
@d12 1
a12 1
package CH.ifa.draw.framework;
d14 1
a14 1
import CH.ifa.draw.util.UndoManager;
@


1.8
log
@no message
@
text
@a14 1
import java.awt.*;
@


1.8.4.1
log
@1. Added getDesktop to the DrawingEditor.  added null returns to all Classes that dont fully support
   the Desktop architecture yet, like the applets.

2. Added a figureSelection listener to the DrawingEditor so one can register with the DrawingEditor to
   hear figure selection events.  You can still register with the individual DrawingViews if you wish.
   The DrawingEditor will guarantee that it only fires this event on the active view, so it saves a listener
   from having to register and unregister with views to hear this event each time the activeView changes.
   All Commands were doing this register/unregister dance.

3. AbstractCommand now registers for figureSelectionEvents with the drawingEditor as opposed to the
   DrawingView.

4. Went back to viewCreated and viewDestroying naming.  flip flopping.  Its actually more accurate.  the
   real issue is that 2 events are missing, viewDestroyed and viewCreating.  dont need them yet, but
   they may materialize in the future.

5. Went back to Tool CompositeTool being enabled even when no figure is selected.

6. FigureSelectionListener now extends java.util.EventListener now because I am too lazy to write
   an event handler just yet.

7. implemented new findFigureInside() fix.  needs testing.

8. standardDrawingView selectionZordered now returns figures in the proper order(not reversed).
@
text
@d13 1
a13 1
import CH.ifa.draw.contrib.Desktop;
a19 2
 * It does things like holds the currently selected Tool.  Holds the currently
 * selected color and pen size. (i think-dnoyeb)
a36 4
	 * Gets the application <b>Desktop</b>.
	 */
	public Desktop getDesktop();
	/**
a37 2
	 * @@deprecated use {@@link #getDesktop() getDesktop().getActiveDrawingView()}
	 *  instead.
d41 1
d43 1
a43 1
	 * @@deprecated use {@@link #getDesktop() getDesktop()} instead.
d45 1
a45 1
	public DrawingView[] views();
d59 1
a59 1
	 * Called when the current figure selection has changed.
a60 2
	 * @@todo we need to seperate the listener interface from those that manually
	 *       call this method by adding a new method of nearly the same name?
d63 1
a63 12
	/**
	 * Figure selection events are sent when the figure selection of the active
	 * {@@link DrawingView DrawingView} has changed.  It is guaranteed never to
	 * be sent from inactive {@@link DrawingView DrawingView}s.  Specific {@@link
	 * DrawingView DrawingView}s can also be registered with.  Active Tools may 
	 * prefer to get their Figure selection events from the {@@link DrawingView
	 * DrawingView} they work on.  But this should not be necessary.  Honestly, 
	 * I would prefer if the editor had its own listener and did not reuse 
	 * <b>FigureSelectionListener</b> eventhough its functionality is the same.
	 */
	public void addFigureSelectionListener(FigureSelectionListener fsl);
	public void removeFigureSelectionListener(FigureSelectionListener fsl);
@


1.8.4.2
log
@Various comments.
Fixed undo bug which always restored dependent figures, even if they were deleted in a
seperate operation.
@
text
@d39 1
a39 5
	 * Gets the applications <b>Desktop</b>.
	 * Use this if you have nested Desktops and need access to a specific one.
	 * This is part of the first version of the Desktop system.  If you have any
	 * ideas about improvement please post on the JHotDraw forums and/or send to
	 * CL Gilbert<dnoyeb@@users.sourceforge.net>
a41 1
	
d43 3
a45 2
	 * Gets the editor's active <code>DrawingView</code>.
	 * Convience method.
d50 1
a50 1
	 * Gets all <code>DrawingView<code>s from the <code>Desktop</code>.
@


1.7
log
@merge dnd (before 5.3)
@
text
@d42 4
@


1.6
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d14 1
d41 1
a41 4
	/**
	 * Gets the editor's drawing.
	 */
	public Drawing drawing();
d55 1
a55 1
	 * Informs that the current selection has changed.
d60 3
d68 1
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d2 1
a2 1
 * @@(#)DrawingEditor.java 5.2
d4 6
d30 2
d35 31
a65 31
    /**
     * Gets the editor's drawing view.
     */
    public DrawingView view();

    /**
     * Gets the editor's drawing.
     */
    public Drawing drawing();

    /**
     * Gets the editor's current tool.
     */
    public Tool tool();

    /**
     * Informs the editor that a tool has done its interaction.
     * This method can be used to switch back to the default tool.
     */
    public void toolDone();

    /**
     * Informs that the current selection has changed.
     * Override this method to handle selection changes.
     */
    public void figureSelectionChanged(DrawingView view);

    /**
     * Shows a status message in the editor's user interface
     */
    public void showStatus(String string);
@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d25 1
a25 1
public interface DrawingEditor {
d30 1
a30 1
    DrawingView view();
d35 1
a35 1
    Drawing     drawing();
d40 1
a40 1
    Tool        tool();
d46 1
a46 1
    void        toolDone();
d52 1
a52 1
    void        selectionChanged(DrawingView view);
d57 1
a57 1
    void        showStatus(String string);
@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d25 1
a25 1
public interface DrawingEditor extends FigureSelectionListener {
d30 1
a30 1
    public DrawingView view();
d35 1
a35 1
    public Drawing drawing();
d40 1
a40 1
    public Tool tool();
d46 1
a46 1
    public void toolDone();
d52 1
a52 1
    public void figureSelectionChanged(DrawingView view);
d57 1
a57 1
    public void showStatus(String string);
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d25 1
a25 1
public interface DrawingEditor {
d30 1
a30 1
    DrawingView view();
d35 1
a35 1
    Drawing     drawing();
d40 1
a40 1
    Tool        tool();
d46 1
a46 1
    void        toolDone();
d52 1
a52 1
    void        selectionChanged(DrawingView view);
d57 1
a57 1
    void        showStatus(String string);
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)DrawingEditor.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
