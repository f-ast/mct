head	1.3;
access;
symbols
	jhotdraw60b1-release:1.3
	package_rename:1.3
	directory_rename:1.2
	reorg_6x_split_initial:1.2
	MVC_PHASE1:1.2.0.10
	NEW_ATTRIBUTES:1.2.0.8
	DNOYEB1_ALPHA-2:1.2
	release_JHD54b1:1.2
	BUGFIX_670992:1.2.0.6
	DNOYEB1_ALPHA-1:1.2
	dnoyeb1:1.2.0.4
	repack:1.2.0.2
	Root_repack:1.2
	Before_FigureVisitor:1.2;
locks; strict;
comment	@# @;


1.3
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.21.08.05.55;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.04.22.46.48;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)HandleEnumeration.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.framework;

import java.util.List;

/**
 * Interface for Enumerations that access Handles.
 * It provides a method nextHandle, that hides the down casting
 * from client code.
 *
 * @@author  Wolfram Kaiser <mrfloppy@@sourceforge.net>
 * @@version <$CURRENT_VERSION$>
 */
public interface HandleEnumeration {
	/**
	 * Returns the next element of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception java.util.NoSuchElementException If no more elements exist.
	 */
	public Handle nextHandle();
	public boolean hasNextHandle();

	/**
	 * Returns a list with all elements currently available in the enumeration.
	 * That means, elements retrieved already by calling nextHandle() are not
	 * contained. This method does not change the position of the enumeration.
	 * Warning: this method is not necessarily synchronized so this enumeration should not
	 * be modified at the same time!
	 *
	 * @@return list with all elements currently available in the enumeration.
	 */
	public List toList();

	/**
	 * Reset the enumeration so it can be reused again. However, the
	 * underlying collection might have changed since the last usage
	 * so the elements and the order may vary when using an enumeration
	 * which has been reset.
	 */
	public void reset();
}
@


1.2
log
@extended functionality for enumerations (reset, and-enumeration) and a few bug fixes
@
text
@d12 1
a12 1
package CH.ifa.draw.framework;
@


1.1
log
@after variou merges... (before 5.4 release)
@
text
@d43 8
@

