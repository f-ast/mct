head	1.7;
access;
symbols
	jhotdraw60b1-release:1.7
	package_rename:1.7
	directory_rename:1.6
	reorg_6x_split_initial:1.6
	MVC_PHASE1:1.5.0.2
	NEW_ATTRIBUTES:1.4.0.2
	DNOYEB1_ALPHA-2:1.3
	release_JHD54b1:1.3
	BUGFIX_670992:1.3.0.6
	DNOYEB1_ALPHA-1:1.3
	dnoyeb1:1.3.0.4
	repack:1.3.0.2
	Root_repack:1.3
	Before_FigureVisitor:1.3
	JHotDraw_5-3:1.3
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.08.15.41.25;	author ricardo_padilha;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.22.23.58.42;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.31.12.10.45;	author ricardo_padilha;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.03.09.15.31.46;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.3.2.1
date	2002.12.17.20.33.27;	author birdscurrybeer;	state Exp;
branches;
next	;


desc
@@


1.7
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)Handle.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.framework;

import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;

import org.jhotdraw.util.Undoable;

/**
 * Handles are used to change a figure by direct manipulation.
 * Handles know their owning figure and they provide methods to
 * locate the handle on the figure and to track changes.
 * <hr>
 * <b>Design Patterns</b><P>
 * <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
 * <b><a href=../pattlets/sld004.htm>Adapter</a></b><br>
 * Handles adapt the operations to manipulate a figure to a common interface.
 *
 * @@see Figure
 *
 * @@version <$CURRENT_VERSION$>
 */
public interface Handle {

	public static final int HANDLESIZE = 8;

	/**
	 * Locates the handle on the figure. The handle is drawn
	 * centered around the returned point.
	 */
	public Point locate();

	/**
	 * Tracks the start of the interaction. The default implementation
	 * does nothing.
	 * @@param x the x position where the interaction started
	 * @@param y the y position where the interaction started
	 * @@param view the handles container
	 */
	public void invokeStart(int  x, int  y, DrawingView view);

	/**
	 * Tracks the start of the interaction. The default implementation
	 * does nothing.
	 * @@param x the x position where the interaction started
	 * @@param y the y position where the interaction started
	 * @@deprecated As of version 4.1, use invokeStart(x, y, drawingView)
	 */
	public void invokeStart(int  x, int  y, Drawing drawing);

	/**
	 * Tracks a step of the interaction.
	 * @@param x the current x position
	 * @@param y the current y position
	 * @@param anchorX the x position where the interaction started
	 * @@param anchorY the y position where the interaction started
	 */
	public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view);

	/**
	 * Tracks a step of the interaction.
	 * @@param dx x delta of this step
	 * @@param dy y delta of this step
	 * @@deprecated As of version 4.1,
	 * use invokeStep(x, y, anchorX, anchorY, drawingView)
	 */
	public void invokeStep (int dx, int dy, Drawing drawing);

	/**
	 * Tracks the end of the interaction.
	 * @@param x the current x position
	 * @@param y the current y position
	 * @@param anchorX the x position where the interaction started
	 * @@param anchorY the y position where the interaction started
	 */
	public void invokeEnd(int x, int y, int anchorX, int anchorY, DrawingView view);

	/**
	 * Tracks the end of the interaction.
	 * @@deprecated As of version 4.1,
	 * use invokeEnd(x, y, anchorX, anchorY, drawingView).
	 */
	public void invokeEnd(int dx, int dy, Drawing drawing);

	/**
	 * Gets the handle's owner.
	 */
	public Figure owner();

	/**
	 * Gets the display box of the handle.
	 */
	public Rectangle displayBox();

	/**
	 * Tests if a point is contained in the handle.
	 */
	public boolean containsPoint(int x, int y);

	/**
	 * Draws this handle.
	 */
	public void draw(Graphics g);

	/**
	 * Returns an Undoable to be used by the Undo/Redo infrastructure.
	 * @@return Undoable
	 */
	public Undoable getUndoActivity();

	/**
	 * Sets an Undoable to be used by the Undo/Redo infrastructure.
	 * @@param newUndoableActivity
	 */
	public void setUndoActivity(Undoable newUndoableActivity);

	/**
	 * Returns the preferred Cursor for this Handle.
	 * @@return Cursor
	 */
	public Cursor getCursor();
}
@


1.6
log
@Refactoring of Cursor:
- java.awt.Cursor (class) has been sistematically replaced with CH.ifa.draw.contrib.framework.Cursor (interface)
- a new default implementation of Cursor (interface) has been added: CH.ifa.draw.contrib.standard.AWTCursor
@
text
@d12 1
a12 1
package CH.ifa.draw.framework;
d18 1
a18 1
import CH.ifa.draw.util.Undoable;
@


1.5
log
@no message
@
text
@d14 4
a18 1
import java.awt.*;
a44 2
	 * @@deprecated As of version 4.1,
	 * use invokeStart(x, y, drawingView)
d49 1
d51 1
a51 1
	public void invokeStart(int  x, int  y, Drawing drawing);
a55 2
	 * @@deprecated As of version 4.1,
	 * use invokeStart(x, y, drawingView)
d58 1
a58 1
	 * @@param view the handles container
d60 1
a60 11
	public void invokeStart(int  x, int  y, DrawingView view);

	/**
	 * @@deprecated As of version 4.1,
	 * use invokeStep(x, y, anchorX, anchorY, drawingView)
	 *
	 * Tracks a step of the interaction.
	 * @@param dx x delta of this step
	 * @@param dy y delta of this step
	 */
	public void invokeStep (int dx, int dy, Drawing drawing);
d72 9
d90 1
a92 2
	 *
	 * Tracks the end of the interaction.
d94 1
a94 1
	public void invokeEnd  (int dx, int dy, Drawing drawing);
d116 4
d122 4
d127 6
@


1.4
log
@Javadoc fix: an erroneous "deprecated" tag was removed.
@
text
@d52 4
a55 2
	 * Tracks the start of the interaction. The default implementation does
	 * nothing.
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d52 2
a53 4
	 * @@deprecated As of version 4.1,
	 * use invokeStart(x, y, drawingView)
	 * Tracks the start of the interaction. The default implementation
	 * does nothing.
@


1.3.2.1
log
@Removed wrongly used @@deprecated Javadoc tags
@
text
@d52 2
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)Handle.java 5.2
d4 6
d14 1
d28 2
d33 1
a33 1
    public static final int HANDLESIZE = 8;
d35 82
a116 83
    /**
     * Locates the handle on the figure. The handle is drawn
     * centered around the returned point.
     */
    public abstract Point locate();

    /**
     * @@deprecated As of version 4.1,
     * use invokeStart(x, y, drawingView)
     * Tracks the start of the interaction. The default implementation
     * does nothing.
     * @@param x the x position where the interaction started
     * @@param y the y position where the interaction started
     */
    public void invokeStart(int  x, int  y, Drawing drawing);

    /**
     * @@deprecated As of version 4.1,
     * use invokeStart(x, y, drawingView)
     * Tracks the start of the interaction. The default implementation
     * does nothing.
     * @@param x the x position where the interaction started
     * @@param y the y position where the interaction started
     * @@param view the handles container
     */
    public void invokeStart(int  x, int  y, DrawingView view);

    /**
     * @@deprecated As of version 4.1,
     * use invokeStep(x, y, anchorX, anchorY, drawingView)
     *
     * Tracks a step of the interaction.
     * @@param dx x delta of this step
     * @@param dy y delta of this step
     */
    public void invokeStep (int dx, int dy, Drawing drawing);

    /**
     * Tracks a step of the interaction.
     * @@param x the current x position
     * @@param y the current y position
     * @@param anchorX the x position where the interaction started
     * @@param anchorY the y position where the interaction started
     */
    public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view);

    /**
     * Tracks the end of the interaction.
     * @@param x the current x position
     * @@param y the current y position
     * @@param anchorX the x position where the interaction started
     * @@param anchorY the y position where the interaction started
     */
    public void invokeEnd(int x, int y, int anchorX, int anchorY, DrawingView view);

    /**
     * @@deprecated As of version 4.1,
     * use invokeEnd(x, y, anchorX, anchorY, drawingView).
     *
     * Tracks the end of the interaction.
     */
    public void invokeEnd  (int dx, int dy, Drawing drawing);

    /**
     * Gets the handle's owner.
     */
    public Figure owner();

    /**
     * Gets the display box of the handle.
     */
    public Rectangle displayBox();

    /**
     * Tests if a point is contained in the handle.
     */
    public boolean containsPoint(int x, int y);

    /**
     * Draws this handle.
     */
    public void draw(Graphics g);
}
d118 1
d120 2
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)Handle.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
