head	1.1;
access;
symbols
	jhotdraw60b1-release:1.1
	package_rename:1.1
	directory_rename:1.1
	reorg_6x_split_initial:1.1
	DNOYEB1_ALPHA-2:1.1.2.1
	DNOYEB1_ALPHA-1:1.1.2.1
	dnoyeb1:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2003.01.15.22.05.46;	author dnoyeb;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.01.15.22.05.46;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file FigureManipulator.java was initially added on branch dnoyeb1.
@
text
@@


1.1.2.1
log
@
Lets have a moment of silence for DecoratorFigure.....It was a good figure ;{

Anything which happens inside the drawing after figure add must be undone before figure orphan.  It must also not
be exposed to anyobject outside the drawing.
Decorator figure retired in favor of a figureManipulator and the other functions being implemented by a composite
figure(BorderDecorator).
AdnimationDecorator retired in favor of AnimationManipulator.
A figure can have only 1 container. This is making the border tool have a hard time.

Lots of comments added

next phase:
orphan will disappear.  only add and remove remain.  All figure related resources belong to the figures and no other
object should care about figure.release.
split the figureListener into a figureContainer listener and a figureChangeListener.
Fix BorderDecorator.
Fix ConnectedText.
view.checkDamage to call drawing.update()
@
text
@a0 35
/*
 * @@(#)FigureManipulator.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package CH.ifa.draw.framework;
import CH.ifa.draw.util.Storable;
import java.io.Serializable;


/**
 * FigureManipulators work well when added to the figure before the figure is
 * added to the drawing.  Once in the drawing, alterations have a hard time making
 * it into the undo architecture.  Any actions taken should be taking through the
 * undo/redo architecture by for example, having an undoActivity for them.
 * If a manipulator is added after the figure is added to the drawing, the drawing
 * must remember the association so that it does not add a new manipulator to the
 * figure if/when the figure is re-added to the drawing after it has been orphaned.
 *
 * Implementations typically use the <b>Adapter Pattern</b> or the <b>Facade 
 * Pattern</b>.  See {@@link CH.ifa.draw.samples.javadraw.AnimationManipulator
 * AnimationManipulator}.
 *
 * @@author  CL Gilbert <dnoyeb@@users.sourceforge.net>
 * @@version <$CURRENT_VERSION$>
 */
public interface FigureManipulator extends Storable, Cloneable, Serializable{
	void AttachFigure(Figure figure);
	void DetachFigure(Figure figure);
}
@

