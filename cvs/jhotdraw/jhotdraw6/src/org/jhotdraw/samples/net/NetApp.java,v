head	1.11;
access;
symbols
	jhotdraw60b1-release:1.11
	package_rename:1.11
	directory_rename:1.10
	reorg_6x_split_initial:1.10
	MVC_PHASE1:1.10.0.4
	NEW_ATTRIBUTES:1.10.0.2
	DNOYEB1_ALPHA-2:1.7.4.2
	release_JHD54b1:1.10
	BUGFIX_670992:1.9.0.2
	DNOYEB1_ALPHA-1:1.7.4.1
	dnoyeb1:1.7.0.4
	repack:1.7.0.2
	Root_repack:1.7
	Before_FigureVisitor:1.7
	JHotDraw_5-3:1.7
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2004.01.09.22.53.42;	author mrfloppy;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.30.00.27.34;	author mrfloppy;	state Exp;
branches;
next	1.9;

1.9
date	2003.01.12.20.21.16;	author dnoyeb;	state Exp;
branches;
next	1.8;

1.8
date	2003.01.02.19.47.23;	author dnoyeb;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.12;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.14;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.7.4.1
date	2003.01.03.15.57.42;	author dnoyeb;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2003.01.22.02.49.32;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.11
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)NetApp.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.samples.net;

import javax.swing.JToolBar;
import org.jhotdraw.framework.*;
import org.jhotdraw.standard.*;
import org.jhotdraw.figures.*;
import org.jhotdraw.application.DrawApplication;

/**
 * @@version <$CURRENT_VERSION$>
 */
public  class NetApp extends DrawApplication {

	public NetApp() {
		super("Net");
	}

	protected void createTools(JToolBar palette) {
		super.createTools(palette);

		Tool tool = new TextTool(this, new NodeFigure());
		palette.add(createToolButton(IMAGES + "TEXT", "Text Tool", tool));

		tool = new CreationTool(this, new NodeFigure());
		palette.add(createToolButton(IMAGES + "RECT", "Create Org Unit", tool));

		tool = new ConnectionTool(this, new LineConnection());
		palette.add(createToolButton(IMAGES + "CONN", "Connection Tool", tool));
	}

	//-- main -----------------------------------------------------------

	public static void main(String[] args) {
		DrawApplication window = new NetApp();
		window.open();
	}
}
@


1.10
log
@prepare for 5.4 release: various bug fixes
@
text
@d12 1
a12 1
package CH.ifa.draw.samples.net;
d15 4
a18 4
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.figures.*;
import CH.ifa.draw.application.DrawApplication;
@


1.9
log
@Clean up head to be what it was before i mistakenly committed my changes to it.
My changes should have been committed to a branch, and let mrfloppy merge to the trunk.
This will happen from now on.
@
text
@d25 1
a25 1
	NetApp() {
@


1.8
log
@Bring in line with latest Changes.
@
text
@a46 1
                window.newWindow();
@


1.7
log
@merge dnd (before 5.3)
@
text
@d47 1
@


1.7.4.1
log
@Changes for better Desktop handling.
DrawingView Always has a Drawing.
bug 541524, 546628,547188
@
text
@a46 1
                window.newWindow();
@


1.7.4.2
log
@Fix [ 670992 ] AWT deadlock
Improvement to Animator
@
text
@d45 1
a45 1
		final DrawApplication window = new NetApp();
d47 1
a47 16
		Runnable r = new Runnable() {
			public void run() {
				window.newWindow();
			}
		};
		try {
			java.awt.EventQueue.invokeAndWait( r );
		}
		catch(java.lang.InterruptedException ie){
			System.err.println(ie.getMessage());
			window.exit();
		}
		catch(java.lang.reflect.InvocationTargetException ite){
			System.err.println(ite.getMessage());
			window.exit();
		}
@


1.6
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d32 1
a32 1
		Tool tool = new TextTool(view(), new NodeFigure());
d35 1
a35 1
		tool = new CreationTool(view(), new NodeFigure());
d38 1
a38 1
		tool = new ConnectionTool(view(), new LineConnection());
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d2 1
a2 1
 * @@(#)NetApp.java 5.2
d4 6
d20 3
d25 3
a27 3
    NetApp() {
        super("Net");
    }
d29 2
a30 2
    protected void createTools(JToolBar palette) {
        super.createTools(palette);
d32 2
a33 2
        Tool tool = new TextTool(view(), new NodeFigure());
        palette.add(createToolButton(IMAGES+"TEXT", "Text Tool", tool));
d35 2
a36 2
        tool = new CreationTool(view(), new NodeFigure());
        palette.add(createToolButton(IMAGES+"RECT", "Create Org Unit", tool));
d38 3
a40 3
        tool = new ConnectionTool(view(), new LineConnection());
        palette.add(createToolButton(IMAGES+"CONN", "Connection Tool", tool));
    }
d42 1
a42 1
    //-- main -----------------------------------------------------------
d47 1
a47 1
    }
@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d8 1
a8 4
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
d12 1
a12 2
import CH.ifa.draw.util.*;
import CH.ifa.draw.application.*;
@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d8 4
a11 1
import javax.swing.JToolBar;
d15 2
a16 1
import CH.ifa.draw.application.DrawApplication;
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d8 1
a8 4
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
d12 1
a12 2
import CH.ifa.draw.util.*;
import CH.ifa.draw.application.*;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)NetApp.java 5.1
d8 1
d24 1
a24 1
    protected void createTools(Panel palette) {
@


1.1.1.1
log
@
Initial revision.
@
text
@@
