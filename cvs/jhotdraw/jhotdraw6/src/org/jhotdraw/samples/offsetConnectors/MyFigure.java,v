head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.03.06.14.36.53;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.23.05.06.25;	author cfm1;	state Exp;
branches;
next	;


desc
@@


1.2
log
@adjusted formatting
@
text
@/*
 * @@(#)MyFigure.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */


package org.jhotdraw.samples.offsetConnectors;

import java.awt.*;
import org.jhotdraw.framework.*;
import org.jhotdraw.standard.*;
import org.jhotdraw.figures.*;

public class MyFigure extends RectangleFigure {

	private static final int BORDER = 6;

	public MyFigure() {
	}

	private void drawBorder(Graphics g) {
		Rectangle r = displayBox();
		g.setColor(getFrameColor());
		g.drawRect(r.x, r.y, r.width - 1, r.height - 1);
	}

	public void draw(Graphics g) {
		super.draw(g);
		drawBorder(g);
	}

	/**
	 */
	public Connector connectorAt(int x, int y) {
		return OffsetConnector.trackConnector(this, x, y);
	}

}
@


1.1
log
@OffsetConnectors added
@
text
@d1 12
a12 5
/*
 * @@(#)NodeFigure.java 5.2
 *
 */

d14 31
a44 36

import java.awt.*;
import java.util.*;
import java.io.IOException;
import org.jhotdraw.framework.*;
import org.jhotdraw.standard.*;
import org.jhotdraw.figures.*;
import org.jhotdraw.util.*;


public class MyFigure extends RectangleFigure {
    private static final int BORDER = 6;
    public MyFigure() {
    }


    private void drawBorder(Graphics g) {
        Rectangle r = displayBox();
        g.setColor(getFrameColor());
        g.drawRect(r.x, r.y, r.width-1, r.height-1);
    }

    public void draw(Graphics g) {
        super.draw(g);
        drawBorder(g);
    }



    /**
     */
    public Connector connectorAt(int x, int y) {
        return OffsetConnector.trackConnector(this, x ,y);
    }

}
@

