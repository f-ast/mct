head	1.7;
access;
symbols
	jhotdraw60b1-release:1.7
	package_rename:1.7
	directory_rename:1.6
	reorg_6x_split_initial:1.6
	MVC_PHASE1:1.6.0.10
	NEW_ATTRIBUTES:1.6.0.8
	DNOYEB1_ALPHA-2:1.6
	release_JHD54b1:1.6
	BUGFIX_670992:1.6.0.6
	DNOYEB1_ALPHA-1:1.6
	dnoyeb1:1.6.0.4
	repack:1.6.0.2
	Root_repack:1.6
	Before_FigureVisitor:1.6
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2004.01.09.22.53.41;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.04.22.51.22;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.30.20.40.07;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.7
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)JavaDrawApplet.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.samples.javadraw;

import org.jhotdraw.framework.*;
import org.jhotdraw.standard.*;
import org.jhotdraw.figures.*;
import org.jhotdraw.util.*;
import org.jhotdraw.applet.*;
import org.jhotdraw.contrib.*;

import javax.swing.*;
import java.awt.event.*;

/**
 * @@version <$CURRENT_VERSION$>
 */
public  class JavaDrawApplet extends DrawApplet {

    transient private JButton   fAnimationButton;
	transient private Animator        fAnimator;

	//-- applet life cycle --------------------------------------------

	public void destroy() {
		super.destroy();
		endAnimation();
	}

	//-- DrawApplet overrides -----------------------------------------

	protected void createTools(JPanel palette) {
		super.createTools(palette);

		Tool tool = new TextTool(this, new TextFigure());
		palette.add(createToolButton(IMAGES + "TEXT", "Text Tool", tool));

		tool = new ConnectedTextTool(this, new TextFigure());
		palette.add(createToolButton(IMAGES + "ATEXT", "Connected Text Tool", tool));

		tool = new URLTool(this);
		palette.add(createToolButton(IMAGES + "URL", "URL Tool", tool));

		tool = new CreationTool(this, new RectangleFigure());
		palette.add(createToolButton(IMAGES + "RECT", "Rectangle Tool", tool));

		tool = new CreationTool(this, new RoundRectangleFigure());
		palette.add(createToolButton(IMAGES + "RRECT", "Round Rectangle Tool", tool));

		tool = new CreationTool(this, new EllipseFigure());
		palette.add(createToolButton(IMAGES + "ELLIPSE", "Ellipse Tool", tool));

		tool = new PolygonTool(this);
		palette.add(createToolButton(IMAGES + "POLYGON", "Polygon Tool", tool));

		tool = new CreationTool(this, new TriangleFigure());
		palette.add(createToolButton(IMAGES + "TRIANGLE", "Triangle Tool", tool));

		tool = new CreationTool(this, new DiamondFigure());
		palette.add(createToolButton(IMAGES + "DIAMOND", "Diamond Tool", tool));

		tool = new CreationTool(this, new LineFigure());
		palette.add(createToolButton(IMAGES + "LINE", "Line Tool", tool));

		tool = new ConnectionTool(this, new LineConnection());
		palette.add(createToolButton(IMAGES + "CONN", "Connection Tool", tool));

		tool = new ConnectionTool(this, new ElbowConnection());
		palette.add(createToolButton(IMAGES + "OCONN", "Elbow Connection Tool", tool));

		tool = new ScribbleTool(this);
		palette.add(createToolButton(IMAGES + "SCRIBBL", "Scribble Tool", tool));

		tool = new PolygonTool(this);
		palette.add(createToolButton(IMAGES + "POLYGON", "Polygon Tool", tool));

		tool = new BorderTool(this);
		palette.add(createToolButton(IMAGES + "BORDDEC", "Border Tool", tool));
	}

	protected void createButtons(JPanel panel) {
		super.createButtons(panel);
		fAnimationButton = new JButton("Start Animation");
		fAnimationButton.addActionListener(
			new ActionListener() {
				public void actionPerformed(ActionEvent event) {
					toggleAnimation();
				}
			}
		);
		panel.add(fAnimationButton);
	}

	protected Drawing createDrawing() {
		return new BouncingDrawing();
	}

	//-- animation support ----------------------------------------------

	public void startAnimation() {
		if ((drawing() instanceof Animatable) && (fAnimator == null)) {
			fAnimator = new Animator((Animatable)drawing(), view());
			fAnimator.start();
			fAnimationButton.setText("End Animation");
		}
	}

	public void endAnimation() {
		if (fAnimator != null) {
			fAnimator.end();
			fAnimator = null;
			fAnimationButton.setText("Start Animation");
		}
	}

	public void toggleAnimation() {
		if (fAnimator != null)
			endAnimation();
		else
			startAnimation();
	}

}
@


1.6
log
@after variou merges... (before 5.4 release)
@
text
@d12 1
a12 1
package CH.ifa.draw.samples.javadraw;
d14 6
a19 6
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.figures.*;
import CH.ifa.draw.util.*;
import CH.ifa.draw.applet.*;
import CH.ifa.draw.contrib.*;
@


1.5
log
@no message
@
text
@a22 3
import java.util.*;
import java.io.*;
import java.net.*;
@


1.4
log
@merge dnd (before 5.3)
@
text
@a21 1
import java.applet.Applet;
d32 1
a32 1
	transient private JButton          fAnimationButton;
d70 1
a70 1
		
d113 1
a113 1
		if (drawing() instanceof Animatable && fAnimator == null) {
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d48 1
a48 1
		Tool tool = new TextTool(view(), new TextFigure());
d51 1
a51 1
		tool = new ConnectedTextTool(view(), new TextFigure());
d54 1
a54 1
		tool = new URLTool(view());
d57 1
a57 1
		tool = new CreationTool(view(), new RectangleFigure());
d60 1
a60 1
		tool = new CreationTool(view(), new RoundRectangleFigure());
d63 1
a63 1
		tool = new CreationTool(view(), new EllipseFigure());
d66 1
a66 1
		tool = new PolygonTool(view());
d69 1
a69 1
		tool = new CreationTool(view(), new TriangleFigure());
d72 1
a72 1
		tool = new CreationTool(view(), new DiamondFigure());
d75 1
a75 1
		tool = new CreationTool(view(), new LineFigure());
d78 1
a78 1
		tool = new ConnectionTool(view(), new LineConnection());
d81 1
a81 1
		tool = new ConnectionTool(view(), new ElbowConnection());
d84 1
a84 1
		tool = new ScribbleTool(view());
d87 1
a87 1
		tool = new PolygonTool(view());
d90 1
a90 1
		tool = new BorderTool(view());
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)JavaDrawApplet.java 5.2
d4 6
d14 7
d28 4
a31 6
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.figures.*;
import CH.ifa.draw.util.*;
import CH.ifa.draw.applet.*;
import CH.ifa.draw.contrib.*;
d33 2
d36 1
a36 1
public  class JavaDrawApplet extends DrawApplet {
d38 4
a41 2
    transient private JButton          fAnimationButton;
    transient private Animator        fAnimator;
d43 1
a43 1
    //-- applet life cycle --------------------------------------------
d45 2
a46 4
    public void destroy() {
        super.destroy();
        endAnimation();
    }
d48 2
a49 1
    //-- DrawApplet overrides -----------------------------------------
d51 2
a52 2
    protected void createTools(JPanel palette) {
        super.createTools(palette);
d54 2
a55 2
        Tool tool = new TextTool(view(), new TextFigure());
        palette.add(createToolButton(IMAGES+"TEXT", "Text Tool", tool));
d57 2
a58 2
        tool = new ConnectedTextTool(view(), new TextFigure());
        palette.add(createToolButton(IMAGES+"ATEXT", "Connected Text Tool", tool));
d60 2
a61 2
        tool = new URLTool(view());
        palette.add(createToolButton(IMAGES+"URL", "URL Tool", tool));
d63 2
a64 2
        tool = new CreationTool(view(), new RectangleFigure());
        palette.add(createToolButton(IMAGES+"RECT", "Rectangle Tool", tool));
d66 2
a67 2
        tool = new CreationTool(view(), new RoundRectangleFigure());
        palette.add(createToolButton(IMAGES+"RRECT", "Round Rectangle Tool", tool));
d69 5
a73 2
        tool = new CreationTool(view(), new EllipseFigure());
        palette.add(createToolButton(IMAGES+"ELLIPSE", "Ellipse Tool", tool));
d75 2
a76 2
        tool = new CreationTool(view(), new LineFigure());
        palette.add(createToolButton(IMAGES+"LINE", "Line Tool", tool));
d78 2
a79 2
        tool = new ConnectionTool(view(), new LineConnection());
        palette.add(createToolButton(IMAGES+"CONN", "Connection Tool", tool));
d81 2
a82 2
        tool = new ConnectionTool(view(), new ElbowConnection());
        palette.add(createToolButton(IMAGES+"OCONN", "Elbow Connection Tool", tool));
d84 2
a85 2
        tool = new ScribbleTool(view());
        palette.add(createToolButton(IMAGES+"SCRIBBL", "Scribble Tool", tool));
d87 2
a88 2
        tool = new PolygonTool(view());
        palette.add(createToolButton(IMAGES+"POLYGON", "Polygon Tool", tool));
d90 3
a92 3
        tool = new BorderTool(view());
        palette.add(createToolButton(IMAGES+"BORDDEC", "Border Tool", tool));
    }
d94 3
a96 3
    protected void createButtons(JPanel panel) {
        super.createButtons(panel);
        fAnimationButton = new JButton("Start Animation");
d98 5
a102 5
		    new ActionListener() {
		        public void actionPerformed(ActionEvent event) {
		            toggleAnimation();
		        }
		    }
d104 2
a105 2
        panel.add(fAnimationButton);
    }
d107 28
a134 28
    protected Drawing createDrawing() {
        return new BouncingDrawing();
    }

    //-- animation support ----------------------------------------------

    public void startAnimation() {
        if (drawing() instanceof Animatable && fAnimator == null) {
            fAnimator = new Animator((Animatable)drawing(), view());
            fAnimator.start();
            fAnimationButton.setText("End Animation");
        }
    }

    public void endAnimation() {
        if (fAnimator != null) {
            fAnimator.end();
            fAnimator = null;
            fAnimationButton.setText("Start Animation");
        }
    }

    public void toggleAnimation() {
        if (fAnimator != null)
            endAnimation();
        else
            startAnimation();
    }
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)JavaDrawApplet.java 5.1
d8 1
a9 1
import java.awt.*;
d25 1
a25 1
    transient private Button          fAnimationButton;
d37 1
a37 1
    protected void createTools(Panel palette) {
d77 1
a77 1
    protected void createButtons(Panel panel) {
d79 1
a79 1
        fAnimationButton = new Button("Start Animation");
d100 1
a100 1
            fAnimationButton.setLabel("End Animation");
d108 1
a108 1
            fAnimationButton.setLabel("Start Animation");
@


1.1.1.1
log
@
Initial revision.
@
text
@@
