head	1.6;
access;
symbols
	jhotdraw60b1-release:1.6
	package_rename:1.6
	directory_rename:1.5
	reorg_6x_split_initial:1.5
	MVC_PHASE1:1.5.0.10
	NEW_ATTRIBUTES:1.5.0.8
	DNOYEB1_ALPHA-2:1.5
	release_JHD54b1:1.5
	BUGFIX_670992:1.5.0.6
	DNOYEB1_ALPHA-1:1.5
	dnoyeb1:1.5.0.4
	repack:1.5.0.2
	Root_repack:1.5
	Before_FigureVisitor:1.5
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2004.01.09.22.53.40;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.04.23.01.49;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.44.33;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.6
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)CommandChoice.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.util;

import javax.swing.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.List;

/**
 * A Command enabled choice. Selecting a choice executes the
 * corresponding command.
 *
 * @@see Command
 *
 * @@version <$CURRENT_VERSION$>
 */
public  class CommandChoice extends JComboBox implements ItemListener {

	private List   fCommands;

	public CommandChoice() {
		super();
		fCommands = CollectionsFactory.current().createList(10);
		addItemListener(this);
	}

	/**
	 * Adds a command to the menu.
	 */
	public synchronized void addItem(Command command) {
		addItem(command.name());
		fCommands.add(command);
	}

	/**
	 * Executes the command.
	 */
	public void itemStateChanged(ItemEvent e) {
		if ((getSelectedIndex() >= 0) && (getSelectedIndex() < fCommands.size())) {
			Command command = (Command)fCommands.get(getSelectedIndex());
            if (command.isExecutable()) {
				command.execute();
			}
		}
	}
}
@


1.5
log
@after variou merges... (before 5.4 release)
@
text
@d12 1
a12 1
package CH.ifa.draw.util;
@


1.4
log
@merge dnd (before 5.3)
@
text
@a14 1
import java.awt.*;
d17 1
a17 1
import java.util.*;
d29 1
a29 1
	private Vector   fCommands;
d33 1
a33 1
		fCommands = new Vector(10);
d42 1
a42 1
		fCommands.addElement(command);
d50 1
a50 1
			Command command = (Command)fCommands.elementAt(getSelectedIndex());
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d52 3
a54 1
			command.execute();
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)CommandChoice.java 5.2
d4 6
d25 2
d28 1
d30 1
d32 23
a54 28
public  class CommandChoice
        extends JComboBox implements ItemListener {

    private Vector   fCommands;

    public CommandChoice() {
    	super();
        fCommands = new Vector(10);
        addItemListener(this);
    }

    /**
     * Adds a command to the menu.
     */
    public synchronized void addItem(Command command) {
        addItem(command.name());
        fCommands.addElement(command);
    }

    /**
     * Executes the command.
     */
    public void itemStateChanged(ItemEvent e) {
    	if ((getSelectedIndex() >= 0) && (getSelectedIndex() < fCommands.size())) {
    	    Command command = (Command)fCommands.elementAt(getSelectedIndex());
	        command.execute();
        }
    }
a55 2


@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)CommandChoice.java 5.1
d8 1
d23 1
a23 1
        extends Choice implements ItemListener {
d28 1
d45 4
a48 2
        Command command = (Command)fCommands.elementAt(getSelectedIndex());
        command.execute();
@


1.1.1.1
log
@
Initial revision.
@
text
@@
