head	1.10;
access;
symbols
	jhotdraw60b1-release:1.10
	package_rename:1.10
	directory_rename:1.9
	reorg_6x_split_initial:1.9
	MVC_PHASE1:1.9.0.10
	NEW_ATTRIBUTES:1.9.0.8
	DNOYEB1_ALPHA-2:1.9.4.1
	release_JHD54b1:1.9
	BUGFIX_670992:1.9.0.6
	DNOYEB1_ALPHA-1:1.9.4.1
	dnoyeb1:1.9.0.4
	repack:1.9.0.2
	Root_repack:1.9
	Before_FigureVisitor:1.9
	JHotDraw_5-3:1.7
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2004.01.09.22.53.41;	author mrfloppy;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.04.22.56.18;	author mrfloppy;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2002.04.30.20.40.08;	author mrfloppy;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.19.18.31.32;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.01;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.13;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.14;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.9.4.1
date	2003.01.16.15.59.18;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.10
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)BringToFrontCommand.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.standard;

import org.jhotdraw.framework.*;
import org.jhotdraw.util.Undoable;

/**
 * BringToFrontCommand brings the selected figures in the front of
 * the other figures.
 *
 * @@see SendToBackCommand
 * @@version <$CURRENT_VERSION$>
 */
public class BringToFrontCommand extends AbstractCommand {

	/**
	 * Constructs a bring to front command.
	 * @@param name the command name
	 * @@param newDrawingEditor the DrawingEditor which manages the views
	 */
	public BringToFrontCommand(String name, DrawingEditor newDrawingEditor) {
		super(name, newDrawingEditor);
	}

	public void execute() {
		super.execute();
		setUndoActivity(createUndoActivity());
		getUndoActivity().setAffectedFigures(view().selection());
		FigureEnumeration fe = getUndoActivity().getAffectedFigures();
		while (fe.hasNextFigure()) {
			view().drawing().bringToFront(fe.nextFigure());
		}
		view().checkDamage();
	}

	public boolean isExecutableWithView() {
		return view().selectionCount() > 0;
	}

	protected Undoable createUndoActivity() {
		return new BringToFrontCommand.UndoActivity(view());
	}

	public static class UndoActivity extends SendToBackCommand.UndoActivity {
		public UndoActivity(DrawingView newDrawingView) {
			super(newDrawingView);
		}

		protected void sendToCommand(Figure f) {
			getDrawingView().drawing().bringToFront(f);
		}
	}
}
@


1.9
log
@after variou merges... (before 5.4 release)
@
text
@d12 1
a12 1
package CH.ifa.draw.standard;
d14 2
a15 2
import CH.ifa.draw.framework.*;
import CH.ifa.draw.util.Undoable;
@


1.9.4.1
log
@drawing.update() is called as opposed to view.checkDamage().  This causes all affected views
to be updated as opposed to just the one.
figure.Remove() now returns the container it was removed from.  This may assist undo/redo.
@
text
@d43 1
a43 1
		view().drawing().update();
@


1.8
log
@no message
@
text
@a14 1
import CH.ifa.draw.util.UndoableAdapter;
d38 1
a38 1
		getUndoActivity().setAffectedFigures(view().selectionElements());
d40 1
a40 1
		while (fe.hasMoreElements()) {
@


1.7
log
@no message
@
text
@a16 1
import java.util.*;
@


1.6
log
@merge dnd (before 5.3)
@
text
@a48 2
//if (true)
//throw new RuntimeException();
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d28 8
a35 8
   /**
    * Constructs a bring to front command.
    * @@param name the command name
    * @@param view the target view
    */
    public BringToFrontCommand(String name, DrawingView view) {
        super(name, view);
    }
d37 4
a40 3
    public void execute() {
    	setUndoActivity(createUndoActivity());
    	getUndoActivity().setAffectedFigures(view().selectionElements());
d42 5
a46 5
        while (fe.hasMoreElements()) {
            view().drawing().bringToFront(fe.nextFigure());
        }
        view().checkDamage();
    }
d48 5
a52 3
    public boolean isExecutable() {
        return view().selectionCount() > 0;
    }
@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d2 1
a2 1
 * @@(#)BringToFrontCommand.java 5.2
d4 6
d14 3
a17 2
import CH.ifa.draw.util.Command;
import CH.ifa.draw.framework.*;
d24 1
d26 1
a26 4
public class BringToFrontCommand
       extends Command {

    private DrawingView fView;
d34 1
a34 2
        super(name);
        fView = view;
d38 5
a42 3
       FigureEnumeration k = new FigureEnumerator(fView.selectionZOrdered());
       while (k.hasMoreElements()) {
            fView.drawing().bringToFront(k.nextFigure());
d44 1
a44 1
        fView.checkDamage();
d48 1
a48 1
        return fView.selectionCount() > 0;
d50 14
a64 2


@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d9 1
d18 4
a21 1
public class BringToFrontCommand extends AbstractCommand {
d29 2
a30 1
        super(name, view);
d34 1
a34 1
       FigureEnumeration k = new FigureEnumerator(view().selectionZOrdered());
d36 1
a36 1
            view().drawing().bringToFront(k.nextFigure());
d38 1
a38 1
        view().checkDamage();
d42 1
a42 1
        return view().selectionCount() > 0;
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@a8 1
import CH.ifa.draw.util.Command;
d17 1
a17 4
public class BringToFrontCommand
       extends Command {

    private DrawingView fView;
d25 1
a25 2
        super(name);
        fView = view;
d29 1
a29 1
       FigureEnumeration k = new FigureEnumerator(fView.selectionZOrdered());
d31 1
a31 1
            fView.drawing().bringToFront(k.nextFigure());
d33 1
a33 1
        fView.checkDamage();
d37 1
a37 1
        return fView.selectionCount() > 0;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)BringToFrontCommand.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
