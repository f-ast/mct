head	1.7;
access;
symbols
	jhotdraw60b1-release:1.7
	package_rename:1.7
	directory_rename:1.6
	reorg_6x_split_initial:1.6
	MVC_PHASE1:1.6.0.10
	NEW_ATTRIBUTES:1.6.0.8
	DNOYEB1_ALPHA-2:1.6
	release_JHD54b1:1.6
	BUGFIX_670992:1.6.0.6
	DNOYEB1_ALPHA-1:1.6
	dnoyeb1:1.6.0.4
	repack:1.6.0.2
	Root_repack:1.6
	Before_FigureVisitor:1.6
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2004.01.09.22.53.41;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.21.08.06.00;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.04.22.56.18;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.32.01;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.7
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@/*
 * @@(#)FigureEnumerator.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.standard;

import org.jhotdraw.framework.*;
import org.jhotdraw.util.CollectionsFactory;

import java.util.Iterator;
import java.util.Collection;


/**
 * An Enumeration for a Collection of Figures.
 *
 * @@version <$CURRENT_VERSION$>
 */
public final class FigureEnumerator implements FigureEnumeration {
	private Iterator myIterator;
	private Collection myInitialCollection;

	private static FigureEnumerator singletonEmptyEnumerator =
		new FigureEnumerator(CollectionsFactory.current().createList());

	public FigureEnumerator(Collection c) {
		myInitialCollection = c;
		reset();
	}

	/**
	 * Returns true if the enumeration contains more elements; false
	 * if its empty.
	 */
	public boolean hasNextFigure() {
		return myIterator.hasNext();
	}

	/**
	 * Returns the next element of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception java.util.NoSuchElementException If no more elements exist.
	 */
	public Figure nextFigure() {
		return (Figure)myIterator.next();
	}

	public static FigureEnumeration getEmptyEnumeration() {
		return singletonEmptyEnumerator;
	}

	/**
	 * Reset the enumeration so it can be reused again. However, the
	 * underlying collection might have changed since the last usage
	 * so the elements and the order may vary when using an enumeration
	 * which has been reset.
	 */
	public void reset() {
		myIterator = myInitialCollection.iterator();
	}

/*	public static FigureEnumeration getClonedFigures(FigureEnumeration toDuplicate) {
		List v = CollectionsFactory.current().createList();
		while (toDuplicate.hasMoreElements()) {
			try {
				v.addElement(toDuplicate.nextFigure().clone());
			}
			catch (CloneNotSupportedException e) {
				e.printStackTrace();
			}
		}
		return new FigureEnumerator(v);
	}
*/
}
@


1.6
log
@extended functionality for enumerations (reset, and-enumeration) and a few bug fixes
@
text
@d12 1
a12 1
package CH.ifa.draw.standard;
d14 2
a15 2
import CH.ifa.draw.framework.*;
import CH.ifa.draw.util.CollectionsFactory;
@


1.5
log
@after variou merges... (before 5.4 release)
@
text
@d17 3
a19 1
import java.util.*;
d28 1
d34 2
a35 1
		myIterator = c.iterator();
d49 1
a49 1
	 * @@exception NoSuchElementException If no more elements exist.
d57 10
@


1.4
log
@merge dnd (before 5.3)
@
text
@d15 2
d20 1
a20 1
 * An Enumeration for a Vector of Figures.
d25 1
a25 1
	private Enumeration fEnumeration;
d27 2
a28 2
	private static FigureEnumerator singletonEmptyEnumerator = 
		new FigureEnumerator(new Vector());
d30 2
a31 2
	public FigureEnumerator(Vector v) {
		fEnumeration = v.elements();
d38 2
a39 2
	public boolean hasMoreElements() {
		return fEnumeration.hasMoreElements();
d47 2
a48 2
	public Object nextElement() {
		return fEnumeration.nextElement();
a50 9
	/**
	 * Returns the next element of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception NoSuchElementException If no more elements exist.
	 */
	public Figure nextFigure() {
		return (Figure)fEnumeration.nextElement();
	}
	
d54 1
a54 1
	
d56 1
a56 1
		Vector v = new Vector();
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d23 1
a23 1
    private Enumeration fEnumeration;
d28 3
a30 3
    public FigureEnumerator(Vector v) {
	    fEnumeration = v.elements();
    }
d32 7
a38 7
    /**
     * Returns true if the enumeration contains more elements; false
     * if its empty.
     */
    public boolean hasMoreElements() {
	    return fEnumeration.hasMoreElements();
    }
d40 8
a47 8
    /**
     * Returns the next element of the enumeration. Calls to this
     * method will enumerate successive elements.
     * @@exception NoSuchElementException If no more elements exist.
     */
    public Object nextElement() {
        return fEnumeration.nextElement();
    }
d49 25
a73 25
    /**
     * Returns the next element of the enumeration. Calls to this
     * method will enumerate successive elements.
     * @@exception NoSuchElementException If no more elements exist.
     */
    public Figure nextFigure() {
        return (Figure)fEnumeration.nextElement();
    }
    
    public static FigureEnumeration getEmptyEnumeration() {
    	return singletonEmptyEnumerator;
    }
    
/*    public static FigureEnumeration getClonedFigures(FigureEnumeration toDuplicate) {
    	Vector v = new Vector();
    	while (toDuplicate.hasMoreElements()) {
    		try {
    			v.addElement(toDuplicate.nextFigure().clone());
    		}
    		catch (CloneNotSupportedException e) {
    			e.printStackTrace();
    		}
    	}
    	return new FigureEnumerator(v);
    }
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)FigureEnumerator.java 5.2
d4 6
d19 2
d23 4
a26 1
    Enumeration fEnumeration;
d57 18
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)FigureEnumerator.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
