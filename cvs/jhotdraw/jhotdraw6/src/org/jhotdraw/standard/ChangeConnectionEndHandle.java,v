head	1.12;
access;
symbols
	jhotdraw60b1-release:1.10
	package_rename:1.10
	directory_rename:1.9
	reorg_6x_split_initial:1.9
	MVC_PHASE1:1.6.0.10
	NEW_ATTRIBUTES:1.6.0.8
	DNOYEB1_ALPHA-2:1.6
	release_JHD54b1:1.6
	BUGFIX_670992:1.6.0.6
	DNOYEB1_ALPHA-1:1.6
	dnoyeb1:1.6.0.4
	repack:1.6.0.2
	Root_repack:1.6
	Before_FigureVisitor:1.6
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2004.03.06.14.36.53;	author mrfloppy;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.23.05.06.57;	author cfm1;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.09.22.53.41;	author mrfloppy;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.09.21.18.46;	author mrfloppy;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.23.06.38.57;	author mtnygard;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.25.10.20.04;	author pleumann;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.04.22.56.18;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.30.20.40.10;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.32.01;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.12
log
@adjusted formatting
@
text
@/*
 * @@(#)ChangeConnectionEndHandle.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package org.jhotdraw.standard;

import org.jhotdraw.framework.*;
import org.jhotdraw.util.Undoable;
import java.awt.Point;

/**
 * A handle to reconnect the end point of
 * a connection to another figure.
 *
 * @@version <$CURRENT_VERSION$>
 */
public class ChangeConnectionEndHandle extends ChangeConnectionHandle {

	/**
	 * Constructs the connection handle.
	 */
	public ChangeConnectionEndHandle(ConnectionFigure owner) {
		super(owner);
	}

	/**
	 * Gets the end figure of a connection.
	 */
	protected Connector target() {
		return getConnection().getEndConnector();
	}

	/**
	 * Disconnects the end figure.
	 */
	protected void disconnect() {
		getConnection().disconnectEnd();
	}

	/**
	 * Sets the end of the connection.
	 */
	protected void connect(Connector c) {
		getConnection().connectEnd(c);
	}

	/**
	 * Sets the end point of the connection.
	 */
	protected void setPoint(int x, int y) {
		getConnection().endPoint(x, y);
	}

	/**
	 * Returns the end point of the connection.
	 */
	public Point locate() {
		return getConnection().endPoint();
	}

	/**
	 * Draws this handle.
	 */
	public void draw(java.awt.Graphics g) {
		if (getConnection().getEndConnector() instanceof OffsetConnector && 
			getConnection().getStartConnector() != null &&
			getConnection().getStartConnector().owner() != null &&
			getConnection().getStartConnector().owner() == getConnection().getEndConnector().owner()) { 
			return;
		}

		super.draw(g);   
	}

	/**
	 * Factory method for undo activity
	 */
	protected Undoable createUndoActivity(DrawingView newView) {
		return new ChangeConnectionEndHandle.UndoActivity(newView);
	}

	public static class UndoActivity extends ChangeConnectionHandle.UndoActivity {
		public UndoActivity(DrawingView newView) {
			super(newView);
		}

		protected Connector replaceConnector(ConnectionFigure connection) {
			Connector tempEndConnector = connection.getEndConnector();
			connection.connectEnd(getOldConnector());
			return tempEndConnector;
		}
	}

    protected boolean canConnectTo(Figure figure) {
        return getConnection().canConnect(source().owner(), figure);
	}
}
@


1.11
log
@OffsetConnectors added
@
text
@d67 14
a80 16

//  cfm1 *******************************************************************
    /**
    * Draws this handle.
    */
    public void draw(java.awt.Graphics g) {
        if (getConnection().getEndConnector() instanceof OffsetConnector && 
            getConnection().getStartConnector() != null &&
            getConnection().getStartConnector().owner() != null &&
            getConnection().getStartConnector().owner() == getConnection().getEndConnector().owner()) 
            return;
            
        super.draw(g);   
   }
//  cfm1 *******************************************************************

@


1.10
log
@After renaming the CH.ifa.draw to org.jhotdraw
@
text
@d67 16
@


1.9
log
@TestSuite: adjusting auto-generated sourcecode (JunitDoclet) to coding style
@
text
@d12 1
a12 1
package CH.ifa.draw.standard;
d14 2
a15 2
import CH.ifa.draw.framework.*;
import CH.ifa.draw.util.Undoable;
@


1.8
log
@All test cases now pass!
@
text
@d7 1
a7 1
 * Copyright:	? by the original author(s) and all contributors
d89 1
a89 1
}
@


1.7
log
@Fix for findConnectionTarget() method of ChangeConnectionHandle. Old version didn't take direction of connection into account, which could result in incorrect drawings (if syntax rules and directional connections were a concern). New version solves this by abstract method which is overridden properly in ChangeConnectionStartHandle and ChangeConnectionEndHandle.
@
text
@d7 1
a7 1
 * Copyright:	© by the original author(s) and all contributors
d29 1
a29 1
	public ChangeConnectionEndHandle(Figure owner) {
@


1.6
log
@after variou merges... (before 5.4 release)
@
text
@d86 4
@


1.5
log
@no message
@
text
@a15 1
import CH.ifa.draw.util.UndoableAdapter;
@


1.4
log
@merge dnd (before 5.3)
@
text
@a14 1
import CH.ifa.draw.standard.*;
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d73 2
a74 2
	protected Undoable createUndoActivity() {
		return new ChangeConnectionEndHandle.UndoActivity();
d78 2
a79 2
		public UndoActivity() {
			super();
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)ChangeConnectionEndHandle.java 5.2
d4 6
d14 4
a19 2
import CH.ifa.draw.framework.*;

d23 2
a25 1

d28 60
a87 41
    /**
     * Constructs the connection handle.
     */
    public ChangeConnectionEndHandle(Figure owner) {
        super(owner);
    }

    /**
     * Gets the end figure of a connection.
     */
    protected Connector target() {
        return fConnection.end();
    }

    /**
     * Disconnects the end figure.
     */
    protected void disconnect() {
        fConnection.disconnectEnd();
    }

    /**
     * Sets the end of the connection.
     */
    protected void connect(Connector c) {
        fConnection.connectEnd(c);
    }

    /**
     * Sets the end point of the connection.
     */
    protected void setPoint(int x, int y) {
        fConnection.endPoint(x, y);
    }

    /**
     * Returns the end point of the connection.
     */
    public Point locate() {
        return fConnection.endPoint();
    }
a88 1

@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)ChangeConnectionEndHandle.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
