head	1.9;
access;
symbols
	jhotdraw54b2-release:1.9
	reorg_6x_split:1.9
	MVC_PHASE1:1.9.0.4
	NEW_ATTRIBUTES:1.9.0.2
	DNOYEB1_ALPHA-2:1.8.4.1
	release_JHD54b1:1.9
	BUGFIX_670992:1.8.0.6
	DNOYEB1_ALPHA-1:1.8.4.1
	dnoyeb1:1.8.0.4
	repack:1.8.0.2
	Root_repack:1.8
	Before_FigureVisitor:1.8
	JHotDraw_5-3:1.6
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2003.01.30.00.27.34;	author mrfloppy;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.04.22.51.22;	author mrfloppy;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2002.04.30.20.40.07;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.12;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.14;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.8.4.1
date	2003.01.07.21.23.15;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.9
log
@prepare for 5.4 release: various bug fixes
@
text
@/*
 * @@(#)JavaDrawViewer.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.samples.javadraw;

import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.util.*;

import javax.swing.JApplet;
import java.awt.*;
import java.io.*;
import java.net.*;

/**
 * @@version <$CURRENT_VERSION$>
 */
public  class JavaDrawViewer extends JApplet implements DrawingEditor {

	private Drawing         fDrawing;
	private Tool            fTool;
	private StandardDrawingView fView;
	private transient 		UndoManager myUndoManager;

	public void init() {
		setUndoManager(new UndoManager());
		getContentPane().setLayout(new BorderLayout());
		fView = new StandardDrawingView(this, 400, 370);
		getContentPane().add("Center", fView);
		setTool(new FollowURLTool(this, this));

		String filename = getParameter("Drawing");
		if (filename != null) {
			loadDrawing(filename);
			fView.setDrawing(fDrawing);
		}
		else {
			showStatus("Unable to load drawing");
		}
	}

	public void addViewChangeListener(ViewChangeListener vsl)  {
	}

	public void removeViewChangeListener(ViewChangeListener vsl) {
	}

	private void loadDrawing(String filename) {
		try {
			URL url = new URL(getCodeBase(), filename);
			InputStream stream = url.openStream();
			StorableInput reader = new StorableInput(stream);
			fDrawing = (Drawing)reader.readStorable();
		}
		catch (IOException e) {
			fDrawing = createDrawing();
			System.err.println("Error when Loading: " + e);
			showStatus("Error when Loading: " + e);
		}
	}

	protected Drawing createDrawing() {
		return new StandardDrawing();
	}

	/**
	 * Gets the editor's drawing view.
	 */
	public DrawingView view() {
		return fView;
	}

	public DrawingView[] views() {
		return new DrawingView[] { view() };
	}

	/**
	 * Gets the editor's drawing.
	 */
	public Drawing drawing() {
		return fDrawing;
	}

	/**
	 * Gets the current the tool (there is only one):
	 */
	public Tool tool() {
		return fTool;
	}

	/**
     * Sets the current the tool
     */
	public void setTool(Tool newTool) {
		fTool = newTool;
	}

    /**
	 * Sets the editor's default tool. Do nothing since we only have one tool.
	 */
	public void toolDone() {}

	/**
	 * Ignore selection changes, we don't show any selection
	 */
	public void figureSelectionChanged(DrawingView view) {}

	protected void setUndoManager(UndoManager newUndoManager) {
		myUndoManager = newUndoManager;
	}

	public UndoManager getUndoManager() {
		return myUndoManager;
	}
}
@


1.8
log
@after variou merges... (before 5.4 release)
@
text
@d64 1
a64 1
			fDrawing = new StandardDrawing();
d68 4
@


1.8.4.1
log
@1. Added getDesktop to the DrawingEditor.  added null returns to all Classes that dont fully support
   the Desktop architecture yet, like the applets.

2. Added a figureSelection listener to the DrawingEditor so one can register with the DrawingEditor to
   hear figure selection events.  You can still register with the individual DrawingViews if you wish.
   The DrawingEditor will guarantee that it only fires this event on the active view, so it saves a listener
   from having to register and unregister with views to hear this event each time the activeView changes.
   All Commands were doing this register/unregister dance.

3. AbstractCommand now registers for figureSelectionEvents with the drawingEditor as opposed to the
   DrawingView.

4. Went back to viewCreated and viewDestroying naming.  flip flopping.  Its actually more accurate.  the
   real issue is that 2 events are missing, viewDestroyed and viewCreating.  dont need them yet, but
   they may materialize in the future.

5. Went back to Tool CompositeTool being enabled even when no figure is selected.

6. FigureSelectionListener now extends java.util.EventListener now because I am too lazy to write
   an event handler just yet.

7. implemented new findFigureInside() fix.  needs testing.

8. standardDrawingView selectionZordered now returns figures in the proper order(not reversed).
@
text
@a16 1
import CH.ifa.draw.contrib.Desktop;
a23 1
 * @@todo implement {@@link Desktop Desktop} functionality to bring upto date.
d49 1
a49 6
	/**
	 * @@todo Implement <b>Desktop</b> functionality.
	 */
	public Desktop getDesktop() {
		return null;
	}
a53 6
	}

	public void addFigureSelectionListener(FigureSelectionListener fsl){
	}

	public void removeFigureSelectionListener(FigureSelectionListener fsl){
@


1.7
log
@no message
@
text
@a19 2
import java.awt.event.MouseEvent;
import java.util.*;
a30 1
	private Iconkit         fIconkit;
a38 2

		fIconkit = new Iconkit(this);
@


1.6
log
@merge dnd (before 5.3)
@
text
@d18 1
a18 1
import javax.swing.*;
d35 1
a35 1
	
d41 1
a41 1
		fTool = new FollowURLTool(this, this);
d54 1
a54 1
	
d101 7
d120 1
a120 1
	
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d30 8
a37 6
    private Drawing         fDrawing;
    private Tool            fTool;
    private StandardDrawingView fView;
    private Iconkit         fIconkit;

    public void init() {
d39 78
a116 57
	    fView = new StandardDrawingView(this, 400, 370);
        getContentPane().add("Center", fView);
        fTool = new FollowURLTool(view(), this);

        fIconkit = new Iconkit(this);

        String filename = getParameter("Drawing");
        if (filename != null) {
		    loadDrawing(filename);
            fView.setDrawing(fDrawing);
		} else
		    showStatus("Unable to load drawing");
    }

    private void loadDrawing(String filename) {
        try {
            URL url = new URL(getCodeBase(), filename);
            InputStream stream = url.openStream();
            StorableInput reader = new StorableInput(stream);
            fDrawing = (Drawing)reader.readStorable();
        } catch (IOException e) {
            fDrawing = new StandardDrawing();
            System.out.println("Error when Loading: " + e);
            showStatus("Error when Loading: " + e);
        }
    }

    /**
     * Gets the editor's drawing view.
     */
    public DrawingView view() {
        return fView;
    }

    /**
     * Gets the editor's drawing.
     */
    public Drawing drawing() {
        return fDrawing;
    }

    /**
     * Gets the current the tool (there is only one):
     */
    public Tool tool() {
        return fTool;
    }

    /**
     * Sets the editor's default tool. Do nothing since we only have one tool.
     */
    public void toolDone() {}

    /**
     * Ignore selection changes, we don't show any selection
     */
    public void figureSelectionChanged(DrawingView view) {}
a117 1

@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d2 1
a2 1
 * @@(#)JavaDrawViewer.java 5.2
d4 6
d14 4
a18 1
import java.applet.Applet;
d25 3
a27 5
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.util.*;


d93 1
a93 1
    public void selectionChanged(DrawingView view) {}
@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d86 1
a86 1
    public void figureSelectionChanged(DrawingView view) {}
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d86 1
a86 1
    public void selectionChanged(DrawingView view) {}
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)JavaDrawViewer.java 5.1
d8 1
d21 1
a21 1
public  class JavaDrawViewer extends Applet implements DrawingEditor {
d29 1
a29 1
		setLayout(new BorderLayout());
d31 1
a31 1
        add("Center", fView);
@


1.1.1.1
log
@
Initial revision.
@
text
@@
