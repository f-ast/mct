head	1.5;
access;
symbols
	jhotdraw54b2-release:1.5
	reorg_6x_split:1.5
	MVC_PHASE1:1.5.0.10
	NEW_ATTRIBUTES:1.5.0.8
	DNOYEB1_ALPHA-2:1.5.4.1
	release_JHD54b1:1.5
	BUGFIX_670992:1.5.0.6
	DNOYEB1_ALPHA-1:1.5.4.1
	dnoyeb1:1.5.0.4
	repack:1.5.0.2
	Root_repack:1.5
	Before_FigureVisitor:1.5
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2002.08.04.22.51.22;	author mrfloppy;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.5.4.1
date	2003.01.10.04.54.45;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.5
log
@after variou merges... (before 5.4 release)
@
text
@/*
 * @@(#)MySelectionTool.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.samples.javadraw;

import java.awt.event.MouseEvent;
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;

/**
 * A SelectionTool that interprets double clicks to inspect the clicked figure
 *
 * @@version <$CURRENT_VERSION$>
 */
public  class MySelectionTool extends SelectionTool {

	public MySelectionTool(DrawingEditor newDrawingEditor) {
		super(newDrawingEditor);
	}

	/**
	 * Handles mouse down events and starts the corresponding tracker.
	 */
	public void mouseDown(MouseEvent e, int x, int y) {
		setView((DrawingView)e.getSource());
		if (e.getClickCount() == 2) {
			Figure figure = drawing().findFigure(e.getX(), e.getY());
			if (figure != null) {
				inspectFigure(figure);
				return;
			}
		}
		super.mouseDown(e, x, y);
	}

	protected void inspectFigure(Figure f) {
		System.out.println("inspect figure"+f);
	}
}
@


1.5.4.1
log
@1.  Tool now accepts DrawingViewMouseEvent as opposed to java.awt.MouseEvent and x,y ints.
2. compositeFigure now uses constrained mouse values throughout.
3. nested CreationTOol was calling drawing() before it was setting the view.  should lead to NPE.  this tool still seems broken
   i dont think its needed anymore?
4. bug in splitConnectionTool mouse down. setEndConnector(findConnector(ex, ex, c)); needs to be ex and ey
5. made some of StandardDrawingViews inner class listners protected.
@
text
@d14 1
a14 1

d32 4
a35 9
	public void mouseDown(DrawingViewMouseEvent dvme) {
		setView( dvme.getDrawingView() );
		// use event coordinates to supress any kind of
		// transformations like constraining points to a grid
		setAnchorX( dvme.getMouseEvent().getX() );
		setAnchorY( dvme.getMouseEvent().getY() );
		
		if (dvme.getMouseEvent().getClickCount() == 2) {
			Figure figure = drawing().findFigure(getAnchorX(), getAnchorY());
d41 1
a41 1
		super.mouseDown(dvme);
@


1.4
log
@merge dnd (before 5.3)
@
text
@a13 1
import java.awt.*;
d33 1
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d26 2
a27 2
	public MySelectionTool(DrawingView view) {
		super(view);
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)MySelectionTool.java 5.2
d4 6
d21 2
a23 1

d26 21
a46 21
    public MySelectionTool(DrawingView view) {
        super(view);
    }

    /**
     * Handles mouse down events and starts the corresponding tracker.
     */
    public void mouseDown(MouseEvent e, int x, int y) {
        if (e.getClickCount() == 2) {
            Figure figure = drawing().findFigure(e.getX(), e.getY());
            if (figure != null) {
                inspectFigure(figure);
                return;
            }
        }
        super.mouseDown(e, x, y);
    }

    protected void inspectFigure(Figure f) {
        System.out.println("inspect figure"+f);
    }
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)MySelectionTool.java 5.1
a39 1

@


1.1.1.1
log
@
Initial revision.
@
text
@@
