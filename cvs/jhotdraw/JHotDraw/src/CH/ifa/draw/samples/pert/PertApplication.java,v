head	1.11;
access;
symbols
	jhotdraw54b2-release:1.11
	reorg_6x_split:1.11
	MVC_PHASE1:1.11.0.4
	NEW_ATTRIBUTES:1.11.0.2
	DNOYEB1_ALPHA-2:1.8.4.2
	release_JHD54b1:1.11
	BUGFIX_670992:1.10.0.2
	DNOYEB1_ALPHA-1:1.8.4.1
	dnoyeb1:1.8.0.4
	repack:1.8.0.2
	Root_repack:1.8
	Before_FigureVisitor:1.8
	JHotDraw_5-3:1.7
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2003.01.30.00.27.35;	author mrfloppy;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.12.20.21.16;	author dnoyeb;	state Exp;
branches;
next	1.9;

1.9
date	2003.01.02.19.47.26;	author dnoyeb;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.04.22.53.45;	author mrfloppy;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.12;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.14;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.8.4.1
date	2003.01.03.15.57.43;	author dnoyeb;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2003.01.22.02.49.33;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.11
log
@prepare for 5.4 release: various bug fixes
@
text
@/*
 * @@(#)PertApplication.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.samples.pert;

import javax.swing.JToolBar;
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.figures.*;
import CH.ifa.draw.application.*;

/**
 * @@version <$CURRENT_VERSION$>
 */
public  class PertApplication extends DrawApplication {

	static private final String PERTIMAGES = "/CH/ifa/draw/samples/pert/images/";

	public PertApplication() {
		super("PERT Editor");
	}

	protected void createTools(JToolBar palette) {
		super.createTools(palette);

		Tool tool = new TextTool(this, new TextFigure());
		palette.add(createToolButton(IMAGES + "TEXT", "Text Tool", tool));

		// the generic but slower version
		//tool = new CreationTool(new PertFigure());
		//palette.add(createToolButton(PERTIMAGES + "PERT", "Task Tool", tool));

		tool = new PertFigureCreationTool(this);
		palette.add(createToolButton(PERTIMAGES + "PERT", "Task Tool", tool));

		tool = new ConnectionTool(this, new PertDependency());
		palette.add(createToolButton(IMAGES + "CONN", "Dependency Tool", tool));

		tool = new CreationTool(this, new LineFigure());
		palette.add(createToolButton(IMAGES + "Line", "Line Tool", tool));
	}

	//-- main -----------------------------------------------------------

	public static void main(String[] args) {
		PertApplication pert = new PertApplication();
		pert.open();
	}
}
@


1.10
log
@Clean up head to be what it was before i mistakenly committed my changes to it.
My changes should have been committed to a branch, and let mrfloppy merge to the trunk.
This will happen from now on.
@
text
@d27 1
a27 1
	PertApplication() {
@


1.9
log
@Bring in line with latest Changes.
@
text
@a55 1
                pert.newWindow( );
@


1.8
log
@after variou merges... (before 5.4 release)
@
text
@d56 1
@


1.8.4.1
log
@Changes for better Desktop handling.
DrawingView Always has a Drawing.
bug 541524, 546628,547188
@
text
@a55 1
                pert.newWindow( );
@


1.8.4.2
log
@Fix [ 670992 ] AWT deadlock
Improvement to Animator
@
text
@d54 1
a54 1
		final PertApplication pert = new PertApplication();
d56 1
a56 17
		Runnable r = new Runnable() {
			public void run() {
				pert.newWindow( );
			}
		};
		try {
			java.awt.EventQueue.invokeAndWait( r );
		}
		catch(java.lang.InterruptedException ie){
			System.err.println(ie.getMessage());
			pert.exit();
		}
		catch(java.lang.reflect.InvocationTargetException ite){
			System.err.println(ite.getMessage());
			pert.exit();
		}	
                
@


1.7
log
@merge dnd (before 5.3)
@
text
@a17 1
import CH.ifa.draw.util.*;
@


1.6
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d35 1
a35 1
		Tool tool = new TextTool(view(), new TextFigure());
d42 1
a42 1
		tool = new PertFigureCreationTool(view());
d45 1
a45 1
		tool = new ConnectionTool(view(), new PertDependency());
d48 1
a48 1
		tool = new CreationTool(view(), new LineFigure());
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d2 1
a2 1
 * @@(#)PertApplication.java 5.2
d4 6
d21 3
d26 1
a26 1
    static private final String PERTIMAGES = "/CH/ifa/draw/samples/pert/images/";
d28 3
a30 3
    PertApplication() {
        super("PERT Editor");
    }
d32 2
a33 2
    protected void createTools(JToolBar palette) {
        super.createTools(palette);
d35 2
a36 2
        Tool tool = new TextTool(view(), new TextFigure());
        palette.add(createToolButton(IMAGES+"TEXT", "Text Tool", tool));
d38 3
a40 3
        // the generic but slower version
        //tool = new CreationTool(new PertFigure());
        //palette.add(createToolButton(PERTIMAGES+"PERT", "Task Tool", tool));
d42 2
a43 2
        tool = new PertFigureCreationTool(view());
        palette.add(createToolButton(PERTIMAGES+"PERT", "Task Tool", tool));
d45 2
a46 2
        tool = new ConnectionTool(view(), new PertDependency());
        palette.add(createToolButton(IMAGES+"CONN", "Dependency Tool", tool));
d48 3
a50 3
        tool = new CreationTool(view(), new LineFigure());
        palette.add(createToolButton(IMAGES+"Line", "Line Tool", tool));
    }
d52 1
a52 1
    //-- main -----------------------------------------------------------
d57 1
a57 1
    }
@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d8 1
a8 5
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
import java.net.*;
d26 1
a26 2
        Tool tool;
        tool = new TextTool(view(), new TextFigure());
a49 1

@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d8 5
a12 1
import javax.swing.JToolBar;
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d8 1
a8 5
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.io.*;
import java.net.*;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)PertApplication.java 5.1
d8 1
d27 1
a27 1
    protected void createTools(Panel palette) {
@


1.1.1.1
log
@
Initial revision.
@
text
@@
