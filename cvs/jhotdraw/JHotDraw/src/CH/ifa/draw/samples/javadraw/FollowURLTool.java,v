head	1.9;
access;
symbols
	jhotdraw54b2-release:1.9
	reorg_6x_split:1.9
	MVC_PHASE1:1.9.0.10
	NEW_ATTRIBUTES:1.9.0.8
	DNOYEB1_ALPHA-2:1.9.4.1
	release_JHD54b1:1.9
	BUGFIX_670992:1.9.0.6
	DNOYEB1_ALPHA-1:1.9.4.1
	dnoyeb1:1.9.0.4
	repack:1.9.0.2
	Root_repack:1.9
	Before_FigureVisitor:1.9
	JHotDraw_5-3:1.7
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2002.08.04.22.51.22;	author mrfloppy;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2002.04.30.20.40.07;	author mrfloppy;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.12;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.14;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.9.4.1
date	2003.01.10.04.54.44;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.9
log
@after variou merges... (before 5.4 release)
@
text
@/*
 * @@(#)FollowURLTool.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.samples.javadraw;

import javax.swing.JApplet;
import java.awt.event.*;
import java.net.*;
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.AbstractTool;

/**
 * @@version <$CURRENT_VERSION$>
 */
class FollowURLTool extends AbstractTool {
	 private JApplet         fApplet;

	 FollowURLTool(DrawingEditor newDrawingEditor, JApplet applet) {
		super(newDrawingEditor);
		fApplet = applet;
	 }

	/**
	 * Handles mouse move events in the drawing view.
	 */
	public void mouseMove(MouseEvent e, int x, int y) {
		String urlstring = null;
		Figure figure = drawing().findFigureInside(x,y);
		if (figure != null) {
			urlstring = (String) figure.getAttribute(FigureAttributeConstant.URL);
		}
		if (urlstring != null) {
			fApplet.showStatus(urlstring);
		}
		else {
			fApplet.showStatus("");
		}
	}

	/**
	 * Handles mouse up in the drawing view
	 * assuming mouseUp came from active drawing.
	 */
	public void mouseUp(MouseEvent e, int x, int y) {
		Figure figure = getActiveDrawing().findFigureInside(x, y);
		if (figure == null) {
			return;
		}
		String urlstring = (String) figure.getAttribute(FigureAttributeConstant.URL);
		if (urlstring == null) {
			return;
		}

		try {
			URL url = new URL(fApplet.getDocumentBase(), urlstring);
			fApplet.getAppletContext().showDocument(url);
		}
		catch (MalformedURLException exception) {
			fApplet.showStatus(exception.toString());
		}
	}
}
@


1.9.4.1
log
@1.  Tool now accepts DrawingViewMouseEvent as opposed to java.awt.MouseEvent and x,y ints.
2. compositeFigure now uses constrained mouse values throughout.
3. nested CreationTOol was calling drawing() before it was setting the view.  should lead to NPE.  this tool still seems broken
   i dont think its needed anymore?
4. bug in splitConnectionTool mouse down. setEndConnector(findConnector(ex, ex, c)); needs to be ex and ey
5. made some of StandardDrawingViews inner class listners protected.
@
text
@d15 1
a15 1

d34 1
a34 1
	public void mouseMove(DrawingViewMouseEvent dvme) {
d36 1
a36 1
		Figure figure = drawing().findFigureInside(dvme.getX(),dvme.getY());
d52 2
a53 2
	public void mouseUp(DrawingViewMouseEvent dvme) {
		Figure figure = getActiveDrawing().findFigureInside(dvme.getX(), dvme.getY());
@


1.8
log
@no message
@
text
@a14 1
import java.applet.*;
a16 1
import java.util.*;
d49 2
a50 1
	 * Handles mouse up in the drawing view.
d53 1
a53 1
		Figure figure = drawing().findFigureInside(x, y);
@


1.7
log
@merge dnd (before 5.3)
@
text
@d40 1
a40 1
			urlstring = (String) figure.getAttribute("URL");
d58 1
a58 1
		String urlstring = (String) figure.getAttribute("URL");
@


1.6
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d28 2
a29 2
	 FollowURLTool(DrawingView view, JApplet applet) {
		super(view);
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d2 1
a2 1
 * @@(#)FollowURLTool.java 5.2
d4 6
d22 3
d26 1
a26 1
     private JApplet         fApplet;
d28 9
a36 9
     FollowURLTool(DrawingView view, JApplet applet) {
        super(view);
        fApplet = applet;
     }

    /**
     * Handles mouse move events in the drawing view.
     */
    public void mouseMove(MouseEvent e, int x, int y) {
d38 24
a61 19
	    Figure figure = drawing().findFigureInside(x,y);
	    if (figure != null)
		    urlstring = (String) figure.getAttribute("URL");
	    if (urlstring != null)
	        fApplet.showStatus(urlstring);
	    else
	        fApplet.showStatus("");
    }

    /**
     * Handles mouse up in the drawing view.
     */
    public void mouseUp(MouseEvent e, int x, int y) {
	    Figure figure = drawing().findFigureInside(x, y);
	    if (figure == null)
	        return;
	    String urlstring = (String) figure.getAttribute("URL");
	    if (urlstring == null)
	        return;
d63 2
a64 2
	    try {
    	    URL url = new URL(fApplet.getDocumentBase(), urlstring);
d66 2
a67 1
		} catch (MalformedURLException exception) {
@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d8 1
a8 2
import javax.swing.*;
//import java.awt.*;
@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d8 1
a8 1
import javax.swing.JApplet;
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d8 1
a8 1
import javax.swing.*;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)FollowURLTool.java 5.1
d8 2
a9 1
import java.awt.*;
d18 1
a18 1
     private Applet         fApplet;
d20 1
a20 1
     FollowURLTool(DrawingView view, Applet applet) {
@


1.1.1.1
log
@
Initial revision.
@
text
@@
