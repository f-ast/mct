head	1.6;
access;
symbols
	jhotdraw54b2-release:1.6
	reorg_6x_split:1.6
	MVC_PHASE1:1.5.0.10
	NEW_ATTRIBUTES:1.5.0.8
	DNOYEB1_ALPHA-2:1.5.4.2
	release_JHD54b1:1.5
	BUGFIX_670992:1.5.0.6
	DNOYEB1_ALPHA-1:1.5.4.2
	dnoyeb1:1.5.0.4
	repack:1.5.0.2
	Root_repack:1.5
	Before_FigureVisitor:1.5
	JHotDraw_5-3:1.4
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2003.09.23.06.38.57;	author mtnygard;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.04.22.51.22;	author mrfloppy;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.46;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.09;	author jeckel;	state Exp;
branches;
next	;

1.5.4.1
date	2003.01.15.21.04.11;	author dnoyeb;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2003.01.18.04.49.04;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.6
log
@All test cases now pass!
@
text
@/*
 * @@(#)AnimationDecorator.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	? by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.samples.javadraw;

import java.awt.*;
import java.io.IOException;
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;
import CH.ifa.draw.util.*;

/**
 * @@version <$CURRENT_VERSION$>
 */
public class AnimationDecorator extends DecoratorFigure implements Animatable {

	private int fXVelocity;
	private int fYVelocity;

	/*
	 * Serialization support.
	 */
	private static final long serialVersionUID = 7894632974364110685L;
	private int animationDecoratorSerializedDataVersion = 1;

	public AnimationDecorator() { }

	public AnimationDecorator(Figure figure) {
		super(figure);
		fXVelocity = 4;
		fYVelocity = 4;
	}

	public void velocity(int xVelocity, int yVelocity) {
		fXVelocity = xVelocity;
		fYVelocity = yVelocity;
	}

	public Point velocity() {
		return new Point(fXVelocity, fYVelocity);
	}

	public void animationStep() {
		int xSpeed = fXVelocity;
		int ySpeed = fYVelocity;
		Rectangle box = displayBox();

		if ((box.x + box.width > 300) && (xSpeed > 0))
			xSpeed = -xSpeed;

		if ((box.y + box.height > 300) && (ySpeed > 0))
			ySpeed = -ySpeed;

		if ((box.x < 0) && (xSpeed < 0))
			xSpeed = -xSpeed;

		if ((box.y < 0) && (ySpeed < 0))
			ySpeed = -ySpeed;

		velocity(xSpeed, ySpeed);
		moveBy(xSpeed, ySpeed);
	}

	// guard concurrent access to display box

	public synchronized void basicMoveBy(int x, int y) {
		super.basicMoveBy(x, y);
	}

	public synchronized void basicDisplayBox(Point origin, Point corner) {
		super.basicDisplayBox(origin, corner);
	}

	public synchronized Rectangle displayBox() {
		return super.displayBox();
	}

	//-- store / load ----------------------------------------------

	public void write(StorableOutput dw) {
		super.write(dw);
		dw.writeInt(fXVelocity);
		dw.writeInt(fYVelocity);
	}

	public void read(StorableInput dr) throws IOException {
		super.read(dr);
		fXVelocity = dr.readInt();
		fYVelocity = dr.readInt();
	}
}
@


1.5
log
@after variou merges... (before 5.4 release)
@
text
@d7 1
a7 1
 * Copyright:	© by the original author(s) and all contributors
d23 1
a23 1
public class AnimationDecorator extends DecoratorFigure {
@


1.5.4.1
log
@
Lets have a moment of silence for DecoratorFigure.....It was a good figure ;{

Anything which happens inside the drawing after figure add must be undone before figure orphan.  It must also not
be exposed to anyobject outside the drawing.
Decorator figure retired in favor of a figureManipulator and the other functions being implemented by a composite
figure(BorderDecorator).
AdnimationDecorator retired in favor of AnimationManipulator.
A figure can have only 1 container. This is making the border tool have a hard time.

Lots of comments added

next phase:
orphan will disappear.  only add and remove remain.  All figure related resources belong to the figures and no other
object should care about figure.release.
split the figureListener into a figureContainer listener and a figureChangeListener.
Fix BorderDecorator.
Fix ConnectedText.
view.checkDamage to call drawing.update()
@
text
@a20 1
 * @@deprecated use {@@link AnimationManipulator AnimationManipulator} instead.
@


1.5.4.2
log
@Decorator Figure returns...To apease the brave hearted :-)
Its not very well integrated with the current state of affairs.  It works as well as it always
has though.
@
text
@d21 1
a21 1
 * @@see AnimationManipulator
@


1.4
log
@merge dnd (before 5.3)
@
text
@a14 1
import java.util.*;
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d26 2
a27 2
    private int fXVelocity;
    private int fYVelocity;
d29 33
a61 33
    /*
     * Serialization support.
     */
    private static final long serialVersionUID = 7894632974364110685L;
    private int animationDecoratorSerializedDataVersion = 1;

    public AnimationDecorator() { }

    public AnimationDecorator(Figure figure) {
        super(figure);
        fXVelocity = 4;
        fYVelocity = 4;
    }

    public void velocity(int xVelocity, int yVelocity) {
        fXVelocity = xVelocity;
        fYVelocity = yVelocity;
    }

    public Point velocity() {
        return new Point(fXVelocity, fYVelocity);
    }

    public void animationStep() {
	    int xSpeed = fXVelocity;
	    int ySpeed = fYVelocity;
	    Rectangle box = displayBox();

	    if ((box.x + box.width > 300) && (xSpeed > 0))
    		xSpeed = -xSpeed;

	    if ((box.y + box.height > 300) && (ySpeed > 0))
    		ySpeed = -ySpeed;
d63 2
a64 2
        if ((box.x < 0) && (xSpeed < 0))
            xSpeed = -xSpeed;
d66 2
a67 2
        if ((box.y < 0) && (ySpeed < 0))
            ySpeed = -ySpeed;
d69 2
a70 2
	    velocity(xSpeed, ySpeed);
	    moveBy(xSpeed, ySpeed);
d76 1
a76 1
	    super.basicMoveBy(x, y);
d79 21
a99 21
    public synchronized void basicDisplayBox(Point origin, Point corner) {
        super.basicDisplayBox(origin, corner);
    }

    public synchronized Rectangle displayBox() {
        return super.displayBox();
    }

    //-- store / load ----------------------------------------------

    public void write(StorableOutput dw) {
        super.write(dw);
        dw.writeInt(fXVelocity);
        dw.writeInt(fYVelocity);
    }

    public void read(StorableInput dr) throws IOException {
        super.read(dr);
        fXVelocity = dr.readInt();
        fYVelocity = dr.readInt();
    }
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)AnimationDecorator.java 5.2
d4 6
d21 3
a23 1

a99 1

@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)AnimationDecorator.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
