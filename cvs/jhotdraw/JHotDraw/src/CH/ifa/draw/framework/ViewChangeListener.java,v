head	1.4;
access;
symbols
	jhotdraw54b2-release:1.4
	reorg_6x_split:1.4
	MVC_PHASE1:1.3.0.4
	NEW_ATTRIBUTES:1.3.0.2
	DNOYEB1_ALPHA-2:1.2.4.3
	release_JHD54b1:1.2
	BUGFIX_670992:1.2.0.6
	DNOYEB1_ALPHA-1:1.2.4.3
	dnoyeb1:1.2.0.4
	repack:1.2.0.2
	Root_repack:1.2
	Before_FigureVisitor:1.2
	JHotDraw_5-3:1.1;
locks; strict;
comment	@# @;


1.4
date	2003.05.20.14.48.18;	author ricardo_padilha;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.12.00.33.40;	author dnoyeb;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.04.22.45.17;	author mrfloppy;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2001.10.24.21.24.11;	author mrfloppy;	state Exp;
branches;
next	;

1.2.4.1
date	2003.01.04.15.38.01;	author dnoyeb;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2003.01.07.21.23.13;	author dnoyeb;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2003.01.13.03.14.03;	author dnoyeb;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fixed a bug: now this listener extends EventListener
@
text
@package CH.ifa.draw.framework;

import java.util.EventListener;

/**
 * Title:
 * Description:
 * Copyright:    Copyright (c) 2001
 * Company:
 * @@author      SourceForge(dnoyeb) aka C.L.Gilbert
 * @@version     1.0
 * @@since       10/14/01
 */
public interface ViewChangeListener extends EventListener {

	/**
	 * Sent when the active view has changed.
	 * @@param newView view
	 */
	public void viewSelectionChanged(DrawingView oldView, DrawingView newView);
	
	/**
	 * Sent when a new view is created.  This should only be fired after the view
	 * has a peer.  I believe that means the view has a component chain all the way
	 * to a heavyweight container.
	 * @@param view view
	 */
	public void viewCreated(DrawingView view);

	/**
	 * Send when an existing view is about to be destroyed.  After processing this
	 * event, the view is not guaranteed to contain any appropriate data.  You
	 * must not use it.
	 */
	public void viewDestroying(DrawingView view);
}
@


1.3
log
@Remove EventListenerList in favor of simple List where possible.
EventListenerList duplicates the whole list for each additional add and is
quite heavy for instances where its not required since these lists are not
modified from events they fire.
@
text
@d2 2
a3 1
import CH.ifa.draw.framework.DrawingView;
d14 1
a14 2

public interface ViewChangeListener  {
@


1.2
log
@after variou merges... (before 5.4 release)
@
text
@a2 1
import java.util.EventListener;
d14 1
a14 5
 /**
  *
  * @@see javax.swing.event.EventListenerList
  */
public interface ViewChangeListener extends EventListener {
@


1.2.4.1
log
@Modified ViewChangeListener
ViewCreated -> ViewActivated
ViewDestroying -> ViewDeactivated
@
text
@d33 1
a33 1
	public void viewActivated(DrawingView view);
d40 1
a40 1
	public void viewDeactivated(DrawingView view);
@


1.2.4.2
log
@1. Added getDesktop to the DrawingEditor.  added null returns to all Classes that dont fully support
   the Desktop architecture yet, like the applets.

2. Added a figureSelection listener to the DrawingEditor so one can register with the DrawingEditor to
   hear figure selection events.  You can still register with the individual DrawingViews if you wish.
   The DrawingEditor will guarantee that it only fires this event on the active view, so it saves a listener
   from having to register and unregister with views to hear this event each time the activeView changes.
   All Commands were doing this register/unregister dance.

3. AbstractCommand now registers for figureSelectionEvents with the drawingEditor as opposed to the
   DrawingView.

4. Went back to viewCreated and viewDestroying naming.  flip flopping.  Its actually more accurate.  the
   real issue is that 2 events are missing, viewDestroyed and viewCreating.  dont need them yet, but
   they may materialize in the future.

5. Went back to Tool CompositeTool being enabled even when no figure is selected.

6. FigureSelectionListener now extends java.util.EventListener now because I am too lazy to write
   an event handler just yet.

7. implemented new findFigureInside() fix.  needs testing.

8. standardDrawingView selectionZordered now returns figures in the proper order(not reversed).
@
text
@d10 1
a10 1
 * @@author      C.L.Gilbert <dnoyeb@@users.sourceforge.net>
d16 1
a16 1
  * This event is fired by the {@@link DrawingEditor DrawingEditor}.
a17 1
  * @@see CH.ifa.draw.Framework.DrawingEditor
d22 2
a23 3
	 * Sent when the selected view has changed.
	 * @@param newView The view being changed to.
	 * @@param oldView The view being changed from.
d31 1
a31 1
	 * @@param view The <b>DrawingView</b> being activated.
d33 1
a33 1
	public void viewCreated(DrawingView view);
a38 1
	 * @@param view The <b>DrawingView</b> being deactivated.
d40 1
a40 1
	public void viewDestroying(DrawingView view);
@


1.2.4.3
log
@1. javadoc comments and corrections and clarifications
2. Drawing no longer exposes its drawing change listener, but has a method for those who want the drawing to request all views of it to be updated.
3. all removeAll() methods in CompositeFigure now have single consistent implementation.
4. standardDrawing unlock calls notify instead of notifyAll since only 1 can grab the lock anyway.
@
text
@d18 1
a18 1
  * @@see CH.ifa.draw.framework.DrawingEditor
@


1.1
log
@merge dnd (before 5.3)
@
text
@d23 1
a23 1
	 * @@param DrawingView view
d31 1
a31 1
	 * @@param DrawingView view
@

