head	1.5;
access;
symbols
	jhotdraw54b2-release:1.5
	reorg_6x_split:1.5
	MVC_PHASE1:1.5.0.2
	NEW_ATTRIBUTES:1.4.0.2
	DNOYEB1_ALPHA-2:1.3
	release_JHD54b1:1.3
	BUGFIX_670992:1.3.0.6
	DNOYEB1_ALPHA-1:1.3
	dnoyeb1:1.3.0.4
	repack:1.3.0.2
	Root_repack:1.3
	Before_FigureVisitor:1.3
	JHotDraw_5-3:1.2
	JHotDraw_5-2_merged:1.1;
locks; strict;
comment	@# @;


1.5
date	2003.02.22.23.58.43;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.07.17.49.11;	author ricardo_padilha;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.04.23.01.49;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.24.20.44.33;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.5
log
@no message
@
text
@/*
 * @@(#)StorageFormat.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.util;

import javax.swing.filechooser.FileFilter;
import java.io.IOException;
import CH.ifa.draw.framework.Drawing;

/**
 * Interface to define a storage format. A StorageFormat is a strategy that knows how to store
 * and restore a Drawing according to a specific encoding. Typically it can be recognized by
 * a file extension. To identify a valid file format for a Drawing an appropriate FileFilter
 * for a javax.swing.JFileChooser component can be requested.
 *
 * @@see Drawing
 * @@see StorageFormatManager
 *
 * @@author  Wolfram Kaiser <mrfloppy@@sourceforge.net>
 * @@version <$CURRENT_VERSION$>
 */
public interface StorageFormat {

	/**
	 * Return a FileFilter that can be used to identify files which can be stored and restored
	 * with this Storage Format. Typically, each storage format has its own recognizable file
	 * extension.
	 *
	 * @@return FileFilter to be used with a javax.swing.JFileChooser
	 */
	public FileFilter getFileFilter();
	
	/**
	 * Every format has to identify itself as able to store and/or restore from
	 * the format it represents. If the storage format can save to the format, it
	 * should return true in this method.
	 * @@return boolean <code>true</code> if the format can save
	 */
	public boolean isStoreFormat();

	/**
	 * Every format has to identify itself as able to store and/or restore from
	 * the format it represents. If the storage format can load from the format,
	 * it should return true in this method.
	 * @@return boolean <code>true</code> if the format can load
	 */
	public boolean isRestoreFormat(); 

	/**
	 * Store a Drawing under a given name.
	 *
	 * @@param fileName file name of the Drawing under which it should be stored
	 * @@param saveDrawing drawing to be saved
	 * @@return file name with correct file extension
	 */
	public String store(String fileName, Drawing saveDrawing) throws IOException;
	
	/**
	 * Restore a Drawing from a file with a given name. 
	 *
	 * @@param fileName of the file in which the Drawing has been saved
	 * @@return restored Drawing
	 */
	public Drawing restore(String fileName) throws IOException;
}
@


1.4
log
@Updated StorageFormat interface. Now formats are added based on their ability to load/save.
@
text
@d39 2
a40 2
	FileFilter getFileFilter();

d47 1
a47 1
	boolean isStoreFormat();
d55 1
a55 1
	boolean isRestoreFormat(); 
d64 2
a65 2
	String store(String fileName, Drawing saveDrawing) throws IOException;

d72 1
a72 2
	Drawing restore(String fileName) throws IOException;

@


1.3
log
@after variou merges... (before 5.4 release)
@
text
@d39 18
a56 2
	public FileFilter getFileFilter();
	
d64 2
a65 2
	public String store(String fileName, Drawing saveDrawing) throws IOException;
	
d72 2
a73 1
	public Drawing restore(String fileName) throws IOException;
@


1.2
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d27 1
a27 1
 * @@author Wolfram Kaiser
d53 1
a53 1
	 * @@param name of the file in which the Drawing has been saved
@


1.1
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)StorageFormat.java 5.2
d4 6
d26 1
d28 1
@

