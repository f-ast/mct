head	1.8;
access;
symbols
	jhotdraw54b2-release:1.8
	reorg_6x_split:1.8
	MVC_PHASE1:1.8.0.10
	NEW_ATTRIBUTES:1.8.0.8
	DNOYEB1_ALPHA-2:1.8
	release_JHD54b1:1.8
	BUGFIX_670992:1.8.0.6
	DNOYEB1_ALPHA-1:1.8
	dnoyeb1:1.8.0.4
	repack:1.8.0.2
	Root_repack:1.8
	Before_FigureVisitor:1.8
	JHotDraw_5-3:1.7
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2002.08.04.22.56.18;	author mrfloppy;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.20.44.33;	author mrfloppy;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.20.32.01;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.24.20.25.13;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.29.13.42.14;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.8
log
@after variou merges... (before 5.4 release)
@
text
@/*
 * @@(#)ToggleGridCommand.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.standard;

import java.awt.Point;
import CH.ifa.draw.framework.*;

/**
 * A command to toggle the snap to grid behavior.
 *
 * @@version <$CURRENT_VERSION$>
 */
public class ToggleGridCommand extends AbstractCommand {

	private Point fGrid;

   /**
	* Constructs a toggle grid command.
	* @@param name the command name
	* @@param newDrawingEditor editor
	* @@param grid the grid size. A grid size of 1,1 turns grid snapping off.
	*/
	public ToggleGridCommand(String name, DrawingEditor newDrawingEditor, Point grid) {
		super(name, newDrawingEditor);
		fGrid = new Point(grid.x, grid.y);
	}

	public void execute() {
		super.execute();
		PointConstrainer grid = view().getConstrainer();
		if (grid != null) {
			view().setConstrainer(null);
		}
		else {
			view().setConstrainer(new GridConstrainer(fGrid.x, fGrid.y));
		}
	}
}


@


1.7
log
@merge dnd (before 5.3)
@
text
@a13 1
import java.util.*;
a14 1
import CH.ifa.draw.util.Command;
d29 1
a29 1
	* @@param image the pathname of the image
@


1.6
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d34 2
a35 2
	public ToggleGridCommand(String name, DrawingView view, Point grid) {
		super(name, view);
d40 1
@


1.5
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d2 1
a2 1
 * @@(#)ToggleGridCommand.java 5.2
d4 6
d21 2
d26 1
a26 1
    private Point fGrid;
d29 19
a47 19
    * Constructs a toggle grid command.
    * @@param name the command name
    * @@param image the pathname of the image
    * @@param grid the grid size. A grid size of 1,1 turns grid snapping off.
    */
    public ToggleGridCommand(String name, DrawingView view, Point grid) {
        super(name, view);
        fGrid = new Point(grid.x, grid.y);
    }

    public void execute() {
        PointConstrainer grid = view().getConstrainer();
        if (grid != null) {
            view().setConstrainer(null);
        }
        else {
            view().setConstrainer(new GridConstrainer(fGrid.x, fGrid.y));
        }
    }
@


1.4
log
@before merge for version 5.3 (dnd, undo,...)
@
text
@d16 1
a16 1
public class ToggleGridCommand extends Command {
a17 1
    private DrawingView fView;
d27 1
a27 2
        super(name);
        fView = view;
d32 1
a32 1
        PointConstrainer grid = fView.getConstrainer();
d34 1
a34 1
            fView.setConstrainer(null);
d37 1
a37 1
            fView.setConstrainer(new GridConstrainer(fGrid.x, fGrid.y));
@


1.3
log
@- SelectionFigure is now an interface. The default implementation CH.ifa.draw.standard.StandardSelectionFigure
- A FigureSelectionListener interface has been introduced in CH.ifa.draw.framework. An DrawingEditor
  is now a FigureSelectionListener and the signature for all selectionChanged() methods has been
  changed to figureSelectionChanged().
- CH.ifa.draw.util.Command is now an interface. A AbstractCommand can be found in CH.ifa.draw.standard.
- All commands used to have a fView field. This has been moved to CH.ifa.draw.standard.AbstactCommand
- A CH.ifa.draw.standard.StandardDrawingView has now a paintComponents() method instead of a paint()
  and update() method. This allows the CH.ifa.draw.util.FloatingTextField to be a javax.swing.JTextField
  instead of a java.awt.TextField.
- CH.ifa.draw.figures.AbstractLineDecorator has been missing
- DrawApplet, DrawApplication and derived classes are now programmed towards the DrawingView interface
  instead of using StandardDrawingView. That leads to occasional cast when some additional StandardDrawingView
  functionality is required in some specialized cases. Applications that were derived from DrawApplication
  and used to override the createContents() methods should now return a DrawingView as well
@
text
@d16 1
a16 1
public class ToggleGridCommand extends AbstractCommand {
d18 1
d28 2
a29 1
        super(name, view);
d34 1
a34 1
        PointConstrainer grid = view().getConstrainer();
d36 1
a36 1
            view().setConstrainer(null);
d39 1
a39 1
            view().setConstrainer(new GridConstrainer(fGrid.x, fGrid.y));
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d16 1
a16 1
public class ToggleGridCommand extends Command {
a17 1
    private DrawingView fView;
d27 1
a27 2
        super(name);
        fView = view;
d32 1
a32 1
        PointConstrainer grid = fView.getConstrainer();
d34 1
a34 1
            fView.setConstrainer(null);
d37 1
a37 1
            fView.setConstrainer(new GridConstrainer(fGrid.x, fGrid.y));
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)ToggleGridCommand.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
