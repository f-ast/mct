head	1.5;
access;
symbols
	jhotdraw54b2-release:1.5
	reorg_6x_split:1.5
	MVC_PHASE1:1.5.0.10
	NEW_ATTRIBUTES:1.5.0.8
	DNOYEB1_ALPHA-2:1.5
	release_JHD54b1:1.5
	BUGFIX_670992:1.5.0.6
	DNOYEB1_ALPHA-1:1.5
	dnoyeb1:1.5.0.4
	repack:1.5.0.2
	Root_repack:1.5
	Before_FigureVisitor:1.5
	JHotDraw_5-3:1.3
	JHotDraw_5-2_merged:1.2
	JHotDraw_5-1_initial:1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2002.08.21.08.06.00;	author mrfloppy;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.04.22.56.18;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.24.20.44.33;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.09.15.31.47;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.10;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.5
log
@extended functionality for enumerations (reset, and-enumeration) and a few bug fixes
@
text
@/*
 * @@(#)ReverseFigureEnumerator.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.standard;

import CH.ifa.draw.util.ReverseListEnumerator;
import CH.ifa.draw.framework.*;

import java.util.Iterator;
import java.util.List;

/**
 * An Enumeration that enumerates a Collection of figures back (size-1) to front (0).
 *
 * @@version <$CURRENT_VERSION$>
 */
public final class ReverseFigureEnumerator implements FigureEnumeration {
	private Iterator myIterator;
	private List myInitialList;

	public ReverseFigureEnumerator(List l) {
		myInitialList = l;
		reset();
	}

	/**
	 * Returns true if the enumeration contains more elements; false
	 * if its empty.
	 */
	public boolean hasNextFigure() {
		return myIterator.hasNext();
	}

	/**
	 * Returns the next element casted as a figure of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception java.util.NoSuchElementException If no more elements exist.
	 */
	public Figure nextFigure() {
		return (Figure)myIterator.next();
	}

	/**
	 * Reset the enumeration so it can be reused again. However, the
	 * underlying collection might have changed since the last usage
	 * so the elements and the order may vary when using an enumeration
	 * which has been reset.
	 */
	public void reset() {
		myIterator = new ReverseListEnumerator(myInitialList);
	}
}
@


1.4
log
@after variou merges... (before 5.4 release)
@
text
@a13 1
import java.util.*;
d17 3
d27 1
d30 2
a31 1
		myIterator = new ReverseListEnumerator(l);
d45 1
a45 1
	 * @@exception NoSuchElementException If no more elements exist.
d49 10
@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@d15 1
a15 1
import CH.ifa.draw.util.ReverseVectorEnumerator;
d19 1
a19 1
 * An Enumeration that enumerates a vector of figures back (size-1) to front (0).
d24 1
a24 1
	ReverseVectorEnumerator fEnumeration;
d26 2
a27 2
	public ReverseFigureEnumerator(Vector v) {
		fEnumeration = new ReverseVectorEnumerator(v);
d34 2
a35 11
	public boolean hasMoreElements() {
		return fEnumeration.hasMoreElements();
	}

	/**
	 * Returns the next element of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception NoSuchElementException If no more elements exist.
	 */
	public Object nextElement() {
		return fEnumeration.nextElement();
d44 1
a44 1
		return (Figure)fEnumeration.nextElement();
@


1.2
log
@Merge to JHotDraw 5.2 (using JFC/Swing GUI components)
@
text
@d2 1
a2 1
 * @@(#)ReverseFigureEnumerator.java 5.2
d4 6
d20 2
d24 1
a24 1
    ReverseVectorEnumerator fEnumeration;
d26 29
a54 29
    public ReverseFigureEnumerator(Vector v) {
	    fEnumeration = new ReverseVectorEnumerator(v);
    }

    /**
     * Returns true if the enumeration contains more elements; false
     * if its empty.
     */
    public boolean hasMoreElements() {
	    return fEnumeration.hasMoreElements();
    }

    /**
     * Returns the next element of the enumeration. Calls to this
     * method will enumerate successive elements.
     * @@exception NoSuchElementException If no more elements exist.
     */
    public Object nextElement() {
        return fEnumeration.nextElement();
    }

    /**
     * Returns the next element casted as a figure of the enumeration. Calls to this
     * method will enumerate successive elements.
     * @@exception NoSuchElementException If no more elements exist.
     */
    public Figure nextFigure() {
        return (Figure)fEnumeration.nextElement();
    }
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * @@(#)ReverseFigureEnumerator.java 5.1
@


1.1.1.1
log
@
Initial revision.
@
text
@@
