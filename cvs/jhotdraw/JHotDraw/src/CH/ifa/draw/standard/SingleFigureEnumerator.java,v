head	1.4;
access;
symbols
	jhotdraw54b2-release:1.4
	reorg_6x_split:1.4
	MVC_PHASE1:1.4.0.10
	NEW_ATTRIBUTES:1.4.0.8
	DNOYEB1_ALPHA-2:1.4
	release_JHD54b1:1.4
	BUGFIX_670992:1.4.0.6
	DNOYEB1_ALPHA-1:1.4
	dnoyeb1:1.4.0.4
	repack:1.4.0.2
	Root_repack:1.4
	Before_FigureVisitor:1.4
	JHotDraw_5-3:1.2;
locks; strict;
comment	@# @;


1.4
date	2002.08.21.08.06.00;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.04.22.56.18;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.24.21.15.19;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.24.20.37.15;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@extended functionality for enumerations (reset, and-enumeration) and a few bug fixes
@
text
@/*
 * @@(#)SingleFigureEnumerator.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.standard;

import CH.ifa.draw.framework.*;

/**
 * An Enumeration that contains only a single Figures. An instance of this
 * enumeration can be used only once to retrieve the figure as the figure
 * is forgotten after the first retrieval.
 *
 * @@author Wolfram Kaiser
 * @@version <$CURRENT_VERSION$>
 */
public final class SingleFigureEnumerator implements FigureEnumeration {
	private Figure mySingleFigure;
	private Figure myInitialFigure;

	public SingleFigureEnumerator(Figure newSingleFigure) {
		myInitialFigure = newSingleFigure;
		reset();
	}

	/**
	 * Returns true if the enumeration contains more elements; false
	 * if its empty.
	 */
	public boolean hasNextFigure() {
		return mySingleFigure != null;
	}

	/**
	 * Returns the next element of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception java.util.NoSuchElementException If no more elements exist.
	 */
	public Figure nextFigure() {
		Figure returnFigure = mySingleFigure;
		mySingleFigure = null;
		return returnFigure;
	}

	/**
	 * Reset the enumeration so it can be reused again. However, the
	 * underlying collection might have changed since the last usage
	 * so the elements and the order may vary when using an enumeration
	 * which has been reset.
	 */
	public void reset() {
		mySingleFigure = myInitialFigure;
	}
}
@


1.3
log
@after variou merges... (before 5.4 release)
@
text
@a14 1
import java.util.*;
d26 1
d29 2
a30 1
		mySingleFigure = newSingleFigure;
d44 1
a44 1
	 * @@exception NoSuchElementException If no more elements exist.
d47 1
a47 1
		Figure returnFigure = (Figure)mySingleFigure;
d50 10
@


1.2
log
@merge dnd (before 5.3)
@
text
@d36 1
a36 1
	public boolean hasMoreElements() {
a37 11
	}

	/**
	 * Returns the next element of the enumeration. Calls to this
	 * method will enumerate successive elements.
	 * @@exception NoSuchElementException If no more elements exist.
	 */
	public Object nextElement() {
		Object returnFigure = mySingleFigure;
		mySingleFigure = null;
		return returnFigure;
@


1.1
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d26 1
a26 1
    private Figure mySingleFigure;
d28 3
a30 3
    public SingleFigureEnumerator(Figure newSingleFigure) {
	    mySingleFigure = newSingleFigure;
    }
d32 7
a38 7
    /**
     * Returns true if the enumeration contains more elements; false
     * if its empty.
     */
    public boolean hasMoreElements() {
	    return mySingleFigure != null;
    }
d40 10
a49 10
    /**
     * Returns the next element of the enumeration. Calls to this
     * method will enumerate successive elements.
     * @@exception NoSuchElementException If no more elements exist.
     */
    public Object nextElement() {
    	Object returnFigure = mySingleFigure;
    	mySingleFigure = null;
        return returnFigure;
    }
d51 10
a60 10
    /**
     * Returns the next element of the enumeration. Calls to this
     * method will enumerate successive elements.
     * @@exception NoSuchElementException If no more elements exist.
     */
    public Figure nextFigure() {
    	Figure returnFigure = (Figure)mySingleFigure;
    	mySingleFigure = null;
        return returnFigure;
    }
@

