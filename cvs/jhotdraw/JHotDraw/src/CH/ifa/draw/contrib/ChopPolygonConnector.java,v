head	1.3;
access;
symbols
	jhotdraw54b2-release:1.3
	reorg_6x_split:1.3
	MVC_PHASE1:1.3.0.10
	NEW_ATTRIBUTES:1.3.0.8
	DNOYEB1_ALPHA-2:1.3
	release_JHD54b1:1.3
	BUGFIX_670992:1.3.0.6
	DNOYEB1_ALPHA-1:1.3
	dnoyeb1:1.3.0.4
	repack:1.3.0.2
	Root_repack:1.3
	Before_FigureVisitor:1.3
	JHotDraw_5-3:1.3
	JHotDraw_5-2_merged:1.1.1.1
	JHotDraw_5-1_initial:1.1.1.1
	start:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2001.10.24.20.44.32;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.24.20.32.00;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.12.14.57.08;	author jeckel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@before merge for version 5.3 (dnd, undo,...) - 3
@
text
@/*
 * @@(#)ChopPolygonConnector.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */

package CH.ifa.draw.contrib;

import java.awt.*;
import CH.ifa.draw.framework.*;
import CH.ifa.draw.standard.*;

/**
 * A ChopPolygonConnector locates a connection point by
 * chopping the connection at the polygon boundary.
 *
 * @@author Erich Gamma
 * @@version <$CURRENT_VERSION$>
 */
public class ChopPolygonConnector extends ChopBoxConnector {

	/*
	 * Serialization support.
	 */
	private static final long serialVersionUID = -156024908227796826L;

	public ChopPolygonConnector() {
	}

	public ChopPolygonConnector(Figure owner) {
		super(owner);
	}

	protected Point chop(Figure target, Point from) {
		return ((PolygonFigure)target).chop(from);
	}
}

@


1.2
log
@before merge for version 5.3 (dnd, undo,...) - 2
@
text
@d2 8
a9 2
 * Copyright (c) 1996, 1997 Erich Gamma
 * All Rights Reserved
d21 3
d27 15
a41 15
    /*
     * Serialization support.
     */
    private static final long serialVersionUID = -156024908227796826L;

    public ChopPolygonConnector() {
    }

    public ChopPolygonConnector(Figure owner) {
        super(owner);
    }

    protected Point chop(Figure target, Point from) {
        return ((PolygonFigure)target).chop(from);
    }
@


1.1
log
@Initial revision
@
text
@a10 1
import CH.ifa.draw.util.Geom;
@


1.1.1.1
log
@
Initial revision.
@
text
@@
