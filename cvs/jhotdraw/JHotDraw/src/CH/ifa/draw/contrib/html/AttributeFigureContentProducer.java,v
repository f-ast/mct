head	1.3;
access;
symbols
	jhotdraw54b2-release:1.3
	reorg_6x_split:1.3
	MVC_PHASE1:1.3.0.2
	NEW_ATTRIBUTES:1.2.0.2
	DNOYEB1_ALPHA-2:1.1
	release_JHD54b1:1.1
	BUGFIX_670992:1.1.0.6
	DNOYEB1_ALPHA-1:1.1
	dnoyeb1:1.1.0.4
	repack:1.1.0.2
	Root_repack:1.1
	Before_FigureVisitor:1.1;
locks; strict;
comment	@# @;


1.3
date	2003.02.22.23.58.33;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.04.05.09.41;	author ricardo_padilha;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.3
log
@no message
@
text
@/*
 * @@(#)AttributeFigureContentProducer.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package CH.ifa.draw.contrib.html;

import java.io.Serializable;
import CH.ifa.draw.util.StorableOutput;
import CH.ifa.draw.util.StorableInput;
import java.io.IOException;

/**
 * AttributeFigureContentProducer provides content for AttributeFigures.<br>
 * It gives priority to base class supplied values, and if none, then it
 * gets the value from the supplied AttributeContentProducerContext.
 *
 * @@author  Eduardo Francos - InContext
 * @@created 30 avril 2002
 * @@version <$CURRENT_VERSION$>
 */
public class AttributeFigureContentProducer extends FigureDataContentProducer
		 implements Serializable {

	/**Constructor for the AttributeFigureContentProducer object */
	public AttributeFigureContentProducer() { }

	/**
	 * Produces the contents for the attribute
	 *
	 * @@param context       the calling client context
	 * @@param ctxAttrName   the attribute name
	 * @@param ctxAttrValue  the attribute value that led to the call to this
	 * @@return              The content value
	 */
	public Object getContent(ContentProducerContext context, String ctxAttrName, Object ctxAttrValue) {
		// first chance to basic values
		Object attrValue = super.getContent(context, ctxAttrName, ctxAttrValue);
		if (attrValue != null) {
			return attrValue;
		}

		// no, return value from attributes
		return ((AttributeContentProducerContext)context).getAttribute(ctxAttrName);
	}

	/**
	 * Writes the storable
	 *
	 * @@param dw  the storable output
	 */
	public void write(StorableOutput dw) {
		super.write(dw);
	}

	/**
	 * Writes the storable
	 *
	 * @@param dr               the storable input
	 * @@exception IOException  thrown by called methods
	 */
	public void read(StorableInput dr) throws IOException {
		super.read(dr);
	}
}
@


1.2
log
@Removed unused import.
@
text
@d2 1
a2 1
 *  @@(#)TextAreaFigure.java
d4 6
a9 6
 *  Project:		JHotdraw - a GUI framework for technical drawings
 *  http://www.jhotdraw.org
 *  http://jhotdraw.sourceforge.net
 *  Copyright:	© by the original author(s) and all contributors
 *  License:		Lesser GNU Public License (LGPL)
 *  http://www.opensource.org/licenses/lgpl-license.html
d23 3
a25 3
 * @@author    Eduardo Francos - InContext
 * @@created   30 avril 2002
 * @@version   1.0
a26 1

a32 1

a51 1

a60 1

d67 1
a67 2
	public void read(StorableInput dr)
		throws IOException {
@


1.1
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@a13 1
import CH.ifa.draw.util.Storable;
@

