head	1.4;
access;
symbols
	jhotdraw54b2-release:1.4
	reorg_6x_split:1.4
	MVC_PHASE1:1.3.0.10
	NEW_ATTRIBUTES:1.3.0.8
	DNOYEB1_ALPHA-2:1.3
	release_JHD54b1:1.3
	BUGFIX_670992:1.3.0.6
	DNOYEB1_ALPHA-1:1.3
	dnoyeb1:1.3.0.4
	repack:1.3.0.2
	Root_repack:1.3
	Before_FigureVisitor:1.3;
locks; strict;
comment	@# @;


1.4
date	2003.11.09.21.18.45;	author mrfloppy;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.04.22.48.03;	author mrfloppy;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.30.20.40.06;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.4
log
@TestSuite: adjusting auto-generated sourcecode (JunitDoclet) to coding style
@
text
@/*
 *  @@(#)ZoomCommand.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package CH.ifa.draw.contrib.zoom;

import CH.ifa.draw.framework.DrawingEditor;
import CH.ifa.draw.framework.JHotDrawRuntimeException;

import CH.ifa.draw.standard.AbstractCommand;

/**
 * A ZoomCommand allows for applying a zoom factor to a ZoomDrawingView.<br>
 * Several ZoomCommand objects can be created in a menu or toolbar, set to various
 * predefined zoom factors
 *
 * @@author    Eduardo Francos
 * @@created   26 april 2002
 * @@version   <CURRENT_VERSION>
 */
public class ZoomCommand extends AbstractCommand {
	/** The scale factor to apply */
	protected float scale = 1.0f;

	/**
	 * Constructor for the ZoomCommand object
	 *
	 * @@param name              the command name
	 * @@param scale             Description of the Parameter
	 * @@param newDrawingEditor  the DrawingEditor which manages the views
	 */
	public ZoomCommand(String newSame, float newScale, DrawingEditor newDrawingEditor) {
		super(newSame, newDrawingEditor, true);
		scale = newScale;
	}


	/** Executes the command */
	public void execute() {
		super.execute();
		zoomView().zoom(scale);
	}


	/**
	 * Sets the zoom factor of the view
	 *
	 * @@return   ZoomDrawingView currently active in the editor
	 */
	public ZoomDrawingView zoomView() {
		Object view = super.view();
		if (view instanceof ZoomDrawingView) {
			return (ZoomDrawingView)view;
		}
		throw new JHotDrawRuntimeException("execute should NOT be getting called when view not instanceof ZoomDrawingView");
	}


	/**
	 * Gets the scale attribute of the ZoomCommand object
	 *
	 * @@return   The scale value
	 */
	public float getScale() {
		return scale;
	}


	/**
	 * Sets the scale attribute of the ZoomCommand object
	 *
	 * @@param newScale  The new scale value
	 */
	public void setScale(float newScale) {
		scale = newScale;
	}


	/**
	 * Returns true if the command is executable with the current view
	 *
	 * @@return   true iff the view is a ZoomDrawingView
	 */
	protected boolean isExecutableWithView() {
		return (view() instanceof ZoomDrawingView);
	}
}
@


1.3
log
@after variou merges... (before 5.4 release)
@
text
@d38 3
a40 3
	public ZoomCommand(String name, float scale, DrawingEditor newDrawingEditor) {
		super(name, newDrawingEditor, true);
		this.scale = scale;
@


1.2
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@a13 1
import CH.ifa.draw.framework.DrawingView;
@


1.1
log
@no message
@
text
@d14 1
d26 1
a26 1
 * @@version   1.0
d83 10
@

