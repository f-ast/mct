head	1.2;
access;
symbols
	jhotdraw54b2-release:1.2
	reorg_6x_split:1.2
	MVC_PHASE1:1.2.0.2
	NEW_ATTRIBUTES:1.1.0.8
	DNOYEB1_ALPHA-2:1.1
	release_JHD54b1:1.1
	BUGFIX_670992:1.1.0.6
	DNOYEB1_ALPHA-1:1.1
	dnoyeb1:1.1.0.4
	repack:1.1.0.2
	Root_repack:1.1
	Before_FigureVisitor:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.02.22.23.58.33;	author mrfloppy;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.20.19.57.58;	author mrfloppy;	state Exp;
branches;
next	;


desc
@@


1.2
log
@no message
@
text
@/*
 * @@(#)ResourceDisposabilityStrategy.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package CH.ifa.draw.contrib.html;

/**
 * ResourceDisposabilityStrategy defines the interface for resource disposal
 * strategies.<br>
 * The strategy defines the logic used to determine which and when a resource can
 * be efficiently disposed of. A smarter the strategy leads to few resource
 * regeneration.
 *
 * @@author  Eduardo Francos - InContext
 * @@created 2 mai 2002
 * @@version <$CURRENT_VERSION$>
 */
public interface ResourceDisposabilityStrategy {

	/**
	 * Sets the manager holding the resources for this strategy
	 *
	 * @@param manager  The new manager value
	 */
	public void setManager(DisposableResourceManager manager);


	/**
	 * Gets the manager holding the resources for this strategy
	 *
	 * @@return   The manager value
	 */
	public DisposableResourceManager getManager();

	/**
	 * Activates the strategy which starts disposing of resources as fitted
	 *
	 * @@exception ResourceManagerNotSetException  Description of the Exception
	 */
	public void startDisposing() throws ResourceManagerNotSetException;

	/**
	 * Deactivates the strategy that stops automatic disposal of resource.<br>
	 * The millis parameters specifies in milliseconds the time to wait for
	 * the disposal to stop. After this time the method returns, but the
	 * deactivation request remain active.
	 *
	 * @@param millis  time to wait for disposal to stop
	 */
	public void stopDisposing(long millis);
}
@


1.1
log
@various merges (TextArea, HTMLTextArea, CreationTool, MiniMap, bug fixes)
@
text
@d2 1
a2 1
 *  @@(#)TextAreaFigure.java
d4 6
a9 6
 *  Project:		JHotdraw - a GUI framework for technical drawings
 *  http://www.jhotdraw.org
 *  http://jhotdraw.sourceforge.net
 *  Copyright:	© by the original author(s) and all contributors
 *  License:		Lesser GNU Public License (LGPL)
 *  http://www.opensource.org/licenses/lgpl-license.html
d20 3
a22 3
 * @@author    Eduardo Francos - InContext
 * @@created   2 mai 2002
 * @@version   1.0
d24 1
a25 1
public interface ResourceDisposabilityStrategy {
a40 1

d46 1
a46 3
	public void startDisposing()
		throws ResourceManagerNotSetException;

@

