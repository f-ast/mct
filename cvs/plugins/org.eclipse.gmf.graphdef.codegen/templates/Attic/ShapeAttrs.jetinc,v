head	1.4;
access;
symbols
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20080731-1520:1.4
	R1_0_maintenance:1.4.0.2
	R1_0:1.4
	I20060203-0830:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.1
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.02.05.23.00.50;	author atikhomirov;	state dead;
branches;
next	1.3;

1.3
date	2006.01.25.14.02.29;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.23.20.00.49;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.19.17.28;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@provisional framework that supports (double-)dispatch from templates to
a) avoid lengthy if instanceof elseif checks,
b) solve scope and name visibility issues when extracting common code into jetinc
@
text
@<%
// PERHAPS, do this with reflection?
%><%if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {%>
		<%=figureVarName%>.setFill(<%=figureInstance.isFill()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {%>
		<%=figureVarName%>.setOutline(<%=figureInstance.isOutline()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {%>
		<%=figureVarName%>.setLineWidth(<%=figureInstance.getLineWidth()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {%>
		<%=figureVarName%>.setLineStyle(org.eclipse.draw2d.Graphics.<%=figureInstance.getLineKind().getName()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {%>
		<%=figureVarName%>.setFillXOR(<%=figureInstance.isXorFill()%>);
<%} if (figureInstance.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {%>
		<%=figureVarName%>.setOutlineXOR(<%=figureInstance.isXorOutline()%>);
<%} if (figureInstance instanceof Polyline && !((Polyline) figureInstance).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) figureInstance).getTemplate().iterator(); pointIt.hasNext(); ) {
		Point p = (Point) pointIt.next();%>
		<%=figureVarName%>.addPoint(new org.eclipse.draw2d.geometry.Point(<%=p.getX()%>, <%=p.getY()%>));
<%}%><%} else if (figureInstance instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) figureInstance;%>
		<%=figureVarName%>.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(<%=rrFigure.getCornerWidth()%>), getMapMode().DPtoLP(<%=rrFigure.getCornerHeight()%>)));
<%}%><%@@ include file="FigureAttrs.jetinc"%>@


1.3
log
@support Figure.color attributes
@
text
@@


1.2
log
@- Generating figures for Child node
- Transforming coordinates for rounded rectangles
@
text
@d3 14
a16 14
%><%if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Fill())) {%>
		<%=shapeVarName%>.setFill(<%=shapeFigure.isFill()%>);
<%} if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_Outline())) {%>
		<%=shapeVarName%>.setOutline(<%=shapeFigure.isOutline()%>);
<%} if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineWidth())) {%>
		<%=shapeVarName%>.setLineWidth(<%=shapeFigure.getLineWidth()%>);
<%} if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_LineKind())) {%>
		<%=shapeVarName%>.setLineStyle(org.eclipse.draw2d.Graphics.<%=shapeFigure.getLineKind().getName()%>);
<%} if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorFill())) {%>
		<%=shapeVarName%>.setFillXOR(<%=shapeFigure.isXorFill()%>);
<%} if (shapeFigure.eIsSet(GMFGraphPackage.eINSTANCE.getShape_XorOutline())) {%>
		<%=shapeVarName%>.setOutlineXOR(<%=shapeFigure.isXorOutline()%>);
<%} if (shapeFigure instanceof Polyline && !((Polyline) shapeFigure).getTemplate().isEmpty()) {
	for (Iterator pointIt = ((Polyline) shapeFigure).getTemplate().iterator(); pointIt.hasNext(); ) {
d18 4
a21 4
		<%=shapeVarName%>.addPoint(new org.eclipse.draw2d.geometry.Point(<%=p.getX()%>, <%=p.getY()%>));
<%}%><%} else if (shapeFigure instanceof RoundedRectangle) {
		RoundedRectangle rrFigure = (RoundedRectangle) shapeFigure;%>
		<%=shapeVarName%>.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(<%=rrFigure.getCornerWidth()%>), getMapMode().DPtoLP(<%=rrFigure.getCornerHeight()%>)));
@


1.1
log
@ some templates to support #114177 (graphical definition model) - with GEF IFigure code as an outcome
@
text
@d21 1
a21 1
		<%=shapeVarName%>.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(<%=rrFigure.getCornerWidth()%>, <%=rrFigure.getCornerHeight()%>));
@

