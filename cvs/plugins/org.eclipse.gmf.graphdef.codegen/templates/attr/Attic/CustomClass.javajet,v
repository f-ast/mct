head	1.4;
access;
symbols
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20080731-1520:1.4
	v20061027-1200:1.2
	v20061013-1330:1.3
	v20060925-1700:1.2
	v20060919-0800:1.2
	M1_20:1.3
	v20060904-1500:1.3
	v20060713-1700:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	v20060627-1200:1.2
	v20060626-1420:1.2
	v20060616-1200:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	I20060505-1400:1.2
	I20060424-0500:1.2
	I20060424-0300:1.2
	M6_10:1.2
	I20060407-1200:1.2
	I20060331-1000:1.2
	I20060324-0300:1.1
	I20060317-1300:1.1
	I20060317-1200:1.1
	I20060316-1300:1.1
	I20060309-1300:1.1
	M5_10:1.1
	S20060303-1600:1.1
	I20060227-1730:1.1
	I20060216-1945:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.11.02.21.58.36;	author atikhomirov;	state dead;
branches;
next	1.3;

1.3
date	2006.08.24.13.13.37;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.30.22.39.09;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.13.17.36.17;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@JET templates for gmfgraph model replaced with Xpand counterparts.
MapMode handling simplified
@
text
@<%@@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="CustomClassAttributesGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.emf.codegen.util.CodeGenUtil java.util.* "%>
<%
final CustomClass instance = (CustomClass) ((Object[]) argument)[0];
//final GraphDefDispatcher dispatcher = (GraphDefDispatcher) ((Object[]) argument)[1];
final String varName = (String) ((Object[]) argument)[2];
boolean insertingArbitraryCode = false;
for (Iterator attributes = instance.getAttributes().iterator(); !insertingArbitraryCode && attributes.hasNext();){
	insertingArbitraryCode = ((CustomAttribute)attributes.next()).isMultiStatementValue();
}
%>
<%	if (insertingArbitraryCode) {%>
		{
<%	}%>
<%
int attrIndex = 0;
for (Iterator attrs = instance.getAttributes().iterator(); attrs.hasNext(); attrIndex++){
	CustomAttribute next = (CustomAttribute) attrs.next(); 
	String varValue;
	if (next.isMultiStatementValue()){
		varValue = "attr" + attrIndex;
%>
			<%=java.text.MessageFormat.format(next.getValue(), new Object[] {varValue})%>;
<%	} else {
	 	varValue = next.getValue();
}
	if (next.isDirectAccess()) { 
%>
			<%=varName%>.<%=next.getName()%> = <%=varValue%>;		
<%			
	} else {
%>
			<%=varName%>.set<%=CodeGenUtil.capName(next.getName())%>(<%=varValue%>);
<%	
	}
%>	
<%
} //for 
%>
<%	if (insertingArbitraryCode) {%>
		}
<%	}%>

@


1.3
log
@[154683] mgolubev - Handle custom borders.
@
text
@@


1.2
log
@[mgolubev] #134097 Invalid code is generated for the node figure with XYLayout
@
text
@d7 4
a10 1
final boolean hasAttributes = !instance.getAttributes().isEmpty();
d12 1
a12 1
<%	if (hasAttributes) {%>
d40 1
a40 1
<%	if (hasAttributes) {%>
@


1.1
log
@[mgolubev] #127252 layout support
@
text
@d7 1
d9 1
a9 1

d11 1
d37 1
d39 1
@

