head	1.5;
access;
symbols
	v20080114-2222:1.4
	v20071214-1111:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070605-1400:1.4
	v20070601-1400:1.4
	v20070520-1200:1.3
	v20070420-1000:1.2
	v20070405-2000:1.2
	v20070405-1100:1.2
	v20070330-1300:1.2
	v20070307-0700:1.2
	v20070221-1500:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.02.22.13.08.01;	author ashatalin;	state dead;
branches;
next	1.4;
commitid	4c5647bec9294567;

1.4
date	2007.05.31.15.52.32;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	49f1465eef2c4567;

1.3
date	2007.05.18.21.38.09;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2f76464e1cbf4567;

1.2
date	2007.03.02.15.39.20;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	717a45e845234567;

1.1
date	2007.02.09.20.08.32;	author atikhomirov;	state Exp;
branches;
next	;
commitid	179c45ccd4b34567;


desc
@@


1.5
log
@Updating gmfgaph editor:
- Setting default size of all graphical elements to 0,0
- updating aspect templates to reflect latest changes
- regenerating code
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Anna Karjakina (Borland) - initial API and implementation
 */
 
import "http://www.eclipse.org/gmf/2006/GraphicalDefinition";
import "http://www.eclipse.org/gmf/2006/GenModel";
import "http://www.eclipse.org/emf/2002/GenModel";
import "http://www.eclipse.org/emf/2002/Ecore";

extension xpt::GenModelUtils;

cached List[genmodel::GenFeature] getAllGenFeatures(genmodel::GenClass genClass) :
getAllBaseGenClasses(genClass).genFeatures.union(genClass.genFeatures)
;

cached List[genmodel::GenClass] getAllBaseGenClasses(genmodel::GenClass genClass) :
genClass.ecoreClass.eAllSuperTypes.findGenClassifier(genClass.genPackage.genModel)
;

private genmodel::GenClass findGenClassifier(ecore::EClass eClass, genmodel::GenModel genModel) :
findGenClassifier(genModel, eClass)
;

cached genmodel::GenClassifier getTypeGenClassifier(genmodel::GenFeature genFeature) :
null != genFeature.ecoreFeature.eType ? findGenClassifier(genFeature.genClass.genPackage.genModel, genFeature.ecoreFeature.eType) : null
;

cached genmodel::GenClass metaclass(gmfgen::GenNode genNode) :
genNode.getDomainMetaClass()
;

cached boolean skip(genmodel::GenFeature genFeature) :
skip(getTypeGenClassifier(genFeature), getName(genFeature))
;

private String getName(genmodel::GenFeature genFeature) :
genFeature.ecoreFeature.name
;

private boolean skip(genmodel::GenClassifier type, String genFeatureName) :
!genFeatureName.matches("layoutData|layout|template")
;

private boolean skip(genmodel::GenDataType type, String genFeatureName) :
genFeatureName.matches("name")
;

cached boolean generateSyncronizationCode(genmodel::GenClass metaclass) :
metaclass.ecoreClass.eAllSuperTypes.contains(metaclass.ecoreClass.ePackage.getEClassifier("AbstractFigure"))
;

boolean isInnerClassViewmap(gmfgen::Viewmap viewmap) :
false
;

boolean isInnerClassViewmap(gmfgen::InnerClassViewmap viewmap) :
true
;

cached String getProcessChangesCall(genmodel::GenFeature genFeature, String modelElementVariable) :
setValue(genFeature, transform(genFeature, getValue(genFeature, modelElementVariable)))
;

private String getValue(genmodel::GenFeature genFeature, String modelElementVariable) :
isCornerWidthOrHeight(genFeature) ? 
DPtoLPcall(modelElementVariable+".getCornerWidth()")+", "+DPtoLPcall(modelElementVariable+".getCornerHeight()") :
modelElementVariable+"."+getGetAccessor(genFeature)+"()"
;

private String DPtoLPcall(String variable) :
"getMapMode().DPtoLP("+variable+")"
;

private String transform(genmodel::GenFeature genFeature, String getValueString) :
switch (getName(genFeature)) {
case "cornerWidth": "new org.eclipse.draw2d.geometry.Dimension("+getValueString+")"
case "cornerHeight": "new org.eclipse.draw2d.geometry.Dimension("+getValueString+")"
case "lineKind": "getLineStyle("+getValueString+")"
case "template": "getPointList("+getValueString+")"
default : getValueString
}
;

boolean isCornerWidthOrHeight(genmodel::GenFeature genFeature) :
getName(genFeature).matches("cornerWidth|cornerHeight")
;

private String getAccessorCall(genmodel::GenFeature genFeature) :
switch (getAccessorName(genFeature)) {
case "XorFill": "myFigure.setFillXOR"
case "XorOutline": "myFigure.setOutlineXOR"
case "LineKind": "myFigure.setLineStyle"
case "CornerWidth": "myFigure.setCornerDimensions"
case "CornerHeight": "myFigure.setCornerDimensions"
case "Template": "myFigure.setPoints"
default : getTypedAccessorCall(genFeature, getTypeGenClassifier(genFeature))
}
;

private String getTypedAccessorCall(genmodel::GenFeature genFeature, genmodel::GenDataType type) :
"myFigure.set"+getAccessorName(genFeature)
;

private String getTypedAccessorCall(genmodel::GenFeature genFeature, genmodel::GenClassifier type) :
getName(genFeature)+"Changed"
;

private String setValue(genmodel::GenFeature genFeature, String transformedValueString) :
getAccessorCall(genFeature)+"("+transformedValueString+")"
;
@


1.4
log
@[190196] akarjakina - Adjust GMFGraph Editor according recent gmfgraph metamodel with support for FigureDescriptor introduced
@
text
@@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2005/GraphicalDefinition";
d57 1
a57 1
metaclass.ecoreClass.eAllSuperTypes.contains(metaclass.ecoreClass.ePackage.getEClassifier("FigureMarker"))
@


1.2
log
@[176026] akarjakina - Fix notation background and foreground colors update
[173499] akarjakina - Add custom form-based property sections fro figure attributes
@
text
@d14 1
a14 1
import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
@


1.1
log
@[173496] akarjakina - updated gmfgraph.editor bootstrap sample with recent GMF changes
@
text
@d92 1
a92 1
private boolean isCornerWidthOrHeight(genmodel::GenFeature genFeature) :
@

