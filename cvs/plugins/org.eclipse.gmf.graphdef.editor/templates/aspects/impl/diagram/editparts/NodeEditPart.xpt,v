head	1.12;
access;
symbols
	v20080722-1827:1.12
	v20080718-1700:1.12
	v20080718-1731:1.12
	v20080716-1642:1.12
	R2_1_maintenance:1.12.0.2
	Root_R2_1_maintenance:1.12
	R2_1_0:1.12
	v20080610-1132:1.12
	v20080603-1553:1.12
	v20080528-1052:1.12
	v20080521:1.7
	v20080516-1143:1.7
	v20080512-1200:1.3
	v20080510-0100:1.2
	v20080507-1326:1.2
	v20080501-1739:1.2
	v20080425-1959:1.2
	v20080411-0411:1.2
	v20080404-1111:1.2
	v20080322-0000:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.05.28.12.37.14;	author ashatalin;	state Exp;
branches;
next	1.11;
commitid	5988483d51f74567;

1.11
date	2008.05.28.11.08.28;	author ashatalin;	state Exp;
branches;
next	1.10;
commitid	6cc8483d3d2b4567;

1.10
date	2008.05.27.12.28.08;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	68fd483bfe544567;

1.9
date	2008.05.23.12.52.26;	author ashatalin;	state Exp;
branches;
next	1.8;
commitid	54964836be094567;

1.8
date	2008.05.22.12.18.02;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	969483564774567;

1.7
date	2008.05.14.13.05.38;	author ashatalin;	state Exp;
branches;
next	1.6;
commitid	7a4d482ae3a14567;

1.6
date	2008.05.14.11.35.48;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	41e3482ace924567;

1.5
date	2008.05.14.11.23.57;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	3b68482acbcd4567;

1.4
date	2008.05.14.11.16.59;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	377e482aca274567;

1.3
date	2008.05.12.17.40.17;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	a53482880fd4567;

1.2
date	2008.03.07.11.35.53;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	5ab247d128944567;

1.1
date	2008.02.22.13.08.00;	author ashatalin;	state Exp;
branches;
next	;
commitid	4c5647bec9294567;


desc
@@


1.12
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Anna Karjakina (Borland) - initial API and implementation
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/gmf/2008/GmfGraph/wysiwyg"»

«EXTENSION xpt::GenModelUtils»
«EXTENSION aspects::impl::diagram::editparts::Utils»
«EXTENSION xpt::diagram::editparts::Utils»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»

«AROUND setupNodePlate FOR gmfgen::GenNode-»
	«targetDef.proceed()-»
	«IF hasSynchronizers(this)-»
		result.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(0, 0));
	«ENDIF-»
«ENDAROUND»

«AROUND createLayoutEditPolicyBody FOR gmfgen::GenNode-»
	«IF hasSynchronizers(this)-»
		return new org.eclipse.gmf.graphdef.editor.edit.polocies.«EXPAND layoutEditPolicyConstructor»;
	«ELSE-»
		«targetDef.proceed()»
	«ENDIF-»
«ENDAROUND»

«DEFINE layoutEditPolicyConstructor FOR gmfgen::GenNode-»
«IF isPolyline(this)»PointContainerXYLayoutEditPolicy«ELSE»FigureContainerXYLayoutEditPolicy«ENDIF»(getMapMode()«IF isPolyline(this)», «hasLayoutDataSynchronizers(this)»«ENDIF»)«-»
«ENDDEFINE»

«AROUND createNodePlate FOR gmfgen::GenNode-»
	«IF isPolyline(this)-»
		«EXPAND xpt::Common::generatedMemberComment»
		protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
			DefaultSizeNodeFigureExt result = new DefaultSizeNodeFigureExt(getMapMode().DPtoLP(«defaultSizeWidth(viewmap, 40)»), getMapMode().DPtoLP(«defaultSizeHeight(viewmap, 40)»)); 
			«EXPAND impl::diagram::editparts::NodeEditPart::setupNodePlate-»
			return result;
		}
	«ELSE-»
		«targetDef.proceed()-»
	«ENDIF-»
«ENDAROUND»

«AROUND createFigure FOR gmfgen::GenNode-»
	«IF isPolyline(this)-»
		«EXPAND customCreateFigure-»
	«ELSE-»
		«targetDef.proceed()-»
	«ENDIF»
«ENDAROUND»

«DEFINE customCreateFigure FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment(
		"Creates figure for this edit part.\n" +
		"\n" +
		"Body of this method does not depend on settings in generation model\n" +
		"so you may safely remove <i>generated</i> tag and modify it.\n"
	)»
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure create«IF hasBorderItems()»Main«ELSE»Node«ENDIF»Figure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.XYLayout()«IF hasLayoutDataSynchronizers(this)» {
			public org.eclipse.draw2d.geometry.Point getOrigin(org.eclipse.draw2d.IFigure parent) {
				return new org.eclipse.draw2d.geometry.Point();
			}
		}«ENDIF»);
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = figure;
		return figure;
	}
«ENDDEFINE»

«AROUND getPrimaryDragEditPolicy FOR gmfgen::GenNode-»
	«IF (isPolyline(this) && hasLayoutDataSynchronizers(this)) || isPolylinePoint(this)-»
		«EXPAND xpt::Common::generatedMemberComment»
		public org.eclipse.gef.EditPolicy getPrimaryDragEditPolicy() {
			org.eclipse.gmf.runtime.diagram.ui.editpolicies.NonResizableEditPolicyEx editPolicy = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.NonResizableEditPolicyEx();
			«IF isPolyline(this)-»
				editPolicy.setDragAllowed(false);
			«ENDIF-»
			return editPolicy;
		}	
	«ELSE-»
		«targetDef.proceed()-»
	«ENDIF-»
«ENDAROUND»@


1.11
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@d33 1
a33 1
		return new org.eclipse.gmf.graphdef.editor.edit.polocies.«EXPAND layoutEditPolicyClassName»(getMapMode());
d39 2
a40 2
«DEFINE layoutEditPolicyClassName FOR gmfgen::GenNode-»
«IF isPolyline(this)»PointContainerXYLayoutEditPolicy«ELSE»FigureContainerXYLayoutEditPolicy«ENDIF-»
d73 1
a73 1
		figure.setLayoutManager(new org.eclipse.draw2d.XYLayout() {
d77 1
a77 1
		});
@


1.10
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@d73 5
a77 1
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
d80 1
a80 6
		org.eclipse.draw2d.RectangleFigure childContainer = new org.eclipse.draw2d.RectangleFigure();
		childContainer.setFill(false);
		childContainer.setOutline(false);
		figure.add(childContainer);
		childContainer.setLayoutManager(new org.eclipse.draw2d.XYLayout());
		contentPane = childContainer;
@


1.9
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@d33 1
a33 1
		return new org.eclipse.gmf.graphdef.editor.edit.polocies.DomainBasedXYLayoutEditPolicy(getMapMode());
d39 4
d54 45
@


1.8
log
@[233205] - Support Polyline figure in .gmfgraph editor
@
text
@d43 1
a43 1
			«EXPAND newPolylineDefaultSizeNodeFigure-»
d50 1
a50 11
«ENDAROUND»

«DEFINE newPolylineDefaultSizeNodeFigure FOR gmfgen::GenNode-»
	org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result =
		new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(getMapMode().DPtoLP(«defaultSizeWidth(viewmap, 40)»), getMapMode().DPtoLP(«defaultSizeHeight(viewmap, 40)»)) {

			protected boolean useLocalCoordinates() {
				return true;
			}
		};
«ENDDEFINE»@


1.7
log
@- Removing unnecessary borders around Top-level figures from FigureGallery
- copyrights updated.
@
text
@d22 1
d37 24
a60 1
«ENDAROUND»@


1.6
log
@Using standard figure accessor instead of private variable.
@
text
@a26 1
		«EXPAND setInsets-»
d36 1
a36 13
«ENDAROUND»

«DEFINE setInsets FOR gmfgen::GenNode-»
«ENDDEFINE»

«DEFINE setInsets FOR gmfgen::GenChildNode-»
	«IF containers.typeSelect(gmfgen::GenCompartment).size() > 0-»
		org.eclipse.draw2d.LineBorder contourBorder = new org.eclipse.draw2d.LineBorder(org.eclipse.swt.widgets.Display.getDefault().getSystemColor(org.eclipse.swt.SWT.COLOR_WIDGET_NORMAL_SHADOW));
		org.eclipse.draw2d.MarginBorder marginBorder = new org.eclipse.draw2d.MarginBorder(5);
		org.eclipse.draw2d.CompoundBorder compoundBorder = new org.eclipse.draw2d.CompoundBorder(contourBorder, marginBorder);
		result.setBorder(compoundBorder);
	«ENDIF-»
«ENDDEFINE»@


1.5
log
@Minor refactoring of template
@
text
@a38 27
«AROUND createNodeShape(gmfgen::GenNode node) FOR gmfgen::InnerClassViewmap-»
	«IF hasSynchronizers(node)-»
		«EXPAND createNodeShape-»
		
		«EXPAND getPrimaryShape-»
	«ELSE-»
		«targetDef.proceed()-»
	«ENDIF-»
«ENDAROUND»

«DEFINE createNodeShape FOR gmfgen::InnerClassViewmap-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		«className» figure = new «className»();
 		figure.setUseLocalCoordinates(true);
 		myFigure = figure;
		return primaryShape = figure;
	}
«ENDDEFINE»

«DEFINE getPrimaryShape FOR gmfgen::InnerClassViewmap-»
	«EXPAND xpt::Common::generatedMemberComment»
	public «className» getPrimaryShape() {
		return («className») primaryShape;
	}
«ENDDEFINE»

d49 1
a49 2
«ENDDEFINE»

@


1.4
log
@- Migrating to new .gmfgen model
- Using (0,0) as a minimum size for DefaultNode to make resize feedback minimum size == (0,0)
@
text
@a38 1
«REM»???«ENDREM»
d40 18
a57 8
	«IF hasSynchronizers(node)»
		«EXPAND xpt::Common::generatedMemberComment»
		protected org.eclipse.draw2d.IFigure createNodeShape() {
			«className» figure = new «className»();
	 		figure.setUseLocalCoordinates(true);
	 		myFigure = figure;
 			return primaryShape = figure;
		}
d59 6
a64 8
		«EXPAND xpt::Common::generatedMemberComment»
		public «className» getPrimaryShape() {
			return («className») primaryShape;
		}
	«ELSE»
		«targetDef.proceed()»
	«ENDIF»
«ENDAROUND»
d70 8
a77 5
«IF containers.typeSelect(gmfgen::GenCompartment).size() > 0-»
org.eclipse.draw2d.LineBorder contourBorder = new org.eclipse.draw2d.LineBorder(org.eclipse.swt.widgets.Display.getDefault().getSystemColor(org.eclipse.swt.SWT.COLOR_WIDGET_NORMAL_SHADOW));
org.eclipse.draw2d.MarginBorder marginBorder = new org.eclipse.draw2d.MarginBorder(5);
org.eclipse.draw2d.CompoundBorder compoundBorder = new org.eclipse.draw2d.CompoundBorder(contourBorder, marginBorder);
result.setBorder(compoundBorder);«ENDIF»«ENDDEFINE»@


1.3
log
@[230191] - Start using FeatureTracker/AttachAdapter for listening model changes in org.eclipse.gmf.graphdef.editor
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d14 1
a14 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
d23 8
d39 1
a58 8
«AROUND setupNodePlate FOR gmfgen::GenNode-»
	«IF hasSynchronizers(this)-»
		«EXPAND setInsets-»
	«ELSE»
		«targetDef.proceed()-»
	«ENDIF-»
«ENDAROUND»

@


1.2
log
@Migrating to new templates from .codegen plugin.
@
text
@d17 1
d24 2
a25 43
«IF generateSyncronizationCode(metaclass())-»
	«IF gmfgen::ViewmapLayoutType::XY_LAYOUT.value == getLayoutType().value-»
	org.eclipse.gmf.runtime.diagram.ui.editpolicies.XYLayoutEditPolicy lep =
			new org.eclipse.gmf.runtime.diagram.ui.editpolicies.XYLayoutEditPolicy() {

		protected org.eclipse.gef.EditPolicy createChildEditPolicy(org.eclipse.gef.EditPart child) {
			«IF hasBorderItems()-»
			if (child instanceof org.eclipse.gmf.runtime.diagram.ui.editparts.IBorderItemEditPart) {
				return new org.eclipse.gmf.runtime.diagram.ui.editpolicies.BorderItemSelectionEditPolicy();
			}
			«ENDIF-»
			org.eclipse.gef.EditPolicy result = super.createChildEditPolicy(child);
			if (result == null) {
				return new org.eclipse.gmf.runtime.diagram.ui.editpolicies.ResizableShapeEditPolicy();
			}
			return result;
		}
        «EXPAND overrideGetLayoutOrigin(viewmap)-»
        «EXPAND overrideGetCurrentConstraintFor(viewmap)-»
        
	};
	return lep;
	«ELSEIF gmfgen::ViewmapLayoutType::TOOLBAR_LAYOUT.value == getLayoutType().value»
	org.eclipse.gmf.runtime.diagram.ui.editpolicies.ConstrainedToolbarLayoutEditPolicy lep =
			new org.eclipse.gmf.runtime.diagram.ui.editpolicies.ConstrainedToolbarLayoutEditPolicy() {

		protected org.eclipse.gef.EditPolicy createChildEditPolicy(org.eclipse.gef.EditPart child) {
			«IF hasBorderItems()-»
			if (child instanceof org.eclipse.gmf.runtime.diagram.ui.editparts.IBorderItemEditPart) {
				return new org.eclipse.gmf.runtime.diagram.ui.editpolicies.BorderItemSelectionEditPolicy();
			}
			«ENDIF-»
			if (child.getEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE) == null) {
				if (child instanceof org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart) {
					return new «getDiagram().getTextSelectionEditPolicyQualifiedClassName()»();
				}
			}
			return super.createChildEditPolicy(child);
		}
        «EXPAND overrideGetLayoutOrigin(this.viewmap)-»
        
	};
	return lep;
d27 1
a27 1
    «targetDef.proceed()»
a28 3
«ELSE»
«targetDef.proceed()»
«ENDIF-»
a30 23
«DEFINE overrideGetLayoutOrigin(gmfgen::Viewmap innerViewmap) FOR gmfgen::GenNode-»«ENDDEFINE»

«DEFINE overrideGetLayoutOrigin(gmfgen::InnerClassViewmap innerViewmap) FOR gmfgen::GenNode-»

protected org.eclipse.draw2d.geometry.Point getLayoutOrigin() {
	return ((org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart)getHost()).getContentPane().getClientArea().getLocation();
}
«ENDDEFINE»

«DEFINE overrideGetCurrentConstraintFor(gmfgen::Viewmap innerViewmap) FOR gmfgen::GenNode-»«ENDDEFINE»

«DEFINE overrideGetCurrentConstraintFor(gmfgen::InnerClassViewmap innerViewmap) FOR gmfgen::GenNode-»

protected org.eclipse.draw2d.geometry.Rectangle getCurrentConstraintFor(org.eclipse.gef.GraphicalEditPart child) {
	org.eclipse.draw2d.geometry.Rectangle result = super.getCurrentConstraintFor(child);
	if (result == null) {
		org.eclipse.draw2d.IFigure fig = child.getFigure();
		result = fig.getBounds().getCopy();
	}
	return result;
}
«ENDDEFINE»

d32 8
a39 19
«IF generateSyncronizationCode(node.metaclass()) && isInnerClassViewmap(node.viewmap)»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		«className» figure = new «className»();
		«IF node.childNodes.size() > 0 && node.getLayoutType().value == gmfgen::ViewmapLayoutType::XY_LAYOUT.value-»
 		figure.setUseLocalCoordinates(true);
		«ENDIF-»
		«EXPAND processChanges(node)-»
 		return primaryShape = figure;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public «className» getPrimaryShape() {
		return («className») primaryShape;
	}
«ELSE»
«targetDef.proceed()»
«ENDIF»
«ENDAROUND»
d41 3
a43 8
«DEFINE processChanges(gmfgen::GenNode node) FOR gmfgen::InnerClassViewmap-»
	myFigure = figure;
	«EXPAND MetaModel::DeclareAndAssign("modelElement", "((org.eclipse.gmf.runtime.notation.View) getModel()).getElement()") FOR node.metaclass()»
	if (modelElement != null) {
	«FOREACH node.metaclass().getAllGenFeatures() AS nextGenFeature-»
		«IF !skip(nextGenFeature)-»
		{
			«EXPAND processChangesCall(node.metaclass()) FOR nextGenFeature-»
d45 4
a48 4
		«ENDIF-»
	«ENDFOREACH-»
	}
«ENDDEFINE»
d51 5
a55 4
«IF generateSyncronizationCode(metaclass()) && isInnerClassViewmap(viewmap)-»
«EXPAND setInsets-»
myNodeFigure = result;
«ELSE»«targetDef.proceed()-»«ENDIF-»
d66 1
a66 42
result.setBorder(compoundBorder);«ENDIF»«ENDDEFINE»

«DEFINE processChangesCall(genmodel::GenClass modelElementEClass) FOR genmodel::GenFeature-»
«EXPAND accessorCall»(«EXPAND transform(modelElementEClass)»);
«ENDDEFINE»

«DEFINE accessorCall FOR genmodel::GenFeature-»
«LET ecoreFeature.name AS featureName-»
«IF "xorFill" == featureName-»
myFigure.setFillXOR«ELSEIF "xorOutline" == featureName-»
myFigure.setOutlineXOR«ELSEIF "lineKind" == featureName-»
myFigure.setLineStyle«ELSEIF "cornerWidth" == featureName || "cornerHeight" == featureName-»
myFigure.setCornerDimensions«ELSEIF "template" == featureName-»
myFigure.setPoints«ELSE-»
«EXPAND typedAccessorCall(this) FOR ecoreFeature.eType-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE transform(genmodel::GenClass modelElementEClass) FOR genmodel::GenFeature-»
«LET ecoreFeature.name AS featureName-»
«IF "cornerWidth" == featureName || "cornerHeight" == featureName-»
new org.eclipse.draw2d.geometry.Dimension(«ELSEIF "lineKind" == featureName-»
getLineStyle(«ELSEIF "template" == featureName-»
getPointList(«ENDIF-»
«EXPAND getValue(modelElementEClass)-»
«IF "cornerWidth" == featureName || "cornerHeight" == featureName || "lineKind" == featureName || "template" == featureName»)«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE typedAccessorCall(genmodel::GenFeature genFeature) FOR ecore::EDataType-»
myFigure.set«genFeature.ecoreFeature.name.toFirstUpper()»«ENDDEFINE»

«DEFINE typedAccessorCall(genmodel::GenFeature genFeature) FOR ecore::EClassifier-»
«genFeature.ecoreFeature.name»Changed«ENDDEFINE»

«DEFINE getValue(genmodel::GenClass modelElementEClass) FOR genmodel::GenFeature-»
«IF isCornerWidthOrHeight(this)-»
getMapMode().DPtoLP(modelElement.getCornerWidth()), getMapMode().DPtoLP(modelElement.getCornerHeight())«ELSE-»
«EXPAND MetaModel::getFeatureValue("modelElement", modelElementEClass)-»
«ENDIF-»
«ENDDEFINE»@


1.1
log
@Updating gmfgaph editor:
- Setting default size of all graphical elements to 0,0
- updating aspect templates to reflect latest changes
- regenerating code
@
text
@d15 2
d120 1
a120 1
	«node.metaclass().getQualifiedInterfaceName()» modelElement = («node.metaclass().getQualifiedInterfaceName()») ((org.eclipse.gmf.runtime.notation.View) getModel()).getElement();
d125 1
a125 1
		    «getProcessChangesCall(nextGenFeature, "modelElement")»;
d148 41
@

