head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2008.04.02.18.09.09;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	36f047f3cbc54567;

1.2
date	2008.04.01.18.42.12;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	523c47f282044567;

1.1
date	2008.04.01.17.16.12;	author atikhomirov;	state Exp;
branches;
next	;
commitid	20f147f26ddb4567;


desc
@@


1.3
log
@Minimum/Maximum attributes added for Spin control.
@
text
@/*
 * Copyright (c) 2008 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
«IMPORT "http://www.eclipse.org/gmf/2008/Widget"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«EXTENSION Widgets»

// TODO pass only those widgets that would be accessed from outside
// (i.e. listeners/enablement code) to minimize number of class fields
«DEFINE Fields FOR List[Widget]-»
«FOREACH allWidgets() AS w-»
	private «EXPAND className FOR w» «w.fieldName()»;
«ENDFOREACH»«REM»XXX think of an alternative Button myR1, myR2, myR3 to save some line count«ENDREM»
«ENDDEFINE»

«DEFINE className FOR Widget»«ERROR "Abstract className FOR Widget"»«ENDDEFINE»
«DEFINE className FOR TextEntry»Text«ENDDEFINE»
«DEFINE className FOR CheckBox»Button«ENDDEFINE»
«DEFINE className FOR RadioButton»Button«ENDDEFINE»
«DEFINE className FOR Spin»Spinner«ENDDEFINE»
«DEFINE className FOR Composite»Composite«ENDDEFINE»
«DEFINE className FOR Group»Group«ENDDEFINE»
«DEFINE className FOR Combo»Combo«ENDDEFINE»

«DEFINE Main(String compositeVar, String formToolkit/*var or accessor*/) FOR List[Widget]-»
«EXPAND Visuals(compositeVar, formToolkit) FOREACH this-»
«ENDDEFINE»

«DEFINE ExtraMethods(boolean extendedToolkit, String formToolkitAccess) FOR List[Widget]-»
«IF createsAnyLabel()»
	private org.eclipse.swt.widgets.Label createLabel(org.eclipse.swt.widgets.Composite parent, String label) {
		org.eclipse.swt.widgets.Label l = new org.eclipse.swt.widgets.Label(parent, SWT.NONE);
		if (label != null) l.setText(label);
        «formToolkitAccess».adapt(l, false, false); 
		return l;
	}
«ENDIF-»
«IF !allWidgets().typeSelect(Group).isEmpty() /* the only reason to have that method even with extended toolkit is null check for label*/»
	private org.eclipse.swt.widgets.Group createGroup(org.eclipse.swt.widgets.Composite parent, String label) {
        org.eclipse.swt.widgets.Group g = new org.eclipse.swt.widgets.Group(parent, SWT.SHADOW_NONE);
        if (label != null) g.setText(label);
        «formToolkitAccess».adapt(g, false, false);
        «formToolkitAccess».paintBordersFor(g); 
		return g;
	}
«ENDIF-»
«ENDDEFINE»

/////////////////////////////////////////////////////////////////////////////////
// Create UI elements

// @@param compositeVar, formToolkit - never null
«DEFINE Visuals(String compositeVar, String formToolkit) FOR Widget»«ERROR "abstract Visuals"»«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR TextEntry-»
«IF label != null-»
	createLabel(«compositeVar», "«label»");
«ENDIF-»
	«fieldName()» = «formToolkit».createText(«compositeVar», null);
«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR RadioButton-»
	«fieldName()» = «formToolkit».createButton(«compositeVar», «EXPAND nullOrString(label)», SWT.RADIO);
«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR CheckBox-»
	«fieldName()» = «formToolkit».createButton(«compositeVar», «EXPAND nullOrString(label)», SWT.CHECK);
«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR Spin-»
«IF label != null-»
	createLabel(«compositeVar», "«label»");
«ENDIF-»
	«fieldName()» = new Spinner(«compositeVar», SWT.FLAT);
	«fieldName()».setMinimum(«minimum»);
	«fieldName()».setMaximum(«maximum»);
	«fieldName()».setData(FormToolkit.KEY_DRAW_BORDER, FormToolkit.TEXT_BORDER); // @@see #145837
«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR Composite-»
	«fieldName()» = «formToolkit».createComposite(«compositeVar»);
	«formToolkit».paintBordersFor(«fieldName()»);
	«EXPAND Visuals(fieldName(), formToolkit) FOREACH children-»
	«IF layout != null»«EXPAND Layout::Main(fieldName()) FOR layout»«ENDIF-»
«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR Group-»
	«fieldName()» = createGroup(«compositeVar», «EXPAND nullOrString(label)»);
	«EXPAND Visuals(fieldName(), formToolkit) FOREACH children-»
	«IF layout != null»«EXPAND Layout::Main(fieldName()) FOR layout»«ENDIF-»
«ENDDEFINE»

«DEFINE Visuals(String compositeVar, String formToolkit) FOR Combo-»
«IF label != null-»
	createLabel(«compositeVar», "«label»");
«ENDIF-»
	«fieldName()» = new Combo(«compositeVar», SWT.FLAT | SWT.READ_ONLY);
	«fieldName()».setData(FormToolkit.KEY_DRAW_BORDER, FormToolkit.TEXT_BORDER);
    «formToolkit».adapt(«fieldName()», false, false); 
«ENDDEFINE»

«DEFINE nullOrString(String label) FOR Object»«IF label != null»"«label»"«ELSE»null«ENDIF»«ENDDEFINE»@


1.2
log
@[192711] general forms ui model, Phase I: bring models in, break them according to their function, update templates to reflect updated model structure
@
text
@d84 2
@


1.1
log
@[192711] generalization of propsheet towards common forms UI codegen. Phase I - placeholder project with (not yet refactored) templates.
@
text
@d15 1
a15 1
«EXTENSION widgets::Widgets»
a68 3
«IF layoutData == null && label != null && !{ parent.layout }.typeSelect(GridLayout).isEmpty()-»
	org.eclipse.jface.layout.GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).grab(true, false).apply(«fieldName()»); // temp hack to emulate GridToolkit behaviour
«ELSE»«EXPAND Layout::Data»«ENDIF-»
a72 1
«EXPAND Layout::Data-»
a76 1
«EXPAND Layout::Data-»
a84 1
«EXPAND Layout::Data-»
d91 1
a91 2
	«IF layout != null»«EXPAND Main(fieldName()) FOR layout»«ENDIF-»
«EXPAND Layout::Data-»
d97 1
a97 2
	«IF layout != null»«EXPAND Main(fieldName()) FOR layout»«ENDIF-»
«EXPAND Layout::Data-»
a106 34
«EXPAND Layout::Data-»
«ENDDEFINE»

«REM»
		TODO extract into separate Layout.xpt
«ENDREM»
«DEFINE Main(String compositeVar) FOR Layout»«ERROR "abstract Main FOR Layout"»«ENDDEFINE»

«DEFINE Main(String compositeVar) FOR FormLayout-»
«compositeVar».setLayout(new org.eclipse.swt.layout.FormLayout());
org.eclipse.swt.layout.FormData fd;
«FOREACH data AS fd-»
fd = new org.eclipse.swt.layout.FormData();
«IF fd.left != null»fd.left = «EXPAND x FOR fd.left»;
«ENDIF-»
«IF fd.right != null»fd.right = «EXPAND x FOR fd.right»;
«ENDIF-»
«IF fd.top != null»fd.top = «EXPAND x FOR fd.top»;
«ENDIF-»
«IF fd.bottom != null»fd.bottom = «EXPAND x FOR fd.bottom»;
«ENDIF-»
«fd.widget.fieldName()».setLayoutData(fd);
«ENDFOREACH-»
«ENDDEFINE»

«DEFINE x FOR Attachment-»
«IF control == null»new org.eclipse.swt.layout.FormAttachment(0, «offset»)«ELSE»new org.eclipse.swt.layout.FormAttachment(«control.fieldName()», «offset», SWT.«align.name»)«ENDIF»«ENDDEFINE»

«DEFINE Main(String compositeVar) FOR GridLayout-»
«compositeVar».setLayout(new org.eclipse.swt.layout.GridLayout(«columns», «equalColumns»));
«ENDDEFINE»

«DEFINE Main(String compositeVar) FOR FillLayout-»
«compositeVar».setLayout(new org.eclipse.swt.layout.FillLayout(«IF vertical»SWT.VERTICAL«ENDIF»));
@

