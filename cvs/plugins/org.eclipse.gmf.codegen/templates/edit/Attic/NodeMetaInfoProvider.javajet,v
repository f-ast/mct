head	1.3;
access;
symbols
	v20081022-1925:1.3
	v20081015-1925:1.3
	v20081008-1925:1.3
	v20081001-1925:1.3
	v20080924-1925:1.3
	v20080917-1925:1.3
	v20080911-1728:1.3
	v20080910-1520:1.3
	v20080903-1520:1.3
	v20080827-1520:1.3
	v20080813-1520:1.3
	v20080806-1520:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.3
date	2005.10.04.19.20.27;	author atikhomirov;	state dead;
branches;
next	1.2;

1.2
date	2005.10.04.13.18.07;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.20.29;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.3
log
@get rid of old diagramrt, use o.e.gmf.diagram.notation instead
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.edit" class="NodeMetaInfoProviderGenerator" imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* java.util.* org.eclipse.gmf.codegen.util.ImportUtil"%>
<%GenNode genNode = (GenNode) argument;%>
<%GenDiagram genDiagram = genNode.getDiagram();%>
package <%=genDiagram.getEditProvidersPackageName()%>;
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditProvidersPackageName());%>

import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.gmf.diagramrt.ChildNode;
import org.eclipse.gmf.diagramrt.DiagramNode;
import org.eclipse.gmf.edit.provider.metainfo.MetaInfoProviderAdapter;
import org.eclipse.gmf.edit.provider.metainfo.NodeMetaInfoProvider;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genNode.getMetaInfoProviderClassName()%> extends MetaInfoProviderAdapter implements NodeMetaInfoProvider {

	/**
	 * @@generated
	 */
	public EStructuralFeature getContainmentFeature(DiagramNode node) {
<%
GenFeature genFeature2 = genNode.getContainmentMetaFeature();
String metaPackageInterfaceName2 = importManager.getImportedName(genFeature2.getGenPackage().getQualifiedPackageInterfaceName());
%>
		return <%=metaPackageInterfaceName2%>.eINSTANCE.get<%=genFeature2.getFeatureAccessorName()%>();
	}

	/**
	 * @@generated
	 */
	public EStructuralFeature getContainmentFeature(DiagramNode node, ChildNode childNode) {
<%
for (Iterator it = genNode.getChildNodes().iterator(); it.hasNext();) {
GenChildNode next = (GenChildNode) it.next();
GenFeature genFeature1 = next.getContainmentMetaFeature();
String metaPackageInterfaceName1 = importManager.getImportedName(genFeature1.getGenPackage().getQualifiedPackageInterfaceName());
%>
		if ("<%=next.getGroupID()%>".equals(childNode.getGroupID())) {
			return <%=metaPackageInterfaceName1%>.eINSTANCE.get<%=genFeature1.getFeatureAccessorName()%>();
		}
<%}%>
		return null;
	}

}
<%importManager.emitSortedImports();%>@


1.2
log
@gmfgen ECore references were replaced with GenModel references to ease template coding and as alignment with overall "genmodel for GMF" concept
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d24 1
a24 1
GenFeature genFeature2 = genDiagram.findGenFeature(genNode.getContainmentMetaFeature());
d37 1
a37 1
GenFeature genFeature1 = genDiagram.findGenFeature(next.getContainmentMetaFeature());
@

