head	1.7;
access;
symbols
	v20081022-1925:1.7
	v20081015-1925:1.7
	v20081008-1925:1.7
	v20081001-1925:1.7
	v20080924-1925:1.7
	v20080917-1925:1.7
	v20080911-1728:1.7
	v20080910-1520:1.7
	v20080903-1520:1.7
	v20080827-1520:1.7
	v20080813-1520:1.7
	v20080806-1520:1.7
	v20070608-1300:1.6
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.5
	v20070504-1000:1.5
	v20070427-0600:1.5
	v20070420-1000:1.5
	v20070413-1300:1.5
	v20070405-1100:1.5
	v20070403-1500:1.5
	v20070330-1300:1.5
	v20060330-1300:1.5
	v20070322-1100:1.5
	v20060316-0600:1.5
	v20070307-0700:1.5
	v20070301-1200:1.5
	v20070228-2000:1.5
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.7
date	2007.06.11.13.36.23;	author ashatalin;	state dead;
branches;
next	1.6;
commitid	4172466d4fd34567;

1.6
date	2007.06.06.12.00.09;	author ashatalin;	state Exp;
branches;
next	1.5;
commitid	d7e4666a1c84567;

1.5
date	2007.02.22.19.49.49;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	299645ddf3da4567;

1.4
date	2006.11.08.19.03.14;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.03.20.43.48;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.19.13.50.53;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.17.19.19.54;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[191850] - Convert /navigator/NavigatorActionProvider.javajet template to xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.navigator" class="NavigatorActionProviderGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
importManager.registerInnerClass("OpenFileAction");
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genNavigator.getActionProviderClassName()%> extends <%=importManager.getImportedName("org.eclipse.ui.navigator.CommonActionProvider")%> {

	/**
	 * @@generated
	 */
	private boolean myContribute;

	/**
	 * @@generated
	 */
	private OpenDiagramAction myOpenDiagramAction;

	/**
	 * @@generated
	 */
	public void init(<%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonActionExtensionSite")%> aSite) {
		super.init(aSite);
		if (aSite.getViewSite() instanceof <%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite")%>) {
			myContribute = true;
			makeActions((<%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite")%>) aSite.getViewSite());
		} else {
			myContribute = false;
		}
	}
	
	/**
	 * @@generated
	 */
	private void makeActions(<%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite")%> viewerSite) {
		myOpenDiagramAction = new OpenDiagramAction(viewerSite);
	}

	/**
	 * @@generated
	 */
	public void fillActionBars(<%=importManager.getImportedName("org.eclipse.ui.IActionBars")%> actionBars) {
		if (!myContribute) {
			return;
		}
		<%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> selection = (<%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%>) getContext().getSelection();
		myOpenDiagramAction.selectionChanged(selection);
		if (myOpenDiagramAction.isEnabled()) {
			actionBars.setGlobalActionHandler(<%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonActionConstants")%>.OPEN, myOpenDiagramAction);
		}
	}

	/**
	 * @@generated
	 */
	public void fillContextMenu(<%=importManager.getImportedName("org.eclipse.jface.action.IMenuManager")%> menu) {
<%
/*
 * Put following code into the template to generate popup menu
 *
		if (!myContribute || getContext().getSelection().isEmpty()) {
			return;
		}

		< %=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")% > selection = (< %=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")% >) getContext().getSelection();

		myOpenDiagramAction.selectionChanged(selection);
		if (myOpenDiagramAction.isEnabled()) {
			menu.insertAfter(< %=importManager.getImportedName("org.eclipse.ui.navigator.ICommonMenuConstants")% >.GROUP_OPEN, myOpenDiagramAction);
		}*/%>		
	}
	
	/**
	 * @@generated
	 */
	private class OpenDiagramAction extends <%=importManager.getImportedName("org.eclipse.jface.action.Action")%> {
	
		/**
		 * @@generated
		 */
		private <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram")%> myDiagram;
		
		/**
		 * @@generated
		 */
		private <%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite")%> myViewerSite;
	
		/**
		 * @@generated
		 */
		public OpenDiagramAction(<%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonViewerWorkbenchSite")%> viewerSite) {
			super("Open Diagram");
			myViewerSite = viewerSite;
		}

		/**
		 * @@generated
		 */
		public final void selectionChanged(<%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> selection) {
			myDiagram = null;
			if (selection.size() == 1) {
				Object selectedElement = selection.getFirstElement();
				if (selectedElement instanceof <%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) {
					selectedElement = ((<%=importManager.getImportedName(genNavigator.getNavigatorItemQualifiedClassName())%>) selectedElement).getView();
				} else if (selectedElement instanceof <%=importManager.getImportedName("org.eclipse.core.runtime.IAdaptable")%>) {
					selectedElement = ((<%=importManager.getImportedName("org.eclipse.core.runtime.IAdaptable")%>) selectedElement).getAdapter(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>.class);
				}
				if (selectedElement instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram")%>) {
					<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram")%> diagram = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram")%>) selectedElement;
					if (<%=importManager.getImportedName(genDiagram.getEditPartQualifiedClassName())%>.MODEL_ID.equals(<%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.getModelID(diagram))) {
						myDiagram = diagram;
					}
				}
			}
			setEnabled(myDiagram != null);
		}

		/**
		 * @@generated
		 */
		public void run() {
			if (myDiagram == null || myDiagram.eResource() == null) {
				return;
			}
			
			<%=importManager.getImportedName("org.eclipse.ui.IEditorInput")%> editorInput = getEditorInput();
			<%=importManager.getImportedName("org.eclipse.ui.IWorkbenchPage")%> page = myViewerSite.getPage();
		 	try {
				page.openEditor(editorInput, <%=importManager.getImportedName(genNavigator.getEditorGen().getEditor().getQualifiedClassName())%>.ID);
			} catch (<%=importManager.getImportedName("org.eclipse.ui.PartInitException")%> e) {
				<%=importManager.getImportedName(genNavigator.getEditorGen().getPlugin().getActivatorQualifiedClassName())%>.getInstance().logError("Exception while openning diagram", e);
			}
		}
		
		/**
		 * @@generated
		 */
		private <%=importManager.getImportedName("org.eclipse.ui.IEditorInput")%> getEditorInput() {
<%if (genDiagram.getEditorGen().getApplication() == null) {%>
			for (<%=importManager.getImportedName("java.util.Iterator")%> it = myDiagram.eResource().getContents().iterator(); it.hasNext();) {
				<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextEObject = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) it.next();
				if (nextEObject == myDiagram) {
					return new <%=importManager.getImportedName("org.eclipse.ui.part.FileEditorInput")%>(<%=importManager.getImportedName("org.eclipse.emf.workspace.util.WorkspaceSynchronizer")%>.getFile(myDiagram.eResource()));
				}
				if (nextEObject instanceof Diagram) {
					break;
				}
			}
<%}%>
<%
	/*
	Same code as in OpenDiagram.xpt
	 */
%>
			<%=importManager.getImportedName("org.eclipse.emf.common.util.URI")%> uri = <%=importManager.getImportedName("org.eclipse.emf.ecore.util.EcoreUtil")%>.getURI(myDiagram);
			String editorName = uri.lastSegment() + "#" + myDiagram.eResource().getContents().indexOf(myDiagram); //$NON-NLS-1$
			return new <%=importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput")%>(uri, editorName);
		}
		
	}

}
<%importManager.emitSortedImports();%>
@


1.6
log
@[184195] - Make use of new URIEditorInput(String) constructor in generated code
@
text
@@


1.5
log
@[175169] - Double-click on diagram in Project Explorer should open corresponding diagram editor as before
@
text
@a148 1
			<%=importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource")%> diagramResource = myDiagram.eResource();
d150 1
a150 1
			for (<%=importManager.getImportedName("java.util.Iterator")%> it = diagramResource.getContents().iterator(); it.hasNext();) {
d153 1
a153 1
					return new <%=importManager.getImportedName("org.eclipse.ui.part.FileEditorInput")%>(<%=importManager.getImportedName("org.eclipse.emf.workspace.util.WorkspaceSynchronizer")%>.getFile(diagramResource));
d160 8
a167 1
			return new <%=importManager.getImportedName("org.eclipse.emf.common.ui.URIEditorInput")%>(diagramResource.getURI().appendFragment(diagramResource.getURIFragment(myDiagram)));
@


1.4
log
@Removing commented out code.
@
text
@d132 1
a132 1
			if (myDiagram == null) {
d135 2
a136 1
			<%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput")%> editorInput = new <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditorInput")%>(myDiagram);
d145 19
@


1.3
log
@Refactoring navigator to support cross-diagram shortcuts.
@
text
@d67 5
a71 1
/*		if (!myContribute || getContext().getSelection().isEmpty()) {
d75 1
a75 1
		<%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%> selection = (<%=importManager.getImportedName("org.eclipse.jface.viewers.IStructuredSelection")%>) getContext().getSelection();
d79 2
a80 2
			menu.insertAfter(<%=importManager.getImportedName("org.eclipse.ui.navigator.ICommonMenuConstants")%>.GROUP_OPEN, myOpenDiagramAction);
		}*/
@


1.2
log
@Read-onlyness of property view is guaranteed by content provider.
@
text
@d111 2
@


1.1
log
@Open action for diagram nodes in Navigator added.
@
text
@d134 1
a134 1
				<%=importManager.getImportedName(genNavigator.getEditorGen().getPlugin().getActivatorQualifiedClassName())%>.getInstance().logError("Exceptino while openning diagram", e);
@

