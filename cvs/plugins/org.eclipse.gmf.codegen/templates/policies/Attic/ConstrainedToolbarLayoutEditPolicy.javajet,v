head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2006.03.14.14.01.57;	author dstadnik;	state dead;
branches;
next	1.1;

1.1
date	2006.03.13.11.02.30;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.2
log
@skip CTLEP generation
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.policies" class="ConstrainedToolbarLayoutEditPolicyGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.*"%>
<%
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
%>
<%@@ include file="../copyright4java.jetinc"%>
package <%=genDiagram.getEditPoliciesPackageName()%>;

import org.eclipse.gef.EditPart;
import org.eclipse.gef.EditPolicy;
import <%=genDiagram.getEditPartsPackageName()%>.ITextAwareEditPart;
import org.eclipse.gmf.runtime.diagram.ui.internal.editpolicies.TextSelectionEditPolicy;

/**
 * @@generated
 */
public class ConstrainedToolbarLayoutEditPolicy	extends org.eclipse.gmf.runtime.diagram.ui.editpolicies.ConstrainedToolbarLayoutEditPolicy {

	/**
	 * @@generated
	 */
	protected EditPolicy createChildEditPolicy(EditPart child) {
		if( child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE) == null )
		{
			if (child instanceof ITextAwareEditPart)
				return new TextSelectionEditPolicy();
		}
		return super.createChildEditPolicy(child);
	}
}
@


1.1
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@@

