head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20081015-1925:1.10
	v20081008-1925:1.10
	v20081001-1925:1.10
	v20080924-1925:1.10
	v20080917-1925:1.10
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.10
	v20080806-1520:1.10
	R1_0_maintenance:1.10.0.2
	R1_0:1.10
	I20060317-1300:1.9
	I20060317-1200:1.9
	I20060316-1300:1.9
	I20060309-1300:1.9
	M5_10:1.9
	S20060303-1600:1.9
	I20060227-1730:1.8
	I20060216-1945:1.8
	I20060210-1715:1.8
	I20060209-1815:1.8
	I20060203-0830:1.6
	I20060202-1415:1.6
	I20060129-1145:1.6
	I20060127-0900:1.6
	I20060120-1530:1.5
	I20060113-1700:1.5
	M4_10:1.5
	I20060107-1100:1.5
	I20060105-1630:1.5
	I20051230-1230:1.5
	I20051223-1100:1.5
	I20051217-0925:1.5
	I20051208-2000:1.3
	I20051201-1800:1.2
	I20051124-2000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2006.03.19.16.57.17;	author ashatalin;	state dead;
branches;
next	1.9;

1.9
date	2006.03.01.19.58.25;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.08.13.09.28;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.06.11.52.36;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.25.11.55.43;	author ashatalin;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.12.13.54.08;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.10.14.59.33;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.07.17.07.00;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.29.16.42.28;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.23.10.11.53;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.10
log
@#128024 Model references are not recognized as links
#131543 Obsolete code should be eliminated
@
text
@
		/**
		 * @@generated
		 */
		protected <%=importManager.getImportedName("java.util.List")%> getSemanticChildrenList() {
			List result = new <%=importManager.getImportedName("java.util.LinkedList")%>();
<%
if (genNodes.size() > 0) {
	String modelElementInterfaceName = importManager.getImportedName(modelElementInterface.getQualifiedInterfaceName());
%>
			<%=modelElementInterfaceName%> modelElement = (<%=modelElementInterfaceName%>) ((View) getHost().getModel()).getElement();
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextValue;
			int nodeVID;
<%
}
%>
<%
for (Iterator it = genNodes.iterator(); it.hasNext();) {
	GenNode nextNode = (GenNode) it.next();
	TypeModelFacet typeModelFacet = nextNode.getModelFacet();
	if (typeModelFacet.isPhantomElement()) {
		continue;
	}
	GenFeature childMetaFeature = typeModelFacet.getChildMetaFeature();
	if (childMetaFeature.isListType()) {
%>	
			for (<%=importManager.getImportedName("java.util.Iterator")%> it = <%=getFeatureValueGetter("modelElement", childMetaFeature, false, importManager)%>.iterator(); it.hasNext();) {
				nextValue = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) it.next();
<%
	} else {
%>
			nextValue = <%=getFeatureValueGetter("modelElement", childMetaFeature, false, importManager)%>;
<%
	}
%>
			nodeVID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getNodeVisualID((View) getHost().getModel(), nextValue, "");
			if (<%=nextNode.getVisualID()%> == nodeVID) {
				result.add(nextValue);
			}
<%
	if (childMetaFeature.isListType()) {
%>
			}
<%
	}
}
%>			
			return result;
		}
		
		/**
		 * @@generated
		 */
		protected boolean shouldDeleteView(View view) {
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> domainModelElement = view.getElement();
			return domainModelElement != null && domainModelElement != ((View) getHost().getModel()).getElement() && super.shouldDeleteView(view);
		}@


1.9
log
@#130014 Diagram elements created by CanonicalEditPolicy should not disappear on diagram reopenning
@
text
@@


1.8
log
@#126896
generating CanonicalEditPolicy for visualizing containment reference as diagram link.
@
text
@d57 1
a57 1
		}
@


1.7
log
@#126537
Possibility to visualize child-parent relachipchip as a link implemented
@
text
@a5 1
			<%=modelElementInterfaceName%> modelElement = (<%=modelElementInterfaceName%>) ((View) getHost().getModel()).getElement();
d9 1
d11 1
d55 1
a55 1
			EObject domainModelElement = view.getElement();
@


1.6
log
@#124784
@
text
@d20 3
@


1.5
log
@Correcting shouldDeleteView() method to call super implementation.
@
text
@d51 2
a52 1
			return view.getElement() != ((View) getHost().getModel()).getElement() && super.shouldDeleteView(view);
@


1.4
log
@#118059
- ChildNodes could be places directly inside the node, without compartment
- XY layout is possible for Gen*Nodes
@
text
@d51 1
a51 1
			return view.getElement() != ((View) getHost().getModel()).getElement();
@


1.3
log
@Not finished: childnodes could be contained in node, not only in compartment.
@
text
@a6 8
<%
/**
 * [++]
 * This code was added to sate visual element without underlying semanti one
 * see http://www.eclipse.org/newsportal/article.php?id=536&group=eclipse.technology.gmf#536
 * for the details
 */
%>
a7 12
			for (<%=importManager.getImportedName("java.util.Iterator")%> it = getViewChildren().iterator(); it.hasNext();) {
				View nextView = (View) it.next();
				if (nextView.getElement() == modelElement) {
					result.add(modelElement);
				}
			}
<%
/**
 * [--]
 */
%>

d46 7
@


1.2
log
@Copilation error corrected in case of multiplicity = 1
@
text
@d5 1
a5 1
		protected <%=importManager.getImportedName("java.util.List")%> getSemanticChildrenList() {	
d7 8
d16 12
a27 1
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextValue;
d31 1
@


1.1
log
@#117660 move canonical edit policy into separate class to shorten it's file name
@
text
@d10 7
d32 1
a32 1
			int nodeVID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getNodeVisualID((View) getHost().getModel(), nextValue, "");
@

