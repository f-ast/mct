head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20061218-1200:1.4
	v20061214-0000:1.4
	v20061120-1300:1.4
	M3_20:1.4
	v20061117-0800:1.4
	v20061013-1330:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2006.12.18.18.20.51;	author dstadnik;	state dead;
branches;
next	1.4;
commitid	7d774586dbfa4567;

1.4
date	2006.10.09.16.07.49;	author dstadnik;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.04.16.43.41;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.03.08.16.50;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.03.08.05.55;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.5
log
@rewrite application templates in xpand; simplify genmodel
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.application" class="WorkbenchWindowAdvisorGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenApplication application = (GenApplication) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.swt.graphics.Point;
import org.eclipse.ui.application.ActionBarAdvisor;
import org.eclipse.ui.application.IActionBarConfigurer;
import org.eclipse.ui.application.IWorkbenchWindowConfigurer;
import org.eclipse.ui.application.WorkbenchWindowAdvisor;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=importManager.getCompilationUnitName()%> extends WorkbenchWindowAdvisor {

	/**
	 * @@generated
	 */
	public <%=importManager.getCompilationUnitName()%>(IWorkbenchWindowConfigurer configurer) {
		super(configurer);
	}

	/**
	 * @@generated
	 */
	public ActionBarAdvisor createActionBarAdvisor(IActionBarConfigurer configurer) {
		return new <%=importManager.getImportedName(application.getActionBarAdvisorQualifiedClassName())%>(configurer);
	}

	/**
	 * @@generated
	 */
	public void preWindowOpen() {
		IWorkbenchWindowConfigurer configurer = getWindowConfigurer();
		configurer.setInitialSize(new Point(1000, 700));
		configurer.setShowCoolBar(false);
		configurer.setTitle("<%=application.getTitle()%>");
	}
}
<%importManager.emitSortedImports();%>
@


1.4
log
@use generic getCompilationUnitName() call
@
text
@@


1.3
log
@#114200 provide common menu items
@
text
@d20 1
a20 1
public class <%=application.getWorkbenchWindowAdvisorClassName()%> extends WorkbenchWindowAdvisor {
d25 1
a25 1
	public <%=application.getWorkbenchWindowAdvisorClassName()%>(IWorkbenchWindowConfigurer configurer) {
@


1.2
log
@#114200 add 'title' property for the RCP application
@
text
@d41 1
a41 1
		configurer.setInitialSize(new Point(400, 300));
a42 1
		configurer.setShowStatusLine(false);
@


1.1
log
@#114200 generate RCP specific classes
@
text
@d44 1
a44 1
		configurer.setTitle("<%=application.getEditorGen().getModelID()%> Application");
@

