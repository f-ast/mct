head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20061218-1200:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.12.18.18.20.51;	author dstadnik;	state dead;
branches;
next	1.3;
commitid	7d774586dbfa4567;

1.3
date	2006.10.09.16.07.49;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.04.16.43.41;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.03.08.05.55;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.4
log
@rewrite application templates in xpand; simplify genmodel
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.application" class="WorkbenchAdvisorGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenApplication application = (GenApplication) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.ui.application.IWorkbenchConfigurer;
import org.eclipse.ui.application.IWorkbenchWindowConfigurer;
import org.eclipse.ui.application.WorkbenchAdvisor;
import org.eclipse.ui.application.WorkbenchWindowAdvisor;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=importManager.getCompilationUnitName()%> extends WorkbenchAdvisor {

	/**
	 * @@generated
	 */
	public static final String PERSPECTIVE_ID = "<%=application.getPerspectiveId()%>"; //$NON-NLS-1$

	/**
	 * @@generated
	 */
	public String getInitialWindowPerspectiveId() {
		return PERSPECTIVE_ID;
	}

	/**
	 * @@generated
	 */
	public void initialize(IWorkbenchConfigurer configurer) {
		super.initialize(configurer);
		configurer.setSaveAndRestore(true);
	}

	/**
	 * @@generated
	 */
	public WorkbenchWindowAdvisor createWorkbenchWindowAdvisor(IWorkbenchWindowConfigurer configurer) {
		return new <%=importManager.getImportedName(application.getWorkbenchWindowAdvisorQualifiedClassName())%>(configurer);
	}
}
<%importManager.emitSortedImports();%>
@


1.3
log
@use generic getCompilationUnitName() call
@
text
@@


1.2
log
@#114200 provide common menu items
@
text
@d19 1
a19 1
public class <%=application.getWorkbenchAdvisorClassName()%> extends WorkbenchAdvisor {
@


1.1
log
@#114200 generate RCP specific classes
@
text
@d10 1
d24 1
a24 1
	private static final String PERSPECTIVE_ID = "<%=application.getPerspectiveId()%>"; //$NON-NLS-1$
d36 8
@

