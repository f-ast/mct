head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080930-1130:1.5
	v20080926-1245:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	v20080722-1827:1.5
	v20080718-1731:1.5
	v20080716-1600:1.5
	v20080716-1642:1.5
	R2_1_maintenance:1.5.0.2
	Root_R2_1_maintenance:1.5
	R2_1_0:1.5
	v20080610-1132:1.5
	v20080603-1553:1.5
	v20080528-1052:1.5
	v20080521:1.5
	v20080516-1543:1.5
	v20080516-1143:1.5
	v20080512-1200:1.5
	v20080508-2000:1.5
	v20080507-1326:1.5
	v20080503-1740:1.4
	v20080501-1739:1.4
	v20080425-1959:1.4
	v20080417-1610:1.4
	v20080411-0411:1.3
	v20080404-1111:1.3
	v20080322-0000:1.3
	v20080222-1200:1.3
	v20080215-1500:1.3
	v20080207-0207:1.3
	v20071222-1111:1.3
	v20071214-1111:1.3
	v20071130-1111:1.3
	v20071124-0000:1.3
	v20071112-0000:1.3
	v20071108-0000:1.3
	v20071003-0000:1.3
	v20070928-0000:1.3
	v20070921-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.3
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070605-1400:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.2
	v20070413-1300:1.2
	v20070405-1100:1.2
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070301-1200:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	39124821b4de4567;

1.4
date	2008.04.14.08.38.03;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	1b0e480317df4567;

1.3
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	2591464e17d14567;

1.2
date	2007.02.08.18.06.51;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	56b45cb66aa4567;

1.1
date	2007.02.07.00.52.33;	author atikhomirov;	state Exp;
branches;
next	;
commitid	140645c922d04567;


desc
@@


1.5
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::GenAuditRoot»

«DEFINE extensions FOR gmfgen::GenEditorGenerator-»
«IF hasAudits()»«EXPAND extensions FOR audits»«ENDIF-»
«ENDDEFINE»

«DEFINE extensions FOR gmfgen::GenAuditRoot-»
«EXPAND extensions_emfv_constraintProviders»
«EXPAND extensions_emfv_constraintBindings»
«EXPAND extensions_emfv_uiContexts»
«ENDDEFINE»

//
// Extension point: org.eclipse.emf.validation.constraintProviders
//
«DEFINE extensions_emfv_constraintProviders FOR GenAuditRoot-»
   <extension point="org.eclipse.emf.validation.constraintProviders">
      «EXPAND xpt::Common::xmlGeneratedTag»
      «EXPAND declareCategory FOREACH categories-»
      <constraintProvider cache="true">
«FOREACH getAllTargetedModelPackages() AS p-»
         <package namespaceUri="«p.ecorePackage.nsURI»"/>
«ENDFOREACH-»
      «EXPAND defineCategory FOREACH categories-»
      </constraintProvider>
   </extension>
«ENDDEFINE»

//
// Extension point: org.eclipse.emf.validation.constraintBindings
//
«DEFINE extensions_emfv_constraintBindings FOR GenAuditRoot-»
   <extension point="org.eclipse.emf.validation.constraintBindings">
      «EXPAND xpt::Common::xmlGeneratedTag»
«FOREACH clientContexts AS ctx-»
      <clientContext default="false" id="«getQualifiedIdentity(ctx)»">
         <selector class="«ctx.getQualifiedClassName()»"/>
      </clientContext>
      <binding context="«getQualifiedIdentity(ctx)»">
         «FOREACH rules.select(r | r.target != null && r.target.contextSelector == ctx) /*alternative: ctx.ruleTargets.contains(r.target)*/ AS rule-»
         <constraint ref="«editorGen.plugin.iD».«escapeXML(rule.id)»"/>
         «ENDFOREACH-»
      </binding>

«ENDFOREACH-»
   </extension>
«ENDDEFINE»

//
// Extension point: org.eclipse.emf.validation.ui.UIRegisteredClientContext
//
«DEFINE extensions_emfv_uiContexts FOR GenAuditRoot-»
«IF editorGen.diagram.liveValidationUIFeedback»
   <extension point="org.eclipse.emf.validation.ui.UIRegisteredClientContext">
      «EXPAND xpt::Common::xmlGeneratedTag»
«FOREACH clientContexts AS ctx-»
      <clientContext id="«getQualifiedIdentity(ctx)»"/>
«ENDFOREACH-»
   </extension>
«ENDIF-»
«ENDDEFINE»

«DEFINE declareCategory FOR gmfgen::GenAuditContainer-»
      <category id="«EXPAND _pathMap»" mandatory="false" name="«IF name != null»«escapeXML(name)»«ELSE»«EXPAND _pathMap»«ENDIF»">
         <![CDATA[«description != null ? description : ""»]]>
      </category>
«ENDDEFINE»

«DEFINE defineCategory FOR gmfgen::GenAuditContainer-»
         <constraints categories="«EXPAND _pathMap»">
         «FOREACH audits.select(a | a.target != null && a.target.getTargetClass() != null) AS audit-»
         <constraint id="«escapeXML(audit.id)»"
            «IF audit.requiresConstraintAdapter»lang="Java" class="«audit.getConstraintAdapterQualifiedClassName()»"«ELSE»lang="OCL"«ENDIF»
            name="«escapeXML(audit.name != null ? audit.name : audit.id)»"
            mode="«IF audit.useInLiveMode»Live«ELSE»Batch«ENDIF»"
            severity="«audit.severity.name»" statusCode="200">
            «IF !audit.requiresConstraintAdapter»<![CDATA[«audit.rule != null ? audit.rule.body : ""»]]>«ENDIF»
            <description><![CDATA[«audit.description != null ? audit.description : ""»]]></description>
            <message><![CDATA[«IF audit.message != null»«audit.message»«ELSE»«audit.name != null ? audit.name : audit.id» audit violated«ENDIF»]]></message>
            <target class="«audit.target.getTargetClassModelQualifiedName()»"/>
         </constraint>
         «ENDFOREACH-»
         </constraints>
«ENDDEFINE»

«DEFINE _pathMap FOR gmfgen::GenAuditContainer»«FOREACH path AS p SEPARATOR "/" »«escapeXML(p.id)»«ENDFOREACH»«ENDDEFINE»
@


1.4
log
@[226149] Refactor Validation/Constraints: explicit context groupings instead of ID matching, unused IClientSelectors implementations are no longer generated, less custom code in the model, odd approach with map (semanticCtxIdMap) replaced with in-place VisualID check.
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d21 9
d40 1
d42 4
d48 3
a50 4
      «LET getAllRulesWithTargetAndContextID() AS rules-»
      «FOREACH rules.collect(r | r.target.getClientContextID()).toSet() AS ctxId-»
      <clientContext default="false" id="«editorGen.plugin.iD».«ctxId»">
         <selector class="«rules.select(r | r.target.getClientContextID() == ctxId).getContextSelectorQualifiedClassName().first()»"/>
d52 2
a53 2
      <binding context="«editorGen.plugin.iD».«ctxId»">
         «FOREACH rules.select(r | r.target.getClientContextID() == ctxId) AS rule-»
d57 2
a58 2
      «ENDFOREACH-»
      «ENDLET-»
d60 6
d69 3
a71 3
      «FOREACH getAllRulesWithTargetAndContextID().collect(r | r.target.getClientContextID()).toSet() AS ctxId»
      <clientContext id="«editorGen.plugin.iD».«ctxId»"/>
      «ENDFOREACH-»
@


1.2
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d12 1
a12 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@complete migration of plugin.xml template to xpand version - lite version updated to use same template
@
text
@d14 1
a14 1
«EXTENSION xpt::diagram::Utils»
d17 4
a20 1
«IF hasAudits()-»
d23 1
a23 5
      «FOREACH audits.getAllAuditContainers() AS c-»
      <category id="«EXPAND _pathMap FOR c»" mandatory="false" name="«IF c.name != null»«escapeXML(c.name)»«ELSE»«EXPAND _pathMap FOR c»«ENDIF»">
         <![CDATA[«c.description != null ? c.description : ""»]]>
      </category>
      «ENDFOREACH»
d25 1
a25 1
«FOREACH audits.getAllTargetedModelPackages() AS p-»
d28 1
a28 16
«FOREACH audits.getAllAuditContainers() AS c-»
         <constraints categories="«EXPAND _pathMap FOR c»">
         «FOREACH c.audits.select(a | a.target != null && a.target.getTargetClass() != null) AS audit-»
         <constraint id="«escapeXML(audit.id)»"
            «IF audit.requiresConstraintAdapter»lang="Java" class="«audit.getConstraintAdapterQualifiedClassName()»"«ELSE»lang="OCL"«ENDIF»
            name="«escapeXML(audit.name != null ? audit.name : audit.id)»"
            mode="«IF audit.useInLiveMode»Live«ELSE»Batch«ENDIF»"
            severity="«audit.severity.name»" statusCode="200">
            «IF !audit.requiresConstraintAdapter»<![CDATA[«audit.rule != null ? audit.rule.body : ""»]]>«ENDIF»
            <description><![CDATA[«audit.description != null ? audit.description : ""»]]></description>
            <message><![CDATA[«IF audit.message != null»«audit.message»«ELSE»«audit.name != null ? audit.name : audit.id» audit violated«ENDIF»]]></message>
            <target class="«audit.target.getTargetClassModelQualifiedName()»"/>
         </constraint>
         «ENDFOREACH-»
         </constraints>
«ENDFOREACH-»
d34 1
a34 1
      «LET getAllRulesWithTargetAndContextID(audits) AS rules-»
d36 1
a36 1
      <clientContext default="false" id="«plugin.iD».«ctxId»">
d39 1
a39 1
      <binding context="«plugin.iD».«ctxId»">
d41 1
a41 1
         <constraint ref="«plugin.iD».«escapeXML(rule.id)»"/>
d47 1
a47 1
«IF diagram.liveValidationUIFeedback»
d50 2
a51 2
      «FOREACH getAllRulesWithTargetAndContextID(audits).collect(r | r.target.getClientContextID()).toSet() AS ctxId»
      <clientContext id="«plugin.iD».«ctxId»"/>
a54 1
«ENDIF-»
d57 24
a80 1
«DEFINE _pathMap FOR gmfgen::GenAuditContainer»«FOREACH getPath() AS p SEPARATOR "/" »«escapeXML(idMap(p))»«ENDFOREACH»«ENDDEFINE»
@

