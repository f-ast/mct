head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20070221-1500:1.5
	v20070208-1800:1.5;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.02.22.19.49.49;	author ashatalin;	state dead;
branches;
next	1.5;
commitid	299645ddf3da4567;

1.5
date	2007.02.08.19.07.09;	author ashatalin;	state Exp;
branches;
next	1.4;
commitid	6ed845cb74dc4567;

1.4
date	2007.02.07.12.05.15;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	37da45c9c07a4567;

1.3
date	2007.02.02.12.48.04;	author ashatalin;	state Exp;
branches;
next	1.2;
commitid	569345c333034567;

1.2
date	2007.01.30.16.42.29;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	4e0e45bf75734567;

1.1
date	2007.01.29.14.20.30;	author dstadnik;	state Exp;
branches;
next	;
commitid	69ed45be02ac4567;


desc
@@


1.6
log
@[175169] - Double-click on diagram in Project Explorer should open corresponding diagram editor as before
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE className FOR gmfgen::GenDiagram»URIDiagramDocumentProvider«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«editorGen.editor.packageName».«EXPAND className»«ENDDEFINE»

«DEFINE URIDiagramDocumentProvider FOR gmfgen::GenEditorView-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className FOR editorGen.diagram» extends org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.AbstractDocumentProvider implements org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocumentProvider {

	«EXPAND createElementInfo FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::disposeElementInfo FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::createInputWithEditingDomain FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::getDiagramDocument FOR editorGen.diagram-»
	
	«EXPAND createDocument FOR editorGen.diagram-»
	
	«EXPAND setDocumentContent FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::setupDocument FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::createEmptyDocument FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::createEditingDomain FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::getResourceSetInfo FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::doSaveDocument FOR editorGen.diagram-»

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean isDeleted(Object element) {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			java.io.File file = getFile((org.eclipse.emf.common.ui.URIEditorInput) element);
			return file != null && !file.exists();
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean isReadOnly(Object element) {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			java.io.File file = getFile((org.eclipse.emf.common.ui.URIEditorInput) element);
			if (file != null && file.exists()) {
				return !file.canWrite();
			}
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean isModifiable(Object element) {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			java.io.File file = getFile((org.eclipse.emf.common.ui.URIEditorInput) element);
			if (file != null && file.exists()) {
				return file.canWrite();
			}
		}
		return true;
	}

	«EXPAND getFileFromURIEditorInput FOR editorGen.diagram-»
	
	«EXPAND getFileFromURI FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::getOperationRunner FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::computeModificationStamp FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::handleElementChanged FOR editorGen.diagram-»

	«EXPAND handleElementMoved FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::isSynchronized FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::ResourceSetInfo::ResourceSetInfo FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::ResourceSetModificationListener::ResourceSetModificationListener FOR editorGen.diagram-»
	
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE createElementInfo FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected ElementInfo createElementInfo(Object element) throws org.eclipse.core.runtime.CoreException {
	«EXPAND checkEditorInputInstance-»
	«EXPAND xpt::editor::DocumentProvider::createElementInfoBody-»
}
«ENDDEFINE»

«DEFINE checkEditorInputInstance FOR gmfgen::GenDiagram-»
if (false == element instanceof «EXPAND editorInputClassFQName») {
	throw new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, «editorGen.plugin.getActivatorQualifiedClassName()».ID, 0, "Incorrect element used: " + element + " instead of org.eclipse.emf.common.ui.URIEditorInput", null)); //$NON-NLS-1$ //$NON-NLS-2$
}
«ENDDEFINE»

«DEFINE editorInputClassFQName FOR gmfgen::GenDiagram»org.eclipse.emf.common.ui.URIEditorInput«ENDDEFINE»

«DEFINE createDocument FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument createDocument(Object element) throws org.eclipse.core.runtime.CoreException {
	«EXPAND checkEditorInputInstance-»
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document = createEmptyDocument();
	setDocumentContent(document, («EXPAND editorInputClassFQName») element);
	setupDocument(element, document);
	return document;
}
«ENDDEFINE»

«DEFINE setDocumentContent FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void setDocumentContent(org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document, org.eclipse.ui.IEditorInput element) throws org.eclipse.core.runtime.CoreException {
	«EXPAND checkEditorInputInstance-»
	org.eclipse.emf.common.util.URI uri = ((«EXPAND editorInputClassFQName») element).getURI();
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument diagramDocument = (org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) document;
	org.eclipse.emf.transaction.TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
	org.eclipse.emf.ecore.resource.Resource resource = null;
	try {
		resource = domain.getResourceSet().getResource(uri.trimFragment(), false);
		if (resource == null) {
			resource = domain.getResourceSet().createResource(uri.trimFragment());
		}
		if (!resource.isLoaded()) {
			try {
				java.util.Map options = new java.util.HashMap(org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory.getDefaultLoadOptions());
				// @@see 171060 
				// options.put(org.eclipse.emf.ecore.xmi.XMLResource.OPTION_RECORD_UNKNOWN_FEATURE, Boolean.TRUE);
				resource.load(options);
			} catch (java.io.IOException e) {
				resource.unload();
				throw e;
			}
		}
		if (resource == null) {
			throw new RuntimeException("Unable to load diagram resource");
		}
		if (uri.fragment() != null) {
			org.eclipse.emf.ecore.EObject rootElement = resource.getEObject(uri.fragment());
			if (rootElement instanceof org.eclipse.gmf.runtime.notation.Diagram) {
				document.setContent((org.eclipse.gmf.runtime.notation.Diagram) rootElement);
				return;
			}
		} else {
			for (java.util.Iterator it = resource.getContents().iterator(); it.hasNext();) {
				Object rootElement = it.next();
				if (rootElement instanceof org.eclipse.gmf.runtime.notation.Diagram) {
					document.setContent((org.eclipse.gmf.runtime.notation.Diagram) rootElement);
					return;
				}
			}
		}
		throw new RuntimeException("Diagram is not present in resource");
	} catch (Exception e) {
		org.eclipse.core.runtime.CoreException thrownExcp = null;
		if (e instanceof org.eclipse.core.runtime.CoreException) {
			thrownExcp = (org.eclipse.core.runtime.CoreException) e;
		} else {
			String msg = e.getLocalizedMessage();
			thrownExcp = new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, «editorGen.plugin.getActivatorQualifiedClassName()».ID, 0, msg != null ? msg : "Error loading diagram", e)); //$NON-NLS-1$
		}
		throw thrownExcp;
	}
}
«ENDDEFINE»

«DEFINE handleElementMoved FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void handleElementMoved(org.eclipse.ui.IEditorInput input, org.eclipse.emf.common.util.URI uri) {
	// TODO: append suffix to the URI! (use diagram as a parameter)
	fireElementMoved(input, new org.eclipse.emf.common.ui.URIEditorInput(uri));
}
«ENDDEFINE»

«DEFINE getFileFromURIEditorInput FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
public static java.io.File getFile(org.eclipse.emf.common.ui.URIEditorInput input) {
	return getFile(input.getURI().trimFragment());
}
«ENDDEFINE»

«DEFINE getFileFromURI FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
public static java.io.File getFile(org.eclipse.emf.common.util.URI resourceUri) {
	if (resourceUri != null && resourceUri.isFile()) {
		java.io.File file = new java.io.File(resourceUri.toFileString());
		if (!file.isDirectory()) {
			return file;
		}
	}
	return null;
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenEditorView-»
«ENDDEFINE»@


1.5
log
@Refactoring DocumentProvider.
@
text
@@


1.4
log
@Removing *EditorInputProxies - only EditorInputs are used in generated code from now.
@
text
@d27 1
a27 2
	«EXPAND xpt::Common::generatedClassComment»
	protected class URIElementInfo extends ElementInfo {
d29 1
a29 45
		«EXPAND xpt::Common::generatedMemberComment»
		public org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramModificationListener listener;

		«EXPAND xpt::Common::generatedMemberComment»
		public URIElementInfo(org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document, org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramModificationListener listener) {
			super(document);
			this.listener = listener;
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected ElementInfo createElementInfo(Object element) throws org.eclipse.core.runtime.CoreException {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document = null;
			org.eclipse.core.runtime.IStatus status = null;
			try {
				document = createDocument(element);
			} catch (org.eclipse.core.runtime.CoreException x) {
				«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Error creating document from uri", x);
				status = x.getStatus();
				document = createEmptyDocument();
			}
			ElementInfo info = createNewElementInfo(document);
			info.fStatus = status;
			return info;
		}
		return super.createElementInfo(element);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public ElementInfo createNewElementInfo(org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document) {
		org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramModificationListener listener = new org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramModificationListener(this, (org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramDocument) document);
		URIElementInfo info = new URIElementInfo(document, listener);
		listener.startListening();
		return info;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void disposeElementInfo(Object element, ElementInfo info) {
		Object content = info.fDocument.getContent();
		if (content instanceof org.eclipse.gmf.runtime.notation.Diagram) {
			((org.eclipse.gmf.runtime.notation.Diagram) content).eResource().unload();
		}
		((URIElementInfo) info).listener.stopListening();
	}
d34 6
a39 24

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument createDocument(Object element) throws org.eclipse.core.runtime.CoreException {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document = createEmptyDocument();
			if (setDocumentContent(document, (org.eclipse.ui.IEditorInput) element)) {
				setupDocument(element, document);
				return document;
			}
		}
		return null;
	}

	«EXPAND xpt::Common::generatedMemberComment(
		"Sets up the given document as it would be provided for the given element. The\n" +
		"content of the document is not changed. This default implementation is empty.\n" +
		"Subclasses may reimplement.\n" +
		"\n" +
		"@@param element the blue-print element\n" +
		"@@param document the document to set up"
	)»
	protected void setupDocument(Object element, org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document) {
		// for subclasses
	}
d44 2
d47 1
a47 70
	«EXPAND xpt::Common::generatedMemberComment»
	protected boolean setDocumentContent(org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document, org.eclipse.ui.IEditorInput editorInput) throws org.eclipse.core.runtime.CoreException {
		if (editorInput instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			setDocumentContentFromStorage(document, ((org.eclipse.emf.common.ui.URIEditorInput) editorInput).getURI());
			return true;
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void setDocumentContentFromStorage(org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document, org.eclipse.emf.common.util.URI uri) throws org.eclipse.core.runtime.CoreException {
		org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument diagramDocument = (org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) document;
		org.eclipse.emf.transaction.TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
		org.eclipse.emf.ecore.resource.Resource resource = null;
		try {
			resource = domain.getResourceSet().getResource(uri.trimFragment(), false);
			if (resource == null) {
				resource = domain.getResourceSet().createResource(uri.trimFragment());
			}
			if (!resource.isLoaded()) {
				try {
					java.util.Map options = new java.util.HashMap(org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory.getDefaultLoadOptions());
					// @@see 171060 
					// options.put(org.eclipse.emf.ecore.xmi.XMLResource.OPTION_RECORD_UNKNOWN_FEATURE, Boolean.TRUE);
					resource.load(options);
				} catch (java.io.IOException e) {
					resource.unload();
					throw e;
				}
			}
			if (resource == null) {
				throw new RuntimeException("Unable to load diagram resource");
			}
			if (uri.fragment() != null) {
				org.eclipse.emf.ecore.EObject rootElement = resource.getEObject(uri.fragment());
				if (rootElement instanceof org.eclipse.gmf.runtime.notation.Diagram) {
					document.setContent((org.eclipse.gmf.runtime.notation.Diagram) rootElement);
					return;
				}
			} else {
				for (java.util.Iterator it = resource.getContents().iterator(); it.hasNext();) {
					Object rootElement = it.next();
					if (rootElement instanceof org.eclipse.gmf.runtime.notation.Diagram) {
						document.setContent((org.eclipse.gmf.runtime.notation.Diagram) rootElement);
						return;
					}
				}
			}
			throw new RuntimeException("Diagram is not present in resource");
		} catch (Exception e) {
			org.eclipse.core.runtime.CoreException thrownExcp = null;
			if (e instanceof org.eclipse.core.runtime.CoreException) {
				thrownExcp = (org.eclipse.core.runtime.CoreException) e;
			} else {
				String msg = e.getLocalizedMessage();
				thrownExcp = new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, «editorGen.plugin.getActivatorQualifiedClassName()».ID, 0, msg != null ? msg : "Error loading diagram", e)); //$NON-NLS-1$
			}
			throw thrownExcp;
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void doSaveDocument(org.eclipse.core.runtime.IProgressMonitor monitor, Object element, org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document, boolean overwrite) throws org.eclipse.core.runtime.CoreException {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument diagramDocument = (org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) document;
			org.eclipse.emf.transaction.TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
			java.util.List resources = domain.getResourceSet().getResources();
			«EXPAND xpt::editor::DocumentProvider::saveResourcesCollection FOR editorGen.diagram-»
		}
	}
d80 50
d131 38
a168 6
	public static java.io.File getFile(org.eclipse.emf.common.ui.URIEditorInput input) {
		org.eclipse.emf.common.util.URI uri = input.getURI().trimFragment();
		if (uri != null && uri.isFile()) {
			java.io.File file = new java.io.File(uri.toFileString());
			if (!file.isDirectory()) {
				return file;
d171 10
a180 1
		return null;
d182 10
d193 1
d195 13
a207 2
	protected org.eclipse.jface.operation.IRunnableContext getOperationRunner(org.eclipse.core.runtime.IProgressMonitor monitor) {
		return null;
d209 1
d212 3
@


1.3
log
@Reusing DocumentProvider.xpt from URIDiagramDocumentProvider.xpt
@
text
@d75 2
a76 9

	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.ui.IEditorInput createInputWithEditingDomain(org.eclipse.ui.IEditorInput editorInput, org.eclipse.emf.transaction.TransactionalEditingDomain domain) {
		if (editorInput instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			return new URIEditorInputProxy((org.eclipse.emf.common.ui.URIEditorInput) editorInput, domain);
		}
		assert false;
		return null;
	}
d105 2
a109 4
		if (editorInput instanceof «EXPAND xpt::editor::URIEditorInputProxy::qualifiedClassName FOR editorGen.diagram») {
			«EXPAND xpt::editor::URIEditorInputProxy::qualifiedClassName FOR editorGen.diagram» diagramElement = («EXPAND xpt::editor::URIEditorInputProxy::qualifiedClassName FOR editorGen.diagram») editorInput;
			((org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) document).setEditingDomain(diagramElement.getEditingDomain());
		}
@


1.2
log
@All the @@generated comments moved into a separate "define" statement.
@
text
@d85 1
a85 8
	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument getDiagramDocument(Object element) {
		org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument doc = getDocument(element);
		if (doc instanceof org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) {
			return (org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) doc;
		}
		return null;
	}
d111 1
a111 4
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument createEmptyDocument() {
		return new org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramDocument();
	}
d184 1
a184 16
			monitor.beginTask("Saving diagram", resources.size() + 1);
			for (java.util.Iterator it = resources.iterator(); it.hasNext();) {
				org.eclipse.emf.ecore.resource.Resource nextResource = (org.eclipse.emf.ecore.resource.Resource) it.next();
				monitor.setTaskName("Saving " + nextResource.getURI());
				if (nextResource.isLoaded()) {
					try {
						java.util.Map options = new java.util.HashMap();
						options.put(org.eclipse.emf.ecore.xmi.XMLResource.OPTION_RECORD_UNKNOWN_FEATURE, Boolean.TRUE);
						nextResource.save(options);
					} catch (java.io.IOException e) {
						«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Unable to save resource: " + nextResource.getURI(), e);
					}
				}
				monitor.worked(1);
			}
			monitor.done();
@


1.1
log
@[171528] use URIEditorInput to open diagrams
@
text
@d24 1
a24 3
/**
 * @@generated
 */
d27 1
a27 3
	/**
	 * @@generated
	 */
d30 1
a30 3
		/**
		 * @@generated
		 */
d33 1
a33 3
		/**
		 * @@generated
		 */
d40 1
a40 3
	/**
	 * @@generated
	 */
d59 1
a59 3
	/**
	 * @@generated
	 */
d67 1
a67 3
	/**
	 * @@generated
	 */
d76 1
a76 3
	/**
	 * @@generated
	 */
d85 1
a85 3
	/**
	 * @@generated
	 */
d94 1
a94 3
	/**
	 * @@generated
	 */
d106 8
a113 9
	/**
	 * Sets up the given document as it would be provided for the given element. The
	 * content of the document is not changed. This default implementation is empty.
	 * Subclasses may reimplement.
	 *
	 * @@param element the blue-print element
	 * @@param document the document to set up
	 * @@generated
	 */
d118 1
a118 3
	/**
	 * @@generated
	 */
d123 1
a123 3
	/**
	 * @@generated
	 */
d136 1
a136 3
	/**
	 * @@generated
	 */
d188 1
a188 3
	/**
	 * @@generated
	 */
d213 1
a213 3
	/**
	 * @@generated
	 */
d222 1
a222 3
	/**
	 * @@generated
	 */
d233 1
a233 3
	/**
	 * @@generated
	 */
d244 1
a244 3
	/**
	 * @@generated
	 */
d256 1
a256 3
	/**
	 * @@generated
	 */
@

