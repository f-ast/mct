head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080930-1130:1.6
	v20080926-1245:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20080722-1827:1.6
	v20080718-1731:1.6
	v20080716-1600:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080610-1132:1.6
	v20080603-1553:1.6
	v20080528-1052:1.6
	v20080521:1.6
	v20080516-1543:1.6
	v20080516-1143:1.6
	v20080512-1200:1.6
	v20080508-2000:1.6
	v20080507-1326:1.6
	v20080503-1740:1.5
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080417-1610:1.5
	v20080411-0411:1.5
	v20080404-1111:1.5
	v20080322-0000:1.5
	v20080222-1200:1.5
	v20080215-1500:1.5
	v20080207-0207:1.5
	v20071222-1111:1.5
	v20071214-1111:1.5
	v20071130-1111:1.5
	v20071124-0000:1.5
	v20071112-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070928-0000:1.5
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070605-1400:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2008.05.07.13.56.01;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	39124821b4de4567;

1.5
date	2007.06.19.19.31.18;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	6bb746782f054567;

1.4
date	2007.06.05.16.24.28;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	48e146658e3b4567;

1.3
date	2007.06.05.12.31.50;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	5449466557b64567;

1.2
date	2007.06.04.17.36.03;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	32a046644d834567;

1.1
date	2007.06.04.15.13.45;	author dstadnik;	state Exp;
branches;
next	;
commitid	27ac46642c284567;


desc
@@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»

«DEFINE CompartmentViewFactory FOR gmfgen::GenCompartment-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen-»
package «getDiagram().notationViewFactoriesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «notationViewFactoryClassName» extends org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory {

	«EXPAND xpt::Common::generatedMemberComment»
	protected java.util.List createStyles(org.eclipse.gmf.runtime.notation.View view) {
		java.util.List styles = new java.util.ArrayList();
		«IF canCollapse-»
		styles.add(org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createDrawerStyle());
		«ENDIF-»
		«IF needsTitle-»
		styles.add(org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createTitleStyle());
		«ENDIF-»
		styles.add(org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createSortingStyle());
		styles.add(org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createFilteringStyle());
		«IF isStoringChildPositions(node.getLayoutType())-»
			«EXPAND xpt::diagram::views::Utils::addShapeStyle("styles") FOR viewmap-»
		«ENDIF-»
		«EXPAND xpt::diagram::views::Utils::addCustomStyles("styles")-»
		return styles;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void decorateView(org.eclipse.gmf.runtime.notation.View containerView, org.eclipse.gmf.runtime.notation.View view,
			org.eclipse.core.runtime.IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
		«EXPAND xpt::diagram::views::Utils::updateSemanticHint-»
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
		setupCompartmentTitle(view);
		setupCompartmentCollapsed(view);
		«EXPAND xpt::diagram::views::Utils::foregroundColour("view") FOR viewmap-»
	}
	«IF isStoringChildPositions(node.getLayoutType())-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.notation.LayoutConstraint createLayoutConstraint() {
		return org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createBounds();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void initializeFromPreferences(org.eclipse.gmf.runtime.notation.View view) {
		super.initializeFromPreferences(view);
		org.eclipse.jface.preference.IPreferenceStore store =
				(org.eclipse.jface.preference.IPreferenceStore) getPreferencesHint().getPreferenceStore();
		org.eclipse.swt.graphics.RGB fillRGB = org.eclipse.jface.preference.PreferenceConverter.getColor(store,
				org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_FILL_COLOR);
		org.eclipse.gmf.runtime.diagram.core.util.ViewUtil.setStructuralFeatureValue(view,
				org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getFillStyle_FillColor(),
				org.eclipse.gmf.runtime.draw2d.ui.figures.FigureUtilities.RGBToInteger(fillRGB));
	}
	«ENDIF-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected void setupCompartmentTitle(org.eclipse.gmf.runtime.notation.View view) {
		org.eclipse.gmf.runtime.notation.TitleStyle titleStyle = (org.eclipse.gmf.runtime.notation.TitleStyle) view.getStyle(
				org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getTitleStyle());
		if (titleStyle != null){
			titleStyle.setShowTitle(true);
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected void setupCompartmentCollapsed(org.eclipse.gmf.runtime.notation.View view) {
		org.eclipse.gmf.runtime.notation.DrawerStyle drawerStyle = (org.eclipse.gmf.runtime.notation.DrawerStyle) view.getStyle(
				org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getDrawerStyle());
		if (drawerStyle != null){
			drawerStyle.setCollapsed(false);
		}
	}
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenCompartment»«ENDDEFINE»
@


1.5
log
@[193353] View factory xPand template should have empty "additions" DEFINE
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.4
log
@[186339] Allow to specify custom notation styles in view factory
@
text
@d87 1
d90 2
@


1.3
log
@do not generate unnecessary code
@
text
@d37 1
@


1.2
log
@refactor some common code
@
text
@a44 1
		«EXPAND xpt::diagram::views::Utils::addShortcut-»
@


1.1
log
@rewrite compartment view factory generator in xpand
@
text
@d43 1
a43 5
		if (semanticHint == null) {
			semanticHint = «getDiagram().getVisualIDRegistryQualifiedClassName()».getType(
					«getEditPartQualifiedClassName()».VISUAL_ID);
			view.setType(semanticHint);
		}
d45 1
a47 7
		if (!«getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(
				«getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(containerView))) {
			org.eclipse.emf.ecore.EAnnotation shortcutAnnotation = org.eclipse.emf.ecore.EcoreFactory.eINSTANCE.createEAnnotation();
			shortcutAnnotation.setSource("Shortcut"); //$NON-NLS-1$
			shortcutAnnotation.getDetails().put("modelID", «getDiagram().getEditPartQualifiedClassName()».MODEL_ID); //$NON-NLS-1$
			view.getEAnnotations().add(shortcutAnnotation);
		}
@

