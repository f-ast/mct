head	1.12;
access;
symbols
	v20081022-1925:1.12
	v20081015-1925:1.12
	v20081008-1925:1.11
	v20081001-1925:1.11
	v20080930-1130:1.11
	v20080926-1245:1.11
	v20080924-1925:1.11
	v20080917-1925:1.11
	v20080911-1728:1.10
	v20080910-1520:1.10
	v20080903-1520:1.10
	v20080827-1520:1.10
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.8
	v20080716-1642:1.9
	R2_1_maintenance:1.8.0.2
	Root_R2_1_maintenance:1.8
	R2_1_0:1.8
	v20080610-1132:1.8
	v20080603-1553:1.8
	v20080528-1052:1.8
	v20080521:1.8
	v20080516-1543:1.8
	v20080516-1143:1.8
	v20080512-1200:1.8
	v20080508-2000:1.8
	v20080507-1326:1.8
	v20080503-1740:1.7
	v20080501-1739:1.7
	v20080425-1959:1.7
	v20080417-1610:1.7
	v20080411-0411:1.7
	v20080404-1111:1.7
	v20080322-0000:1.7
	v20080222-1200:1.7
	v20080215-1500:1.7
	v20080207-0207:1.7
	v20071222-1111:1.7
	v20071214-1111:1.7
	v20071130-1111:1.7
	v20071124-0000:1.7
	v20071112-0000:1.7
	v20071108-0000:1.7
	v20071003-0000:1.7
	v20070928-0000:1.7
	v20070921-0000:1.7
	v20070915-0000:1.7
	v20070903-0000:1.7
	v20070809-0000:1.7
	R2_0_maintenance:1.7.0.2
	R2_0:1.7
	R4_20:1.7
	v20070621-0000:1.7
	RC3_20:1.7
	v20070614-1400:1.7
	v20070608-1300:1.6
	v20070605-1400:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-1100:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.4
	v20060316-0600:1.4
	v20070307-0700:1.4
	v20070301-1200:1.4
	v20070228-2000:1.4
	v20070221-1500:1.4
	v20070208-1800:1.4
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.12
date	2008.10.14.18.48.57;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	7f5648f4e9984567;

1.11
date	2008.09.16.19.20.54;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	13e048d0070f4567;

1.10
date	2008.08.27.12.27.19;	author ashatalin;	state Exp;
branches;
next	1.9;
commitid	e6d48b548264567;

1.9
date	2008.06.30.19.46.29;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	763c486938144567;

1.8
date	2008.05.07.13.56.02;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	39124821b4de4567;

1.7
date	2007.06.12.23.41.58;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	2e6e466f2f424567;

1.6
date	2007.06.07.17.32.55;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	5505466841464567;

1.5
date	2007.05.18.21.17.20;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	2591464e17d14567;

1.4
date	2007.02.08.18.06.51;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	56b45cb66aa4567;

1.3
date	2007.02.07.00.37.49;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	c5d45c91f504567;

1.2
date	2007.01.08.18.09.51;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	78dd45a288ee4567;

1.1
date	2006.12.20.02.16.53;	author dstadnik;	state Exp;
branches;
next	;
commitid	1ea745889d114567;


desc
@@


1.12
log
@refactoring - move conditions out of actuial implementation templates
@
text
@/*
 * Copyright (c) 2006, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/gmf/2008/GenModel";
import "http://www.eclipse.org/emf/2002/Ecore";
import "http://www.eclipse.org/emf/2002/GenModel";

extension xpt::GenModelUtils;

// all diagram nodes
List[gmfgen::GenNode] getNodes(gmfgen::GenDiagram diagram) :
	{}.addAll(diagram.topLevelNodes).addAll(diagram.childNodes)
;

// all elements that may have element type: diagram, nodes and links
List[gmfgen::GenCommonBase] getElements(gmfgen::GenDiagram diagram) :
	{ diagram }.addAll(diagram.topLevelNodes).addAll(diagram.childNodes).addAll(diagram.links)
;

boolean hasExplicitChildFeature(gmfgen::TypeModelFacet facet) :
	!isDerived(facet.childMetaFeature) && facet.childMetaFeature != facet.containmentMetaFeature
;

// true when link is contained in an object other than link's source,
// (1) sourceMetaFeature is specified
// (2) childMetaFeature is not the same as containment and belongs to a different class than container
// for (2), consider scenario from bug #226882, container "A", that holds link "L" and link's source and target, 
// "N1" and "N2". "N1" has a reference to "L" which is being used as childMetaFeature. Hence, link's container, "C"
// is different from link's source, "N1". As nothing can prevent "C" from subclassing "N1", there's no sure way to
// tell if container is really different from the source or not, and we'd better assume they are different.  
boolean hasContainerOtherThanSource(gmfgen::TypeLinkModelFacet facet) :
	facet.sourceMetaFeature != null || facet.childMetaFeature != facet.containmentMetaFeature
;

List[gmfgen::GenPreferencePage] allPreferencePages(gmfgen::GenDiagram genDiagram) :
	recursePages(genDiagram.preferencePages)
;

private List[gmfgen::GenPreferencePage] recursePages(List[GenPreferencePage] pages) :
	pages.isEmpty() ? pages : pages.union(recursePages(pages.children))
;@


1.11
log
@[247311] support boilerplate code generation for custom preference pages
@
text
@a43 13
List[gmfgen::GenLink] getAssistantOutgoingLinks(gmfgen::GenNode node) :
	node.genOutgoingLinks.select(link | !selectGenNodes(link.targets).isEmpty())
;

List[gmfgen::GenLink] getAssistantIncomingLinks(gmfgen::GenNode node) :
	node.genIncomingLinks.select(link | !selectGenNodes(link.sources).isEmpty())
;

// TODO: remove this method allowing creation of links to links using Assistant?
List[gmfgen::GenLinkEnd] selectGenNodes(List[gmfgen::GenLinkEnd] ends) :
	ends.typeSelect(gmfgen::GenNode)
;

@


1.10
log
@[244970] - Don't generate supporting code (updater/editpolicies/model-assistant) for links to/from pure label based elements
@
text
@d56 8
@


1.9
log
@[226882] Support links with childMetaFeature not from container
@
text
@d44 2
a45 2
List[gmfgen::GenLink] getOutgoingLinks(gmfgen::GenNode node) :
	node.getDiagram().links.select(link | link.getAssistantSources().contains(node))
d48 7
a54 2
List[gmfgen::GenLink] getIncomingLinks(gmfgen::GenNode node) :
	node.getDiagram().links.select(link | link.getAssistantTargets().contains(node))
@


1.8
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d33 11
@


1.7
log
@[192029] Rewrite modeling assistant provider in xpand
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2006/GenModel";
@


1.6
log
@rewrite create node command in xpand
@
text
@d32 8
@


1.5
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d17 2
d28 4
@


1.4
log
@refactor GenAuditContainer: flatten hierarchy as it fits most for templates we write
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
@


1.3
log
@complete migration of plugin.xml template to xpand version - constraint providers rewritten
@
text
@a25 18

// FIXME remove java-only GenEditorGenerator#hasAudits or declare it in metamodel
boolean hasAudits(gmfgen::GenEditorGenerator editorGen) :
	editorGen.audits != null && !editorGen.audits.getAllAuditRules().isEmpty()
;

// Partial copy of GenAuditContainerImpl#getAllRulesToTargetContextMap
cached List[gmfgen::GenAuditRule] getAllRulesWithTargetAndContextID(gmfgen::GenAuditContainer auditContainer) :
	auditContainer.getAllAuditRules().select(r | r.target != null && r.target.getClientContextID() != null)
;

cached String idMap(gmfgen::GenAuditContainer c) :
	c.id // original javajet expected null as possible value, though gmfgen.ecore says id feature is mandatory
;

String escapeXML(String s) :
JAVA org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(java.lang.String)
;@


1.2
log
@rewrite plugin.xml template in xpand
@
text
@d15 1
d27 3
a29 2
String getConstraintProviders(Object plugin) :
JAVA org.eclipse.gmf.codegen.util.Generator.getConstraintProviders(java.lang.Object)
d31 13
@


1.1
log
@rewrite element types in xpand
@
text
@d25 4
@

