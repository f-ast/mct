head	1.10;
access;
symbols
	v20081022-1925:1.10
	v20081015-1925:1.10
	v20081008-1925:1.9
	v20081001-1925:1.9
	v20080930-1130:1.9
	v20080926-1245:1.9
	v20080924-1925:1.9
	v20080917-1925:1.9
	v20080911-1728:1.9
	v20080910-1520:1.9
	v20080903-1520:1.9
	v20080827-1520:1.9
	v20080813-1520:1.9
	v20080806-1520:1.9
	v20080722-1827:1.9
	v20080718-1731:1.9
	v20080716-1600:1.9
	v20080716-1642:1.9
	R2_1_maintenance:1.9.0.2
	Root_R2_1_maintenance:1.9
	R2_1_0:1.9
	v20080610-1132:1.9
	v20080603-1553:1.9
	v20080528-1052:1.9
	v20080521:1.9
	v20080516-1543:1.9
	v20080516-1143:1.9
	v20080512-1200:1.9
	v20080508-2000:1.9
	v20080507-1326:1.9
	v20080503-1740:1.8
	v20080501-1739:1.8
	v20080425-1959:1.8
	v20080417-1610:1.8
	v20080411-0411:1.8
	v20080404-1111:1.8
	v20080322-0000:1.8
	v20080222-1200:1.8
	v20080215-1500:1.8
	v20080207-0207:1.8
	v20071222-1111:1.8
	v20071214-1111:1.8
	v20071130-1111:1.8
	v20071124-0000:1.8
	v20071112-0000:1.8
	v20071108-0000:1.8
	v20071003-0000:1.8
	v20070928-0000:1.8
	v20070921-0000:1.8
	v20070915-0000:1.8
	v20070903-0000:1.8
	v20070809-0000:1.8
	R2_0_maintenance:1.8.0.2
	R2_0:1.8
	R4_20:1.8
	v20070621-0000:1.8
	RC3_20:1.8
	v20070614-1400:1.8
	v20070608-1300:1.8
	v20070605-1400:1.8
	v20070601-1400:1.7
	v20070525-1500:1.7
	v20070520-1200:1.7
	v20070518-1300:1.6
	v20070504-1000:1.6
	v20070427-0600:1.6
	v20070420-1000:1.6
	v20070413-1300:1.6
	v20070405-1100:1.6
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6
	v20070322-1100:1.6
	v20060316-0600:1.6
	v20070307-0700:1.6
	v20070301-1200:1.6
	v20070228-2000:1.6
	v20070221-1500:1.6
	v20070208-1800:1.6
	v20070103-0300:1.4
	M4_20:1.4
	v20061222-1800:1.4
	v20061218-1200:1.4
	v20061214-0000:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.10
date	2008.10.14.18.48.57;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	7f5648f4e9984567;

1.9
date	2008.05.07.13.56.02;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	39124821b4de4567;

1.8
date	2007.06.05.19.46.57;	author atikhomirov;	state Exp;
branches;
next	1.7;
commitid	419c4665bdb14567;

1.7
date	2007.05.18.21.17.18;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	2591464e17d14567;

1.6
date	2007.02.02.20.49.45;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	50c945c3a3e84567;

1.5
date	2007.02.01.14.52.09;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	a7d45c1fe974567;

1.4
date	2006.12.18.12.21.38;	author dstadnik;	state Exp;
branches;
next	1.3;
commitid	3d30458687d04567;

1.3
date	2006.12.14.19.02.19;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	408e45819fb94567;

1.2
date	2006.12.13.18.57.26;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	68a45804d154567;

1.1
date	2006.12.08.19.20.41;	author dstadnik;	state Exp;
branches;
next	;
commitid	49124579bb084567;


desc
@@


1.10
log
@refactoring - move conditions out of actuial implementation templates
@
text
@/*
 * Copyright (c) 2006, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/gmf/2008/GenModel";
import "http://www.eclipse.org/emf/2002/Ecore";

Boolean isStoringChildPositions(gmfgen::GenNode node) :
	 node.getLayoutType().value == gmfgen::ViewmapLayoutType::XY_LAYOUT.value
;

List[gmfgen::GenExternalNodeLabel] getExternalLabels(gmfgen::GenNode node) :
	node.labels.typeSelect(gmfgen::GenExternalNodeLabel)
;

List[gmfgen::GenChildSideAffixedNode] getSideAffixedChildren(gmfgen::GenNode node) :
	node.childNodes.typeSelect(gmfgen::GenChildSideAffixedNode)
;

List[gmfgen::GenLabel] getInnerFixedLabels(gmfgen::GenNode node) :
	node.labels.without(node.labels.typeSelect(gmfgen::GenExternalNodeLabel)).
		select(e | { ((gmfgen::GenLabel) e).viewmap }.typeSelect(gmfgen::ParentAssignedViewmap).size() > 0)
;

List[gmfgen::GenCompartment] getPinnedCompartments(gmfgen::GenNode node) :
	node.compartments.select(e | { e.viewmap }.typeSelect(gmfgen::ParentAssignedViewmap).size() > 0)
;

Boolean hasFixedChildren(gmfgen::GenNode node) :
	getInnerFixedLabels(node).size() > 0 || getPinnedCompartments(node).size() > 0
;

Boolean hasChildren(gmfgen::GenNode node) :
	!node.childNodes.isEmpty()
;

Boolean listCompartmentHasChildren(gmfgen::GenCompartment compartment) :
	compartment.listLayout && compartment.childNodes.size() > 0
;

Boolean hasChildrenInListCompartments(gmfgen::GenNode node) :
	node.compartments.exists(e | listCompartmentHasChildren(e))
;

Boolean hasBorderItems(gmfgen::GenNode node) :
	getSideAffixedChildren(node).size() > 0 || getExternalLabels(node).size() > 0
;

Boolean needsGraphicalNodeEditPolicy(gmfgen::GenNode node) :
	null != node.modelFacet && node.reorientedIncomingLinks.size() > 0
;

String i18nKeyForCompartmentTitle(gmfgen::GenCompartment compartment) :
    compartment.editPartClassName+".title"
;


boolean shouldGenerateDiagramViewmap(gmfgen::GenDiagram genDiagram) :
	!{gmfgen::ViewmapLayoutType::UNKNOWN.value, gmfgen::ViewmapLayoutType::XY_LAYOUT.value}.contains(genDiagram.viewmap.layoutType.value)
;


List[gmfgen::GenLink] getAssistantOutgoingLinks(gmfgen::GenNode node) :
	node.genOutgoingLinks.select(link | !selectGenNodes(link.targets).isEmpty())
;

List[gmfgen::GenLink] getAssistantIncomingLinks(gmfgen::GenNode node) :
	node.genIncomingLinks.select(link | !selectGenNodes(link.sources).isEmpty())
;

// TODO: remove this method allowing creation of links to links using Assistant?
List[gmfgen::GenLinkEnd] selectGenNodes(List[gmfgen::GenLinkEnd] ends) :
	ends.typeSelect(gmfgen::GenNode)
;
@


1.9
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d2 1
a2 1
 * Copyright (c) 2006 Borland Software Corporation
d68 15
a82 1
;@


1.8
log
@use same code to find out accessor name everywhere
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2006/GenModel";
@


1.7
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@a60 4
String getSetterName(gmfgen::ParentAssignedViewmap viewmap) :
	viewmap.setterName == null ? "setLabel" : viewmap.setterName
;

@


1.6
log
@[139733] akarjakina - lack of i18n support. More templates i18n-ed
@
text
@d13 1
a13 1
import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
d68 5
@


1.5
log
@[172375] customization points for the edit part
extendsList needed for gmfgraph diagram editor
@
text
@d64 4
@


1.4
log
@add copyright headers
@
text
@a56 12
String nodeEditPartSuperClass(gmfgen::GenNode node) :
	 hasBorderItems(node) ?
		"org.eclipse.gmf.runtime.diagram.ui.editparts.AbstractBorderedShapeEditPart" :
		"org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart"
;

String nodeEditPartSuperClass(gmfgen::GenChildSideAffixedNode node) :
	 hasBorderItems(node) ?
		"org.eclipse.gmf.runtime.diagram.ui.editparts.BorderedBorderItemEditPart" :
		"org.eclipse.gmf.runtime.diagram.ui.editparts.AbstractBorderItemEditPart"
;

@


1.3
log
@[164935] Use border items infrastructure to support external labels
@
text
@d1 12
@


1.2
log
@use xpand template to generate node edit part
@
text
@d8 2
a9 2
Boolean hasExternalLabels(gmfgen::GenNode node) :
	node.labels.typeSelect(gmfgen::GenExternalNodeLabel).size() > 0
d41 4
d46 1
a46 1
	getSideAffixedChildren(node).size() > 0 ?
d52 1
a52 1
	getSideAffixedChildren(node).size() > 0 ?
@


1.1
log
@migrate node label edit part to xpand templates
@
text
@d7 53
@

