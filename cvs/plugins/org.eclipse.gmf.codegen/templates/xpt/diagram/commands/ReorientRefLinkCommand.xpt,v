head	1.11;
access;
symbols
	v20081022-1925:1.11
	v20081015-1925:1.11
	v20081008-1925:1.11
	v20081001-1925:1.11
	v20080930-1130:1.11
	v20080926-1245:1.11
	v20080924-1925:1.11
	v20080917-1925:1.11
	v20080911-1728:1.11
	v20080910-1520:1.11
	v20080903-1520:1.11
	v20080827-1520:1.11
	v20080813-1520:1.11
	v20080806-1520:1.11
	v20080722-1827:1.11
	v20080718-1731:1.11
	v20080716-1600:1.11
	v20080716-1642:1.11
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080603-1553:1.11
	v20080528-1052:1.11
	v20080521:1.11
	v20080516-1543:1.11
	v20080516-1143:1.11
	v20080512-1200:1.11
	v20080508-2000:1.11
	v20080507-1326:1.11
	v20080503-1740:1.10
	v20080501-1739:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080411-0411:1.10
	v20080404-1111:1.10
	v20080322-0000:1.10
	v20080222-1200:1.10
	v20080215-1500:1.10
	v20080207-0207:1.10
	v20071222-1111:1.10
	v20071214-1111:1.10
	v20071130-1111:1.10
	v20071124-0000:1.10
	v20071112-0000:1.10
	v20071108-0000:1.10
	v20071003-0000:1.10
	v20070928-0000:1.10
	v20070921-0000:1.10
	v20070915-0000:1.10
	v20070903-0000:1.10
	v20070809-0000:1.10
	R2_0_maintenance:1.10.0.2
	R2_0:1.10
	R4_20:1.10
	v20070621-0000:1.10
	RC3_20:1.10
	v20070614-1400:1.10
	v20070608-1300:1.10
	v20070605-1400:1.10
	v20070601-1400:1.10
	v20070525-1500:1.10
	v20070520-1200:1.10
	v20070518-1300:1.9
	v20070504-1000:1.9
	v20070427-0600:1.9
	v20070420-1000:1.8
	v20070413-1300:1.8
	v20070405-1100:1.8
	v20070403-1500:1.6
	v20070330-1300:1.6
	v20060330-1300:1.6;
locks; strict;
comment	@# @;
expand	@k@;


1.11
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	39124821b4de4567;

1.10
date	2007.05.18.21.17.19;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	2591464e17d14567;

1.9
date	2007.04.24.08.17.31;	author dstadnik;	state Exp;
branches;
next	1.8;
commitid	3da9462dbd1a4567;

1.8
date	2007.04.05.10.33.12;	author dstadnik;	state Exp;
branches;
next	1.7;
commitid	69594614d0664567;

1.7
date	2007.04.04.13.57.24;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	4c6f4613aec34567;

1.6
date	2007.03.29.12.16.36;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	6b76460bae204567;

1.5
date	2007.03.29.09.07.14;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	4ea2460b81c24567;

1.4
date	2007.03.27.18.39.15;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	5173460964d34567;

1.3
date	2007.03.23.15.55.35;	author dstadnik;	state Exp;
branches;
next	1.2;
commitid	12e14603f8774567;

1.2
date	2007.03.23.14.59.26;	author dstadnik;	state Exp;
branches;
next	1.1;
commitid	56db4603eb4d4567;

1.1
date	2007.03.23.09.27.29;	author dstadnik;	state Exp;
branches;
next	;
commitid	6f4346039d7f4567;


desc
@@


1.11
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»

«EXTENSION xpt::GenModelUtils»

«DEFINE ReorientRefLinkCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR diagram.editorGen-»
package «diagram.editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «reorientCommandClassName» extends org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand {

	«EXPAND xpt::Common::generatedMemberComment»
	private final int reorientDirection;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject referenceOwner;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject oldEnd;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject newEnd;

	«EXPAND xpt::Common::generatedMemberComment»
	public «reorientCommandClassName»(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest request) {
		super(request.getLabel(), null, request);
		reorientDirection = request.getDirection();
		referenceOwner = request.getReferenceOwner();
		oldEnd = request.getOldRelationshipEnd();
		newEnd = request.getNewRelationshipEnd();
	}
	«EXPAND xpt::diagram::commands::ReorientLinkUtils::canReorient(this) FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientLinkUtils::reorient FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientLinkUtils::accessors-»
}
«ENDDEFINE»
@


1.10
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.9
log
@rename ReorientUtils template
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.8
log
@minor refactorings
@
text
@d46 3
a48 3
	«EXPAND xpt::diagram::commands::ReorientUtils::canReorient(this) FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientUtils::reorient FOR modelFacet-»
	«EXPAND xpt::diagram::commands::ReorientUtils::accessors-»
@


1.7
log
@[179063] check link constraints for type based links on reroute
@
text
@d48 1
@


1.6
log
@refactor to remove precise link end
@
text
@d46 1
a46 1
	«EXPAND xpt::diagram::commands::ReorientUtils::canReorient FOR modelFacet-»
@


1.5
log
@move shared code in one template file
@
text
@d33 3
d43 1
@


1.4
log
@Correcting compilation problems in samples by adding type-safe variables
@
text
@d42 2
a43 46
«LET (gmfgen::FeatureLinkModelFacet)({modelFacet}.typeSelect(gmfgen::FeatureLinkModelFacet).get(0)) AS featureModelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean canExecute() {
		if (!(referenceOwner instanceof «getQualifiedInterfaceName(featureModelFacet.getSourceType())»)) {
			return false;
		}
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_SOURCE) {
			return newEnd instanceof «getQualifiedInterfaceName(featureModelFacet.getSourceType())»;
		}
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_TARGET) {
			return newEnd instanceof «getQualifiedInterfaceName(featureModelFacet.getTargetType())»;
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(
			org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
			throws org.eclipse.core.commands.ExecutionException {
		if (false == referenceOwner instanceof «getQualifiedInterfaceName(featureModelFacet.getSourceType())») {
			return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
				"Incorrect link source: " + referenceOwner);
		}
		«getQualifiedInterfaceName(featureModelFacet.getSourceType())» source = («getQualifiedInterfaceName(featureModelFacet.getSourceType())») referenceOwner;
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_SOURCE) {
			if (false == newEnd instanceof «getQualifiedInterfaceName(featureModelFacet.getSourceType())») {
				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
					"Incorrect new link source: " + newEnd);
			}
			«getQualifiedInterfaceName(featureModelFacet.getSourceType())» newSource = («getQualifiedInterfaceName(featureModelFacet.getSourceType())») newEnd;
			«EXPAND reorientSelfAsEnd("source", "newSource") FOR featureModelFacet.metaFeature-»
			return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult(referenceOwner);
		}
		if (reorientDirection == org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest.REORIENT_TARGET) {
			if (false == newEnd instanceof «getQualifiedInterfaceName(featureModelFacet.getTargetType())») {
				return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
					"Incorrect new link target: " + newEnd);
			}
			«getQualifiedInterfaceName(featureModelFacet.getTargetType())» newTarget = («getQualifiedInterfaceName(featureModelFacet.getTargetType())») newEnd;
			«EXPAND reorientEnd("source", "newTarget") FOR featureModelFacet.metaFeature-»
			return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult(referenceOwner);
		}
		return org.eclipse.gmf.runtime.common.core.command.CommandResult.newErrorCommandResult(
				"Unknown link reorient direction: " + reorientDirection);
	}
a44 30
«ENDLET-»
«ENDDEFINE»

«REM»
	Set link feature to hold the newEnd value. All old values are discarded.
	In this context means to reorient the link.
«ENDREM»
«DEFINE reorientEnd(String referenceOwnerVar, String newEndVar) FOR genmodel::GenFeature»
	«IF ecoreFeature.many-»
		«EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, true)».clear();
		«EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, true)».add(«newEndVar»);
	«ELSE-»
		«EXPAND xpt::Common::setFeatureValue(referenceOwnerVar, true, newEndVar, true)»;
	«ENDIF-»
«ENDDEFINE»

«REM»
	Move reference value from the current reference owner to the new end.
	In this context means to reorient the link.
«ENDREM»
«DEFINE reorientSelfAsEnd(String referenceOwnerVar, String newEndVar) FOR genmodel::GenFeature»
	«IF ecoreFeature.many-»
		java.util.Collection values = «EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, true)»;
		«EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, true)».clear();
		«EXPAND xpt::Common::getFeatureValue(newEndVar, true)».addAll(values);
	«ELSE-»
		«getQualifiedInterfaceName(getTypeGenClassX(this))» value = «EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, true)»;
		«EXPAND xpt::Common::setFeatureValue(referenceOwnerVar, true, "null", true)»;
		«EXPAND xpt::Common::setFeatureValue(newEndVar, true, "value", true)»;
	«ENDIF-»
@


1.3
log
@avoid unnecessary cast
@
text
@d62 5
d68 6
a73 1
			«EXPAND reorientSelfAsEnd("referenceOwner", "newEnd") FOR featureModelFacet.metaFeature-»
d77 6
a82 1
			«EXPAND reorientEnd("referenceOwner", "newEnd") FOR featureModelFacet.metaFeature-»
d98 2
a99 2
		«EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)».clear();
		«EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)».add(«newEndVar»);
d101 1
a101 1
		«EXPAND xpt::Common::setFeatureValue(referenceOwnerVar, false, newEndVar, false)»;
d111 3
a113 3
		java.util.Collection values = «EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)»;
		«EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)».clear();
		«EXPAND xpt::Common::getFeatureValue(newEndVar, false)».addAll(values);
d115 3
a117 3
		Object value = «EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)»;
		«EXPAND xpt::Common::setFeatureValue(referenceOwnerVar, false, "null", true)»;
		«EXPAND xpt::Common::setFeatureValue(newEndVar, false, "value", false)»;
@


1.2
log
@avoid unnecessary cast
@
text
@d96 1
a96 1
		org.eclipse.emf.common.util.EList values = «EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)»;
@


1.1
log
@[114348] add command to reorient ref based links
@
text
@d100 1
a100 1
		org.eclipse.emf.ecore.EObject value = «EXPAND xpt::Common::getFeatureValue(referenceOwnerVar, false)»;
@

