head	1.13;
access;
symbols
	v20081022-1925:1.13
	v20081015-1925:1.13
	v20081008-1925:1.13
	v20081001-1925:1.13
	v20080930-1130:1.13
	v20080926-1245:1.13
	v20080924-1925:1.13
	v20080917-1925:1.13
	v20080911-1728:1.13
	v20080910-1520:1.13
	v20080903-1520:1.13
	v20080827-1520:1.13
	v20080813-1520:1.12
	v20080806-1520:1.12
	v20080722-1827:1.12
	v20080718-1731:1.12
	v20080716-1600:1.11
	v20080716-1642:1.12
	R2_1_maintenance:1.11.0.2
	Root_R2_1_maintenance:1.11
	R2_1_0:1.11
	v20080610-1132:1.11
	v20080603-1553:1.11
	v20080528-1052:1.11
	v20080521:1.11
	v20080516-1543:1.11
	v20080516-1143:1.11
	v20080512-1200:1.11
	v20080508-2000:1.11
	v20080507-1326:1.11
	v20080503-1740:1.10
	v20080501-1739:1.10
	v20080425-1959:1.10
	v20080417-1610:1.10
	v20080411-0411:1.10
	v20080404-1111:1.10
	v20080322-0000:1.10
	v20080222-1200:1.9
	v20080215-1500:1.9
	v20080207-0207:1.9
	v20071222-1111:1.9
	v20071214-1111:1.9
	v20071130-1111:1.9
	v20071124-0000:1.9
	v20071112-0000:1.9
	v20071108-0000:1.9
	v20071003-0000:1.9
	v20070928-0000:1.9
	v20070921-0000:1.9
	v20070915-0000:1.9
	v20070903-0000:1.9
	v20070809-0000:1.9
	R2_0_maintenance:1.9.0.2
	R2_0:1.9
	R4_20:1.9
	v20070621-0000:1.9
	RC3_20:1.9
	v20070614-1400:1.9
	v20070608-1300:1.9
	v20070605-1400:1.9
	v20070601-1400:1.9
	v20070525-1500:1.9
	v20070520-1200:1.9
	v20070518-1300:1.8
	v20070504-1000:1.7
	v20070427-0600:1.7
	v20070420-1000:1.5;
locks; strict;
comment	@# @;
expand	@k@;


1.13
date	2008.08.20.13.30.37;	author dstadnik;	state Exp;
branches;
next	1.12;
commitid	26c448ac1c694567;

1.12
date	2008.07.01.18.48.54;	author atikhomirov;	state Exp;
branches;
next	1.11;
commitid	4f11486a7c164567;

1.11
date	2008.05.07.13.56.00;	author atikhomirov;	state Exp;
branches;
next	1.10;
commitid	39124821b4de4567;

1.10
date	2008.02.26.13.53.51;	author atikhomirov;	state Exp;
branches;
next	1.9;
commitid	19d047c419ed4567;

1.9
date	2007.05.18.21.17.19;	author atikhomirov;	state Exp;
branches;
next	1.8;
commitid	2591464e17d14567;

1.8
date	2007.05.15.18.15.34;	author ashatalin;	state Exp;
branches;
next	1.7;
commitid	117a4649f8c64567;

1.7
date	2007.04.24.15.37.47;	author dstadnik;	state Exp;
branches;
next	1.6;
commitid	4e6462e244a4567;

1.6
date	2007.04.23.14.04.58;	author dstadnik;	state Exp;
branches;
next	1.5;
commitid	4a11462cbd094567;

1.5
date	2007.04.19.11.24.57;	author dstadnik;	state Exp;
branches;
next	1.4;
commitid	7d83462751894567;

1.4
date	2007.04.18.19.20.52;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	bf246266f934567;

1.3
date	2007.04.18.18.36.42;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	68694626653a4567;

1.2
date	2007.04.18.17.34.28;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	2e44462656a24567;

1.1
date	2007.04.17.12.46.11;	author dstadnik;	state Exp;
branches;
next	;
commitid	46154624c1914567;


desc
@@


1.13
log
@[199995] generate valid code for links with unchangeable features
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»

«EXTENSION xpt::GenModelUtils»

«DEFINE CreateRefLinkCommand FOR gmfgen::GenLink-»
«EXPAND xpt::Common::copyright FOR diagram.editorGen-»
package «diagram.editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «createCommandClassName» extends org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand {
	«EXPAND xpt::diagram::commands::CreateLinkUtils::fields FOR modelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	public «createCommandClassName»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest request,
			org.eclipse.emf.ecore.EObject source, org.eclipse.emf.ecore.EObject target) {
		super(request.getLabel(), null, request);
		«EXPAND xpt::diagram::commands::CreateLinkUtils::init FOR modelFacet-»
	}
	«EXPAND xpt::diagram::commands::CreateLinkUtils::canCreate(this) FOR modelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gmf.runtime.common.core.command.CommandResult doExecuteWithResult(
			org.eclipse.core.runtime.IProgressMonitor monitor, org.eclipse.core.runtime.IAdaptable info)
			throws org.eclipse.core.commands.ExecutionException {
		if (!canExecute()) {
			throw new org.eclipse.core.commands.ExecutionException("Invalid arguments in create link command"); «EXPAND xpt::Common::nonNLS»
		}
		«EXPAND execute FOR modelFacet-»
	}
	«EXPAND xpt::diagram::commands::CreateLinkUtils::accessors FOR modelFacet-»
}
«ENDDEFINE»

«DEFINE execute FOR gmfgen::LinkModelFacet-»
«ENDDEFINE»

«DEFINE execute FOR gmfgen::FeatureLinkModelFacet-»
«IF metaFeature.ecoreFeature.changeable-»
	if (getSource() != null && getTarget() != null) {
		«EXPAND MetaModel::modifyFeature("getSource()", getSourceType(), "getTarget()") FOR metaFeature-»
	}
	return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult();
«ELSE-»
	throw new UnsupportedOperationException();
«ENDIF-»
«ENDDEFINE»
@


1.12
log
@refactored templates moving towards [188329] - Support Java 5.0 (would need to respect generic types when adding into collections) while trying to accomplish [227127]
@
text
@d42 1
a42 4
		if (getSource() != null && getTarget() != null) {
			«EXPAND setValue FOR modelFacet-»
		}
		return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult();
d48 1
a48 1
«DEFINE setValue FOR gmfgen::LinkModelFacet-»
d51 9
a59 5
«REM»
	Code to update reference.
«ENDREM»
«DEFINE setValue FOR gmfgen::FeatureLinkModelFacet-»
«EXPAND MetaModel::modifyFeature("getSource()", getSourceType(), "getTarget()") FOR metaFeature»
@


1.11
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@d58 1
a58 5
	«IF metaFeature.ecoreFeature.many-»
		«EXPAND MetaModel::getFeatureValue("getSource()", getSourceType()) FOR metaFeature».add(getTarget());
	«ELSE-»
		«EXPAND MetaModel::setFeatureValue("getSource()", getSourceType(), "getTarget()") FOR metaFeature»;
	«ENDIF-»
@


1.10
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.9
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d59 1
a59 1
		«EXPAND xpt::Common::getFeatureValue("getSource()", getSourceType()) FOR metaFeature».add(getTarget());
d61 1
a61 1
		«EXPAND xpt::Common::setFeatureValue("getSource()", getSourceType(), "getTarget()") FOR metaFeature»;
@


1.8
log
@Non-nls comment replaced by template call.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.7
log
@do not create additional request
@
text
@d40 1
a40 1
			throw new org.eclipse.core.commands.ExecutionException("Invalid arguments in create link command"); //$NON-NLS-1$
@


1.6
log
@[180702] Move logic from semantic edit policy into creation commands
@
text
@d28 2
a29 1
	public «createCommandClassName»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest request) {
@


1.5
log
@support reversed creation
@
text
@d25 1
a25 6

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject source;

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.emf.ecore.EObject target;
d30 1
a30 20
		source = request.getSource();
		target = request.getTarget();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean canExecute() {
		if (source == null && target == null) {
			return false;
		}
		if (source != null && !(source instanceof «getQualifiedInterfaceName(modelFacet.getSourceType())»)) {
			return false;
		}
		if (target != null && !(target instanceof «getQualifiedInterfaceName(modelFacet.getTargetType())»)) {
			return false;
		}
		if (getSource() != null) {
			return «diagram.getBaseItemSemanticEditPolicyQualifiedClassName()».«diagram.getLinkCreationConstraintsClassName()».
					canCreate«getUniqueIdentifier()»(getSource(), getTarget());
		}
		return true; // link creation is in progress; only one end is defined
d32 1
d46 1
a46 10

	«EXPAND xpt::Common::generatedMemberComment»
	protected «getQualifiedInterfaceName(modelFacet.getSourceType())» getSource() {
		return («getQualifiedInterfaceName(modelFacet.getSourceType())») source;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected «getQualifiedInterfaceName(modelFacet.getTargetType())» getTarget() {
		return («getQualifiedInterfaceName(modelFacet.getTargetType())») target;
	}
@


1.4
log
@Removing unnecessary parameters + more correct external interface check added.
@
text
@d41 1
a41 2
		if (!(source instanceof «getQualifiedInterfaceName(modelFacet.getSourceType())» &&
				(target == null || target instanceof «getQualifiedInterfaceName(modelFacet.getTargetType())»))) {
d44 11
a54 2
		return «diagram.getBaseItemSemanticEditPolicyQualifiedClassName()».«diagram.getLinkCreationConstraintsClassName()».
				canCreate«getUniqueIdentifier()»(getSource(), getTarget());
d64 1
a64 1
		if (getTarget() != null) {
@


1.3
log
@command's result is set as View's element, and this doesn't seem to be correct behaviour for ref-only links
@
text
@d82 1
a82 1
		«EXPAND xpt::Common::getFeatureValue("getSource()", getSourceType(), true) FOR metaFeature».add(getTarget());
d84 1
a84 1
		«EXPAND xpt::Common::setFeatureValue("getSource()", true, "getTarget()", true) FOR metaFeature»;
@


1.2
log
@Rewriting template to xpt

[170079] - Do not generate unnecessary CanonicalEditPolicies in case if phantoms are allowed for diagram
@
text
@d59 1
a59 1
		return org.eclipse.gmf.runtime.common.core.command.CommandResult.newOKCommandResult(getSource());
@


1.1
log
@[181778] Generate standalone creation commands for ref links
@
text
@d82 1
a82 1
		«EXPAND xpt::Common::getFeatureValue("getSource()", true) FOR metaFeature».add(getTarget());
@

