head	1.24;
access;
symbols
	v20081022-1925:1.24
	v20081015-1925:1.24
	v20081008-1925:1.24
	v20081001-1925:1.24
	v20080924-1925:1.24
	v20080917-1925:1.24
	v20080911-1728:1.24
	v20080910-1520:1.24
	v20080903-1520:1.24
	v20080827-1520:1.24
	v20080813-1520:1.24
	v20080806-1520:1.24
	v20070202-0200:1.20
	v20061120-1300:1.23
	M3_20:1.23
	v20061117-0800:1.23
	v20061027-1200:1.20
	v20061020-1000:1.20
	v20061013-1330:1.21
	v20060919-0800:1.20
	v20060907-1100:1.20
	M1_20:1.21
	v20060904-1500:1.21
	v20060824-1600:1.20
	v20060817-1500:1.20
	v20060728-0500:1.20
	v20060713-1700:1.20
	R1_0_maintenance:1.20.0.2
	R1_0:1.20
	v20060627-1200:1.20
	v20060626-1420:1.20
	v20060620-0400:1.20
	v20060616-1400:1.20
	v20060616-1200:1.20
	v20060609-1400:1.20
	v20060531-1730:1.19
	v20060530-1930:1.19
	v20060526-1200:1.19
	v20060519-1300:1.19
	v20060519-0800:1.19
	v20060512-1000:1.18
	I20060512-1000:1.18
	I20060505-1400:1.17
	I20060428-1300:1.17
	I20060424-0500:1.17
	I20060424-0300:1.17
	M6_10:1.15
	I20060407-1200:1.11
	I20060331-1000:1.11
	I20060324-0300:1.11
	I20060317-1300:1.11
	I20060317-1200:1.11
	I20060316-1300:1.11
	I20060309-1300:1.6
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.4
	I20060216-1945:1.4
	I20060210-1715:1.4
	I20060209-1815:1.4
	I20060203-0830:1.2
	I20060202-1415:1.2
	I20060129-1145:1.2
	I20060127-0900:1.2
	I20060120-1530:1.2
	I20060113-1700:1.1
	M4_10:1.1
	I20060107-1100:1.1
	I20060105-1630:1.1
	I20051230-1230:1.1
	I20051223-1100:1.1
	I20051217-0925:1.1
	I20051208-2000:1.1
	I20051201-1800:1.1
	I20051124-2000:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.24
date	2006.12.08.14.39.39;	author dstadnik;	state dead;
branches;
next	1.23;
commitid	75d4457979294567;

1.23
date	2006.10.18.09.56.50;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2006.10.17.13.08.11;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2006.07.07.11.58.56;	author dstadnik;	state Exp;
branches;
next	1.20;

1.20
date	2006.06.09.12.31.18;	author dstadnik;	state Exp;
branches;
next	1.19;

1.19
date	2006.05.17.14.22.47;	author dstadnik;	state Exp;
branches;
next	1.18;

1.18
date	2006.05.10.11.13.14;	author dstadnik;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.20.20.37.15;	author ashatalin;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.20.13.59.45;	author dstadnik;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.14.14.47.54;	author dstadnik;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.14.07.36.06;	author dstadnik;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.12.16.28.45;	author dstadnik;	state Exp;
branches;
next	1.12;

1.12
date	2006.04.12.01.16.49;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.15.14.39.11;	author dstadnik;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.14.17.04.50;	author dstadnik;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.13.22.31.59;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.13.18.39.47;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.13.11.02.30;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.07.15.45.28;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.01.13.02.25;	author ashatalin;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.08.17.15.50;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.05.22.57.54;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.19.14.06.54;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.22.11.50.03;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.24
log
@rewrite link label edit part template in xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.parts" class="LinkLabelEditPartGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenLinkLabel genLabel = (GenLinkLabel) ((Object[]) argument)[0];
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
GenCommonBase genHost = genLabel.getLink();
GenDiagram genDiagram = genLabel.getDiagram();
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.draw2d.ConnectionLocator;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.EditPolicy;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editparts.LabelEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genLabel.getEditPartClassName()%> extends LabelEditPart implements ITextAwareEditPart {
<%{	GenCommonBase genCommonBase = genLabel;%>
<%@@ include file="visualID.jetinc"%>
<%}%>
<%@@ include file="textAwareFields.jetinc"%>

	/**
	 * @@generated
	 */
	static {
<%
int labelOffsetX = 0;
int labelOffsetY = 0;
LabelOffsetAttributes labelOffset = (LabelOffsetAttributes) genLabel.getViewmap().find(LabelOffsetAttributes.class);
if (labelOffset != null) {
	labelOffsetX = labelOffset.getX();
	labelOffsetY = labelOffset.getY();
}
%>
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.getType(<%=importManager.getImportedName(genLabel.getEditPartQualifiedClassName())%>.VISUAL_ID), new Point(<%=labelOffsetX%>, <%=labelOffsetY%>));
	}

	/**
	 * @@generated
	 */
	public <%=genLabel.getEditPartClassName()%>(View view) {
		super(view);
	}

	/**
	 * @@generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
<%{	GenCommonBase genCommonBase = genLabel;%>
<%@@ include file="customBehaviour.jetinc"%>
<%}%>
	}

	/**
	 * @@generated
	 */
	public int getKeyPoint() {
		return ConnectionLocator.<%=genLabel.getAlignment()%>;
	}

<%
final boolean needsRefreshBounds = false;
final boolean readOnly = genLabel.isReadOnly();
final boolean useElementIcon = genLabel.isElementIcon();
final boolean designLabel = genLabel.getModelFacet() instanceof DesignLabelModelFacet;
%>
<%@@ include file="textAware.jetinc"%>

	/**
	 * @@generated
	 */
	protected void handleNotificationEvent(<%=importManager.getImportedName("org.eclipse.emf.common.notify.Notification")%> event) {
		Object feature = event.getFeature();
<%@@ include file="handleText.jetinc"%>
		super.handleNotificationEvent(event);
	}
<%@@ include file="labelFigure.jetinc"%>
}
<%importManager.emitSortedImports();%>
@


1.23
log
@#161380 move readOnly back to GenLabel
@
text
@@


1.22
log
@#160894 Move readOnly property from GenLabel to LabelFeatureModelFacet
@
text
@d73 1
a73 1
final boolean readOnly = genLabel.getModelFacet() != null && genLabel.getModelFacet().isReadOnly();
@


1.21
log
@add custom behaviour
@
text
@d73 1
a73 1
final boolean readOnly = genLabel.isReadOnly();
@


1.20
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d25 1
a25 2
<%{
GenCommonBase genCommonBase = genLabel;%>
d59 3
@


1.19
log
@#139127 Provide an option for labels to display node icon
@
text
@d73 1
@


1.18
log
@#133836 Creating a child node without a label causes error
@
text
@d72 1
a73 1
<%@@ include file="textAwareNoIcon.jetinc"%>
@


1.17
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@d69 4
a72 1
<%final boolean needsRefreshBounds = false;%>
@


1.16
log
@#136877 Provide inital offset from the host link for the link label
@
text
@d44 1
a44 3
		registerSnapBackPosition(
				<%=importManager.getImportedName(genLabel.getEditPartQualifiedClassName())%>.VISUAL_ID,
				new Point(<%=labelOffsetX%>, <%=labelOffsetY%>));
@


1.15
log
@handle both Label and WrapLabel : continued further
@
text
@d35 12
a46 1
		registerSnapBackPosition(<%=importManager.getImportedName(genLabel.getEditPartQualifiedClassName())%>.VISUAL_ID, new Point(0, 0));
@


1.14
log
@remove temporary label direct edit policy
@
text
@a60 1
<%@@ include file="textAwareLabel.jetinc"%>
@


1.13
log
@#135694 remove temporary code
@
text
@d17 1
a17 2
//import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
import <%=genDiagram.getEditPoliciesPackageName()%>.LabelDirectEditPolicy;
@


1.12
log
@#125900 Redundant annotations added to View in generated view factory

Visual ID used as a semantic hint for creation of all the diagram elements.
@
text
@d15 1
a15 1
//import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
@


1.11
log
@generate label figures for all label types
@
text
@d26 4
d36 1
a36 1
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getSemanticHintsQualifiedClassName())%>.<%=genLabel.getLink().getUniqueIdentifier()%>Labels.<%=genLabel.getSemanticHintFieldName()%>, new Point(0, 0));
@


1.10
log
@use specified label figure in ext node labels
@
text
@a56 10
	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.draw2d.IFigure")%> createFigure() {
		<%=importManager.getImportedName("org.eclipse.draw2d.Label")%> figure =
			new <%=importManager.getImportedName("org.eclipse.draw2d.Label")%>();
		defaultText = figure.getText();
		return figure;
	}

d70 1
@


1.9
log
@duplicated refreshVisuals method when label's node has flow layout
@
text
@d57 10
@


1.8
log
@use Labels instead of WrapLabels
@
text
@d57 1
@


1.7
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@d57 1
a57 1
<%@@ include file="textAwareWrapLabel.jetinc"%>
@


1.6
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d5 2
d10 1
a10 1
package <%=genDiagram.getEditPartsPackageName()%>;
a11 1
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPartsPackageName());%>
d14 2
d17 2
d25 2
a26 1
public class <%=genLabel.getEditPartClassName()%> extends LabelEditPart {
d32 1
a32 1
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getSemanticHintsQualifiedClassName())%>.<%=genLabel.getLink().getUniqueIdentifier()%>Labels.<%=genLabel.getSemanticHintLabelFieldName()%>, new Point(0, 0));
d45 8
d56 13
@


1.5
log
@#127696 Templates should use new transaction API
@
text
@d7 1
@


1.4
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d21 3
@


1.3
log
@ImportManager moved to oeg.common
@
text
@d4 1
a4 1
GenLinkLabel genLabel = (GenLinkLabel) argument;
@


1.2
log
@#124347 Label snap back action not working in generated code...
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@


1.1
log
@#112187 generate separate class for the link label text view
@
text
@d11 1
d21 4
@

