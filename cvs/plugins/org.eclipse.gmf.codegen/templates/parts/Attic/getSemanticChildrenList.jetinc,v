head	1.2;
access;
symbols
	v20081022-1925:1.2
	v20081015-1925:1.2
	v20081008-1925:1.2
	v20081001-1925:1.2
	v20080924-1925:1.2
	v20080917-1925:1.2
	v20080911-1728:1.2
	v20080910-1520:1.2
	v20080903-1520:1.2
	v20080827-1520:1.2
	v20080813-1520:1.2
	v20080806-1520:1.2
	R1_0_maintenance:1.2.0.2
	R1_0:1.2
	M3_10:1.1
	I20051118-1245:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2005.11.23.10.11.52;	author dstadnik;	state dead;
branches;
next	1.1;

1.1
date	2005.11.17.18.23.01;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@#117660 move canonical edit policy into separate class to shorten it's file name
@
text
@		/**
		 * @@generated
		 */
		protected <%=importManager.getImportedName("java.util.List")%> getSemanticChildrenList() {	
			<%=modelElementInterfaceName%> modelElement = (<%=modelElementInterfaceName%>) ((View) getHost().getModel()).getElement();
			List result = new <%=importManager.getImportedName("java.util.LinkedList")%>();
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextValue;
<%
for (Iterator it = genNodes.iterator(); it.hasNext();) {
	GenNode nextNode = (GenNode) it.next();
	TypeModelFacet typeModelFacet = nextNode.getModelFacet();
	GenFeature childMetaFeature = typeModelFacet.getChildMetaFeature();
	if (childMetaFeature.isListType()) {
%>	
			for (<%=importManager.getImportedName("java.util.Iterator")%> it = <%=getFeatureValueGetter("modelElement", childMetaFeature, false, importManager)%>.iterator(); it.hasNext();) {
				nextValue = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) it.next();
<%
	} else {
%>
			nextValue = <%=getFeatureValueGetter("modelElement", childMetaFeature, false, importManager)%>;
<%
	}
%>
			int nodeVID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getNodeVisualID((View) getHost().getModel(), nextValue, "");
			if (<%=nextNode.getVisualID()%> == nodeVID) {
				result.add(nextValue);
			}
<%
	if (childMetaFeature.isListType()) {
%>
			}
<%
	}
}
%>			
			return result;
		}
@


1.1
log
@#116905
Using VisualIDRegistry to create CanonicalEditPolicies
@
text
@@

