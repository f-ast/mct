head	1.8;
access;
symbols
	v20081022-1925:1.8
	v20081015-1925:1.8
	v20081008-1925:1.8
	v20081001-1925:1.8
	v20080924-1925:1.8
	v20080917-1925:1.8
	v20080911-1728:1.8
	v20080910-1520:1.8
	v20080903-1520:1.8
	v20080827-1520:1.8
	v20080813-1520:1.8
	v20080806-1520:1.8
	R1_0_maintenance:1.8.0.2
	R1_0:1.8
	I20060107-1100:1.7
	I20060105-1630:1.7
	I20051230-1230:1.7
	I20051223-1100:1.7
	I20051217-0925:1.6
	I20051208-2000:1.6
	I20051201-1800:1.6
	I20051124-2000:1.6
	M3_10:1.6
	I20051118-1245:1.6
	I20051111-1800:1.5
	I20051106-0900:1.4
	v20051030:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.8
date	2006.01.12.10.41.33;	author dstadnik;	state dead;
branches;
next	1.7;

1.7
date	2005.12.20.18.00.01;	author ashatalin;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.17.09.14.15;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.11.13.47.42;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.02.17.53.03;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.21.13.31.56;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.18.11.09.13;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.11.12.50.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.8
log
@#122054 support external node labels (partial fix)
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.providers" class="LinkLabelViewFactoryGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
<%GenLinkLabel label = (GenLinkLabel) argument;%>
<%GenDiagram diagram = label.getDiagram();%>
package <%=diagram.getNotationViewFactoriesPackageName()%>;

<%ImportUtil importManager = new ImportUtil(diagram.getNotationViewFactoriesPackageName());%>
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.emf.ecore.EAnnotation;
import org.eclipse.emf.ecore.EcoreFactory;
import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
import org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractLabelViewFactory;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=label.getNotationViewFactoryClassName()%> extends AbstractLabelViewFactory {

	/**
	 * @@generated
	 */
	protected void decorateView(View containerView, View view, IAdaptable semanticAdapter,
		String semanticHint, int index, boolean persisted) {
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
<%GenCommonBase genElement = label;%>
<%@@ include file="createVIDAnnotation.jetinc"%>
		getViewService().createNode(semanticAdapter, view,
			<%=importManager.getImportedName(diagram.getSemanticHintsQualifiedClassName())%>.<%=label.getLink().getUniqueIdentifier()%>Labels.<%=label.getSemanticHintFieldName()%>,
			ViewUtil.APPEND, persisted, getPreferencesHint());
	}
}
<%importManager.emitSortedImports();%>
@


1.7
log
@#121581
Fields for the compartments are named unique.
@
text
@@


1.6
log
@#116798 create distinct package for the view factories
@
text
@d30 1
a30 1
			<%=importManager.getImportedName(diagram.getSemanticHintsQualifiedClassName())%>.<%=label.getLink().getUniqueIdentifier()%>Labels.<%=AccessUtil.getLabelTextId(label)%>,
@


1.5
log
@#115972 generate single class with semantic hints
@
text
@d5 1
a5 1
package <%=diagram.getProvidersPackageName()%>;
d7 1
a7 1
<%ImportUtil importManager = new ImportUtil(diagram.getProvidersPackageName());%>
@


1.4
log
@[ashatalin] #114750 annotate diagram runtime model elements with visual id to tell one from another during EP decision making
@
text
@d7 1
d14 1
d30 1
a30 1
			<%=AccessUtil.getSemanticHintsClassName(label.getLink())%>.Labels.<%=AccessUtil.getLabelTextId(label)%>,
d34 1
@


1.3
log
@[dstadnik] #112195 multiple labels for the node, facets introduced, genmodel cleaned and refactored
@
text
@d8 2
d25 2
@


1.2
log
@[dstadnik] #112174 and #112185 - constants for compartments and labels
@
text
@d3 3
a5 3
<%LinkLabel label = (LinkLabel) argument;%>
<%GenDiagram genDiagram = label.getLink().getDiagram();%>
package <%=genDiagram.getProvidersPackageName()%>;
d15 1
a15 1
public class <%=AccessUtil.getLinkLabelViewFactoryClassName(label)%> extends AbstractLabelViewFactory {
d24 1
a24 1
			<%=AccessUtil.getSemanticHintsClassName(label.getLink())%>.Labels.<%=AccessUtil.getLinkLabelTextId(label)%>,
@


1.1
log
@[dstadnik] #112189 remove editProviders package attribute from genmodel
@
text
@d23 2
a24 1
		getViewService().createNode(semanticAdapter, view, "<%=AccessUtil.getLinkLabelTextViewName(label)%>",
@

