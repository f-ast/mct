head	1.5;
access;
symbols
	v20081022-1925:1.5
	v20081015-1925:1.5
	v20081008-1925:1.5
	v20081001-1925:1.5
	v20080924-1925:1.5
	v20080917-1925:1.5
	v20080911-1728:1.5
	v20080910-1520:1.5
	v20080903-1520:1.5
	v20080827-1520:1.5
	v20080813-1520:1.5
	v20080806-1520:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	I20060107-1100:1.4
	I20060105-1630:1.4
	I20051230-1230:1.4
	I20051223-1100:1.4
	I20051217-0925:1.4
	I20051208-2000:1.3
	I20051201-1800:1.3
	I20051124-2000:1.3
	M3_10:1.3
	I20051118-1245:1.3
	I20051111-1800:1.2
	I20051106-0900:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.5
date	2006.01.12.10.41.33;	author dstadnik;	state dead;
branches;
next	1.4;

1.4
date	2005.12.10.14.59.33;	author ashatalin;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.17.09.14.15;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.04.13.28.37;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.02.17.53.03;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.5
log
@#122054 support external node labels (partial fix)
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.providers" class="TextLabelViewFactoryGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
<%
GenLabel label = (GenLabel) argument;
GenDiagram diagram = label.getDiagram();
boolean isFlowLayout = label instanceof GenNodeLabel ? ((GenNodeLabel) label).getNode().getChildContainersPlacement() == CompartmentPlacementKind.FLOW_LITERAL : false;
ImportUtil importManager = new ImportUtil(diagram.getNotationViewFactoriesPackageName());
%>
package <%=diagram.getNotationViewFactoriesPackageName()%>;

<%
importManager.markImportLocation(stringBuffer);
importManager.addImport("org.eclipse.core.runtime.IAdaptable");
importManager.addImport("org.eclipse.emf.ecore.EAnnotation");
importManager.addImport("org.eclipse.emf.ecore.EcoreFactory");
importManager.addImport("org.eclipse.gmf.runtime.notation.View");
%>

/**
 * @@generated
 */
public class <%=label instanceof GenLinkLabel ? ((GenLinkLabel) label).getTextNotationViewFactoryClassName() : label.getNotationViewFactoryClassName()%> extends <%=isFlowLayout ? importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory") : importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory")%> {

	/**
	 * @@generated
	 */
	protected void decorateView(View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
<%GenCommonBase genElement = label;%>
<%@@ include file="createVIDAnnotation.jetinc"%>
	}
}
<%importManager.emitSortedImports();%>@


1.4
log
@#118059
- ChildNodes could be places directly inside the node, without compartment
- XY layout is possible for Gen*Nodes
@
text
@@


1.3
log
@#116798 create distinct package for the view factories
@
text
@d2 7
a8 3
	imports="org.eclipse.gmf.codegen.gmfgen.*"%>
<%GenLabel label = (GenLabel) argument;%>
<%GenDiagram diagram = label.getDiagram();%>
d11 7
a17 5
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.emf.ecore.EAnnotation;
import org.eclipse.emf.ecore.EcoreFactory;
import org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory;
import org.eclipse.gmf.runtime.notation.View;
d22 1
a22 1
public class <%=label instanceof GenLinkLabel ? ((GenLinkLabel) label).getTextNotationViewFactoryClassName() : label.getNotationViewFactoryClassName()%> extends BasicNodeViewFactory {
d33 1
@


1.2
log
@clean unused code
@
text
@d5 1
a5 1
package <%=diagram.getProvidersPackageName()%>;
@


1.1
log
@[ashatalin] #114750 annotate diagram runtime model elements with visual id to tell one from another during EP decision making
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@

