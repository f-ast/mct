head	1.14;
access;
symbols
	v20081022-1925:1.14
	v20081015-1925:1.14
	v20081008-1925:1.14
	v20081001-1925:1.14
	v20080924-1925:1.14
	v20080917-1925:1.14
	v20080911-1728:1.14
	v20080910-1520:1.14
	v20080903-1520:1.14
	v20080827-1520:1.14
	v20080813-1520:1.14
	v20080806-1520:1.14
	v20070601-1400:1.13
	v20070525-1500:1.13
	v20070520-1200:1.13
	v20070518-1300:1.13
	v20070504-1000:1.13
	v20070427-0600:1.13
	v20070420-1000:1.13
	v20070413-1300:1.13
	v20070405-1100:1.13
	v20070403-1500:1.13
	v20070330-1300:1.13
	v20060330-1300:1.13
	v20070322-1100:1.13
	v20060316-0600:1.13
	v20070307-0700:1.13
	v20070301-1200:1.13
	v20070228-2000:1.13
	v20070221-1500:1.13
	v20070208-1800:1.13
	v20070202-0200:1.13
	v20070103-0300:1.13
	M4_20:1.13
	v20061222-1800:1.13
	v20061218-1200:1.13
	v20061214-0000:1.13
	v20061120-1300:1.13
	M3_20:1.13
	v20061117-0800:1.13
	v20061027-1200:1.13
	v20061020-1000:1.13
	v20061013-1330:1.13
	v20060919-0800:1.13
	v20060907-1100:1.13
	M1_20:1.13
	v20060904-1500:1.13
	v20060824-1600:1.13
	v20060817-1500:1.13
	v20060728-0500:1.13
	v20060713-1700:1.13
	R1_0_maintenance:1.13.0.2
	R1_0:1.13
	v20060627-1200:1.13
	v20060626-1420:1.13
	v20060620-0400:1.12
	v20060616-1400:1.12
	v20060616-1200:1.12
	v20060609-1400:1.12
	v20060531-1730:1.11
	v20060530-1930:1.11
	v20060526-1200:1.11
	v20060519-1300:1.11
	v20060519-0800:1.11
	v20060512-1000:1.9
	I20060512-1000:1.9
	I20060505-1400:1.9
	I20060428-1300:1.9
	I20060424-0500:1.9
	I20060424-0300:1.9
	M6_10:1.8
	I20060407-1200:1.7
	I20060331-1000:1.7
	I20060324-0300:1.7
	I20060317-1300:1.7
	I20060317-1200:1.7
	I20060316-1300:1.7
	I20060309-1300:1.6
	M5_10:1.5
	S20060303-1600:1.5
	I20060227-1730:1.5
	I20060216-1945:1.5
	I20060210-1715:1.5
	I20060209-1815:1.5
	I20060203-0830:1.3
	I20060202-1415:1.3
	I20060129-1145:1.3
	I20060127-0900:1.3
	I20060120-1530:1.3
	I20060113-1700:1.2
	M4_10:1.2;
locks; strict;
comment	@# @;
expand	@k@;


1.14
date	2007.06.04.12.58.11;	author dstadnik;	state dead;
branches;
next	1.13;
commitid	6a8946640c624567;

1.13
date	2006.06.21.15.22.41;	author ashatalin;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.09.12.31.18;	author dstadnik;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.18.13.58.29;	author atikhomirov;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.17.12.39.15;	author atikhomirov;	state Exp;
branches;
next	1.9;

1.9
date	2006.04.20.17.08.07;	author ashatalin;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.13.22.22.22;	author ashatalin;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.13.11.02.29;	author dstadnik;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.07.15.45.27;	author dstadnik;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.08.17.15.39;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.05.22.57.53;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.19.00.10.43;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.12.17.19.23;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.12.10.41.33;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.14
log
@rewrite label view factories in xpand
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.providers" class="LabelTextViewFactoryGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.codegen.gmfgen.util.*"%>
<%
final GenNodeLabel genLabel = (GenNodeLabel) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
GenDiagram genDiagram = genLabel.getDiagram();
ViewmapLayoutTypeHelper layoutHelper = ViewmapLayoutTypeHelper.getSharedInstance();

final boolean hasShapeStyles = layoutHelper.isStoringChildPositions(genLabel.getNode());
final boolean isDesignLabel = genLabel.getModelFacet() instanceof DesignLabelModelFacet;

Viewmap viewmap = genLabel.getViewmap();
StyleAttributes styleAttributes = (viewmap == null) ? null : (StyleAttributes)viewmap.find(StyleAttributes.class);
final boolean isFixedFont = styleAttributes != null && styleAttributes.isFixedFont();
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genLabel.getNotationViewFactoryClassName()%> extends <%=layoutHelper.isStoringChildPositions(genLabel.getNode()) ?
	importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory") :
	importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory")%> {

	/**
	 * @@generated
	 */
	protected void decorateView(View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
	}

	/**
	 * @@generated
	 */
	protected List createStyles(View view) {
		<%=importManager.getImportedName("java.util.List")%> styles = new <%=importManager.getImportedName("java.util.ArrayList")%>();
<%
if (hasShapeStyles || isDesignLabel) {
%>
		styles.add(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createDescriptionStyle());
<%
}
if (hasShapeStyles) {
%>
		styles.add(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createFillStyle());
		styles.add(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createLineStyle());
<%
	if (!isFixedFont) {
%>		
		styles.add(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createFontStyle());
<%
	}
}
%>
		return styles;
	}
}
<%importManager.emitSortedImports();%>
@


1.13
log
@[mgolubev] #147853 Fonts defined in the gmfgraph model should be used by the generated labels
@
text
@@


1.12
log
@#144683 It should be possible to modify label value on pure design diagram
@
text
@d8 7
d36 1
a36 1
<%if (genLabel.getModelFacet() instanceof DesignLabelModelFacet) {%>
d41 4
a44 1
		<%=importManager.getImportedName("java.util.List")%> styles = super.createStyles(view);
d46 14
a61 1
<%}%>
@


1.11
log
@use importAssistant to emit package statement instead of handcoding
@
text
@d14 1
a14 3
<%
importManager.markImportLocation(stringBuffer);
%>
d29 10
@


1.10
log
@[mgolubev] #140186 XYLayoutEditPolicy should not be installed for editparts that have figure with non-XYLayout in the gmfgraph model
@
text
@d4 2
a5 1
GenNodeLabel genLabel = (GenNodeLabel) ((Object[]) argument)[0];
a6 1
ImportUtil importManager = new ImportUtil(genDiagram.getNotationViewFactoriesPackageName());
d10 1
a10 1
package <%=genDiagram.getNotationViewFactoriesPackageName()%>;
@


1.9
log
@Removing obsolete code to get rid of compilation warnings.
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
d7 1
d21 3
a23 3
public class <%=genLabel.getNotationViewFactoryClassName()%> extends <%=genLabel.getNode().isListLayout() ?
	importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory") :
	importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory")%> {
@


1.8
log
@#125900 Redundant annotations added to View in generated view factory
@
text
@a28 1
<%GenCommonBase genElement = genLabel;%>
@


1.7
log
@#129145 do not use intermediate TextCompartmentEditParts
@
text
@a14 2
importManager.addImport("org.eclipse.emf.ecore.EAnnotation");
importManager.addImport("org.eclipse.emf.ecore.EcoreFactory");
a29 1
<%@@ include file="createVIDAnnotation.jetinc"%>
@


1.6
log
@#130100 Allow to specify copyright text in gmfgen model
@
text
@d4 2
a5 2
GenLabel label = (GenLabel) ((Object[]) argument)[0];
GenDiagram genDiagram = label.getDiagram();
d11 2
a14 1
importManager.addImport("org.eclipse.core.runtime.IAdaptable");
a16 2
importManager.addImport("org.eclipse.gmf.runtime.notation.View");
boolean isFlowLayout = label instanceof GenNodeLabel && !((GenNodeLabel) label).getNode().isListLayout();
d22 3
a24 2
public class <%=label instanceof ExternalLabel ? ((ExternalLabel) label).getTextNotationViewFactoryClassName() : label.getNotationViewFactoryClassName()%>
	extends <%=isFlowLayout ? importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory") : importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory")%> {
d31 1
a31 1
<%GenCommonBase genElement = label;%>
@


1.5
log
@ImportManager has to know its package anyway, so why not use it to emit appropriate statement?
Besides, package fragment is external to template, template has no control over file placement, thus we'd better pass package name as an argument
@
text
@d8 1
@


1.4
log
@ImportManager moved to oeg.common
@
text
@d4 1
a4 1
GenLabel label = (GenLabel) argument;
@


1.3
log
@#124413
Allowing infinite hierarchy of GenChildNodes
@
text
@d2 1
a2 1
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
@


1.2
log
@#114178
Create shortcut functionality added
@
text
@d16 1
a16 1
boolean isFlowLayout = label instanceof GenNodeLabel ? ((GenNodeLabel) label).getNode().getChildContainersPlacement() == CompartmentPlacementKind.FLOW_LITERAL : false;
@


1.1
log
@#122054 support external node labels (partial fix)
@
text
@d5 2
a6 2
GenDiagram diagram = label.getDiagram();
ImportUtil importManager = new ImportUtil(diagram.getNotationViewFactoriesPackageName());
d8 1
a8 1
package <%=diagram.getNotationViewFactoriesPackageName()%>;
@

