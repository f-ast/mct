head	1.6;
access;
symbols
	v20081022-1925:1.6
	v20081015-1925:1.6
	v20081008-1925:1.6
	v20081001-1925:1.6
	v20080924-1925:1.6
	v20080917-1925:1.6
	v20080911-1728:1.6
	v20080910-1520:1.6
	v20080903-1520:1.6
	v20080827-1520:1.6
	v20080813-1520:1.6
	v20080806-1520:1.6
	v20070202-0200:1.5
	v20070103-0300:1.5
	M4_20:1.5
	v20061222-1800:1.5
	v20061218-1200:1.5
	v20061214-0000:1.5
	v20061120-1300:1.5
	M3_20:1.5
	v20061117-0800:1.5
	v20061027-1200:1.5
	v20061020-1000:1.5
	v20061013-1330:1.5
	v20060919-0800:1.5
	v20060907-1100:1.5
	M1_20:1.5
	v20060904-1500:1.5
	v20060824-1600:1.5
	v20060817-1500:1.5
	v20060728-0500:1.5
	v20060713-1700:1.5
	R1_0_maintenance:1.5.0.2
	R1_0:1.5
	v20060627-1200:1.5
	v20060626-1420:1.5
	v20060620-0400:1.5
	v20060616-1400:1.5
	v20060616-1200:1.5
	v20060609-1400:1.5
	v20060531-1730:1.5
	v20060530-1930:1.5
	v20060526-1200:1.5
	v20060519-1300:1.4
	v20060519-0800:1.4
	v20060512-1000:1.4
	I20060512-1000:1.4
	I20060505-1400:1.4
	I20060428-1300:1.4
	I20060424-0500:1.4
	I20060424-0300:1.4
	M6_10:1.3;
locks; strict;
comment	@# @;
expand	@k@;


1.6
date	2007.01.08.18.09.51;	author dstadnik;	state dead;
branches;
next	1.5;
commitid	78dd45a288ee4567;

1.5
date	2006.05.22.10.02.14;	author dstadnik;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.19.19.42.26;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.12.16.45.45;	author dstadnik;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.12.14.22.03;	author dstadnik;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.12.08.48.33;	author dstadnik;	state Exp;
branches;
next	;


desc
@@


1.6
log
@rewrite plugin.xml template in xpand
@
text
@<%
if (!genElement.getElementType().isDefinedExternally()) {
	final String displayName = genElement.getElementType().getDisplayName();

	if (genElement.getElementType() instanceof MetamodelType) {
		MetamodelType metamodelType = (MetamodelType) genElement.getElementType();
		GenClass metaClass = metamodelType.getMetaClass();
%>
      <metamodel nsURI="<%=metaClass.getGenPackage().getNSURI()%>">
         <metamodelType
               id="<%=metamodelType.getUniqueIdentifier()%>"
<%		if (displayName != null) {%>
               name="<%=displayName%>"
<%		}%>
               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
               eclass="<%=metaClass.getName()%>"
               edithelper="<%=metamodelType.getEditHelperQualifiedClassName()%>">
            <param name="semanticHint" value="<%=genElement.getVisualID()%>"/>
         </metamodelType>
      </metamodel>
<%
	} else if (genElement.getElementType() instanceof SpecializationType) {
		SpecializationType specializationType = (SpecializationType) genElement.getElementType();
		MetamodelType metamodelType = specializationType.getMetamodelType();
		GenClass metaClass = null;
		String metamodelTypeId = "org.eclipse.gmf.runtime.emf.type.core.null";
		if (metamodelType != null) {
			metaClass = metamodelType.getMetaClass();
			metamodelTypeId = metamodelType.getUniqueIdentifier();
		}
		if (genElement instanceof GenLink) {
			LinkModelFacet modelFacet = ((GenLink) genElement).getModelFacet();
			if (modelFacet instanceof FeatureLinkModelFacet) {
				GenFeature metaFeature = ((FeatureLinkModelFacet) modelFacet).getMetaFeature();
				metaClass = metaFeature.getGenClass();
			}
		}
		if (metaClass != null) {
%>
      <metamodel nsURI="<%=metaClass.getGenPackage().getNSURI()%>">
<%		}%>
         <specializationType
               id="<%=specializationType.getUniqueIdentifier()%>"
<%		if (displayName != null) {%>
               name="<%=displayName%>"
<%		}%>
               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
               edithelperadvice="<%=specializationType.getEditHelperAdviceQualifiedClassName()%>">
            <specializes id="<%=metamodelTypeId%>"/>
            <param name="semanticHint" value="<%=genElement.getVisualID()%>"/>
         </specializationType>
<%		if (metaClass != null) {%>
      </metamodel>
<%
		}
	} else if (genElement.getElementType() instanceof NotationType) {
		NotationType notationType = (NotationType) genElement.getElementType();
%>
      <specializationType
            id="<%=notationType.getUniqueIdentifier()%>"
<%		if (displayName != null) {%>
               name="<%=displayName%>"
<%		}%>
            kind="org.eclipse.gmf.runtime.diagram.ui.util.INotationType">
         <specializes id="org.eclipse.gmf.runtime.emf.type.core.null"/>
         <param name="semanticHint" value="<%=genElement.getVisualID()%>"/>
      </specializationType>
<%
	}
}
%>@


1.5
log
@#139021 Generated code should register all used element types inside own elementTypeBinding
@
text
@@


1.4
log
@#131270 Duplicated tool entries when same tool definition is referenced from gmfmap.
@
text
@d2 1
a2 1
{
@


1.3
log
@generate diagram when no tool groups are defined
@
text
@d3 1
a3 26
	String displayName = null;

	// Let element type label be the name of the corresponding creation tool.
	// The better solution would be to introduce dedicated property in the model.
	if (genElement.getDiagram().getPalette() != null && genElement.getDiagram().getPalette().getGroups() != null) {
		for (Iterator groups = genElement.getDiagram().getPalette().getGroups().iterator(); groups.hasNext(); ) {
			ToolGroup group = (ToolGroup) groups.next();
			for (Iterator tools = group.getNodeTools().iterator(); tools.hasNext(); ) {
				NodeEntry toolEntry = (NodeEntry) tools.next();
				if (toolEntry.getGenNode().contains(genElement)) {
					displayName = toolEntry.getTitleKey();
					break;
				}
			}
			if (displayName != null) {
				break;
			}
			for (Iterator tools = group.getLinkTools().iterator(); tools.hasNext(); ) {
				LinkEntry toolEntry = (LinkEntry) tools.next();
				if (toolEntry.getGenLink().contains(genElement)) {
					displayName = toolEntry.getTitleKey();
					break;
				}
			}
		}
	}
@


1.2
log
@#135272 use creation tool names in modeling assistant
@
text
@d7 11
a17 6
	for (Iterator groups = genElement.getDiagram().getPalette().getGroups().iterator(); groups.hasNext(); ) {
		ToolGroup group = (ToolGroup) groups.next();
		for (Iterator tools = group.getNodeTools().iterator(); tools.hasNext(); ) {
			NodeEntry toolEntry = (NodeEntry) tools.next();
			if (toolEntry.getGenNode().contains(genElement)) {
				displayName = toolEntry.getTitleKey();
d20 6
a25 9
		}
		if (displayName != null) {
			break;
		}
		for (Iterator tools = group.getLinkTools().iterator(); tools.hasNext(); ) {
			LinkEntry toolEntry = (LinkEntry) tools.next();
			if (toolEntry.getGenLink().contains(genElement)) {
				displayName = toolEntry.getTitleKey();
				break;
@


1.1
log
@#126200 register element types in xml
@
text
@d2 26
d35 3
d67 3
d84 3
d93 1
@

