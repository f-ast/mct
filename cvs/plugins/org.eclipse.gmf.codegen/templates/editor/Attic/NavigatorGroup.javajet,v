head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2006.09.22.13.21.24;	author ashatalin;	state dead;
branches;
next	1.3;

1.3
date	2006.09.13.16.11.04;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.12.18.18.19;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.11.18.21.36;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Read-only properties provided into the navigator.
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.editor" class="NavigatorGroupGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public class <%=genNavigator.getGroupWrapperClassName()%> {

	/**
	 * @@generated
	 */	
	private String myGroupName;
	
	/**
	 * @@generated
	 */	
	private String myIcon;
	
	/**
	 * @@generated
	 */	
	private String myModelID;

	/**
	 * @@generated
	 */	
	private <%=importManager.getImportedName("java.util.Collection")%> myChildren = new <%=importManager.getImportedName("java.util.LinkedList")%>();
	
	/**
	 * @@generated
	 */	
	private Object myParent;

	/**
	 * @@generated
	 */	
	<%=genNavigator.getGroupWrapperClassName()%>(String groupName, String icon, String modelID, Object parent) {
		myGroupName = groupName;
		myIcon = icon;
		myParent = parent;
		myModelID = modelID;
	}
	
	/**
	 * @@generated
	 */	
	public String getGroupName() {
		return myGroupName;
	}
	
	/**
	 * @@generated
	 */	
	public String getIcon() {
		return myIcon;
	}
	
	/**
	 * @@generated
	 */	
	public Object[] getChildren() {
		return myChildren.toArray();
	}
	
	/**
	 * @@generated
	 */	
	public Object getParent() {
		return myParent;
	}

	/**
	 * @@generated
	 */	
	public void addChildren(<%=importManager.getImportedName("java.util.Collection")%> children) {
		myChildren.addAll(children);
	}
	
	/**
	 * @@generated
	 */	
	public void addChild(Object child) {
		myChildren.add(child);
	}
	
	/**
	 * @@generated
	 */	
	public boolean isEmpty() {
		return myChildren.size() == 0;
	}
	
	/**
	 * @@generated
	 */	
	public String getModelID() {
		return myModelID;
	}
	
}
<%importManager.emitSortedImports();%>
@


1.3
log
@getParent() method generated for NavigatorContentProvider.
@
text
@@


1.2
log
@- hideIfEmpty property added to the GenNavigatorChildReference
- recursive iteration through connections graph added
@
text
@d27 5
d37 5
d46 1
a46 1
	<%=genNavigator.getGroupWrapperClassName()%>(String groupName, String icon) {
d49 2
d73 7
d91 7
d102 7
@


1.1
log
@Model navigator, initial version.
@
text
@d68 8
@

