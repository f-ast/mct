head	1.4;
access;
symbols
	v20081022-1925:1.4
	v20081015-1925:1.4
	v20081008-1925:1.4
	v20081001-1925:1.4
	v20080924-1925:1.4
	v20080917-1925:1.4
	v20080911-1728:1.4
	v20080910-1520:1.4
	v20080903-1520:1.4
	v20080827-1520:1.4
	v20080813-1520:1.4
	v20080806-1520:1.4
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.3
	v20070301-1200:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070202-0200:1.1.2.1
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061218-1200:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061027-1200:1.1.2.1
	v20061020-1000:1.1.2.1
	v20061013-1330:1.3
	v20060919-0800:1.1.2.1
	v20060907-1100:1.1.2.1
	M1_20:1.2
	v20060904-1500:1.2
	v20060824-1600:1.1.2.1
	v20060817-1500:1.1.2.1
	v20060728-0500:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1
	I20060407-1200:1.1
	I20060331-1000:1.1
	I20060324-0300:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.04.18.17.34.28;	author ashatalin;	state dead;
branches;
next	1.3;
commitid	2e44462656a24567;

1.3
date	2006.10.06.13.28.47;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.17.17.06.15;	author ashatalin;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.19.16.57.17;	author ashatalin;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.17.17.10.33;	author ashatalin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Rewriting template to xpt

[170079] - Do not generate unnecessary CanonicalEditPolicies in case if phantoms are allowed for diagram
@
text
@<%
final Map<GenClass, GenTopLevelNode> genClass2Phantom = genDiagram.getGenClass2PhantomMap();
final List<GenLink> phantomLinks = genDiagram.getPhantomLinks();
if (genClass2Phantom.size() > 0 && phantomLinks.size() > 0) {
%>
	/**
	 * @@generated
	 */
	protected void refreshSemantic() {
		<%=importManager.getImportedName("java.util.List")%> createdViews = new <%=importManager.getImportedName("java.util.LinkedList")%>();
		createdViews.addAll(refreshSemanticChildren());
		createdViews.addAll(refreshPhantoms());
		makeViewsImmutable(createdViews);
	}
	
	/**
	 * @@generated
	 */
	private <%=importManager.getImportedName("java.util.Collection")%> refreshPhantoms() {
		<%=importManager.getImportedName("java.util.Collection")%> phantomNodes = new <%=importManager.getImportedName("java.util.LinkedList")%>();
		<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> container = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) getHost().getModel()).getElement();
		<%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> containerMetaclass = container.eClass();
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Diagram")%> diagram = getDiagram();
<%	
	List genLinks = phantomLinks;
	for (int linkIndex = 0; linkIndex < genLinks.size(); linkIndex++) {
		boolean phantomsOnly = true;
%>
<%@@ include file="collectFMFLinks_header.jetinc"%>
			phantomNodes.add(nextDestination);
<%@@ include file="collectFMFLinks_footer.jetinc"%>
<%	}%>

<%@@ include file="filterOutExistingPhantoms.jetinc"%>
		return createPhantomNodes(phantomNodes);
	}
	
<%@@ include file="createPhantomNodes.jetinc" %>

<%@@ include file="getDiagram.jetinc" %>
<%
}
%>@


1.3
log
@moved code-only parts from templates to model impl classes
@
text
@@


1.2
log
@#141789 call "Arrange ALL" function in generation code for initialize the diagram
@
text
@a0 1
<%@@ include file="class2PhantomsCollector.jetinc"%>
d2 2
a3 11
List phantomLinks = new LinkedList();
for (Iterator it = genDiagram.getLinks().iterator(); it.hasNext();) {
	GenLink nextLink = (GenLink) it.next();
	if (nextLink.getModelFacet() instanceof FeatureModelFacet) {
		FeatureModelFacet nextModelFacet = (FeatureModelFacet) nextLink.getModelFacet();
		if (nextModelFacet.getMetaFeature().isContains()) {
			phantomLinks.add(nextLink);
		}
	}
}
	
@


1.1
log
@#128024 Model references are not recognized as links
#131543 Obsolete code should be eliminated
@
text
@d20 4
a23 2
		super.refreshSemantic();
		refreshPhantoms();
d29 1
a29 1
	private void refreshPhantoms() {
d45 1
a45 1
		createPhantomNodes(phantomNodes);
@


1.1.2.1
log
@#141789 call "Arrange ALL" function in generation code for initialize the diagram
@
text
@d20 2
a21 4
		<%=importManager.getImportedName("java.util.List")%> createdViews = new <%=importManager.getImportedName("java.util.LinkedList")%>();
		createdViews.addAll(refreshSemanticChildren());
		createdViews.addAll(refreshPhantoms());
		makeViewsImmutable(createdViews);
d27 1
a27 1
	private <%=importManager.getImportedName("java.util.Collection")%> refreshPhantoms() {
d43 1
a43 1
		return createPhantomNodes(phantomNodes);
@


