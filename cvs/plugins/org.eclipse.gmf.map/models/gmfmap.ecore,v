head	1.60;
access;
symbols
	v20080813-1520:1.60
	v20080722-1827:1.59
	v20080716-1642:1.59
	R2_1_maintenance:1.58.0.2
	Root_R2_1_maintenance:1.58
	R2_1_0:1.58
	v20080521:1.58
	v20080425-1959:1.58
	v20080417-1610:1.56
	v20080322-0000:1.55
	v20080222-1200:1.54
	v20070809-0000:1.54
	R2_0_maintenance:1.54.0.2
	R2_0:1.54
	R4_20:1.54
	v20070621-0000:1.54
	RC3_20:1.54
	v20070608-1300:1.54
	v20070605-1400:1.54
	v20070601-1400:1.54
	v20070525-1500:1.54
	v20070520-1200:1.54
	v20070518-1300:1.53
	v20070517-1200:1.53
	v20070504-1000:1.53
	v20070427-0600:1.51
	v20070330-1300:1.50
	v20070322-1100:1.50
	v20060316-0600:1.50
	v20070208-1800:1.49
	M4_20:1.49
	v20061214-0000:1.49
	M3_20:1.49
	v20061117-0800:1.49
	v20061013-1330:1.47
	M1_20:1.44
	v20060904-1500:1.44
	v20060713-1700:1.43
	R1_0_maintenance:1.43.0.2
	R1_0:1.43
	v20060627-1200:1.43
	v20060626-1420:1.43
	v20060616-1200:1.42
	v20060609-1400:1.42
	v20060531-1730:1.41
	v20060530-1930:1.41
	v20060519-1300:1.41
	v20060519-0800:1.40
	v20060512-1000:1.36
	I20060512-1000:1.36
	I20060505-1400:1.34
	I20060428-1300:1.34
	I20060424-0500:1.33
	I20060424-0300:1.33
	M6_10:1.33
	I20060407-1200:1.33
	I20060331-1000:1.32
	I20060324-0300:1.32
	I20060317-1300:1.32
	I20060317-1200:1.32
	I20060316-1300:1.32
	I20060309-1300:1.30
	M5_10:1.29
	S20060303-1600:1.29
	I20060227-1730:1.25
	I20060216-1945:1.23
	I20060210-1715:1.21
	I20060209-1815:1.20
	I20060203-0830:1.20
	I20060129-1145:1.20
	I20060127-0900:1.20
	I20060120-1530:1.20
	I20060113-1700:1.20
	M4_10:1.20
	I20060107-1100:1.17
	I20060105-1630:1.17
	I20051230-1230:1.17
	I20051223-1100:1.17
	I20051217-0925:1.16
	I20051208-2000:1.14
	I20051201-1800:1.12
	I20051124-2000:1.7
	M3_10:1.6
	I20051118-1245:1.6
	I20051111-1800:1.6
	I20051106-0900:1.4
	v20051030:1.4
	v20050828:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.60
date	2008.08.13.13.51.01;	author dstadnik;	state Exp;
branches;
next	1.59;
commitid	454448a2e6ac4567;

1.59
date	2008.07.01.11.40.21;	author atikhomirov;	state Exp;
branches;
next	1.58;
commitid	7ba3486a17a34567;

1.58
date	2008.04.18.14.43.25;	author atikhomirov;	state Exp;
branches;
next	1.57;
commitid	2e3f4808b38b4567;

1.57
date	2008.04.18.11.35.40;	author atikhomirov;	state Exp;
branches;
next	1.56;
commitid	5d934808878b4567;

1.56
date	2008.04.17.11.58.49;	author atikhomirov;	state Exp;
branches;
next	1.55;
commitid	330848073b774567;

1.55
date	2008.03.04.16.50.29;	author atikhomirov;	state Exp;
branches;
next	1.54;
commitid	5e4d47cd7dd44567;

1.54
date	2007.05.18.21.17.30;	author atikhomirov;	state Exp;
branches;
next	1.53;
commitid	2624464e17e74567;

1.53
date	2007.05.03.09.59.11;	author dstadnik;	state Exp;
branches;
next	1.52;
commitid	52284639b26b4567;

1.52
date	2007.04.27.11.23.42;	author dstadnik;	state Exp;
branches;
next	1.51;
commitid	109d4631dd3c4567;

1.51
date	2007.04.26.15.39.50;	author dstadnik;	state Exp;
branches;
next	1.50;
commitid	38914630c7c54567;

1.50
date	2007.03.14.13.00.05;	author atikhomirov;	state Exp;
branches;
next	1.49;
commitid	128545f7f1cb4567;

1.49
date	2006.10.19.15.21.57;	author dstadnik;	state Exp;
branches;
next	1.48;

1.48
date	2006.10.19.14.13.36;	author radvorak;	state Exp;
branches;
next	1.47;

1.47
date	2006.10.03.18.11.04;	author atikhomirov;	state Exp;
branches;
next	1.46;

1.46
date	2006.09.28.18.20.40;	author radvorak;	state Exp;
branches;
next	1.45;

1.45
date	2006.09.07.12.48.32;	author ashatalin;	state Exp;
branches;
next	1.44;

1.44
date	2006.08.25.18.32.47;	author atikhomirov;	state Exp;
branches;
next	1.43;

1.43
date	2006.06.25.11.24.11;	author radvorak;	state Exp;
branches;
next	1.42;

1.42
date	2006.06.02.11.43.06;	author radvorak;	state Exp;
branches;
next	1.41;

1.41
date	2006.05.19.16.17.25;	author atikhomirov;	state Exp;
branches;
next	1.40;

1.40
date	2006.05.19.10.12.05;	author dstadnik;	state Exp;
branches;
next	1.39;

1.39
date	2006.05.18.20.30.58;	author atikhomirov;	state Exp;
branches;
next	1.38;

1.38
date	2006.05.17.10.21.08;	author radvorak;	state Exp;
branches;
next	1.37;

1.37
date	2006.05.14.18.07.23;	author atikhomirov;	state Exp;
branches;
next	1.36;

1.36
date	2006.05.11.09.42.04;	author dstadnik;	state Exp;
branches;
next	1.35;

1.35
date	2006.05.10.15.12.33;	author dstadnik;	state Exp;
branches;
next	1.34;

1.34
date	2006.04.25.19.15.49;	author radvorak;	state Exp;
branches;
next	1.33;

1.33
date	2006.04.03.12.53.01;	author radvorak;	state Exp;
branches;
next	1.32;

1.32
date	2006.03.13.17.28.32;	author ashatalin;	state Exp;
branches;
next	1.31;

1.31
date	2006.03.10.16.56.21;	author atikhomirov;	state Exp;
branches;
next	1.30;

1.30
date	2006.03.07.14.09.29;	author dstadnik;	state Exp;
branches;
next	1.29;

1.29
date	2006.03.03.18.32.33;	author ashatalin;	state Exp;
branches;
next	1.28;

1.28
date	2006.03.03.14.40.28;	author dstadnik;	state Exp;
branches;
next	1.27;

1.27
date	2006.03.03.11.36.26;	author ashatalin;	state Exp;
branches;
next	1.26;

1.26
date	2006.03.02.12.52.58;	author dstadnik;	state Exp;
branches;
next	1.25;

1.25
date	2006.02.23.15.45.31;	author atikhomirov;	state Exp;
branches;
next	1.24;

1.24
date	2006.02.22.22.01.21;	author atikhomirov;	state Exp;
branches;
next	1.23;

1.23
date	2006.02.14.10.11.22;	author dstadnik;	state Exp;
branches;
next	1.22;

1.22
date	2006.02.13.18.37.47;	author dstadnik;	state Exp;
branches;
next	1.21;

1.21
date	2006.02.10.15.21.15;	author atikhomirov;	state Exp;
branches;
next	1.20;

1.20
date	2006.01.10.20.40.09;	author atikhomirov;	state Exp;
branches;
next	1.19;

1.19
date	2006.01.10.19.01.15;	author atikhomirov;	state Exp;
branches;
next	1.18;

1.18
date	2006.01.10.18.35.29;	author atikhomirov;	state Exp;
branches;
next	1.17;

1.17
date	2005.12.22.17.24.09;	author dstadnik;	state Exp;
branches;
next	1.16;

1.16
date	2005.12.13.19.20.35;	author atikhomirov;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.10.14.59.34;	author ashatalin;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.07.19.23.17;	author ashatalin;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.06.22.21.25;	author atikhomirov;	state Exp;
branches;
next	1.12;

1.12
date	2005.11.30.13.24.37;	author ashatalin;	state Exp;
branches;
next	1.11;

1.11
date	2005.11.30.12.49.29;	author ashatalin;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.29.21.15.32;	author ashatalin;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.29.18.33.02;	author atikhomirov;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.25.13.52.44;	author dstadnik;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.21.18.18.09;	author atikhomirov;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.11.13.41.35;	author atikhomirov;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.08.14.30.48;	author atikhomirov;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.20.14.07.16;	author atikhomirov;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.18.10.58.31;	author atikhomirov;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.26.14.26.27;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.03.22.30.57;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.60
log
@[231322] allow to specify editable features
@
text
@<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="mappings"
    nsURI="http://www.eclipse.org/gmf/2008/mappings" nsPrefix="gmfmap">
  <eAnnotations source="http://www.eclipse.org/emf/2004/EmfaticAnnotationMap">
    <details key="constraints" value="http://www.eclipse.org/gmf/2005/constraints"/>
    <details key="constraintsMeta" value="http://www.eclipse.org/gmf/2005/constraints/meta"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
    <details key="import" value="http://www.eclipse.org/gmf/runtime/1.0.0/notation"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Mapping">
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="nodes->forAll(n|n.containmentFeature.oclIsUndefined() and not n.child.domainMetaElement.oclIsUndefined() implies links->exists(let r:ecore::EReference= linkMetaFeature.oclAsType(ecore::EReference) in r.containment and r.eReferenceType.isSuperTypeOf(n.child.domainMetaElement)))"/>
      <details key="description" value="Phantom nodes that are not targeted by a link mapping exist"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nodes" upperBound="-1"
        eType="#//TopNodeReference" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="links" upperBound="-1"
        eType="#//LinkMapping" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagram" lowerBound="1"
        eType="#//CanvasMapping" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="appearanceStyles" upperBound="-1"
        eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//StyleSelector"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="audits" eType="#//AuditContainer"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metrics" eType="#//MetricContainer"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MappingEntry" abstract="true">
    <eOperations name="getDomainContext" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This method simplifies OCL expressions (makes it easy to write for both Node and Link)."/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainSpecialization" eType="#//Constraint"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specializes further the domain meta element EClass associated with this mapping and should be evaluated in this EClass context"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="self.getDomainContext()"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not domainSpecialization.oclIsUndefined() implies not domainMetaElement.oclIsUndefined()"/>
        <details key="description" value="Using 'Domain Specialization' requires 'Domain Meta Element' to be set"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainInitializer" eType="#//ElementInitializer"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Initializer for the domain model element associated with mapping"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not domainInitializer.oclIsUndefined() implies not domainMetaElement.oclIsUndefined()"/>
        <details key="description" value="'Domain Element' must be set in mapping with 'Element Initializers'"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelMappings" upperBound="-1"
        eType="#//LabelMapping" containment="true" eOpposite="#//LabelMapping/mapEntry"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedDiagrams" upperBound="-1"
        eType="#//CanvasMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Diagrams that may be associated with this diagram element. It's up to client application to define what this association means (e.g. open diagram)"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NeedsContainment" abstract="true" interface="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="containmentFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EReference">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not containmentFeature.oclIsUndefined() implies containmentFeature.containment"/>
        <details key="description" value="Containment EReference expected"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NodeReference" abstract="true" eSuperTypes="#//NeedsContainment">
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not containmentFeature.oclIsUndefined() implies containmentFeature.eReferenceType.isSuperTypeOf(child.domainMetaElement)"/>
      <details key="description" value="'Containment Feature' must reference the same class or super type of 'Domain Meta Element' of the referenced node"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="childrenFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EReference">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not childrenFeature.oclIsUndefined() implies childrenFeature.eReferenceType.isSuperTypeOf(child.domainMetaElement)"/>
        <details key="description" value="'Children Feature' must reference the same class or super type of 'Domain Meta Element' of the referenced node"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="child" eType="#//NodeMapping"
        changeable="false" volatile="true" transient="true" unsettable="true" derived="true"
        resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ChildReference" eSuperTypes="#//NodeReference">
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not (ownedChild.oclIsUndefined() and referencedChild.oclIsUndefined())"/>
      <details key="description" value="Either 'ownedChild' or 'referencedChild' NodeMapping must be set"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not childrenFeature.oclIsUndefined() implies childrenFeature.eContainingClass.isSuperTypeOf(parentNode.domainMetaElement)"/>
      <details key="description" value="'Children Feature' must be owned by 'Domain Meta Element' or its super type of this reference parent Node Mapping"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not containmentFeature.oclIsUndefined() implies containmentFeature.eContainingClass.isSuperTypeOf(parentNode.domainMetaElement)"/>
      <details key="description" value="'Containment Feature' must be owned by 'Domain Meta Element' or its super type of this reference parent Node Mapping"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not child.getDomainContext().oclIsUndefined() implies not containmentFeature.oclIsUndefined()"/>
      <details key="description" value="ChildReference to NodeMapping with domainElement should define 'containmentFeature'"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in (((child.labelMappings->size() = 1) and child.labelMappings->forAll( soleLabel: LabelMapping | soleLabel.diagramLabel = child.diagramNode)) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NONE))"/>
      <details key="description" value="Side-affixed children can not be pure labels"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in ((not compartment.oclIsUndefined()) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NONE))"/>
      <details key="description" value="Side-affixed children can not be placed in compartments"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentNode" lowerBound="1"
        eType="#//NodeMapping" eOpposite="#//NodeMapping/children"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="compartment" eType="#//CompartmentMapping"
        eOpposite="#//CompartmentMapping/children"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedChild" eType="#//NodeMapping"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedChild" eType="#//NodeMapping"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TopNodeReference" eSuperTypes="#//NodeReference">
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedChild" lowerBound="1"
        eType="#//NodeMapping" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//MappingEntry #//MenuOwner #//ToolOwner #//AppearanceSteward">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Both top-level diagram node and any inner node"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Node"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//ChildReference" containment="true" eOpposite="#//ChildReference/parentNode"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="compartments" upperBound="-1"
        eType="#//CompartmentMapping" containment="true" eOpposite="#//CompartmentMapping/parentNode"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompartmentMapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="compartment" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Compartment"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentNode" lowerBound="1"
        eType="#//NodeMapping" changeable="false" resolveProxies="false" eOpposite="#//NodeMapping/compartments"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//ChildReference" eOpposite="#//ChildReference/compartment"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LinkMapping" eSuperTypes="#//MappingEntry #//NeedsContainment #//MenuOwner #//ToolOwner #//AppearanceSteward">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Connection element"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="domainMetaElement.oclIsUndefined() implies containmentFeature.oclIsUndefined() and sourceMetaFeature.oclIsUndefined()"/>
      <details key="description" value="Link mapping without 'Domain Element' class does not use 'Containment Feature' and 'Source Feature'"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not domainMetaElement.oclIsUndefined()  implies containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)"/>
      <details key="description" value="'Containment Feature' must reference the same class or super type of 'Domain Element' EClass"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramLink" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Connection"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceMetaFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStructuralFeature">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not domainMetaElement.oclIsUndefined() implies sourceMetaFeature.oclIsUndefined() or sourceMetaFeature.eContainingClass.isSuperTypeOf(domainMetaElement)"/>
        <details key="description" value="'Source Feature' must be owned by the link 'Domain Element' or its super type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="linkMetaFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStructuralFeature">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not(domainMetaElement.oclIsUndefined() or linkMetaFeature.oclIsUndefined()) implies linkMetaFeature.eContainingClass.isSuperTypeOf(domainMetaElement)"/>
        <details key="description" value="'Target Feature' must be owned by the link 'Domain Element' or its super type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="creationConstraints" eType="#//LinkConstraints"
        containment="true" eOpposite="#//LinkConstraints/linkMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies additional restrictions on link creation"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CanvasMapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramCanvas" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Canvas"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainModel" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EPackage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not domainMetaElement.oclIsUndefined() implies not(domainMetaElement.abstract or domainMetaElement.interface)"/>
        <details key="description" value="Top-level diagram container must be concrete"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="palette" eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//Palette"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="menuContributions" upperBound="-1"
        eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//MainMenu"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="toolbarContributions" upperBound="-1"
        eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//Toolbar"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LabelMapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Label definition; text is taken from the graph model; no editing support; user may contribute custom parser"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramLabel" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//DiagramLabel"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="readOnly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mapEntry" lowerBound="1"
        eType="#//MappingEntry" changeable="false" resolveProxies="false" eOpposite="#//MappingEntry/labelMappings"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureLabelMapping" eSuperTypes="#//LabelMapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Label based on feature(s) from domain model"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="features" lowerBound="1"
        upperBound="-1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="features->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))"/>
        <details key="description" value="Label attributes must be available in 'Domain Element' EClass of the labeled mapping entry"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="editableFeatures" upperBound="-1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="editableFeatures->forAll(f | f.eContainingClass.isSuperTypeOf(mapEntry.domainMetaElement))"/>
        <details key="description" value="Label attributes must be available in 'Domain Element' EClass of the labeled mapping entry"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="viewPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Pattern to produce label on diagram, depends on view method"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="editorPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Pattern to produce text for inplace editor, depends on view method; if not specified then viewPattern should be used"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="editPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Pattern to extract values from input text, depends on edit method; if not specified then viewPattern should be used"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="viewMethod" eType="#//LabelTextAccessMethod"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="editMethod" eType="#//LabelTextAccessMethod"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LabelTextAccessMethod">
    <eLiterals name="MESSAGE_FORMAT"/>
    <eLiterals name="NATIVE" value="1"/>
    <eLiterals name="REGEXP" value="2"/>
    <eLiterals name="PRINTF" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DesignLabelMapping" eSuperTypes="#//LabelMapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Label based on DescriptionStyle from notation model"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//ValueExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Boolean type value expression which is to be evaluated in a context"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="Constraint"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LinkConstraints">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Groups constraints on the link source and target end"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not (sourceEnd.oclIsUndefined() and targetEnd.oclIsUndefined())"/>
      <details key="description" value="Either 'sourceEnd' or 'targetEnd' constraint must be specified"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="linkMapping" lowerBound="1"
        eType="#//LinkMapping" changeable="false" resolveProxies="false" eOpposite="#//LinkMapping/creationConstraints">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="References the link mapping restricted by these constraints"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceEnd" eType="#//Constraint"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Restriction enforced by the the source end, may reference variable 'oppositeEnd' pointing to targetEnd domainMetaElement instance if available."/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="let lm:LinkMapping=linkMapping in if lm.sourceMetaFeature.oclIsUndefined() then (if lm.containmentFeature.oclIsUndefined() then lm.linkMetaFeature.eContainingClass else lm.containmentFeature.eContainingClass endif) else lm.sourceMetaFeature.oclAsType(ecore::EReference).eReferenceType endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="variable"/>
        <details key="name" value="oppositeEnd"/>
        <details key="type.ocl" value="linkMapping.linkMetaFeature.eType"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetEnd" eType="#//Constraint"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Restriction enforced by the the target end, may reference variable 'oppositeEnd' pointing to sourceEnd domainMetaElement instance."/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="linkMapping.linkMetaFeature.eType.oclAsType(ecore::EClass)"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="variable"/>
        <details key="name" value="oppositeEnd"/>
        <details key="type.ocl" value="let lm:LinkMapping=linkMapping in if lm.sourceMetaFeature.oclIsUndefined() then (if lm.containmentFeature.oclIsUndefined() then lm.linkMetaFeature.eContainingClass else lm.containmentFeature.eContainingClass endif) else lm.sourceMetaFeature.oclAsType(ecore::EReference).eReferenceType endif"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueExpression">
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="ValueSpec"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Expression as a textual statement which results in a value when evaluated in a context"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The text of the expression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="body"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" lowerBound="1"
        eType="#//Language" defaultValueLiteral="ocl">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies the language in which the expression is stated"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="langName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="lang"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ElementInitializer" abstract="true"
      interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base class for initializers of domain model elements"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mappingEntry" lowerBound="1"
        eType="#//MappingEntry" changeable="false" volatile="true" transient="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The 'MappingEntry' whose domain model element is to be intialized by this initializer"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureSeqInitializer" eSuperTypes="#//ElementInitializer">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Feature sequence initializer to initialize a sequence of features"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="initializers" lowerBound="1"
        upperBound="-1" eType="#//FeatureInitializer" containment="true" eOpposite="#//FeatureInitializer/featureSeqInitializer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Value specifications as initializers for individual features which should be initialized in the order given by this list"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="self.elementClass"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elementClass" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not creatingInitializer.feature.oclIsUndefined() implies creatingInitializer.feature.oclAsType(ecore::EReference).eReferenceType.isSuperTypeOf(elementClass)"/>
        <details key="description" value="'elementClass' must be the same as or sub-type of the containing 'GenReferenceNewElementSpec' reference type"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not creatingInitializer.feature.oclIsUndefined() implies not (elementClass.interface or elementClass.abstract)"/>
        <details key="description" value="'elementClass' must be a concrete EClass which is the same or sub-type of the containing 'GenReferenceNewElementSpec' reference type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="creatingInitializer" eType="#//ReferenceNewElementSpec"
        changeable="false" resolveProxies="false" eOpposite="#//ReferenceNewElementSpec/newElementInitializers"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureInitializer" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="feature" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStructuralFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The feature for which is to be initialized by this initializer"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="feature &lt;> null implies not featureSeqInitializer.initializers->exists(i| i &lt;> self and i.feature = self.feature)"/>
        <details key="description" value="The feature is already initialized by another 'FeatureInitializer' in the sequence"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="feature &lt;> null implies feature.eContainingClass.isSuperTypeOf(featureSeqInitializer.elementClass)"/>
        <details key="description" value="The 'feature' of 'FeatureInitializer' must be available in 'Meta Class' of the initialized element"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="feature &lt;> null implies feature.changeable"/>
        <details key="description" value="The 'feature' of 'FeatureInitializer' must be changeable"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureSeqInitializer"
        lowerBound="1" eType="#//FeatureSeqInitializer" changeable="false" resolveProxies="false"
        eOpposite="#//FeatureSeqInitializer/initializers"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureValueSpec" eSuperTypes="#//FeatureInitializer">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Value specification associated with a specific feature"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="type"/>
      <details key="ocl" value="feature"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//ValueExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceNewElementSpec" eSuperTypes="#//FeatureInitializer">
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="feature.many = false implies not (newElementInitializers->size() > 1)"/>
      <details key="description" value="FeatureInitializer for single element EReference can't contain multiple element initializers"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="let r: ecore::EReference = feature.oclAsType(ecore::EReference) in feature &lt;> null implies r.containment"/>
      <details key="description" value="'feature' of 'ReferenceNewElementSpec' must refer to containment ecore::EReference"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="newElementInitializers"
        lowerBound="1" upperBound="-1" eType="#//FeatureSeqInitializer" containment="true"
        eOpposite="#//FeatureSeqInitializer/creatingInitializer"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MenuOwner" abstract="true" interface="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="contextMenu" eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//ContextMenu"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ToolOwner" abstract="true" interface="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="tool" eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//AbstractTool">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Way to create this element"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AppearanceSteward" abstract="true" interface="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="appearanceStyle" eType="ecore:EClass ../../org.eclipse.gmf.tooldef/models/tooldef.ecore#//StyleSelector"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AuditContainer">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Container for audit rules representing a hierarchical organization of audits in the constraint category hierarchy of emft.validation framework"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Identifier which is unique within the scope of its parent container."/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not parentContainer.oclIsUndefined() implies parentContainer.childContainers->one(i | i.id = self.id)"/>
        <details key="description" value="Audit container with the same ID already exists"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A human readable name for the category of audits organized in this container"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The detailed description of this audit container"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentContainer" eType="#//AuditContainer"
        eOpposite="#//AuditContainer/childContainers"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="audits" upperBound="-1"
        eType="#//AuditRule" containment="true" eOpposite="#//AuditRule/container">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The audit rules organized in this container"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="childContainers" upperBound="-1"
        eType="#//AuditContainer" containment="true" eOpposite="#//AuditContainer/parentContainer"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RuleBase" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base class for rule like audit, metric rules..."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A human readable name of this rule"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The detailed description of this rule semantics"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AuditRule" eSuperTypes="#//RuleBase">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique identifier of this audit rule"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not id.oclIsUndefined() implies container.audits->one(i | i.id = self.id)"/>
        <details key="description" value="Audit rule with the same ID already exists"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rule" lowerBound="1" eType="#//Constraint"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A boolean type condition which if not satisfied indicates this audit rule violation. It is evaluated in the context of the target"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ref" value="target"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//Auditable" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The target representing the context this audit is evaluated in"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="severity" eType="#//Severity"
        defaultValueLiteral="ERROR">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Describes the severity of this audit rule violation"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="useInLiveMode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates if this audit should be evaluated also in Live mode. If 'false', only Batch mode is applicable"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The text message to be reported in case of this audit violation"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" lowerBound="1"
        eType="#//AuditContainer" eOpposite="#//AuditContainer/audits">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The containing audit container of this audit rule"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DomainElementTarget" eSuperTypes="#//Auditable #//Measurable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Target for rules applied on domain model elements"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="context"/>
      <details key="ocl" value="element"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Targeted domain model element"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DomainAttributeTarget" eSuperTypes="#//Auditable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents value based target, useful for audit rules expression not capable of ecore meta-model access"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="context"/>
      <details key="ocl" value="attribute.eType"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The attribute the value of which is used as context in audit rule defining this target"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="nullAsError" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Indicates whether null value of the attribute is reported as audit failure or success"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DiagramElementTarget" eSuperTypes="#//Auditable #//Measurable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Target for rules applied on diagram notation model selectively, for specific visualized element"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="context"/>
      <details key="ocl" value="if element.oclIsKindOf(NodeMapping) then 'notation::Node' else 'notation::Edge' endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
        eType="#//MappingEntry">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Targeted visualized element"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NotationElementTarget" eSuperTypes="#//Auditable #//Measurable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Target for rules applied on diagram notation model elements"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="context"/>
      <details key="ocl" value="element"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Targeted diagram notation model element"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="element.eAllSuperTypes->including(element)->one(ePackage.name = 'notation' and name = 'View')"/>
        <details key="description" value="'notation::View' or its sub-class must be set to NotationElement target"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetricContainer">
    <eStructuralFeatures xsi:type="ecore:EReference" name="metrics" lowerBound="1"
        upperBound="-1" eType="#//MetricRule" containment="true" eOpposite="#//MetricRule/container"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetricRule" eSuperTypes="#//RuleBase">
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not lowLimit.oclIsUndefined() and not highLimit.oclIsUndefined()  implies lowLimit &lt; highLimit"/>
      <details key="description" value="Metric value 'lowLimit' must be smaller then 'highLimit'"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Unique key identifying this metric an abbreviation for this metric"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not key.oclIsUndefined() implies container.metrics->one(i | i.key = self.key)"/>
        <details key="description" value="Metric rule with the same 'key' already exists"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rule" lowerBound="1" eType="#//ValueExpression"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Expression that calculates the value of this metric which is of EDataType that encapsulates java.lang.Number subclasses or their primitives"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ref" value="target"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="type"/>
        <details key="ocl" value="'ecore::EDoubleObject'"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//Measurable" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The target representing the context this metric is evaluated in"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowLimit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The lowest acceptable value of the rule expression result"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="highLimit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The highest acceptable value of the rule expression result"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" lowerBound="1"
        eType="#//MetricContainer" eOpposite="#//MetricContainer/metrics">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The containing metric container of this metric rule"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AuditedMetricTarget" eSuperTypes="#//Auditable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Target metric which can be evaluated by audit rule. The target context here is the metric rule resulting type classifier"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="context"/>
      <details key="ocl" value="'ecore::EDoubleObject'"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metric" lowerBound="1"
        eType="#//MetricRule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Metric which can be checked by audit"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Auditable" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Target suitable for auditing"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Measurable" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Marker interface for anything that can be subject to metrics"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Severity">
    <eLiterals name="INFO"/>
    <eLiterals name="WARNING" value="1"/>
    <eLiterals name="ERROR" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Language">
    <eLiterals name="ocl"/>
    <eLiterals name="java" value="1"/>
    <eLiterals name="regexp" value="2"/>
    <eLiterals name="nregexp" value="3"/>
    <eLiterals name="literal" value="4"/>
  </eClassifiers>
</ecore:EPackage>
@


1.59
log
@[227127] support literal values for feature initializers. step 1: models updated to specify new possible values
@
text
@d221 7
@


1.58
log
@with [221352] resolved, we are safe to use readonly backreferences again, without suppressSetVisibility hack
@
text
@d688 1
@


1.57
log
@[227505] ValueExpression and FeatureSeqInitializer: updated revision year, old model exposed as dynamic package.
@
text
@d147 1
a147 5
        eType="#//NodeMapping" resolveProxies="false" eOpposite="#//NodeMapping/compartments">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
d208 1
a208 5
        eType="#//MappingEntry" resolveProxies="false" eOpposite="#//MappingEntry/labelMappings">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
d267 1
a267 1
        eType="#//LinkMapping" resolveProxies="false" eOpposite="#//LinkMapping/creationConstraints">
a270 3
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
d368 1
a368 5
        resolveProxies="false" eOpposite="#//ReferenceNewElementSpec/newElementInitializers">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
d390 2
a391 5
        lowerBound="1" eType="#//FeatureSeqInitializer" resolveProxies="false" eOpposite="#//FeatureSeqInitializer/initializers">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
@


1.56
log
@[227505] Replace FeatureValueSpec generalization of ValueExpression with aggregation, as it's better approach to model such a concept
@
text
@d5 1
a5 1
    nsURI="http://www.eclipse.org/gmf/2006/mappings" nsPrefix="gmfmap">
@


1.55
log
@with EMF 2.4M5, it's no longer possible to use read-only opposite for containments (due to changes in SetCommand), regenerated to use different approach
@
text
@d385 1
a385 2
  <eClassifiers xsi:type="ecore:EClass" name="FeatureInitializer" abstract="true"
      interface="true">
d411 1
a411 1
  <eClassifiers xsi:type="ecore:EClass" name="FeatureValueSpec" eSuperTypes="#//ValueExpression #//FeatureInitializer">
a415 3
      <details key="def" value="ValueSpec"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
d419 2
@


1.54
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d147 5
a151 1
        eType="#//NodeMapping" changeable="false" eOpposite="#//NodeMapping/compartments"/>
d212 5
a216 1
        eType="#//MappingEntry" changeable="false" eOpposite="#//MappingEntry/labelMappings"/>
d275 1
a275 1
        eType="#//LinkMapping" changeable="false" eOpposite="#//LinkMapping/creationConstraints">
d279 3
d379 5
a383 1
        changeable="false" eOpposite="#//ReferenceNewElementSpec/newElementInitializers"/>
d406 5
a410 1
        lowerBound="1" eType="#//FeatureSeqInitializer" changeable="false" eOpposite="#//FeatureSeqInitializer/initializers"/>
@


1.53
log
@refactor message format parser; introduce editor pattern
@
text
@d5 1
a5 1
    nsURI="http://www.eclipse.org/gmf/2005/mappings/2.0" nsPrefix="gmfmap">
@


1.52
log
@combine label text access methods
@
text
@d226 5
a230 1
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="viewMethod" eType="#//LabelTextAccessMethod"/>
d233 1
a233 1
        <details key="documentation" value="Pattern to produce text for inplace editor, depends on edit method; if not specified then viewPattern should be used"/>
d236 1
@


1.51
log
@additional methods to produce label text and parse user input
@
text
@d226 1
a226 1
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="viewMethod" eType="#//LabelViewMethod"/>
d232 1
a232 1
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="editMethod" eType="#//LabelEditMethod"/>
d234 1
a234 1
  <eClassifiers xsi:type="ecore:EEnum" name="LabelViewMethod">
d236 3
a238 7
    <eLiterals name="PRINTF" value="1"/>
    <eLiterals name="NATIVE" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LabelEditMethod">
    <eLiterals name="MESSAGE_FORMAT"/>
    <eLiterals name="REGEXP" value="1"/>
    <eLiterals name="NATIVE" value="2"/>
@


1.50
log
@Regenerated graphdef, tooldef and gmfmap models with EMF 2.3 M5 Generics, updated code to be "generified"
@
text
@d223 1
a223 1
        <details key="documentation" value="Pattern for java.text.MessageFormat to produce label text"/>
d226 1
d229 1
a229 1
        <details key="documentation" value="Pattern for java.text.MessageFormat to produce text for inplace editor; if not specified then viewPattern should be used"/>
d232 11
@


1.49
log
@[161380] Inroduce label mapping subclasses
@
text
@d72 1
a72 1
  <eClassifiers xsi:type="ecore:EClass" name="NeedsContainment" interface="true">
d318 2
a319 1
  <eClassifiers xsi:type="ecore:EClass" name="ElementInitializer" interface="true">
d357 2
a358 1
  <eClassifiers xsi:type="ecore:EClass" name="FeatureInitializer" interface="true">
d405 1
a405 1
  <eClassifiers xsi:type="ecore:EClass" name="MenuOwner" interface="true">
d408 1
a408 1
  <eClassifiers xsi:type="ecore:EClass" name="ToolOwner" interface="true">
d415 1
a415 1
  <eClassifiers xsi:type="ecore:EClass" name="AppearanceSteward" interface="true">
d452 1
a452 1
  <eClassifiers xsi:type="ecore:EClass" name="RuleBase" interface="true">
d656 1
a656 1
  <eClassifiers xsi:type="ecore:EClass" name="Auditable" interface="true">
d661 1
a661 1
  <eClassifiers xsi:type="ecore:EClass" name="Measurable" interface="true">
@


1.48
log
@[161489] [Duplicate] Correct gmfgen constraint on GenFeatureValueSpec according to EMFT OCL #151234
@
text
@d202 1
a202 1
      <details key="documentation" value="Label on diagram; either features or text should be specified"/>
d206 10
a215 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="features" upperBound="-1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
a220 1
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="readOnly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
d223 1
a223 1
        <details key="documentation" value="Pattern for java.text.MessageFormat to produce label on diagram"/>
d231 5
a235 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="mapEntry" lowerBound="1"
        eType="#//MappingEntry" changeable="false" eOpposite="#//MappingEntry/labelMappings"/>
@


1.47
log
@[119465] support for diagram partitioning
@
text
@d353 1
a353 1
        <details key="ocl" value="feature &lt;> null implies not featureSeqInitializer.initializers->exists(i| i &lt;> self and feature = self.feature)"/>
@


1.46
log
@#138440 Modify Feature Sequence initializer to support containment references to model elements
@
text
@d65 6
@


1.45
log
@[156500] mgolubev - Incorrect constraint specified for ChildReference in gmfmap model
@
text
@d5 1
a5 1
    nsURI="http://www.eclipse.org/gmf/2005/mappings" nsPrefix="gmfmap">
d54 1
a54 1
        containment="true" eOpposite="#//ElementInitializer/mappingEntry">
a57 4
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="self.getDomainContext()"/>
      </eAnnotations>
d307 5
a311 1
        eType="#//MappingEntry" eOpposite="#//MappingEntry/domainInitializer"/>
d315 1
a315 1
      <details key="documentation" value="Feature sequence initializer"/>
d318 1
a318 1
        upperBound="-1" eType="#//FeatureValueSpec" containment="true" eOpposite="#//FeatureValueSpec/featureSeqInitializer">
d322 4
d327 12
d340 1
a340 7
  <eClassifiers xsi:type="ecore:EClass" name="FeatureValueSpec" eSuperTypes="#//ValueExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Value specification associated with a specific feature"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
      <details key="def" value="ValueSpec"/>
    </eAnnotations>
d344 5
a348 1
        <details key="documentation" value="Denotes the feature for which this value expression is specified. Its containing EClass is the context for evaluation."/>
d350 3
a352 2
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="type"/>
d355 2
a356 2
        <details key="ocl" value="feature.eContainingClass.isSuperTypeOf(featureSeqInitializer.mappingEntry.getDomainContext())"/>
        <details key="description" value="Initialized 'Feature' must be owned by 'Domain Element' or its super type"/>
d360 26
a385 1
        lowerBound="1" eType="#//FeatureSeqInitializer" eOpposite="#//FeatureSeqInitializer/initializers"/>
@


1.44
log
@[124826] mgolubev - Support nodes with border items
@
text
@d111 1
a111 1
      <details key="ocl" value="let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in (((child.labelMappings->size() = 1) and child.labelMappings->forAll( soleLabel: LabelMapping | soleLabel.diagramLabel = child.diagramNode)) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NSEW))"/>
d115 1
a115 1
      <details key="ocl" value="let child:NodeMapping=(if ownedChild.oclIsUndefined() then referencedChild else ownedChild endif) in ((not compartment.oclIsUndefined()) implies (child.diagramNode.affixedParentSide = gmfgraph::Direction::NSEW))"/>
@


1.43
log
@#148430 gmfmap, gmfgen Validation should report childnodes with domainElement but without containmentFeature
@
text
@d110 8
@


1.42
log
@#145042 Introduce expression Language enumeration into gmfmap, gfmgen models  instead of plain text attribute
@
text
@d106 4
@


1.41
log
@typo in constraint's message
@
text
@d281 2
a282 2
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral="ocl">
d286 3
d601 6
@


1.40
log
@#114175 Allow a diagram definition to be mapped to zero or more domain models.
@
text
@d104 1
a104 1
      <details key="description" value="'Children Feature' must be owned by 'Domain Meta Element' or its super type of this reference parent Node Mapping"/>
@


1.39
log
@use exhaustive validation constraints defined with our own annotation scheme
@
text
@a79 4
      <details key="ocl" value="not (child.domainMetaElement.oclIsUndefined() and containmentFeature.oclIsUndefined())"/>
      <details key="description" value="Either 'domainMetaElement' or 'containmentFeature' must be specified"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
@


1.38
log
@#136865 Validation of gmfgen fails for the notation model elements
@
text
@d11 1
a11 1
    <details key="import" value="platform:/resource/org.eclipse.gmf.runtime.notation/model/notation.ecore"/>
@


1.37
log
@overriding recent changes introduced (along with fixing #133836) in GMFMap model, as it's merely a 'shortcut', quite frequent though. Still, adding few new concepts just for the sake of single usecase (I do admit it's popular) seems excessive to me.
GMFMap kept the same as old (no new notions introduced), GMFGraph got generalization from DiagramLabel to DiagramNode to make it possible to use DiagramLabels for NodeMappings (thus, it's possible to detect such nodes in the DGMT)
Tests added to make sure we generate correct genModel for both cases.
@
text
@d512 2
a513 2
        <details key="ocl" value="element.oclIsKindOf(notation::View)"/>
        <details key="description" value="Notation model element expected"/>
@


1.36
log
@revert to gmfmap model compatibility
@
text
@d126 2
a131 6
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Node"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LabelNodeMapping" eSuperTypes="#//NodeMapping #//LabelFlavour">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Diagram node represented as a label"/>
    </eAnnotations>
d190 1
a190 1
  <eClassifiers xsi:type="ecore:EClass" name="LabelMapping" eSuperTypes="#//LabelFlavour">
a193 4
    <eStructuralFeatures xsi:type="ecore:EReference" name="mapEntry" lowerBound="1"
        eType="#//MappingEntry" changeable="false" eOpposite="#//MappingEntry/labelMappings"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LabelFlavour" interface="true">
d214 2
@


1.35
log
@#133836 Creating a child node without a label causes error
@
text
@d122 1
a122 1
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" abstract="true" eSuperTypes="#//MappingEntry #//MenuOwner #//ToolOwner #//AppearanceSteward">
d130 1
a130 7
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ShapeNodeMapping" eSuperTypes="#//NodeMapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Diagram node represented by arbitrary shape"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Node"/>
@


1.34
log
@#138464 Support EAttribute based target in AuditRule element
@
text
@d122 1
a122 1
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//MappingEntry #//MenuOwner #//ToolOwner #//AppearanceSteward">
a125 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Node"/>
d131 12
d200 1
a200 1
  <eClassifiers xsi:type="ecore:EClass" name="LabelMapping">
d204 4
a227 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="mapEntry" lowerBound="1"
        eType="#//MappingEntry" changeable="false" eOpposite="#//MappingEntry/labelMappings"/>
@


1.33
log
@#134085 Implement metrics transformation from gmfmap to gmfgen model
@
text
@d463 20
@


1.32
log
@[rdvorak] #131340 Update constraint annotations in gmfmap meta-model to the latest changes
@
text
@d502 4
d535 10
@


1.31
log
@feature is better than operation
@
text
@d10 3
d15 1
a15 1
      <details key="ocl" value="nodes->forAll(n|n.containmentFeature.oclIsUndefined() and not n.domainMetaElement.oclIsUndefined() implies links->exists(let r:ecore::EReference= linkMetaFeature.oclAsType(ecore::EReference) in r.containment and r.eReferenceType.isSuperTypeOf(n.domainMetaElement)))"/>
d48 4
d79 14
a92 1
    <eStructuralFeatures xsi:type="ecore:EReference" name="childrenFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EReference"/>
d98 12
a125 8
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not (domainMetaElement.oclIsUndefined()  and containmentFeature.oclIsUndefined())"/>
      <details key="description" value="Either domain meta element or containment feature must be set in node mapping"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not domainMetaElement.oclIsUndefined() implies containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)"/>
      <details key="description" value="'Domain Element' must be the same or extend the type referenced by 'Containment Feature'"/>
    </eAnnotations>
d179 2
a180 2
      <eAnnotations source="constraint">
        <details key="ocl" value="not domainMetaElement.oclIsUndefined implies not(domainMetaElement.isAbstract or domainMetaElement.isInterface)"/>
d197 6
a202 1
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"/>
d357 4
d403 4
d415 1
a415 1
        <details key="ocl" value="target"/>
d452 4
d467 4
d482 4
d491 4
d506 4
d518 5
a522 1
        <details key="ocl" value="target.getContext()"/>
d542 4
@


1.30
log
@#130715 Use default label text defined in gmfgraph model
@
text
@a71 1
    <eOperations name="getChild" eType="#//NodeMapping"/>
d73 3
@


1.29
log
@[rdvorak] #114196 Allow for the definition of diagram validation rules
@
text
@a171 1
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
a172 5
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultText" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Default text that should be displayed when produced text is an empty string"/>
      </eAnnotations>
    </eStructuralFeatures>
@


1.28
log
@#114175 for links - mapping model
@
text
@d25 3
a27 5
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Domain meta-model audit rules definitions"/>
      </eAnnotations>
    </eStructuralFeatures>
d358 6
a363 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//RuleTarget" containment="true" eOpposite="#//RuleTarget/rule">
d365 1
a365 1
        <details key="documentation" value="The target representing the context this rule is evaluated in"/>
d385 2
a386 1
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
d388 1
a388 1
        <details key="documentation" value="A human readable name"/>
a407 5
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The detailed description of this audit semantics"/>
      </eAnnotations>
    </eStructuralFeatures>
d415 1
a415 12
  <eClassifiers xsi:type="ecore:EClass" name="RuleTarget" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The target against which a rule can be evaluated"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rule" lowerBound="1" eType="#//RuleBase"
        eOpposite="#//RuleBase/target">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The rule bound this rule target"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DomainElementTarget" eSuperTypes="#//RuleTarget">
d426 1
a426 1
  <eClassifiers xsi:type="ecore:EClass" name="DiagramElementTarget" eSuperTypes="#//RuleTarget">
d437 1
a437 1
  <eClassifiers xsi:type="ecore:EClass" name="NotationElementTarget" eSuperTypes="#//RuleTarget">
d448 54
@


1.27
log
@#130009 Enable audit rules on diagram (notation model) elements in gmfmap model
@
text
@d137 1
a137 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="linkMetaFeature" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStructuralFeature">
@


1.26
log
@#125492 Cannot generate editors whose canvas does not map to a domain element
@
text
@d357 12
a368 1
  <eClassifiers xsi:type="ecore:EClass" name="AuditRule">
a383 6
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Model class to which this rules is targeted and is the context for rule expression evaluation"/>
      </eAnnotations>
    </eStructuralFeatures>
d418 44
@


1.25
log
@#127464 unlimited hierarchies in the GMFMap with possible reuse of mapping entries
@
text
@d15 1
a15 1
    <eStructuralFeatures xsi:type="ecore:EReference" name="nodes" lowerBound="1" upperBound="-1"
d32 5
a36 1
    <eOperations name="getDomainContext" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
d155 6
a160 1
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
@


1.24
log
@#129047 get rid of explicit edit/label features, use generic and feature-rich LabelMapping instead.
@
text
@d16 1
a16 1
        eType="#//NodeMapping" containment="true" resolveProxies="false"/>
d58 4
a67 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelMappings" upperBound="-1"
        eType="#//LabelMapping" containment="true" eOpposite="#//LabelMapping/mapEntry"/>
d69 21
a89 2
  <eClassifiers xsi:type="ecore:EClass" name="AbstractNodeMapping" abstract="true"
      eSuperTypes="#//MappingEntry #//MenuOwner #//ToolOwner #//AppearanceSteward">
a97 9
    <eStructuralFeatures xsi:type="ecore:EReference" name="childMappings" upperBound="-1"
        eType="#//ChildNodeMapping" containment="true" eOpposite="#//ChildNodeMapping/parentNode"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="compartmentMappings" upperBound="-1"
        eType="#//CompartmentMapping" containment="true" eOpposite="#//CompartmentMapping/parentNodeMapping"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//AbstractNodeMapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Top-level diagram node"/>
    </eAnnotations>
d100 4
a103 15
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ChildNodeMapping" eSuperTypes="#//AbstractNodeMapping">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Inner element"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="ocl" value="not containmentFeature.oclIsUndefined() "/>
      <details key="description" value="The child node mapping containmentFeature must be set"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Child"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="compartment" eType="#//CompartmentMapping"
        eOpposite="#//CompartmentMapping/childNodes"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentNode" lowerBound="1"
        eType="#//AbstractNodeMapping" changeable="false" eOpposite="#//AbstractNodeMapping/childMappings"/>
a105 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentNodeMapping" lowerBound="1"
        eType="#//AbstractNodeMapping" changeable="false" eOpposite="#//AbstractNodeMapping/compartmentMappings"/>
d108 4
a111 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="childNodes" upperBound="-1"
        eType="#//ChildNodeMapping" eOpposite="#//ChildNodeMapping/compartment"/>
d113 1
a113 1
  <eClassifiers xsi:type="ecore:EClass" name="LinkMapping" eSuperTypes="#//MappingEntry #//MenuOwner #//ToolOwner #//AppearanceSteward">
@


1.23
log
@#127461 add label diagram element in gmfgraph model
@
text
@d64 2
a76 8
    <eStructuralFeatures xsi:type="ecore:EReference" name="editFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not editFeature.oclIsUndefined() implies getDomainContext().oclIsUndefined() or editFeature.eContainingClass.isSuperTypeOf(getDomainContext())"/>
        <details key="description" value="The Edit Feature must be owned by the domain context EClass or its super type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelMappings" upperBound="-1"
        eType="#//NodeLabelMapping" containment="true" eOpposite="#//NodeLabelMapping/nodeMapping"/>
a125 17
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelEditFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not labelEditFeature.oclIsUndefined() implies getDomainContext().oclIsUndefined() or labelEditFeature.eContainingClass.isSuperTypeOf(getDomainContext())"/>
        <details key="description" value="'Label Edit Feature' must be owned by the domain context EClass or its super type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelDisplayFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="By default, same as editFeature, once latter is set"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="not labelDisplayFeature.oclIsUndefined() implies getDomainContext().oclIsUndefined() or labelDisplayFeature.eContainingClass.isSuperTypeOf(getDomainContext())"/>
        <details key="description" value="'Label Display Feature' must be owned by the domain context EClass or its super type"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelMappings" upperBound="-1"
        eType="#//LinkLabelMapping" containment="true" eOpposite="#//LinkLabelMapping/linkMapping"/>
d157 1
a157 1
  <eClassifiers xsi:type="ecore:EClass" name="LabelMapping" abstract="true">
d182 2
a183 19
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NodeLabelMapping" eSuperTypes="#//LabelMapping">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="external" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nodeMapping" lowerBound="1"
        eType="#//AbstractNodeMapping" eOpposite="#//AbstractNodeMapping/labelMappings"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LinkLabelMapping" eSuperTypes="#//LabelMapping">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="alignment" eType="#//LinkLabelAlignment"
        defaultValueLiteral="MIDDLE"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="linkMapping" lowerBound="1"
        eType="#//LinkMapping" eOpposite="#//LinkMapping/labelMappings"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LinkLabelAlignment">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Constants from {@@link org.eclipse.draw2d.ConnectionLocator}"/>
    </eAnnotations>
    <eLiterals name="MIDDLE" value="4"/>
    <eLiterals name="TARGET" value="3"/>
    <eLiterals name="SOURCE" value="2"/>
@


1.22
log
@#127461 Support multiple labels definition in the mapping model
@
text
@d184 2
@


1.21
log
@[rdvorak] #127256 Adjust gmfmap metamodel annotation constraints to the latest changes
@
text
@d81 2
d147 2
d180 43
@


1.20
log
@#114197 - tooling definition in place
@
text
@d11 4
d45 1
a45 1
        containment="true">
a48 3
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="let i : FeatureSeqInitializer = domainInitializer.oclAsType( FeatureSeqInitializer) in i.oclIsUndefined() or i.initializers.feature.eContainingClass->forAll(c|c.isSuperTypeOf(domainMetaElement))"/>
      </eAnnotations>
d53 4
d60 2
a61 1
        <details key="ocl" value="containmentFeature.oclIsUndefined() or (containmentFeature.containment and containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement))"/>
d67 8
d77 2
a78 1
        <details key="ocl" value="editFeature.oclIsUndefined() or (not domainMetaElement.oclIsUndefined() and editFeature.eContainingClass.isSuperTypeOf(domainMetaElement)) or containmentFeature.eType.oclAsType(ecore::EClass).eAllAttributes->includes(editFeature)"/>
d97 4
d120 8
d132 2
a133 1
        <details key="ocl" value="labelEditFeature.oclIsUndefined() or labelEditFeature.eContainingClass.isSuperTypeOf(domainMetaElement)"/>
d141 2
a142 1
        <details key="ocl" value="labelDisplayFeature.oclIsUndefined() or labelDisplayFeature.eContainingClass.isSuperTypeOf(domainMetaElement)"/>
d147 2
a148 1
        <details key="ocl" value="domainMetaElement.oclIsUndefined() or sourceMetaFeature.eContainingClass.isSuperTypeOf(domainMetaElement)"/>
d154 2
a155 1
        <details key="ocl" value="domainMetaElement.oclIsUndefined() or linkMetaFeature.eContainingClass.isSuperTypeOf(domainMetaElement)"/>
d188 4
d205 1
a205 1
        <details key="ocl" value="if linkMapping.domainMetaElement.oclIsUndefined() then linkMapping.linkMetaFeature.eContainingClass else linkMapping.containmentFeature.eContainingClass endif"/>
d225 1
a225 1
        <details key="type.ocl" value="if linkMapping.domainMetaElement.oclIsUndefined() then linkMapping.linkMetaFeature.eContainingClass else linkMapping.containmentFeature.eContainingClass endif"/>
d258 2
d266 1
a266 1
        upperBound="-1" eType="#//FeatureValueSpec" containment="true">
d287 4
d292 2
@


1.19
log
@Method renamed. Clearly (hah :) express intention of the method - it's merely describes surroundings/location of the element in the domain, rather then represent a metaClass
@
text
@d6 22
a27 5
  <eClassifiers xsi:type="ecore:EClass" name="AbstractNodeMapping" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2004/EmfaticAnnotationMap">
      <details key="constraints" value="http://www.eclipse.org/gmf/2005/constraints"/>
      <details key="constraintsMeta" value="http://www.eclipse.org/gmf/2005/constraints/meta"/>
    </eAnnotations>
d55 1
a55 4
        <details key="ocl" value="containmentFeature.containment"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="domainMetaElement.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)"/>
d58 3
a69 5
    <eStructuralFeatures xsi:type="ecore:EReference" name="tool" eType="#//Tool" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Way to create the node"/>
      </eAnnotations>
    </eStructuralFeatures>
d71 4
a74 2
  <eClassifiers xsi:type="ecore:EClass" name="MappingEntry" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//AbstractNodeMapping #//MappingEntry">
d79 3
d97 4
a100 2
  <eClassifiers xsi:type="ecore:EClass" name="LinkMapping" eSuperTypes="#//MappingEntry">
    <eOperations name="getDomainContext" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
a102 29
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainSpecialization" eType="#//Constraint"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specializes further the domain meta element EClass associated with this mapping and should be evaluated in this EClass context"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="self.getDomainContext()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainInitializer" eType="#//ElementInitializer"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Initializer for the domain model element associated with mapping"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="let i : FeatureSeqInitializer = domainInitializer.oclAsType( FeatureSeqInitializer) in i.oclIsUndefined() or i.initializers.feature.eContainingClass->forAll(c|c.isSuperTypeOf(domainMetaElement)) "/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="self.getDomainContext()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="containmentFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EReference">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement)"/>
      </eAnnotations>
    </eStructuralFeatures>
a132 5
    <eStructuralFeatures xsi:type="ecore:EReference" name="tool" eType="#//Tool" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Way to create the link"/>
      </eAnnotations>
    </eStructuralFeatures>
d134 1
a134 1
  <eClassifiers xsi:type="ecore:EClass" name="CanvasMapping" eSuperTypes="#//MappingEntry">
d139 5
a144 28
  <eClassifiers xsi:type="ecore:EClass" name="Mapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="nodes" lowerBound="1" upperBound="-1"
        eType="#//NodeMapping" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="links" upperBound="-1"
        eType="#//LinkMapping" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagram" lowerBound="1"
        eType="#//CanvasMapping" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="toolGroups" upperBound="-1"
        eType="#//ToolGroup" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="audits" eType="#//AuditContainer"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Domain meta-model audit rules definitions"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ToolGroup">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tools" upperBound="-1"
        eType="#//Tool" eOpposite="#//Tool/group"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Tool" interface="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="group" eType="#//ToolGroup"
        eOpposite="#//ToolGroup/tools"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CreationTool" eSuperTypes="#//Tool"/>
  <eClassifiers xsi:type="ecore:EClass" name="NewActionTool" eSuperTypes="#//Tool"/>
d252 13
@


1.18
log
@[rdvorak] #123279 audits definition in gmfmap
@
text
@d11 1
a11 1
    <eOperations name="getDomainMetaClass" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
d20 1
a20 1
        <details key="ocl" value="if domainMetaElement.oclIsUndefined() then containmentFeature.eContainingClass else domainMetaElement endif"/>
d33 1
a33 1
        <details key="ocl" value="if domainMetaElement.oclIsUndefined() then containmentFeature.eContainingClass else domainMetaElement endif"/>
d81 1
a81 1
    <eOperations name="getDomainMetaClass" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
d92 1
a92 1
        <details key="ocl" value="if domainMetaElement.oclIsUndefined() then linkMetaFeature.eContainingClass else domainMetaElement endif "/>
d105 1
a105 1
        <details key="ocl" value="if domainMetaElement.oclIsUndefined() then linkMetaFeature.eContainingClass else domainMetaElement endif "/>
@


1.17
log
@#115461 provide source feature in mapping
@
text
@d164 6
d290 91
@


1.16
log
@[rdvorak] #120655 declare custom variables to be accessible from context
@
text
@d126 5
@


1.15
log
@#118059
- ChildNodes could be places directly inside the node, without compartment
- XY layout is possible for Gen*Nodes
@
text
@d193 10
a202 1
        <details key="documentation" value="Restriction enforced by the the source end, may reference variables 'oppositeEnd' pointing to targetEnd and 'link' denoting the link domainmetaElement instance if available."/>
d208 10
a217 1
        <details key="documentation" value="Restriction enforced by the the target end, may reference variables 'oppositeEnd' pointing to sourceEnd and 'link' denoting the link domainmetaElement instance if available."/>
@


1.14
log
@#119709
Adding Compartment mapping
@
text
@d67 2
a68 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="compartment" lowerBound="1"
        eType="#//CompartmentMapping" eOpposite="#//CompartmentMapping/childNodes"/>
@


1.13
log
@updated gmfmap to match newly introduced .gmfgraph model (replaces .diadef) #114177.
besides, rudimentary tooling model is introduced as part of gmfmap #115799, subject to further work
@
text
@d51 2
d68 1
a68 1
        eType="ecore:EClass ../../org.eclipse.gmf.graphdef/models/gmfgraph.ecore#//Compartment"/>
d72 8
@


1.12
log
@Adding method to get DomainElementMetaClass for the transformation code.
@
text
@a11 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.diadef/models/diadef.ecore#//Node"/>
d51 5
d58 4
a61 1
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//AbstractNodeMapping #//MappingEntry"/>
d63 2
d66 1
a66 5
        eType="ecore:EClass ../../org.eclipse.gmf.diadef/models/diadef.ecore#//Compartment">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="parentNode.diagramNode.oclAsType(diadef::Node).compartments->includes(self.compartment)"/>
      </eAnnotations>
    </eStructuralFeatures>
d73 1
a73 1
        eType="ecore:EClass ../../org.eclipse.gmf.diadef/models/diadef.ecore#//Connection"/>
d128 5
d136 1
a136 1
        eType="ecore:EClass ../../org.eclipse.gmf.diadef/models/diadef.ecore#//Canvas"/>
d147 12
d160 2
@


1.11
log
@Adding method to get DomainElementMetaClass for the transformation code.
@
text
@d67 1
@


1.10
log
@domainMetaElement feature should be optional.
@
text
@d11 1
d55 1
a55 1
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//MappingEntry #//AbstractNodeMapping"/>
@


1.9
log
@[rdvorak] #117743 support for link creation constraints
@
text
@d13 1
a13 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
@


1.8
log
@#118053 update models
@
text
@d117 6
d146 23
@


1.7
log
@[115862] describe semantics of metamodel with annotations
@
text
@d6 1
a6 1
  <eClassifiers xsi:type="ecore:EClass" name="MappingEntry" abstract="true">
a10 2
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NodeMapping" eSuperTypes="#//MappingEntry">
d22 1
a22 1
        <details key="ocl" value="domainMetaElement"/>
d31 1
a31 1
        <details key="ocl" value="let i : FeatureSeqInitializer = domainInitializer.oclAsType( FeatureSeqInitializer) in i.oclIsUndefined() or i.initializers.feature.eContainingClass->forAll(c|c.isSuperTypeOf(domainMetaElement)) "/>
d35 1
a35 1
        <details key="ocl" value="domainMetaElement"/>
d40 4
a43 1
        <details key="ocl" value="containmentFeature.oclIsUndefined() or containmentFeature.eReferenceType.isSuperTypeOf(domainMetaElement) "/>
d48 1
a48 1
        <details key="ocl" value="editFeature.oclIsUndefined() or domainMetaElement.eAllAttributes->includes(editFeature)"/>
d54 3
a56 1
  <eClassifiers xsi:type="ecore:EClass" name="ChildNodeMapping">
a62 37
    <eStructuralFeatures xsi:type="ecore:EReference" name="diagramNode" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.gmf.diadef/models/diadef.ecore#//Node"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainChildrenFeature"
        lowerBound="1" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStructuralFeature">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="domainChildrenFeature.eContainingClass.isSuperTypeOf(parentNode.domainMetaElement)"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="editFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="editFeature.oclIsUndefined() or (not domainMetaElement.oclIsUndefined()  and editFeature.eContainingClass.isSuperTypeOf(domainMetaElement)) or domainChildrenFeature.eType.oclAsType(ecore::EClass).eAllAttributes->includes(editFeature)"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainSpecialization" eType="#//Constraint"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specializes further the domain meta element EClass associated with this mapping and should be evaluated in this EClass context"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="if domainMetaElement.oclIsUndefined() then domainChildrenFeature.eContainingClass else domainMetaElement endif "/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainInitializer" eType="#//ElementInitializer"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Initializer for the domain model element associated with mapping"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="let i : FeatureSeqInitializer = domainInitializer.oclAsType( FeatureSeqInitializer) in i.oclIsUndefined() or i.initializers.feature.eContainingClass->forAll(c|c.isSuperTypeOf(domainMetaElement)) "/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/meta">
        <details key="def" value="context"/>
        <details key="ocl" value="if domainMetaElement.oclIsUndefined() then domainChildrenFeature.eContainingClass else domainMetaElement endif "/>
      </eAnnotations>
    </eStructuralFeatures>
d64 1
a64 1
        eType="#//NodeMapping" changeable="false" eOpposite="#//NodeMapping/childMappings"/>
@


1.6
log
@[rdvorak] #115862 metainfo to handle runtime validation of constraints
@
text
@d9 1
d22 2
a23 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/context">
d35 2
a36 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/context">
d79 2
a80 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/context">
d92 2
a93 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/context">
d109 2
a110 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/context">
d122 2
a123 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/context">
d170 3
a172 1
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/Constraint"/>
d175 3
a177 1
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/ValueSpec"/>
d185 3
a187 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/body"/>
d194 3
a196 1
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/lang"/>
d219 2
a220 2
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints/def/type">
      <details key="ocl" value="if feature.oclIsKindOf(ecore::EAttribute) then feature.oclAsType(ecore::EAttribute).eAttributeType else feature.oclAsType(ecore::EReference).eReferenceType endif"/>
d227 3
@


1.5
log
@[rdvorak] #115057 valid ocl constraints for gmfmap model
@
text
@d21 3
d33 3
d76 3
d88 3
d104 3
d116 3
a159 3
    <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
      <details key="txt" value="body->evaluate() instanceof Boolean"/>
    </eAnnotations>
d163 1
d166 1
d174 1
d181 1
d204 3
@


1.4
log
@[rdvorak] #112773 specify init expressions while relating diagram elements with domain
@
text
@d27 3
d33 1
a33 1
        <details key="ocl" value="oclIsUndefined(containmentFeature) or domainMetaElement.eAllReferences->includes(containmentFeature)"/>
d38 1
a38 1
        <details key="ocl" value="oclIsUndefined(editFeature) or domainMetaElement.eAllAttributes->includes(editFeature)"/>
d42 1
a42 1
        eType="#//ChildNodeMapping" containment="true"/>
d48 1
a48 1
        <details key="ocl" value="eContainer.diagramNode.compartments->includes(self.compartment)"/>
d56 6
a61 1
        <details key="ocl" value="eContainer.domainMetaElement.eAllAttributes->includes(domainChildrenFeature)"/>
a63 1
    <eStructuralFeatures xsi:type="ecore:EReference" name="editFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"/>
d76 3
d80 2
d98 3
d104 6
a109 1
        <details key="ocl" value="oclIsUndefined(containmentFeature) or (not oclIsUndefined(domainMetaElement) and domainMetaElement.eAllReferences->includes(containmentFeature))"/>
a111 1
    <eStructuralFeatures xsi:type="ecore:EReference" name="labelEditFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"/>
d116 3
d121 5
a125 1
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStructuralFeature"/>
d143 1
a143 1
      <details key="ocl" value="body->evaluate() instanceof Boolean"/>
d188 1
a188 1
        <details key="documentation" value="Denotes the feature for which this value expression is specified. Its containing eClass is the context for evaluation."/>
@


1.3
log
@[rdvorak] #112505 constraint specification in gmfmap
@
text
@d22 6
d64 6
d81 6
d139 27
@


1.2
log
@[ashatalin] Should be possible to specify editable feature and domain element for child nodes.
@
text
@d16 6
d50 4
a53 5
    <eStructuralFeatures xsi:type="ecore:EReference" name="conditionalFeature" lowerBound="1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute">
      <eAnnotations source="http://www.eclipse.org/gmf/2005/constraints">
        <details key="ocl" value="domainChildrenFeature.eClass.eAllAttributes->includes(conditionalFeature) and conditionalFeature.eType == EcorePackage.getEBoolean"/>
      </eAnnotations>
d55 1
a55 1
        <details key="documentation" value="e.g. EcorePackage.getEClass_EReferences for domainChildrenFeature with EcorePackage.getEReference_Containment for conditionalFeature"/>
a57 2
    <eStructuralFeatures xsi:type="ecore:EReference" name="editFeature" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAttribute"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="domainMetaElement" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClass"/>
d63 6
d97 24
@


1.1
log
@*** empty log message ***
@
text
@d53 2
@

