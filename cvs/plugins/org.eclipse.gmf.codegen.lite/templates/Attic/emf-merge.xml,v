head	1.2;
access;
symbols
	v20080910-1520:1.2
	v20070915-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.4
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1
	RC3_20:1.1
	v20070614-1400:1.1
	v20070608-1300:1.1
	v20070601-1400:1.1
	v20070525-1500:1.1
	v20070520-1200:1.1
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1
	v20070103-0300:1.1
	M4_20:1.1
	v20061222-1800:1.1
	v20061214-0000:1.1
	v20061120-1300:1.1
	M3_20:1.1
	v20061117-0800:1.1
	v20061013-1330:1.1
	v20061005-1700:1.1
	M1_20:1.1
	v20060904-1500:1.1
	v20060824-1600:1.1
	v20060713-1700:1.1
	R1_0_maintenance:1.1.0.2
	R1_0:1.1
	v20060627-1200:1.1
	v20060626-1420:1.1
	v20060620-0400:1.1
	v20060616-1400:1.1
	v20060616-1200:1.1
	v20060609-1400:1.1
	v20060531-1730:1.1
	v20060530-1930:1.1
	v20060526-1200:1.1
	v20060519-1300:1.1
	v20060519-0800:1.1
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.2
date	2007.07.04.13.22.26;	author bblajer;	state dead;
branches;
next	1.1;
commitid	405d468b9f0f4567;

1.1
date	2006.04.13.21.20.16;	author atikhomirov;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2007.09.17.16.02.13;	author bblajer;	state dead;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.2
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@<?xml version="1.0" encoding="UTF-8"?>
<merge:options 
  indent="  "  
  braceStyle="matching"  
  redirect="Gen"
  block="\s*@@\s*generated\s*NOT\s*\n"
  noImport="\s*//\s*import\s+([\w.*]*)\s*;\s*\n"
  xmlns:merge="http://www.eclipse.org/org/eclipse/emf/codegen/jmerge/Options">

<!-- Tabbed Standard

  indent="&#x9;"  
  braceStyle="standard"  

-->

    <!-- this accepts both new and old style markup. -->

    <merge:dictionaryPattern
      name="modelMembers" 
      select="Member/getComment" 
      match="\s*@@\s*(model)"/>

    <merge:dictionaryPattern
      name="generatedUnmodifiableMembers" 
      select="Member/getComment" 
      match="\s*@@\s*(gen)erated\s*(This field/method[^\n]*)*\n"/>

    <merge:dictionaryPattern
      name="generatedModifiableMembers" 
      select="Member/getComment" 
      match="\s*@@\s*generated\s*(modifiable)\s*\n"/>

    <!-- This is like the above, but for backward compatibility -->
    <merge:dictionaryPattern
      name="generatedLastGenMembers" 
      select="Member/getComment" 
      match="\s*@@\s*(lastgen).*\n"/>

    <merge:dictionaryPattern
      name="orderedMembers" 
      select="Member/getComment" 
      match="\s*@@\s*(ordered)\s*\n"/>

    <merge:pull 
      sourceGet="Member/getFlags"
      targetMarkup="^gen$"
      targetPut="Member/setFlags"/>

<!-- 
    <merge:pull 
      sourceMarkup="^modifiable$"
      sourceGet="Member/getComment"
      targetMarkup="^gen$"
      targetPut="Member/setComment"/>
-->

    <merge:pull 
      sourceMarkup="^modifiable$"
      sourceGet="Member/getComment"
      sourceTransfer="(\s*&lt;!--\s*begin-user-doc.*?end-user-doc\s*-->\s*)\n"
      targetMarkup="^modifiable$"
      targetPut="Member/setComment"/>

    <merge:pull 
      sourceMarkup="^gen$"
      sourceGet="Member/getComment"
      sourceTransfer="(\s*&lt;!--\s*begin-user-doc.*?end-user-doc\s*-->\s*)\n"
      targetMarkup="^gen$"
      targetPut="Member/setComment"/>

    <merge:pull 
      sourceMarkup="^gen$"
      sourceGet="Type/getComment"
      sourceTransfer="(\s*&lt;!--\s*begin-user-doc.*?end-user-doc\s*-->\s*)\n"
      targetMarkup="^modifiable$"
      targetPut="Type/setComment"/>

    <merge:pull 
      sourceGet="Initializer/getBody"
      targetMarkup="^gen$"
      targetPut="Initializer/setBody"/>

    <merge:pull 
      sourceGet="Type/getSuperclass"
      targetMarkup="^lastgen$|^gen$|^modifiable$|^model$"
      targetPut="Type/setSuperclass"/>

    <merge:pull 
      sourceGet="Type/getSuperInterfaces"
      sourceTransfer="(\s*@@\s*extends|\s*@@\s*implements)(.*?)\n"
      targetMarkup="^lastgen$|^gen$|^modifiable$|^model$"
      targetPut="Type/addSuperInterface"/>

    <merge:pull 
      sourceGet="Field/getType"
      targetMarkup="^gen$"
      targetPut="Field/setType"/>
    <merge:pull 
      sourceGet="Field/getInitializer"
      targetMarkup="^gen$"
      targetPut="Field/setInitializer"/>

    <merge:pull 
      sourceGet="Method/getBody"
      targetMarkup="^gen$"
      targetPut="Method/setBody"/>
    <merge:pull 
      sourceGet="Method/getReturnType"
      targetMarkup="^gen$|^model$"
      targetPut="Method/setReturnType"/>
    <merge:pull 
      sourceGet="Method/getExceptions"
      targetMarkup="^gen$"
      targetPut="Method/addException"/>

    <merge:sweep markup="^gen$" select="Member"/>
    <merge:sweep markup="^org.eclipse.emf.ecore.EMetaObject$" select="Import"/>
    <merge:sweep markup="^org.eclipse.emf.ecore.impl.EMetaObjectImpl$" select="Import"/>
    <merge:sweep markup="^org.eclipse.emf.ecore.util.EObjectCompositeEList$" select="Import"/>
    <merge:sweep markup="^org.eclipse.emf.ecore.util.EObjectCompositeWithInverseEList$" select="Import"/>

    <merge:sort markup="^ordered$" select="Member"/>

<!-- Basic Rules

    <merge:pull 
      sourceGet="CompilationUnit/getHeader"
      targetPut="CompilationUnit/setHeader"/>

    <merge:pull 
      sourceGet="Package/getName"
      targetPut="Package/setName"/>

    <merge:pull 
      sourceGet="Member/getFlags"
      targetPut="Member/setFlags"/>
    <merge:pull 
      sourceGet="Member/getComment"
      targetPut="Member/setComment"/>

    <merge:pull 
      sourceGet="Type/getSuperclass"
      targetPut="Type/setSuperclass"/>
    <merge:pull 
      sourceGet="Type/getSuperInterfaces"
      targetPut="Type/addSuperInterface"/>

    <merge:pull 
      sourceGet="Initializer/getBody"
      targetPut="Initializer/setBody"/>

    <merge:pull 
      sourceGet="Field/getType"
      targetPut="Field/setType"/>
    <merge:pull 
      sourceGet="Field/getInitializer"
      targetPut="Field/setInitializer"/>

    <merge:pull 
      sourceGet="Method/getBody"
      targetPut="Method/setBody"/>
    <merge:pull 
      sourceGet="Method/getReturnType"
      targetPut="Method/setReturnType"/>
    <merge:pull 
      sourceGet="Method/getExceptions"
      targetPut="Method/addException"/>
-->

</merge:options>
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@@


1.1.4.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@@


