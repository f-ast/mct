head	1.3;
access;
symbols
	v20080910-1520:1.3
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	v20070103-0300:1.2
	M4_20:1.2
	v20061222-1800:1.2
	v20061214-0000:1.2
	v20061120-1300:1.2
	M3_20:1.2
	v20061117-0800:1.2;
locks; strict;
comment	@# @;


1.3
date	2007.04.04.11.04.48;	author bblajer;	state dead;
branches;
next	1.2;
commitid	18c54613864d4567;

1.2
date	2006.10.25.11.24.27;	author bblajer;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.19.11.00.31;	author bblajer;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@<%@@ jet package="org.eclipse.gmf.codegen.templates.lite.parts" class="DiagramExternalNodeLabelEditPartGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @@generated
 */
public abstract class <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%> extends <%=importManager.getImportedName("org.eclipse.gef.editparts.AbstractGraphicalEditPart")%> {

	/**
	 * @@generated
	 */
	public <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%>(View view) {
		setModel(view);
	}

	/**
	 * @@generated
	 */
	public void refreshBounds() {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Node")%> node = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Node")%>) getModel();
		if (node.getLayoutConstraint() == null) {
			return;
		}
		assert node.getLayoutConstraint() instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%>;
		final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%> location = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%>) node.getLayoutConstraint();
		getFigure().getParent().setConstraint(getFigure(), new <%=importManager.getImportedName("org.eclipse.draw2d.AbstractLocator")%>() {
			protected Point getReferencePoint() {
				return getLabelLocation(((GraphicalEditPart) getParent()).getFigure()).translate(location.getX(), location.getY());
			}
			public int getRelativePosition() {
				return <%=importManager.getImportedName("org.eclipse.draw2d.PositionConstants")%>.SOUTH;
			}
		});
	}

	/**
	 * @@generated
	 */
	protected void refreshVisuals() {
		super.refreshVisuals();
		refreshBounds();
	}

	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart")%>.Refresher boundsRefresher = new <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart")%>.Refresher() {
		public void refresh() {
			refreshBounds();
		}
	};

	/**
	 * @@generated
	 */
	public Point getReferencePoint() {
		return getLabelLocation(((GraphicalEditPart) getParent()).getFigure());
	}

	/**
	 * @@generated
	 */
	protected Point getLabelLocation(IFigure parent) {
		Point result = parent.getBounds().getBottom();
		parent.translateToAbsolute(result);
		return result;
	}
}
<%importManager.emitSortedImports();%>
@


1.2
log
@Incorrect positioning of external node labels when the zoom level is not 1.0
@
text
@@


1.1
log
@#161253: External node labels should be attached to nodes correctly
Generate 2 icons if myDiagram.getCreationWizardIconPathX() and myEditorGen.getEditor().getIconPathX() specify different absolute paths
@
text
@d76 3
a78 1
		return parent.getBounds().getBottom();
@

