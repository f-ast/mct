head	1.4;
access;
symbols
	v20080910-1520:1.4
	v20070403-1500:1.3
	v20070330-1300:1.3
	v20060330-1300:1.3
	v20070322-1100:1.3
	v20060316-0600:1.3
	v20070307-0700:1.3
	v20070228-2000:1.3
	v20070221-1500:1.3
	v20070208-1800:1.3
	v20070103-0300:1.3
	M4_20:1.3
	v20061222-1800:1.3
	v20061214-0000:1.3
	v20061120-1300:1.3
	M3_20:1.3
	v20061117-0800:1.3
	v20061013-1330:1.3
	v20061005-1700:1.3
	M1_20:1.3
	v20060904-1500:1.3
	v20060824-1600:1.3
	v20060713-1700:1.3
	R1_0_maintenance:1.3.0.2
	R1_0:1.3
	v20060627-1200:1.3
	v20060626-1420:1.3
	v20060620-0400:1.3
	v20060616-1400:1.3
	v20060616-1200:1.3
	v20060609-1400:1.2
	v20060531-1730:1.2
	v20060530-1930:1.2
	v20060526-1200:1.2
	v20060519-1300:1.2
	v20060519-0800:1.2
	v20060512-1000:1.1
	I20060512-1000:1.1
	I20060505-1400:1.1
	I20060428-1300:1.1
	I20060424-0500:1.1
	I20060424-0300:1.1
	M6_10:1.1;
locks; strict;
comment	@# @;
expand	@k@;


1.4
date	2007.04.04.11.04.48;	author bblajer;	state dead;
branches;
next	1.3;
commitid	18c54613864d4567;

1.3
date	2006.06.16.07.52.07;	author ashatalin;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.15.11.19.18;	author atikhomirov;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.13.21.20.15;	author atikhomirov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@<%
final String figureQualifiedClassName;
if (viewmap instanceof ParentAssignedViewmap) {
	ParentAssignedViewmap parentAssignedViewmap = (ParentAssignedViewmap) viewmap;
	figureQualifiedClassName = parentAssignedViewmap.getFigureQualifiedClassName() == null ? "org.eclipse.draw2d.IFigure" : parentAssignedViewmap.getFigureQualifiedClassName();
} else if (viewmap instanceof FigureViewmap) {
	String figureQualifiedClassNameCandidate = ((FigureViewmap) viewmap).getFigureQualifiedClassName();
	if (figureQualifiedClassNameCandidate == null || figureQualifiedClassNameCandidate.trim().length() == 0) {
		figureQualifiedClassName = "org.eclipse.draw2d.Label";
	} else {
		figureQualifiedClassName = figureQualifiedClassNameCandidate;
	}
} else if (viewmap instanceof SnippetViewmap) {
	figureQualifiedClassName = "org.eclipse.draw2d.IFigure";
} else if (viewmap instanceof InnerClassViewmap) {
	figureQualifiedClassName = ((InnerClassViewmap) viewmap).getClassName();
} else {
	figureQualifiedClassName = "org.eclipse.draw2d.IFigure";
}
final String figureImportedName;
if (viewmap instanceof InnerClassViewmap) {
	figureImportedName = figureQualifiedClassName;	//do not import inner class
} else {
	figureImportedName = importManager.getImportedName(figureQualifiedClassName);
}
if (viewmap instanceof ParentAssignedViewmap) {
	final ParentAssignedViewmap parentAssignedViewmap = (ParentAssignedViewmap) viewmap;
%>
	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.draw2d.IFigure")%> createFigure() {
		// Parent should assign one using <%=(parentAssignedViewmap.getSetterName() == null ? "setLabel" : parentAssignedViewmap.getSetterName())%> method
		return null;
	}
<%} else { %>

	/**
	 * @@generated
	 */
	protected <%=figureImportedName%> createLabel() {
<%
if (viewmap instanceof FigureViewmap) {
%>
		return new <%=figureImportedName%>();
<%} // instanceof FigureViewmap
 else if (viewmap instanceof SnippetViewmap) {%>
		return <%=((SnippetViewmap) viewmap).getBody()%>;
<%} // instanceof SnippetViewmap; FIXME : obtain figure class name to generate getter
 else if (viewmap instanceof InnerClassViewmap) {
%>
		return new <%=figureImportedName%>();
<%}%>
	}

	/**
	 * @@generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.draw2d.IFigure")%> createFigure() {
		<%=figureImportedName%> label = createLabel();
<%
if ("org.eclipse.draw2d.Label".equals(figureQualifiedClassName) || viewmap instanceof InnerClassViewmap) {
%>
		defaultText = label.getText();
<%
} else {
%>
		defaultText = "";	//$NON-NLS-1$
<%
}
%>
		return label;
	}
<%}	/*not parent-assigned*/%>

	/**
<%
if (!"org.eclipse.draw2d.Label".equals(figureQualifiedClassName) && viewmap instanceof InnerClassViewmap==false) {
%>
	 * TODO: reimplement, since the figure used by this editpart is not a Label.
<%
}
%>
	 * @@generated
	 */
	public <%=importManager.getImportedName("org.eclipse.draw2d.Label")%> getLabel() {
		return (<%=importManager.getImportedName("org.eclipse.draw2d.Label")%>) getFigure();
	}

<%
String labelSetterName = "setLabel"; // same assumption in NodeEditPart
String labelFigureClassName = "org.eclipse.draw2d.IFigure";
if (viewmap instanceof ParentAssignedViewmap) {
	ParentAssignedViewmap parentAssignedViewmap = (ParentAssignedViewmap) viewmap;
	if (parentAssignedViewmap.getSetterName() != null) {
		labelSetterName = parentAssignedViewmap.getSetterName();
	}
	if (parentAssignedViewmap.getFigureQualifiedClassName() != null) {
		labelFigureClassName = parentAssignedViewmap.getFigureQualifiedClassName();
	}
} // FIXME perhaps, there's no sense to have setLabel for any other viewmap than ParentAssigned?
%>
	/**
	 * @@generated
	 */
	public void <%=labelSetterName%>(<%=importManager.getImportedName(labelFigureClassName)%> figure) {
		unregisterVisuals();
		setFigure(figure);
<%
if ("org.eclipse.draw2d.Label".equals(labelFigureClassName)) {
%>
		defaultText = figure.getText();
<%
} else {
%>
		defaultText = "";	//$NON-NLS-1$
<%
}
%>
		registerVisuals();
		refreshVisuals();
	}

<%
if (viewmap instanceof InnerClassViewmap) {
	String classBody = ((InnerClassViewmap) viewmap).getClassBody();
%>
<%=classBody%>
<%@@ include file="mapmodeWorkaround.javajetinc"%>
<%
}
%>
@


1.3
log
@[bblajer] #147076 Lite generator: Support ParentAssignedViewmap for labels and compartments
@
text
@@


1.2
log
@[bblajer] #141280 Support child nodes without label
@
text
@d1 28
a28 1

d33 2
a34 3
		<%=importManager.getImportedName("org.eclipse.draw2d.Label")%> label = createLabel();
		defaultText = label.getText();
		return label;
d36 1
d41 1
a41 1
	protected <%=importManager.getImportedName("org.eclipse.draw2d.Label")%> createLabel() {
a42 1
String figureQualifiedClassName = null;
a43 4
	figureQualifiedClassName = ((FigureViewmap) viewmap).getFigureQualifiedClassName();
	if (figureQualifiedClassName == null || figureQualifiedClassName.trim().length() == 0) {
		figureQualifiedClassName = "org.eclipse.draw2d.Label";
	}
d45 1
a45 1
		return new <%=importManager.getImportedName(figureQualifiedClassName)%>();
a50 1
 	figureQualifiedClassName = ((InnerClassViewmap) viewmap).getClassName();
d52 1
a52 1
		return new <%=figureQualifiedClassName%>();
d59 27
d90 13
d106 1
a106 1
	public void setLabel(<%=importManager.getImportedName("org.eclipse.draw2d.Label")%> figure) {
d109 3
d113 7
@


1.1
log
@[bblajer] #136702 Code generation targeting pure-GEF runtime
@
text
@a16 1
Viewmap viewmap = genLabel.getViewmap();
d54 2
a55 2
if (genLabel.getViewmap() instanceof InnerClassViewmap) {
	String classBody = ((InnerClassViewmap) genLabel.getViewmap()).getClassBody();
@

