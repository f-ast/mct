head	1.2;
access;
symbols
	v20080910-1520:1.2
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1
	v20070307-0700:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.04.04.11.04.48;	author bblajer;	state dead;
branches;
next	1.1;
commitid	18c54613864d4567;

1.1
date	2007.03.05.12.58.41;	author bblajer;	state Exp;
branches;
next	;
commitid	437c45ec14004567;


desc
@@


1.2
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@<%
{
	/*See xpt::diagram::policies::ClassNames.ext#getComponentEditPolicyClassName(GenCommonBase)*/
	String editPolicyClassName = genElement.getEditPartClassName();
	if (editPolicyClassName.endsWith(GenCommonBase.EDIT_PART_SUFFIX)) {
		editPolicyClassName = editPolicyClassName.substring(0, editPolicyClassName.length() - GenCommonBase.EDIT_PART_SUFFIX.length());
	}
	editPolicyClassName += "ComponentEditPolicy";
%>
		installEditPolicy(<%=importManager.getImportedName("org.eclipse.gef.EditPolicy")%>.COMPONENT_ROLE, new <%=importManager.getImportedName(genDiagram.getEditPoliciesPackageName() + "." + editPolicyClassName)%>()<%
		if (genElement instanceof GenNode) {%> {
			protected <%=importManager.getImportedName("org.eclipse.gef.GraphicalEditPart")%> getGraphicalEditPart() {
				return <%=genElement.getEditPartClassName()%>.this;
			}
		}<%}%>);
<%
}
%>
@


1.1
log
@[176362]: ClassCastException while selecting items in tree outline of the generated diagram + test to reproduce;
ComponentEditPolicy.xpt: replace int constant with a reference thereto to facilitate readability
@
text
@@

