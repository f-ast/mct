head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.6
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.6
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070601-1400:1.5
	v20070525-1500:1.5
	v20070520-1200:1.5
	v20070518-1300:1.4
	v20070504-1000:1.4
	v20070427-0600:1.4
	v20070420-1000:1.4
	v20070413-1300:1.4
	v20070405-1100:1.4
	v20070403-1500:1.4
	v20070330-1300:1.4
	v20060330-1300:1.4
	v20070322-1100:1.2
	v20060316-0600:1.1
	v20070307-0700:1.1
	v20070228-2000:1.1
	v20070221-1500:1.1
	v20070208-1800:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.13.55.39;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	388c4821b4d44567;

1.6
date	2007.08.13.14.11.03;	author bblajer;	state Exp;
branches;
next	1.5;
commitid	65c246c066754567;

1.5
date	2007.05.18.21.17.26;	author atikhomirov;	state Exp;
branches;
next	1.4;
commitid	25e5464e17e24567;

1.4
date	2007.03.28.19.32.48;	author ashatalin;	state Exp;
branches;
next	1.3;
commitid	6e51460ac2dd4567;

1.3
date	2007.03.22.17.15.32;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	5d864602b9b34567;

1.2
date	2007.03.20.14.45.00;	author ashatalin;	state Exp;
branches;
next	1.1;
commitid	437645fff36b4567;

1.1
date	2007.02.02.17.14.33;	author bblajer;	state Exp;
branches;
next	;
commitid	78d445c371764567;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    blajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE extensions FOR gmfgen::GenNavigator-»
	«EXPAND editorInputPropertyTester("URIEditorInput", "org.eclipse.emf.common.ui.URIEditorInput", getUriInputTesterQualifiedClassName())-»
«IF editorGen.diagram.generateShortcutIcon()-»

	«EXPAND editorInputPropertyTester("Shortcut", "org.eclipse.gmf.runtime.notation.View", editorGen.diagram.getShortcutPropertyTesterQualifiedClassName())-»
«ENDIF-»
«IF generateDomainModelNavigator && null != editorGen.domainGenModel-»
	«EXPAND editorInputPropertyTester("DomainModelElement", "org.eclipse.emf.ecore.EObject", getDomainModelElementTesterQualifiedClassName())-»
«ENDIF-»

	«EXPAND registerBindings-»

	«EXPAND registerNavigatorContent-»

	«EXPAND registerLinkHelper-»
«ENDDEFINE»

«DEFINE i18n FOR gmfgen::GenNavigator-»
navigatorContentName=*.«editorGen.diagramFileExtension» diagram contents
«IF generateDomainModelNavigator-»
domainNavigatorContentName=*.«editorGen.domainFileExtension» model contents
«ENDIF-»
«ENDDEFINE»

«DEFINE editorInputPropertyTester(String property, String type, String testerClass) FOR gmfgen::GenNavigator-»
   <extension point="org.eclipse.core.expressions.propertyTesters">
      «EXPAND xpt::Common::xmlGeneratedTag»
       <propertyTester
           id="«editorGen.plugin.iD».«property»PropertyTester"
           type="«type»"
           namespace="«editorGen.plugin.iD»"
           properties="is«property»"
           class="«testerClass»">
       </propertyTester>
   </extension>
«ENDDEFINE»

«DEFINE registerBindings FOR gmfgen::GenNavigator-»
   <extension point="org.eclipse.ui.navigator.viewer">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <viewerContentBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
         <includes>
            <contentExtension pattern="«contentExtensionID»"/>
«IF generateDomainModelNavigator && null != editorGen.domainGenModel-»
			<contentExtension pattern="«domainContentExtensionID»"/>
«ENDIF-»
«IF editorGen.editor.eclipseEditor-»
            <contentExtension pattern="«linkHelperExtensionID»"/>
«ENDIF-»
         </includes>
      </viewerContentBinding>
      <viewerActionBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
         <includes>
            <actionExtension pattern="«actionProviderID»"/>
         </includes>
      </viewerActionBinding>
   </extension>
«ENDDEFINE»

«DEFINE registerNavigatorContent FOR gmfgen::GenNavigator-»
   <extension point="org.eclipse.ui.navigator.navigatorContent">
	«EXPAND diagramNavigatorContent-»
	«EXPAND domainModelNavigatorContent-»
	«EXPAND actionProvider-»
   </extension>
«ENDDEFINE»

«DEFINE diagramNavigatorContent FOR gmfgen::GenNavigator-»
      «EXPAND xpt::Common::xmlGeneratedTag»
      <navigatorContent
            id="«contentExtensionID»" 
            name="«contentExtensionName»" 
            priority="«contentExtensionPriority»" 
            contentProvider="«getContentProviderQualifiedClassName()»" 
            labelProvider="«getLabelProviderQualifiedClassName()»"
            icon="«editorGen.editor.iconPathX»"
            activeByDefault="true">
         <triggerPoints>
            <or>
	           <and>
    	          <instanceof value="org.eclipse.core.resources.IFile"/>
        	      <test property="org.eclipse.core.resources.extension" value="«editorGen.diagramFileExtension»"/>
               </and>
               <instanceof value="«getAbstractNavigatorItemQualifiedClassName()»"/>
«IF editorGen.diagram.generateShortcutIcon()-»
           	   <adapt type="org.eclipse.gmf.runtime.notation.View">
           	      <test property="«editorGen.plugin.iD».isShortcut"/>
           	   </adapt>
«ENDIF-»
            </or>
         </triggerPoints>
         <possibleChildren>
            <or>
         	   <instanceof value="«getAbstractNavigatorItemQualifiedClassName()»"/>
«IF editorGen.diagram.generateShortcutIcon()-»
           	   <adapt type="org.eclipse.gmf.runtime.notation.View">
           	      <test property="«editorGen.plugin.iD».isShortcut"/>
           	   </adapt>
«ENDIF-»
            </or>
         </possibleChildren>
         <commonSorter 
               id="«sorterExtensionID»" 
               class="«getSorterQualifiedClassName()»">
            <parentExpression>
               <or>
	              <and>
    	             <instanceof value="org.eclipse.core.resources.IFile"/>
        	         <test property="org.eclipse.core.resources.extension" value="«editorGen.diagramFileExtension»"/>
                  </and>
                  <instanceof value="«getAbstractNavigatorItemQualifiedClassName()»"/>
               </or>
            </parentExpression>
         </commonSorter>
      </navigatorContent>
«ENDDEFINE»

«DEFINE domainModelNavigatorContent FOR gmfgen::GenNavigator-»
«IF generateDomainModelNavigator && null != editorGen.domainGenModel-»
      <navigatorContent
            id="«domainContentExtensionID»" 
            name="«domainContentExtensionName»" 
            priority="«domainContentExtensionPriority»" 
            contentProvider="«getDomainContentProviderQualifiedClassName()»" 
            labelProvider="«getDomainLabelProviderQualifiedClassName()»"
            icon="«editorGen.editor.iconPathX»"
            activeByDefault="true">
         <triggerPoints>
            <or>
	           <and>
    	          <instanceof value="org.eclipse.core.resources.IFile"/>
        	      <test property="org.eclipse.core.resources.extension" value="«editorGen.domainFileExtension»"/>
               </and>
               <and>
                  <instanceof value="org.eclipse.emf.ecore.EObject"/>
                  <test property="«editorGen.plugin.iD».isDomainModelElement"/>
               </and>
            </or>
         </triggerPoints>
         <possibleChildren>
            <and>
       	       <instanceof value="org.eclipse.emf.ecore.EObject"/>
       	       <test property="«editorGen.plugin.iD».isDomainModelElement"/>
       	    </and>
         </possibleChildren>
      </navigatorContent>
«ENDIF-»
«ENDDEFINE»

«DEFINE actionProvider FOR gmfgen::GenNavigator-»
      <actionProvider
            id="«actionProviderID»"
            class="«getActionProviderQualifiedClassName()»">
         <enablement>
            <or>
               <instanceof value="«getAbstractNavigatorItemQualifiedClassName()»"/>
«IF editorGen.diagram.generateShortcutIcon()-»
           	   <adapt type="org.eclipse.gmf.runtime.notation.View">
           	      <test property="«editorGen.plugin.iD».isShortcut"/>
           	   </adapt>
«ENDIF-»
            </or>
         </enablement>
      </actionProvider>
«ENDDEFINE»

«DEFINE registerLinkHelper FOR gmfgen::GenNavigator-»
«IF editorGen.editor.eclipseEditor-»
   <extension point="org.eclipse.ui.navigator.linkHelper">
      «EXPAND xpt::Common::xmlGeneratedTag»
      <linkHelper
            id="«linkHelperExtensionID»"
            class="«getLinkHelperQualifiedClassName()»">
         <editorInputEnablement>
         	<or>
	            <instanceof value="org.eclipse.ui.IFileEditorInput"/>
	            <and>
	               <instanceof value="org.eclipse.emf.common.ui.URIEditorInput"/>
	               <test property="«editorGen.plugin.iD».isURIEditorInput"/>
	            </and>
	            <instanceof value="org.eclipse.gmf.runtime.lite.parts.DiagramEditorInput"/>
	        </or>
         </editorInputEnablement>
         <selectionEnablement>
            <instanceof value="«getAbstractNavigatorItemQualifiedClassName()»"/>
         </selectionEnablement>
      </linkHelper>
   </extension>
«ENDIF-»
«ENDDEFINE»

@


1.6
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.5
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d18 4
d23 16
d40 1
d42 1
a42 1
      <?gmfgen generated="true"?>
d44 2
a45 2
           id="«editorGen.plugin.iD».DomainModelElementTester"
           type="org.eclipse.emf.ecore.EObject"
d47 2
a48 2
           properties="isDomainModelElement"
           class="«getDomainModelElementTesterQualifiedClassName()»">
d51 1
a51 1
«ENDIF-»
d53 1
d73 1
d75 1
d77 7
d100 5
d110 5
d131 3
d163 3
d172 5
d180 1
a180 1
   </extension>
d182 1
a206 19
«DEFINE i18n FOR gmfgen::GenNavigator-»
navigatorContentName=*.«editorGen.diagramFileExtension» diagram contents
«IF generateDomainModelNavigator-»
domainNavigatorContentName=*.«editorGen.domainFileExtension» model contents
«ENDIF-»
«ENDDEFINE»

«DEFINE editorInputPropertyTester(String property, String type, String testerClass) FOR gmfgen::GenNavigator-»
   <extension point="org.eclipse.core.expressions.propertyTesters">
      «EXPAND xpt::Common::xmlGeneratedTag»
       <propertyTester
           id="«editorGen.plugin.iD».«property»PropertyTester"
           type="«type»"
           namespace="«editorGen.plugin.iD»"
           properties="is«property»"
           class="«testerClass»">
       </propertyTester>
   </extension>
«ENDDEFINE»@


1.4
log
@Implementing "link with editor" for URI editor input
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.3
log
@Domain model navigator from full-rt
@
text
@d17 1
d139 4
a142 1
	            <instanceof value="org.eclipse.emf.common.ui.URIEditorInput"/>
d160 13
@


1.2
log
@Using xmlGeneratedTag definition introduced by Dmitry.
@
text
@d17 14
d36 3
d89 29
d149 7
@


1.1
log
@[172664]: Provide audits and metrics for Lite diagrams (including view-based and RCP) + validation decorators + validation markers (for non-RCP case);
Several templates are rewritten with xpand;
lite-specific TextEmitter is back (otherwise importManager is sometimes passed to xpand templates)
@
text
@d18 1
a18 1
      <?gmfgen generated="true"?>
d35 1
a35 1
      <?gmfgen generated="true"?>
d85 1
a85 1
      <?gmfgen generated="true"?>
@

