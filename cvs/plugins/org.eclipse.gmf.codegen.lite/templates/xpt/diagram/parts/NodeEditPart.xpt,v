head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.6
	v20071003-0000:1.5
	v20070921-0000:1.3.2.1
	v20070915-0000:1.3
	v20070903-0000:1.5
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.2
	v20070504-1000:1.2
	v20070427-0600:1.2
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.13.55.37;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	388c4821b4d44567;

1.6
date	2007.10.31.17.16.42;	author bblajer;	state Exp;
branches;
next	1.5;
commitid	79fa4728b8794567;

1.5
date	2007.08.13.14.11.02;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	65c246c066754567;

1.4
date	2007.07.04.13.22.25;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	405d468b9f0f4567;

1.3
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	25e5464e17e24567;

1.2
date	2007.04.24.14.16.48;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	4264462e114e4567;

1.1
date	2007.04.04.11.04.48;	author bblajer;	state Exp;
branches;
next	;
commitid	18c54613864d4567;

1.3.2.1
date	2007.09.17.16.02.12;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::diagram::parts::Common»
«EXTENSION xpt::diagram::parts::NodeEditPart»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»
«EXTENSION xpt::diagram::Helper»

«DEFINE NodeEditPart FOR gmfgen::GenNode-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editPartsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «editPartClassName» «EXPAND supertypes» {
	«EXPAND xpt::diagram::parts::Common::visualIDConstant-»
	«EXPAND primaryShapeAttribute-»
	«EXPAND xpt::diagram::parts::Common::ctors-»
	«EXPAND xpt::diagram::parts::Common::registerModel-»
	«EXPAND createEditPolicies-»
	«EXPAND getPrimaryDragEditPolicy-»
	«EXPAND getDragTracker-»

	«EXPAND createFigure-»

	«EXPAND createDecorationPane-»
	«EXPAND xpt::diagram::parts::decorations::decorationManager-»
	«EXPAND xpt::diagram::parts::decorations::createDecorationManager-»
«IF compartments.size() > 0 && hasDirectChildren()-»
	«EXPAND childNodesPane-»
	«EXPAND setupChildNodesPane-»
«ENDIF-»
	«EXPAND createNodeShape-»
	«EXPAND getPrimaryShape FOR primaryShapeQualifiedClassName(viewmap)-»
	«EXPAND setupContentPane-»
	«EXPAND xpt::diagram::parts::Common::contentPane-»

	«EXPAND xpt::diagram::parts::Common::declareViewCode-»
«IF getInnerFixedLabels().size() > 0 || getPinnedCompartments().size() > 0 || getSideAffixedChildren().size() > 0-»
	«EXPAND addFixedChild-»
	«EXPAND removeFixedChild-»
«ENDIF-»

	«EXPAND xpt::diagram::parts::requests::getPrimaryLabelEditPart-»
	«EXPAND xpt::diagram::parts::requests::performRequest-»
	«EXPAND xpt::diagram::parts::requests::getLabelEditPart-»
«IF getExternalLabels().size() > 0-»
	«EXPAND isExternalLabel-»
«ENDIF-»
«IF getExternalLabels().size() > 0 || getSideAffixedChildren().size() > 0-»
	«EXPAND getExternalLabelsContainer-»
«ENDIF-»

«IF (compartments.size() > 0 || getSideAffixedChildren().size() > 0) && hasDirectChildren()-»
	«EXPAND isDirectChild-»
«ENDIF-»

«IF getSideAffixedChildren().size() > 0-»
	«EXPAND isSideAffixedChild-»
«ENDIF-»

«IF getExternalLabels().size() > 0 || (compartments.size() > 0 && hasDirectChildren()) || getPinnedCompartments().size() > 0 || getInnerFixedLabels().size() > 0 || getSideAffixedChildren().size() > 0-»
	«EXPAND addChildVisual-»
	«EXPAND removeChildVisual-»
«ENDIF-»
«IF getExternalLabels().size() > 0 || getSideAffixedChildren().size() > 0-»
	«EXPAND removeNotify-»
«ENDIF-»

	«EXPAND xpt::diagram::parts::Common::getModelChildren-»
	«EXPAND xpt::diagram::parts::Common::getModelSourceConnections-»
	«EXPAND xpt::diagram::parts::Common::getModelTargetConnections-»
	«EXPAND connectionAnchors-»
	«EXPAND xpt::diagram::parts::Common::getAdapter-»

	«EXPAND xpt::diagram::parts::TreeEditPart::getTreeEditPartAdapter-»
	«EXPAND xpt::diagram::parts::Common::externalChildPositionTracker-»

	«EXPAND xpt::diagram::parts::Common::activate-»
	«EXPAND xpt::diagram::parts::Common::deactivate-»
	«EXPAND xpt::diagram::parts::NotationModelRefresher::all-»
	«EXPAND xpt::diagram::parts::LinkNotationModelRefresher::all-»
	«EXPAND xpt::diagram::parts::Common::getTransactionalUpdateManager-»
	«EXPAND xpt::diagram::parts::refresh::refresher-»
	«EXPAND xpt::diagram::parts::refresh::externalRefreshers-»

	«EXPAND xpt::diagram::parts::Common::viewmap FOR viewmap-»
	«EXPAND xpt::diagram::parts::TreeEditPart::TreeEditPart-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenNode»extends org.eclipse.gef.editparts.AbstractGraphicalEditPart implements org.eclipse.gef.NodeEditPart, org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart, org.eclipse.gmf.runtime.lite.edit.parts.update.IExternallyUpdatableEditPart, org.eclipse.gmf.runtime.lite.edit.parts.decorations.IDecoratableEditPart«ENDDEFINE»

«DEFINE primaryShapeAttribute FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure primaryShape;
«ENDDEFINE»

«DEFINE createEditPolicies FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected void createEditPolicies() {
	installEditPolicy(org.eclipse.gef.EditPolicy.COMPONENT_ROLE, new «EXPAND xpt::diagram::policies::ComponentEditPolicy::qualifiedClassName»());
	installEditPolicy(org.eclipse.gef.EditPolicy.GRAPHICAL_NODE_ROLE, new «getGraphicalNodeEditPolicyQualifiedClassName()»());
«IF getPrimaryLabel() != null-»
	installEditPolicy(org.eclipse.gef.EditPolicy.DIRECT_EDIT_ROLE, new org.eclipse.gmf.runtime.lite.edit.policies.DelegatingDirectEditPolicy());
«ENDIF-»
«IF getDirectChildren().size() > 0-»
	installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, new «EXPAND xpt::diagram::policies::LayoutEditPolicy::qualifiedClassName»());
«ENDIF-»
«IF getSideAffixedChildren().size() > 0-»
	installEditPolicy(org.eclipse.gmf.runtime.lite.edit.policies.EditPolicyRoles.SIDE_AFFIXED_LAYOUT_ROLE, new «EXPAND xpt::diagram::policies::LayoutEditPolicy::SideAffixedQualifiedClassName»());
«ENDIF-»
	«EXPAND xpt::diagram::parts::Common::behaviour-»
	installEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE, getPrimaryDragEditPolicy());
	«EXPAND installRefreshers-»
	}
«ENDDEFINE»

«DEFINE installRefreshers FOR gmfgen::GenNode-»
«EXPAND xpt::diagram::parts::NotationModelRefresher::installClause-»
«EXPAND xpt::diagram::parts::LinkNotationModelRefresher::installClause-»
«ENDDEFINE»

«DEFINE getPrimaryDragEditPolicy FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.EditPolicy getPrimaryDragEditPolicy() {
«IF primaryDragEditPolicyQualifiedClassName != null-»
	return new «primaryDragEditPolicyQualifiedClassName»();
«ELSE-»
	«EXPAND returnPrimaryDragEditPolicy-»
«ENDIF-»
}
«ENDDEFINE»

«DEFINE returnPrimaryDragEditPolicy FOR gmfgen::GenNode-»
org.eclipse.gef.editpolicies.ResizableEditPolicy result = new org.eclipse.gef.editpolicies.ResizableEditPolicy()«EXPAND contributeSelectionHandles»;
«EXPAND setResizeConstraints FOR viewmap.getResizeConstraints()-»
return result;
«ENDDEFINE»

«DEFINE returnPrimaryDragEditPolicy FOR gmfgen::GenChildSideAffixedNode-»
return new org.eclipse.gmf.runtime.lite.edit.policies.SideAffixedDragEditPolicy()«EXPAND contributeSelectionHandles»;
«ENDDEFINE»

«DEFINE contributeSelectionHandles FOR gmfgen::GenNode-»
«IF compartments.size() + getExternalLabels().size() > 0-»
{
	protected java.util.List createSelectionHandles() {
		java.util.List result = super.createSelectionHandles();
		for(java.util.Iterator it = getChildren().iterator(); it.hasNext(); ) {
			org.eclipse.gef.EditPart next = (org.eclipse.gef.EditPart) it.next();
			org.eclipse.gmf.runtime.notation.View nextView = (org.eclipse.gmf.runtime.notation.View) next.getModel();
			switch («getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(nextView)) {
			«EXPAND addSelectionHandles FOREACH compartments-»
			«EXPAND addSelectionHandles FOREACH getExternalLabels()-»
			}
		}
		return result;
	}
}«ENDIF-»
«ENDDEFINE»

«DEFINE getDragTracker FOR gmfgen::GenNode»«ENDDEFINE»

«DEFINE getDragTracker FOR gmfgen::GenChildSideAffixedNode-»
«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.gef.DragTracker getDragTracker(org.eclipse.gef.Request request) {
	return new org.eclipse.gef.tools.DragEditPartsTracker(this) {
		protected boolean isMove() {
			return true;
		}
	};
}
«ENDDEFINE»

«DEFINE createFigure FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure createFigure() {
	org.eclipse.draw2d.IFigure invisibleRectangle = new org.eclipse.draw2d.Figure();
	invisibleRectangle.setLayoutManager(new org.eclipse.draw2d.StackLayout());
	org.eclipse.draw2d.IFigure shape = createNodeShape();
	invisibleRectangle.add(shape);
	contentPane = setupContentPane(shape);
«IF compartments.size() > 0 && hasDirectChildren()-»
		childNodesPane = createChildNodesPane();
		shape.add(childNodesPane);
«ENDIF-»
	org.eclipse.draw2d.IFigure decorationShape = createDecorationPane();
	if (decorationShape != null) {
		myDecorationManager = createDecorationManager(decorationShape);
		invisibleRectangle.add(decorationShape);
	}
	return invisibleRectangle;
}
«ENDDEFINE»

«DEFINE addSelectionHandles FOR gmfgen::GenCommonBase-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
	result.addAll(((«getEditPartQualifiedClassName()») next).createSelectionHandles());
	break;
«ENDDEFINE»

«DEFINE setResizeConstraints FOR gmfgen::ResizeConstraints-»
«IF resizeHandles == 0-»
		result.setResizeDirections(org.eclipse.draw2d.PositionConstants.NONE);
«ELSE-»
		result.setResizeDirections(«EXPAND resizeHandleName FOREACH resizeHandleNames SEPARATOR ' | '»);
«ENDIF-»
«ENDDEFINE»

«DEFINE resizeHandleName FOR ecore::EString»org.eclipse.draw2d.PositionConstants.«this»«ENDDEFINE»

«DEFINE childNodesPane FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure childNodesPane;

«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure createChildNodesPane() {
	org.eclipse.draw2d.IFigure result = new org.eclipse.draw2d.RectangleFigure()«IF isXYLayout()»«EXPAND forceUseLocalCoordinates»«ENDIF»;
	setupChildNodesPane(result);
	return result;
}
«ENDDEFINE»

«DEFINE createNodeShape FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure createNodeShape() {
	«EXPAND initPrimaryShape(this) FOR viewmap-»
	return primaryShape;
}
«ENDDEFINE»

«DEFINE initPrimaryShape(gmfgen::GenNode node) FOR gmfgen::Viewmap»«ERROR "Unexpected viewmap type " + this»«ENDDEFINE»

«DEFINE initPrimaryShape(gmfgen::GenNode node) FOR gmfgen::FigureViewmap-»
primaryShape = new «primaryShapeQualifiedClassName(this)»()«IF node.compartments.size() == 0 && node.hasDirectChildren() && node.isXYLayout()»«EXPAND forceUseLocalCoordinates»«ENDIF»;
«ENDDEFINE»

«DEFINE initPrimaryShape(gmfgen::GenNode node) FOR gmfgen::SnippetViewmap-»
primaryShape = «body»;
«ENDDEFINE»

«DEFINE initPrimaryShape(gmfgen::GenNode node) FOR gmfgen::InnerClassViewmap-»
«primaryShapeQualifiedClassName(this)» figure = new «primaryShapeQualifiedClassName(this)»();
«IF node.compartments.size() == 0 && node.hasDirectChildren() && node.isXYLayout()-»
figure.setUseLocalCoordinates(true);
«ENDIF-»
primaryShape = figure;
«ENDDEFINE»

«DEFINE forceUseLocalCoordinates FOR Object-»
{
	protected boolean useLocalCoordinates() {
		return true;
	}
}«-»
«ENDDEFINE»

«DEFINE getPrimaryShape FOR ecore::EString-»
«EXPAND xpt::Common::generatedMemberComment»
public «this» getPrimaryShape() {
	return («this») primaryShape;
}
«ENDDEFINE»

«DEFINE setupContentPane FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment("Default implementation treats passed figure as content pane.\n" + 
 "Respects layout one may have set for generated figure.\n" + 
 "@@param nodeShape instance of generated figure class")»
protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
	if (nodeShape.getLayoutManager() == null) {
		«EXPAND setLayoutManager("nodeShape", compartments.size() == 0 && isXYLayout())-»
	}
	return nodeShape; // use nodeShape itself as contentPane
}
«ENDDEFINE»

«DEFINE setupChildNodesPane FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected void setupChildNodesPane(org.eclipse.draw2d.IFigure shape) {
	if (shape.getLayoutManager() == null) {
		«EXPAND setLayoutManager("shape", isXYLayout())-»
	}
}
«ENDDEFINE»

«DEFINE setLayoutManager(String shapeVar, Boolean xyLayout) FOR gmfgen::GenNode-»
«IF xyLayout-»
«shapeVar».setLayoutManager(new org.eclipse.draw2d.FreeformLayout() {
	public Object getConstraint(org.eclipse.draw2d.IFigure figure) {
		Object result = constraints.get(figure);
		if (result == null) {
			result = new org.eclipse.draw2d.geometry.Rectangle(0, 0, -1, -1);
		}
		return result;
	}
});
«ELSE-»
org.eclipse.draw2d.ToolbarLayout layout = new org.eclipse.draw2d.ToolbarLayout();
layout.setSpacing(5);
«shapeVar».setLayoutManager(layout);
«ENDIF-»
«ENDDEFINE»

«DEFINE createDecorationPane FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.draw2d.IFigure createDecorationPane() {
	return new org.eclipse.draw2d.Layer();
}
«ENDDEFINE»

«DEFINE addFixedChild FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
«EXPAND addFixedLabel FOREACH getInnerFixedLabels()-»
«EXPAND addFixedCompartment FOREACH getPinnedCompartments()-»
	return false;
}
«ENDDEFINE»

«DEFINE addFixedLabel FOR gmfgen::GenLabel-»
if (childEditPart instanceof «getEditPartQualifiedClassName()») {
	((«getEditPartQualifiedClassName()») childEditPart).«EXPAND setter FOR viewmap»(getPrimaryShape().«EXPAND getter FOR viewmap»());
	return true;
}
«ENDDEFINE»

«DEFINE getter FOR gmfgen::Viewmap»«ERROR "Unexpected type"»«ENDDEFINE»
«DEFINE getter FOR gmfgen::ParentAssignedViewmap»«getterName»«ENDDEFINE»

«DEFINE setter FOR gmfgen::Viewmap»«ERROR "Unexpected type"»«ENDDEFINE»
«DEFINE setter FOR gmfgen::ParentAssignedViewmap»«IF setterName == null»setLabel«ELSE»«setterName»«ENDIF»«ENDDEFINE»

«DEFINE addFixedCompartment FOR gmfgen::GenCompartment-»
if (childEditPart instanceof «getEditPartQualifiedClassName()») {
	org.eclipse.draw2d.IFigure pane = getPrimaryShape().«EXPAND getter FOR viewmap»();
	((«getEditPartQualifiedClassName()») childEditPart).setupCompartmentHolder(pane);
	pane.add(((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure());
	return true;
}	
«ENDDEFINE»

«DEFINE removeFixedChild FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
«REM»ignore labels assuming that they never may be removed«ENDREM»
«EXPAND removeFixedCompartment FOREACH getPinnedCompartments()-»
	return false;
}
«ENDDEFINE»

«DEFINE removeFixedCompartment FOR gmfgen::GenCompartment-»
if (childEditPart instanceof «getEditPartQualifiedClassName()») {
	org.eclipse.draw2d.IFigure pane = getPrimaryShape().«EXPAND getter FOR viewmap»();
	pane.remove(((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure());
	return true;
}	
«ENDDEFINE»

«DEFINE isExternalLabel FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean isExternalLabel(org.eclipse.gef.EditPart childEditPart) {
«EXPAND returnInstanceof("childEditPart") FOREACH getExternalLabels()-»
	return false;
}
«ENDDEFINE»

«DEFINE isDirectChild FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean isDirectChild(org.eclipse.gef.EditPart childEditPart) {
«EXPAND returnInstanceof("childEditPart") FOREACH getDirectChildren()-»
	return false;
}
«ENDDEFINE»

«DEFINE isSideAffixedChild FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean isSideAffixedChild(org.eclipse.gef.EditPart childEditPart) {
	«EXPAND returnInstanceof("childEditPart") FOREACH getSideAffixedChildren()-»
	return false;
}
«ENDDEFINE»

«DEFINE returnInstanceof(String var) FOR gmfgen::GenCommonBase-»
if («var» instanceof «getEditPartQualifiedClassName()») {
	return true;
}
«ENDDEFINE»

«DEFINE addChildVisual FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
«IF getExternalLabels().size() > 0-»
		if (isExternalLabel(childEditPart)) {
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().add(childFigure);
			«EXPAND addPositionTracker-»
			return;
		}
«ENDIF-»
«IF getSideAffixedChildren().size() > 0-»
		if (isSideAffixedChild(childEditPart)) {
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().add(childFigure);
			«EXPAND addPositionTracker-»
			return;
		}
«ENDIF-»
«IF getInnerFixedLabels().size() > 0 || getPinnedCompartments().size() > 0-»
		if (addFixedChild(childEditPart)) {
			return;
		}
«ENDIF-»
«IF compartments.size() > 0 && hasDirectChildren()-»
		if (isDirectChild(childEditPart)) {
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			childNodesPane.add(childFigure);
			return;
		}
«ENDIF-»
	super.addChildVisual(childEditPart, -1);
}
«ENDDEFINE»

«DEFINE removeChildVisual FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
«IF getExternalLabels().size() > 0-»
		if (isExternalLabel(childEditPart)) {
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			«EXPAND removePositionTracker-»
			getExternalLabelsContainer().remove(childFigure);
			return;
		}
«ENDIF-»
«IF getSideAffixedChildren().size() > 0-»
		if (isSideAffixedChild(childEditPart)) {
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			«EXPAND removePositionTracker-»
			getExternalLabelsContainer().remove(childFigure);
			return;
		}
«ENDIF-»
«IF getInnerFixedLabels().size() > 0 || getPinnedCompartments().size() > 0-»
		if (removeFixedChild(childEditPart)) {
			return;
		}
«ENDIF-»
«IF compartments.size() > 0 && hasDirectChildren()-»
		if (isDirectChild(childEditPart)) {
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			childNodesPane.remove(childFigure);
			return;
		}
«ENDIF-»
	super.removeChildVisual(childEditPart);
}
«ENDDEFINE»

«DEFINE addPositionTracker FOR gmfgen::GenNode-»
org.eclipse.gmf.runtime.lite.figures.ExternalChildPositionTracker positionTracker = (org.eclipse.gmf.runtime.lite.figures.ExternalChildPositionTracker) childEditPart.getAdapter(org.eclipse.gmf.runtime.lite.figures.ExternalChildPositionTracker.class);
if (positionTracker != null) {
	getFigure().addAncestorListener(positionTracker);
}
«ENDDEFINE»

«DEFINE removePositionTracker FOR gmfgen::GenNode-»
org.eclipse.gmf.runtime.lite.figures.ExternalChildPositionTracker positionTracker = (org.eclipse.gmf.runtime.lite.figures.ExternalChildPositionTracker) childEditPart.getAdapter(org.eclipse.gmf.runtime.lite.figures.ExternalChildPositionTracker.class);
if (positionTracker != null) {
	getFigure().removeAncestorListener(positionTracker);
}
«ENDDEFINE»

«DEFINE getExternalLabelsContainer FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure getExternalLabelsContainer() {
	org.eclipse.gef.editparts.LayerManager root = (org.eclipse.gef.editparts.LayerManager) getRoot();
	return root.getLayer(«getDiagram().getEditPartFactoryQualifiedClassName()».EXTERNAL_NODE_LABELS_LAYER);
}
«ENDDEFINE»

«DEFINE removeNotify FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void removeNotify() {
	for (java.util.Iterator it = getChildren().iterator(); it.hasNext(); ) {
		org.eclipse.gef.EditPart childEditPart = (org.eclipse.gef.EditPart) it.next();
«IF getExternalLabels().size() > 0-»
		if (isExternalLabel(childEditPart)) {
			«EXPAND removePositionTracker-»
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().remove(childFigure);
		}
«ENDIF-»
«IF getSideAffixedChildren().size() > 0-»
		if (isSideAffixedChild(childEditPart)) {
			«EXPAND removePositionTracker-»
			org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().remove(childFigure);
		}
«ENDIF-»
	}
	super.removeNotify();
}
«ENDDEFINE»

«DEFINE connectionAnchors FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.draw2d.ConnectionAnchor getSourceConnectionAnchor(org.eclipse.gef.ConnectionEditPart connection) {
	return new org.eclipse.draw2d.ChopboxAnchor(getFigure());
}

«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.draw2d.ConnectionAnchor getSourceConnectionAnchor(org.eclipse.gef.Request request) {
	return new org.eclipse.draw2d.ChopboxAnchor(getFigure());
}

«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.draw2d.ConnectionAnchor  getTargetConnectionAnchor(org.eclipse.gef.ConnectionEditPart connection) {
	return new org.eclipse.draw2d.ChopboxAnchor(getFigure());
}

«EXPAND xpt::Common::generatedMemberComment»
public org.eclipse.draw2d.ConnectionAnchor  getTargetConnectionAnchor(org.eclipse.gef.Request request) {
	return new org.eclipse.draw2d.ChopboxAnchor(getFigure());
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNode»«ENDDEFINE»

@


1.6
log
@[208264]: [lite]: Implement border items
[208270]: [lite]: Feedback for element creation should show exactly where the element will be created
Move external label when a deep ancestor is moved;
NodeEditPart.xpt: add variation point to createEditPolicies;
AddNodeCommand.xpt: do not generate unused attribute
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.5
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d33 1
d50 1
a50 1
«IF getInnerFixedLabels().size() > 0 || getPinnedCompartments().size() > 0-»
d60 2
d65 1
a65 1
«IF compartments.size() > 0 && hasDirectChildren()-»
d69 5
a73 1
«IF getExternalLabels().size() > 0 || (compartments.size() > 0 && hasDirectChildren()) || getPinnedCompartments().size() > 0 || getInnerFixedLabels().size() > 0-»
d77 1
a77 1
«IF getExternalLabels().size() > 0-»
d88 1
d119 1
d121 4
d127 1
a127 2
	«EXPAND xpt::diagram::parts::NotationModelRefresher::installClause-»
	«EXPAND xpt::diagram::parts::LinkNotationModelRefresher::installClause-»
d131 5
d142 26
a167 15
	«IF compartments.size() + getExternalLabels().size() == 0-»
		org.eclipse.gef.editpolicies.ResizableEditPolicy result = new org.eclipse.gef.editpolicies.ResizableEditPolicy();
	«ELSE-»
		org.eclipse.gef.editpolicies.ResizableEditPolicy result = new org.eclipse.gef.editpolicies.ResizableEditPolicy() {
			protected java.util.List createSelectionHandles() {
				java.util.List result = super.createSelectionHandles();
				for(java.util.Iterator it = getChildren().iterator(); it.hasNext(); ) {
					org.eclipse.gef.EditPart next = (org.eclipse.gef.EditPart) it.next();
					org.eclipse.gmf.runtime.notation.View nextView = (org.eclipse.gmf.runtime.notation.View) next.getModel();
					switch («getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(nextView)) {
					«EXPAND addSelectionHandles FOREACH compartments-»
					«EXPAND addSelectionHandles FOREACH getExternalLabels()-»
					}
				}
				return result;
d169 1
a169 3
		};
	«ENDIF-»
	«EXPAND setResizeConstraints FOR viewmap.getResizeConstraints()-»
d171 14
a184 1
«ENDIF-»
d388 8
d407 11
a417 2
			org.eclipse.draw2d.IFigure labelFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().add(labelFigure);
d442 11
a452 2
			org.eclipse.draw2d.IFigure labelFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().remove(labelFigure);
d457 1
a457 1
		if (removeFixedChild(childEditPart)){
d472 14
d499 1
d501 10
a510 2
			org.eclipse.draw2d.IFigure labelFigure = ((org.eclipse.gef.GraphicalEditPart) childEditPart).getFigure();
			getExternalLabelsContainer().remove(labelFigure);
d512 1
@


1.4
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d164 1
a164 1
		invisibleRectangle.add(decorationShape, 0);
d252 1
d281 1
a281 1
	return new org.eclipse.draw2d.Figure();
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@a15 1
«EXTENSION xpt::diagram::policies::ClassNames»
d106 1
a106 1
	installEditPolicy(org.eclipse.gef.EditPolicy.COMPONENT_ROLE, new «getComponentEditPolicyQualifiedClassName()»());
d111 1
a111 1
	installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, new «getLayoutEditPolicyQualifiedClassName()»());
d125 1
a125 1
	«IF compartments.size() == 0-»
d136 1
d170 1
a170 1
«DEFINE addSelectionHandles FOR gmfgen::GenCompartment-»
@


1.3.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@d16 1
d107 1
a107 1
	installEditPolicy(org.eclipse.gef.EditPolicy.COMPONENT_ROLE, new «EXPAND xpt::diagram::policies::ComponentEditPolicy::qualifiedClassName»());
d112 1
a112 1
	installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, new «EXPAND xpt::diagram::policies::LayoutEditPolicy::qualifiedClassName»());
a251 1
«EXPAND xpt::Common::generatedMemberComment»
@


1.2
log
@CanonicalStyle is taken into account while refreshing notational model to reflect changes in underlying domain model;
Update is now centralized and transactional;
Changes to visibility are dispatched to the parent of the affected view as well (was: only to the view itself);
Save options are not reused, for easy modification of the generated code;
Side-affixed children are not considered direct children;
Empty edit-patterns are treated the same way as null patterns (view pattern is used instead).
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@d87 1
a87 1
	«EXPAND xpt::diagram::parts::domainModelRefresher::field-»
a89 1
	«EXPAND xpt::diagram::parts::refresh::addRemove-»
d343 1
a343 1
«EXPAND returnInstanceof("childEditPart") FOREACH childNodes-»
@

