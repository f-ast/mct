head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.5
	v20071003-0000:1.5
	v20070921-0000:1.5
	v20070915-0000:1.5
	v20070903-0000:1.5
	v20070809-0000:1.5
	R2_0_maintenance:1.5.0.2
	R2_0:1.5
	R4_20:1.5
	v20070621-0000:1.5
	RC3_20:1.5
	v20070614-1400:1.5
	v20070608-1300:1.5
	v20070601-1400:1.5
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.3
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.13.55.37;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	388c4821b4d44567;

1.6
date	2008.02.26.22.50.33;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	405e47c497b74567;

1.5
date	2007.05.29.14.55.32;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	2543465c3ee24567;

1.4
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	25e5464e17e24567;

1.3
date	2007.05.10.12.26.12;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	7ab146430f644567;

1.2
date	2007.05.04.14.08.43;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	464d463b3e6a4567;

1.1
date	2007.04.04.11.04.48;	author bblajer;	state Exp;
branches;
next	;
commitid	18c54613864d4567;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::commands::CommandUtils»
«EXTENSION xpt::diagram::LinkFinder»
«EXTENSION xpt::diagram::parts::LinkNotationModelRefresher»

«DEFINE semanticChildLinks(String parentViewCode) FOR gmfgen::GenCommonBase-»
	«LET getLinkChildFeatures(containedTypeModelFacetLinks()) AS genTypeLinkFeatures-»
	«LET getLinkChildFeatures(containedFeatureModelFacetLinks()) AS genFeatureLinkFeatures-»
	«IF genTypeLinkFeatures.size() + genFeatureLinkFeatures.size() == 0-»
return java.util.Collections.EMPTY_LIST;
	«ELSE-»
java.util.List result = new java.util.LinkedList();
org.eclipse.emf.ecore.EObject modelObject = «parentViewCode».getElement();
org.eclipse.emf.ecore.EObject nextValue;
		«IF genTypeLinkFeatures.size() > 0-»
int linkVID;
		«ENDIF-»
		«FOREACH genTypeLinkFeatures AS metaFeature-»
			«LET getTypeGenLinksForFeature(metaFeature, containedLinks()) AS genLinksCollection-»
			«IF metaFeature.isListType()-»
for(java.util.Iterator it = «EXPAND MetaModel::getFeatureValue("modelObject", null, true) FOR metaFeature».iterator(); it.hasNext(); ) {
	nextValue = (org.eclipse.emf.ecore.EObject) it.next();
			«ELSE-»
	nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue("modelObject", null, false) FOR metaFeature»;
			«ENDIF-»
	linkVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getLinkWithClassVisualID(nextValue);
			«LET genLinksCollection.size() > 1 AS generateSwitch-»
			«IF generateSwitch-»
	switch (linkVID) {
			«ENDIF-»
			«FOREACH genLinksCollection AS nextLink-»
				«IF generateSwitch-»
	case «nextLink.getEditPartQualifiedClassName()».VISUAL_ID: {
				«ELSE-»
	if («nextLink.getEditPartQualifiedClassName()».VISUAL_ID == linkVID) {
				«ENDIF-»
				«LET ((gmfgen::TypeLinkModelFacet) nextLink.modelFacet).sourceMetaFeature AS sourceFeature-»
				«IF sourceFeature != null-»
					«IF sourceFeature.isListType()-»
		java.util.List sources = «EXPAND MetaModel::getFeatureValue("nextValue", null, true) FOR sourceFeature»;
		org.eclipse.emf.ecore.EObject source = sources.size() == 1 ? (org.eclipse.emf.ecore.EObject) sources.get(0) : null;
					«ELSE-»
		org.eclipse.emf.ecore.EObject source = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue("nextValue", null, false) FOR sourceFeature»;
					«ENDIF-»
				«ELSE-»
		org.eclipse.emf.ecore.EObject source = modelObject;
				«ENDIF-»
				«ENDLET-»
				«LET ((gmfgen::TypeLinkModelFacet) nextLink.modelFacet).targetMetaFeature AS targetFeature-»
				«IF targetFeature != null-»
					«IF targetFeature.isListType()-»
		java.util.List targets = «EXPAND MetaModel::getFeatureValue("nextValue", null, true) FOR targetFeature»;
		org.eclipse.emf.ecore.EObject target = targets.size() == 1 ? (org.eclipse.emf.ecore.EObject) targets.get(0) : null;
					«ELSE-»
		org.eclipse.emf.ecore.EObject target = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue("nextValue", null, false) FOR targetFeature»;
					«ENDIF-»
				«ELSE-»
		org.eclipse.emf.ecore.EObject target = modelObject;
				«ENDIF-»
				«ENDLET-»
		if (source != null && target != null) {
			result.add(new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.LinkDescriptor(source, target, nextValue, linkVID));
		}
				«IF generateSwitch-»
		break;
	}
				«ELSE-»
	}
				«ENDIF-»
			«ENDFOREACH-»
			«IF generateSwitch-»
	}
			«ENDIF-»
			«IF metaFeature.isListType()-»
}
			«ENDIF-»
			«ENDLET-»
			«ENDLET-»
		«ENDFOREACH-»
		«FOREACH genFeatureLinkFeatures AS metaFeature-»
			«LET getFeatureGenLinksForFeature(metaFeature, containedLinks()) AS genLinksCollection-»
			«IF metaFeature.isListType()-»
for(java.util.Iterator it = «EXPAND MetaModel::getFeatureValue("modelObject", null, true) FOR metaFeature».iterator(); it.hasNext(); ) {
	nextValue = (org.eclipse.emf.ecore.EObject) it.next();
			«ELSE-»
	nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue("modelObject", null, false) FOR metaFeature»;
			«ENDIF-»
	if (nextValue != null) {
			«FOREACH genLinksCollection AS nextLink-»
		result.add(new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.LinkDescriptor(modelObject, nextValue, null, «nextLink.getEditPartQualifiedClassName()».VISUAL_ID));
			«ENDFOREACH-»
	}
			«IF metaFeature.isListType()-»
}
			«ENDIF-»
			«ENDLET-»
		«ENDFOREACH-»
return result;
	«ENDIF-»
	«ENDLET-»
	«ENDLET-»
«ENDDEFINE»
@


1.6
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template, LiteRT version updated
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.5
log
@Rewrite some templates with XPand;
Adopt VisualIDRegistry from full RT.
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d36 1
a36 1
for(java.util.Iterator it = «EXPAND xpt::commands::Common::getFeatureValue("modelObject", null, true) FOR metaFeature».iterator(); it.hasNext(); ) {
d39 1
a39 1
	nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND xpt::commands::Common::getFeatureValue("modelObject", null, false) FOR metaFeature»;
d55 1
a55 1
		java.util.List sources = «EXPAND xpt::commands::Common::getFeatureValue("nextValue", null, true) FOR sourceFeature»;
d58 1
a58 1
		org.eclipse.emf.ecore.EObject source = (org.eclipse.emf.ecore.EObject) «EXPAND xpt::commands::Common::getFeatureValue("nextValue", null, false) FOR sourceFeature»;
d67 1
a67 1
		java.util.List targets = «EXPAND xpt::commands::Common::getFeatureValue("nextValue", null, true) FOR targetFeature»;
d70 1
a70 1
		org.eclipse.emf.ecore.EObject target = (org.eclipse.emf.ecore.EObject) «EXPAND xpt::commands::Common::getFeatureValue("nextValue", null, false) FOR targetFeature»;
d98 1
a98 1
for(java.util.Iterator it = «EXPAND xpt::commands::Common::getFeatureValue("modelObject", null, true) FOR metaFeature».iterator(); it.hasNext(); ) {
d101 1
a101 1
	nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND xpt::commands::Common::getFeatureValue("modelObject", null, false) FOR metaFeature»;
@


1.4
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d41 1
a41 1
	linkVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».INSTANCE.getLinkWithClassVisualID(nextValue);
@


1.3
log
@CCE when the source or target feature of a type-based link is multi-valued
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.2
log
@1. Links to links;
2. Exception from TreeEditPartViewer (in the outline) while closing the diagram editor (because unregister is not called, only deactivate) fixed;
3. instead of rerouting a link to an end that does not support it, remove the link
@
text
@d54 4
d59 1
d66 4
d71 1
@


1.1
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@d21 1
a21 1
«DEFINE semanticChildLinks(String parentViewCode) FOR gmfgen::GenContainerBase-»
@

