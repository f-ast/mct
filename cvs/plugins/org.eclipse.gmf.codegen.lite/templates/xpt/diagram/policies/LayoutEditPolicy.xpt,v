head	1.6;
access;
symbols
	v20080910-1520:1.6
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080507-1326:1.6
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080322-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.4
	v20070921-0000:1.3.2.1
	v20070915-0000:1.3
	v20070903-0000:1.4
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070601-1400:1.3
	v20070525-1500:1.2
	v20070520-1200:1.2
	v20070518-1300:1.1
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1
	v20070403-1500:1.1
	v20070330-1300:1.1
	v20060330-1300:1.1
	v20070322-1100:1.1
	v20060316-0600:1.1;
locks; strict;
comment	@# @;


1.6
date	2008.05.07.13.55.39;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	388c4821b4d44567;

1.5
date	2007.10.31.17.16.42;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	79fa4728b8794567;

1.4
date	2007.07.04.13.22.27;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	405d468b9f0f4567;

1.3
date	2007.05.29.14.55.32;	author bblajer;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	2543465c3ee24567;

1.2
date	2007.05.18.21.17.26;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	25e5464e17e24567;

1.1
date	2007.03.09.17.19.35;	author bblajer;	state Exp;
branches;
next	;
commitid	22ed45f197244567;

1.3.2.1
date	2007.09.17.16.02.13;	author bblajer;	state Exp;
branches;
next	;
commitid	7b9846eea5004567;


desc
@@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::diagram::policies::ClassNames»
«EXTENSION xpt::diagram::Helper»
«EXTENSION xpt::commands::CommandUtils»

«DEFINE LayoutEditPolicy FOR gmfgen::GenContainerBase-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editPoliciesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND getCreateCommand(getDirectChildren())-»
	«EXPAND createAddCommand(getDirectChildren())-»
	«EXPAND createCloneCommand(getDirectChildren())-»
	«EXPAND createChangeConstraintCommand(getDirectChildren())-»
«IF needsXYLayout() && null != getDiagram().palette && getDirectChildren().size() > 0-»
	«EXPAND showSizeOnDropFeedback-»
	«EXPAND adjustConstraint(getDirectChildren())-»
«ENDIF-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenContainerBase»«getLayoutEditPolicyClassName()»«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenContainerBase»«getDiagram().editPoliciesPackageName».«EXPAND className»«ENDDEFINE»

«DEFINE SideAffixedLayoutEditPolicy FOR gmfgen::GenNode-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editPoliciesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND SideAffixedClassName» «EXPAND SideAffixedSupertypes» {
	«EXPAND getCreateCommand(getSideAffixedChildren())-»
	«EXPAND createAddCommand(getSideAffixedChildren())-»
	«EXPAND createCloneCommand(getSideAffixedChildren())-»
	«EXPAND createChangeSideAffixedConstraintCommand(getSideAffixedChildren())-»
«IF null != getDiagram().palette-»
	«EXPAND showSizeOnDropFeedback-»
	«EXPAND adjustConstraint(getSideAffixedChildren())-»
	«EXPAND getExternalLabelsContainer-»
«ENDIF-»
	«EXPAND SideAffixedAdditions-»
}
«ENDDEFINE»

«DEFINE SideAffixedClassName FOR gmfgen::GenContainerBase»«getSideAffixedLayoutEditPolicyClassName()»«ENDDEFINE»
«DEFINE SideAffixedQualifiedClassName FOR gmfgen::GenContainerBase»«getDiagram().editPoliciesPackageName».«EXPAND SideAffixedClassName»«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenContainerBase-»
«IF needsXYLayout()»extends org.eclipse.gmf.runtime.lite.edit.policies.XYLayoutEditPolicyEx«ELSE»extends org.eclipse.gmf.runtime.lite.edit.policies.ListLayoutEditPolicy«ENDIF-»
«ENDDEFINE»

«DEFINE SideAffixedSupertypes FOR gmfgen::GenNode»extends org.eclipse.gmf.runtime.lite.edit.policies.SideAffixedLayoutEditPolicy«ENDDEFINE»

«DEFINE getCreateCommand(Collection[gmfgen::GenNode] childNodes) FOR gmfgen::GenContainerBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
«IF null != getDiagram().palette && childNodes.size() > 0-»
	if (request instanceof org.eclipse.gmf.runtime.lite.requests.CreateRequestEx) {
		org.eclipse.gmf.runtime.lite.requests.CreateRequestEx requestEx = (org.eclipse.gmf.runtime.lite.requests.CreateRequestEx) request;
		if (!«getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(requestEx.getModelID())) {
			return null;
		}
		int[] visualIds = requestEx.getVisualIds();
		org.eclipse.emf.common.command.CompoundCommand result = new org.eclipse.emf.common.command.CompoundCommand();
		for(int i = 0; i < visualIds.length; i++) {
			int nextVisualId = visualIds[i];
			switch (nextVisualId) {
«EXPAND getCreateCommandContribution(this) FOREACH childNodes-»
			}
		}
		return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(«EXPAND xpt::diagram::policies::Common::getDiagramElementCode»), result);
	}
«ENDIF-»
	return null;
}
«ENDDEFINE»

«DEFINE getCreateCommandContribution(gmfgen::GenContainerBase container) FOR gmfgen::GenNode-»
«IF !sansDomain && !modelFacet.metaClass.ecoreClass.abstract-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
	result.append(new «getDiagram().editCommandsPackageName».«EXPAND xpt::commands::CreateNodeCommand::className»(«EXPAND xpt::diagram::policies::Common::getViewCode FOR container», requestEx«IF container.needsXYLayout(this)», (org.eclipse.draw2d.geometry.Rectangle) getConstraintFor(request)«ENDIF»));
	break;
«ENDIF-»
«ENDDEFINE»

«DEFINE createAddCommand(Collection[gmfgen::GenNode] childNodes)  FOR gmfgen::GenContainerBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, Object constraint) {
	if (child.getModel() instanceof org.eclipse.gmf.runtime.notation.Node) {
		org.eclipse.gmf.runtime.notation.Node childNode = (org.eclipse.gmf.runtime.notation.Node) child.getModel();
		String modelID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(childNode);
		if («getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(modelID)) {
			int newVisualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getNodeVisualID(«EXPAND xpt::diagram::policies::Common::getViewCode», childNode.getElement());
			org.eclipse.emf.common.command.Command command = null;
			switch (newVisualID) {
«EXPAND getAddCommandContribution(this) FOREACH childNodes-»
			}
			if (command != null) {
				org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(childNode.getDiagram().getElement());
				return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, command);
			}
		}
	}
	return null;
}
«ENDDEFINE»

«DEFINE getAddCommandContribution(gmfgen::GenContainerBase container) FOR gmfgen::GenNode-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
	command = new «getDiagram().editCommandsPackageName».«EXPAND xpt::commands::AddNodeCommand::className»(«EXPAND xpt::diagram::policies::Common::getViewCode FOR container», childNode, newVisualID, «IF container.needsXYLayout(this)»(org.eclipse.draw2d.geometry.Rectangle) constraint«ELSE»null«ENDIF»);
	break;
«ENDDEFINE»

«DEFINE createCloneCommand(Collection[gmfgen::GenNode] childNodes)  FOR gmfgen::GenContainerBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command createCloneCommand(org.eclipse.gef.EditPart child, Object constraint) {
	if (child.getModel() instanceof org.eclipse.gmf.runtime.notation.Node) {
		org.eclipse.gmf.runtime.notation.Node childNode = (org.eclipse.gmf.runtime.notation.Node) child.getModel();
		String modelID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(childNode);
		if («getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(modelID)) {
			int newVisualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getNodeVisualID(«EXPAND xpt::diagram::policies::Common::getViewCode», childNode.getElement());
			org.eclipse.emf.common.command.Command command = null;
			switch (newVisualID) {
«EXPAND getCloneCommandContribution(this) FOREACH childNodes-»
			}
			if (command != null) {
				org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(childNode.getDiagram().getElement());
				return new org.eclipse.gmf.runtime.lite.commands.WrappingCommand(editingDomain, command);
			}
		}
	}
	return null;
}
«ENDDEFINE»

«DEFINE getCloneCommandContribution(gmfgen::GenContainerBase container) FOR gmfgen::GenNode-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
	command = new «getDiagram().editCommandsPackageName».«EXPAND xpt::commands::CloneNodeCommand::className»(«EXPAND xpt::diagram::policies::Common::getViewCode FOR container», childNode, «IF container.needsXYLayout(this)»(org.eclipse.draw2d.geometry.Rectangle) constraint«ELSE»null«ENDIF»);
	break;
«ENDDEFINE»

«DEFINE createChangeConstraintCommand(Collection[gmfgen::GenNode] childNodes) FOR gmfgen::GenContainerBase»«ENDDEFINE»

«DEFINE createChangeConstraintCommand(Collection[gmfgen::GenNode] childNodes) FOR gmfgen::GenNode-»
«IF needsXYLayout()-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command createChangeConstraintCommand(org.eclipse.gef.requests.ChangeBoundsRequest request, org.eclipse.gef.EditPart child, Object constraint) {
«IF hasDirectChildren()-»
	if ((«EXPAND xpt::diagram::policies::Common::getCastToEditPart»).isDirectChild(child)) {
		return super.createChangeConstraintCommand(request, child, constraint);
	}
«ENDIF-»
	return null;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE createChangeSideAffixedConstraintCommand(Collection[gmfgen::GenNode] childNodes) FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command createChangeConstraintCommand(org.eclipse.gef.requests.ChangeBoundsRequest request, org.eclipse.gef.EditPart child, Object constraint) {
	return null;
}
«ENDDEFINE»

«DEFINE showSizeOnDropFeedback FOR gmfgen::GenContainerBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected void showSizeOnDropFeedback(org.eclipse.gef.requests.CreateRequest request) {
	org.eclipse.draw2d.IFigure feedback = getSizeOnDropFeedback(request);
	org.eclipse.draw2d.geometry.Rectangle rect = new org.eclipse.draw2d.geometry.Rectangle(request.getLocation(), request.getSize());
	getLayoutContainer().translateToRelative(rect);
	adjustConstraint(request, rect);
	getLayoutContainer().translateToAbsolute(rect);
	feedback.translateToRelative(rect);
	feedback.setBounds(rect.expand(getCreationFeedbackOffset(request)));
}
«ENDDEFINE»

«DEFINE adjustConstraint(Collection[gmfgen::GenNode] childNodes) FOR gmfgen::GenContainerBase-»
«EXPAND xpt::Common::generatedMemberComment»
protected void adjustConstraint(org.eclipse.gef.requests.CreateRequest request, org.eclipse.draw2d.geometry.Rectangle constraint) {
	if (request instanceof org.eclipse.gmf.runtime.lite.requests.CreateRequestEx) {
		org.eclipse.gmf.runtime.lite.requests.CreateRequestEx requestEx = (org.eclipse.gmf.runtime.lite.requests.CreateRequestEx) request;
		if («getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(requestEx.getModelID())) {
			int[] visualIds = requestEx.getVisualIds();
			boolean adjusted = false;
			for(int i = 0; i < visualIds.length && !adjusted; i++) {
				int nextVisualId = visualIds[i];
				switch (nextVisualId) {
«EXPAND adjustConstraint FOREACH childNodes-»
				}
			}
		}
	}
}
«ENDDEFINE»

«DEFINE adjustConstraint FOR gmfgen::GenNode-»
«IF !sansDomain && !modelFacet.metaClass.ecoreClass.abstract-»
case «getEditPartQualifiedClassName()».VISUAL_ID: {
	«EXPAND xpt::commands::Common::adjustConstraint-»
	«EXPAND adjustConstraintLocation-»
	adjusted = true;
	break;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE adjustConstraintLocation FOR gmfgen::GenNode-»
«ENDDEFINE»

«DEFINE adjustConstraintLocation FOR gmfgen::GenChildSideAffixedNode-»
org.eclipse.gmf.runtime.lite.figures.SideAffixedFeedbackPositioner elementPositioner = getSideAffixedElementPositionerForRequest(request);
elementPositioner.setSiblingsParent(getExternalLabelsContainer());
constraint.setBounds(elementPositioner.getValidLocation(constraint));
«ENDDEFINE»

«DEFINE getExternalLabelsContainer FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.draw2d.IFigure getExternalLabelsContainer() {
	org.eclipse.gef.editparts.LayerManager root = (org.eclipse.gef.editparts.LayerManager) getHost().getRoot();
	return root.getLayer(«getDiagram().getEditPartFactoryQualifiedClassName()».EXTERNAL_NODE_LABELS_LAYER);
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenContainerBase»«ENDDEFINE»
«DEFINE SideAffixedAdditions FOR gmfgen::GenContainerBase»«ENDDEFINE»
@


1.5
log
@[208264]: [lite]: Implement border items
[208270]: [lite]: Feedback for element creation should show exactly where the element will be created
Move external label when a deep ancestor is moved;
NodeEditPart.xpt: add variation point to createEditPolicies;
AddNodeCommand.xpt: do not generate unused attribute
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.4
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator);
Link labels and external node labels are not selectable, but movable;
Inner elements are not selectable with marquee tool;
Fixed copyright statements throughout the lite RT.
@
text
@d27 7
a33 4
	«EXPAND getCreateCommand-»
«IF getChildNodes().size() > 0-»
	«EXPAND createAddCommand-»
	«EXPAND createCloneCommand-»
a34 1
	«EXPAND createChangeConstraintCommand-»
d42 22
d68 3
a70 1
«DEFINE getCreateCommand FOR gmfgen::GenContainerBase-»
d73 1
a73 1
«IF null != getDiagram().palette && getChildNodes().size() > 0-»
d84 1
a84 1
«EXPAND getCreateCommandContribution(this) FOREACH getChildNodes()-»
d97 1
a97 1
	result.append(new «getDiagram().editCommandsPackageName».«EXPAND xpt::commands::CreateNodeCommand::className»(«EXPAND xpt::diagram::policies::Common::getViewCode FOR container», requestEx«IF container.needsXYLayout()», (org.eclipse.draw2d.geometry.Rectangle) getConstraintFor(request)«ENDIF»));
d102 1
a102 1
«DEFINE createAddCommand FOR gmfgen::GenContainerBase-»
d112 1
a112 1
«EXPAND getAddCommandContribution(this) FOREACH getChildNodes()-»
d126 1
a126 1
	command = new «getDiagram().editCommandsPackageName».«EXPAND xpt::commands::AddNodeCommand::className»(«EXPAND xpt::diagram::policies::Common::getViewCode FOR container», childNode, newVisualID, «IF container.needsXYLayout()»(org.eclipse.draw2d.geometry.Rectangle) constraint«ELSE»null«ENDIF»);
d130 1
a130 1
«DEFINE createCloneCommand FOR gmfgen::GenContainerBase-»
d140 1
a140 1
«EXPAND getCloneCommandContribution(this) FOREACH getChildNodes()-»
d154 1
a154 1
	command = new «getDiagram().editCommandsPackageName».«EXPAND xpt::commands::CloneNodeCommand::className»(«EXPAND xpt::diagram::policies::Common::getViewCode FOR container», childNode, «IF container.needsXYLayout()»(org.eclipse.draw2d.geometry.Rectangle) constraint«ELSE»null«ENDIF»);
d158 1
a158 1
«DEFINE createChangeConstraintCommand FOR gmfgen::GenContainerBase»«ENDDEFINE»
d160 1
a160 1
«DEFINE createChangeConstraintCommand FOR gmfgen::GenNode-»
d164 3
a166 2
	if (!(«EXPAND xpt::diagram::policies::Common::getCastToEditPart»).isDirectChild(child)) {
		return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
d168 2
a169 1
	return super.createChangeConstraintCommand(request, child, constraint);
d174 67
d242 1
@


1.3
log
@Rewrite some templates with XPand;
Adopt VisualIDRegistry from full RT.
@
text
@d26 1
a26 1
public class «getLayoutEditPolicyClassName()» «EXPAND supertypes» {
a31 1
	«EXPAND createChildEditPolicy-»
d37 3
a131 25
«DEFINE createChildEditPolicy FOR gmfgen::GenContainerBase»«ENDDEFINE»

«DEFINE createChildEditPolicy FOR gmfgen::GenNode-»
«IF getExternalLabels().size() > 0-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.EditPolicy createChildEditPolicy(org.eclipse.gef.EditPart child) {
	org.eclipse.gef.EditPolicy result = child.getEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE);
	if (result != null) {
		return result;
	}
	if ((«EXPAND xpt::diagram::policies::Common::getCastToEditPart»).isExternalLabel(child)) {
		return new org.eclipse.gef.editpolicies.ResizableEditPolicy() {
			public org.eclipse.gef.EditPart getTargetEditPart(org.eclipse.gef.Request request) {
				if (org.eclipse.gef.RequestConstants.REQ_SELECTION.equals(request.getType())) {
					return «getLayoutEditPolicyClassName()».this.getHost();
				}
				return super.getTargetEditPart(request);
			}
		};
	}
	return super.createChildEditPolicy(child);
}
«ENDIF-»
«ENDDEFINE»

@


1.3.2.1
log
@Eliminated Jet templates in lite version;
i18n in lite RT;
For generated classes whose names are not directly modifiable via gmfgen file, consistent className/qualifiedClassName template is exposed (and used throughout the generation process, including the Generator)
@
text
@d26 1
a26 1
public class «EXPAND className» «EXPAND supertypes» {
a37 3
«DEFINE className FOR gmfgen::GenContainerBase»«getLayoutEditPolicyClassName()»«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenContainerBase»«getDiagram().editPoliciesPackageName».«EXPAND className»«ENDDEFINE»

@


1.2
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d81 1
a81 1
			int newVisualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».INSTANCE.getNodeVisualID(«EXPAND xpt::diagram::policies::Common::getViewCode», childNode.getElement());
d109 1
a109 1
			int newVisualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».INSTANCE.getNodeVisualID(«EXPAND xpt::diagram::policies::Common::getViewCode», childNode.getElement());
@


1.1
log
@[164018]: Command generation separated from Parts for layout edit policy and graphical node edit policy;
NewDiagramFileWizard: layout is not persisted if the diagram is closed right after initialization
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@

