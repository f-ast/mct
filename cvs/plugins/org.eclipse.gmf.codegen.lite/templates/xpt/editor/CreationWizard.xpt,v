head	1.2;
access;
symbols
	v20080910-1520:1.2
	v20080722-1827:1.2
	v20080716-1642:1.2
	R2_1_maintenance:1.2.0.2
	Root_R2_1_maintenance:1.2
	R2_1_0:1.2
	v20080507-1326:1.2
	v20080501-1739:1.1
	v20080425-1959:1.1
	v20080322-0000:1.1
	v20071108-0000:1.1
	v20071003-0000:1.1
	v20070921-0000:1.1
	v20070915-0000:1.1
	v20070903-0000:1.1
	v20070809-0000:1.1
	R2_0_maintenance:1.1.0.2
	R2_0:1.1
	R4_20:1.1
	v20070621-0000:1.1;
locks; strict;
comment	@# @;


1.2
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.1;
commitid	388c4821b4d44567;

1.1
date	2007.06.20.10.16.10;	author bblajer;	state Exp;
branches;
next	;
commitid	37dd4678fe694567;


desc
@@


1.2
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::editor::Wizard»
«EXTENSION xpt::editor::i18n»

«DEFINE wizardBannerStem FOR genmodel::GenClass»«genPackage.prefix»«ENDDEFINE»

«DEFINE wizardBannerStem FOR gmfgen::GenDiagram»«IF domainDiagramElement == null»«editorGen.diagramFileExtension»«ELSE»«EXPAND wizardBannerStem FOR domainDiagramElement»«ENDIF»«ENDDEFINE»

«DEFINE wizardBannerLocation FOR gmfgen::GenDiagram»icons/wizban/New«EXPAND wizardBannerStem FOR domainDiagramElement»Wizard.gif«ENDDEFINE»

«DEFINE CreationWizard FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen»
package «editorGen.editor.packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «creationWizardClassName» «EXPAND supertypes» {
	«EXPAND diagramFile-»

	«EXPAND page-»

	«EXPAND addPages-»

	«EXPAND init-»

	«EXPAND performFinish-»

	«EXPAND getResult-»

	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenDiagram»extends «IF null == editorGen.application»org.eclipse.ui.wizards.newresource.BasicNewResourceWizard«ELSE»org.eclipse.jface.wizard.Wizard«ENDIF» implements org.eclipse.ui.INewWizard«ENDDEFINE»
«DEFINE diagramFile FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
private «EXPAND createdDiagramFileType» «EXPAND createdDiagramFileAttributeName»;
«ENDDEFINE»

«DEFINE page FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
 private «getCreationWizardPageQualifiedClassName()» myPage;
«ENDDEFINE»

«DEFINE addPages FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public void addPages() {
	super.addPages();
	if (myPage == null) {
		myPage = new «getCreationWizardPageQualifiedClassName()»(«IF null == editorGen.application»getSelection()«ENDIF»);
	}
	addPage(myPage);
}
«ENDDEFINE»

«DEFINE init FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void init(org.eclipse.ui.IWorkbench workbench, org.eclipse.jface.viewers.IStructuredSelection selection) {
«IF null == editorGen.application-»
		super.init(workbench, selection);
«ENDIF-»
		setWindowTitle(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForCreationWizardWindowTitle()) FOR editorGen»);
		setDefaultPageImageDescriptor(«editorGen.plugin.getActivatorQualifiedClassName()».getBundledImageDescriptor("«EXPAND wizardBannerLocation»")); «EXPAND xpt::Common::nonNLS»
		setNeedsProgressMonitor(true);
	}
«ENDDEFINE»

«DEFINE performFinish FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean performFinish() {
	boolean retVal = myPage.finish();
	«EXPAND createdDiagramFileAttributeName» = myPage.«EXPAND xpt::editor::CreationWizardPage::createdDiagramFileMethodName»();
	return retVal;
}
«ENDDEFINE»

«DEFINE getResult FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::generatedMemberComment("returns the diagram file")»
public final «EXPAND createdDiagramFileType» «EXPAND createdDiagramFileMethodName»() {
	return «EXPAND createdDiagramFileAttributeName»;
}
«ENDDEFINE»

«DEFINE createdDiagramFileAttributeName FOR gmfgen::GenDiagram»«IF isRichClientPlatform()»myCreatedDiagramFileURI«ELSE»myCreatedDiagramFile«ENDIF»«ENDDEFINE»
«DEFINE createdDiagramFileMethodName FOR gmfgen::GenDiagram»«IF isRichClientPlatform()»getCreatedDiagramFileURI«ELSE»getCreatedDiagramFile«ENDIF»«ENDDEFINE»
«DEFINE createdDiagramFileType FOR gmfgen::GenDiagram»«IF isRichClientPlatform()»org.eclipse.emf.common.util.URI«ELSE»org.eclipse.core.resources.IFile«ENDIF»«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenDiagram»«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForCreationWizardWindowTitle())-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForCreationWizardWindowTitle(), "New " + editorGen.domainGenModel.modelName + " Diagram")-»
«ENDDEFINE»

@


1.1
log
@Rewrite /editor/* templates in XPand;
Use common template to generate code that creates an editing domain in various places;
OpenDiagramEditPolicy: package statement was missing.
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@

