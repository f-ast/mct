head	1.7;
access;
symbols
	v20080910-1520:1.7
	v20080722-1827:1.7
	v20080716-1642:1.7
	R2_1_maintenance:1.7.0.2
	Root_R2_1_maintenance:1.7
	R2_1_0:1.7
	v20080507-1326:1.7
	v20080501-1739:1.6
	v20080425-1959:1.6
	v20080322-0000:1.6
	v20071108-0000:1.5
	v20071003-0000:1.4
	v20070921-0000:1.3
	v20070915-0000:1.3
	v20070903-0000:1.4
	v20070809-0000:1.3
	R2_0_maintenance:1.3.0.2
	R2_0:1.3
	R4_20:1.3
	v20070621-0000:1.3
	RC3_20:1.3
	v20070614-1400:1.3
	v20070608-1300:1.3
	v20070601-1400:1.3
	v20070525-1500:1.3
	v20070520-1200:1.3
	v20070518-1300:1.2
	v20070504-1000:1.1
	v20070427-0600:1.1
	v20070420-1000:1.1
	v20070413-1300:1.1
	v20070405-1100:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.05.07.13.55.38;	author atikhomirov;	state Exp;
branches;
next	1.6;
commitid	388c4821b4d44567;

1.6
date	2008.02.26.22.50.33;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	405e47c497b74567;

1.5
date	2007.10.31.17.16.42;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	79fa4728b8794567;

1.4
date	2007.08.13.14.11.02;	author bblajer;	state Exp;
branches;
next	1.3;
commitid	65c246c066754567;

1.3
date	2007.05.18.21.17.25;	author atikhomirov;	state Exp;
branches;
next	1.2;
commitid	25e5464e17e24567;

1.2
date	2007.05.04.14.08.44;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	464d463b3e6a4567;

1.1
date	2007.04.04.11.04.48;	author bblajer;	state Exp;
branches;
next	;
commitid	18c54613864d4567;


desc
@@


1.7
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::commands::CommandUtils»
«EXTENSION xpt::diagram::Helper»
«EXTENSION xpt::diagram::LinkFinder»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»

«DEFINE createNotationalNodeCommand(String parentViewCode) FOR gmfgen::GenContainerBase-»
org.eclipse.emf.ecore.EObject domainElement = descriptor.getElement();
int nodeVisualID = descriptor.getVisualID();
switch (nodeVisualID) {
«EXPAND createNotationalNodeCommandForChild(this, parentViewCode, "domainElement") FOREACH getChildNodes().select(e|e.modelFacet != null && e.modelFacet.metaClass != null)-»
default:
	return null;
}
«ENDDEFINE»

«DEFINE createNotationalNodeCommandForChild(gmfgen::GenContainerBase parentContainer, String parentViewCode, String domainElementCode) FOR gmfgen::GenNode-»
«EXPAND createNotationalNodeCommandForChild(parentContainer, parentViewCode, domainElementCode, "org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand")-»
«ENDDEFINE»

«DEFINE createNotationalNodeCommandForChild(gmfgen::GenContainerBase parentContainer, String parentViewCode, String domainElementCode, String createNotationalNodeCommandFQN) FOR gmfgen::GenNode-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
	if («EXPAND MetaModel::IsInstance(domainElementCode) FOR modelFacet.metaClass») {
		return new «createNotationalNodeCommandFQN»(«parentViewCode», «domainElementCode», «EXPAND defaultConstraint(parentContainer.needsXYLayout() || {this}.typeSelect(gmfgen::GenChildSideAffixedNode).size() > 0)», «getNotationViewFactoryQualifiedClassName()».INSTANCE, false);
	}
	return null;
«ENDDEFINE»

«DEFINE defaultConstraint(boolean xyLayouted) FOR gmfgen::GenNode-»
«IF xyLayouted»new org.eclipse.draw2d.geometry.Rectangle(0, 0, «EXPAND xpt::commands::Common::defaultWidth», «EXPAND xpt::commands::Common::defaultHeight»)«ELSE»null«ENDIF-»
«ENDDEFINE»

«DEFINE createNotationalEdgeCommand(String parentDiagramCode) FOR gmfgen::GenCommonBase-»
«EXPAND defineDecorator-»
«EXPAND instantiateNotationalEdgeCommand(parentDiagramCode)-»
«ENDDEFINE»

«DEFINE defineDecorator FOR gmfgen::GenCommonBase-»
org.eclipse.gmf.runtime.notation.View sourceView = getViewService().findView(linkDescriptor.getSource());
org.eclipse.gmf.runtime.notation.View targetView = getViewService().findView(linkDescriptor.getDestination());
org.eclipse.gmf.runtime.lite.services.IViewDecorator decorator = null;
if (sourceView == null || targetView == null) {
	return null;
}
String sourceModelID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(sourceView);
if (!«getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(sourceModelID)) {
	return null;
}
String targetModelID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getModelID(targetView);
if (!«getDiagram().getEditPartQualifiedClassName()».MODEL_ID.equals(targetModelID)) {
	return null;
}
	«IF needsSourceVisualID()-»
int sourceVisualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(sourceView);
	«ENDIF-»
	«IF needsTargetVisualID()-»
int targetVisualID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getVisualID(targetView);
	«ENDIF-»
switch (linkDescriptor.getVisualID()) {
	«EXPAND createDecorator FOREACH containedLinks()-»
}
if (decorator == null) {
	return null;
}
«ENDDEFINE»

«DEFINE createDecorator FOR gmfgen::GenLink-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
«EXPAND restrictEdgeEnds("sourceVisualID", modelFacet.getSourceType()) FOR getDiagram()-»
«EXPAND restrictEdgeEnds("targetVisualID", modelFacet.getTargetType()) FOR getDiagram()-»
	if («EXPAND linkDescriptorCondition FOR modelFacet») {
		decorator = «getNotationViewFactoryQualifiedClassName()».INSTANCE;
	}
	break;
«ENDDEFINE»

«DEFINE instantiateNotationalEdgeCommand(String parentDiagramCode) FOR gmfgen::GenCommonBase-»
return new org.eclipse.gmf.runtime.lite.commands.CreateNotationalEdgeCommand(«parentDiagramCode», linkDescriptor.getElement(), sourceView, targetView, decorator);
«ENDDEFINE»

«DEFINE linkDescriptorCondition FOR gmfgen::LinkModelFacet»«ERROR "Unexpected type"»«ENDDEFINE»

«DEFINE linkDescriptorCondition FOR gmfgen::TypeLinkModelFacet»«EXPAND MetaModel::IsInstance("linkDescriptor.getElement()") FOR metaClass»«ENDDEFINE»

«DEFINE linkDescriptorCondition FOR gmfgen::FeatureLinkModelFacet»linkDescriptor.getElement() == null«ENDDEFINE»

«DEFINE restrictEdgeEnds(String visualIdVar, genmodel::GenClass expectedClass) FOR gmfgen::GenDiagram-»
«LET getRelatedChildLabelGenNodes(expectedClass) AS relatedChildLabelGenNodes-»
«IF relatedChildLabelGenNodes.size() > 0-»
switch («visualIdVar») {
«FOREACH relatedChildLabelGenNodes AS nextNode-»
case  «nextNode.getEditPartQualifiedClassName()».VISUAL_ID:
	return null;
«ENDFOREACH-»
}
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

@


1.6
log
@[150177] phase I, refactor existing code: completed - all metamodel access moved to MetaModel template, LiteRT version updated
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.5
log
@[208264]: [lite]: Implement border items
[208270]: [lite]: Feedback for element creation should show exactly where the element will be created
Move external label when a deep ancestor is moved;
NodeEditPart.xpt: add variation point to createEditPolicies;
AddNodeCommand.xpt: do not generate unused attribute
@
text
@d2 1
a2 1
 * Copyright (c) 2007 Borland Software Corporation
d38 1
a38 1
	if («domainElementCode» instanceof «modelFacet.metaClass.getQualifiedInterfaceName()») {
d98 1
a98 1
«DEFINE linkDescriptorCondition FOR gmfgen::TypeLinkModelFacet»linkDescriptor.getElement() instanceof «metaClass.getQualifiedInterfaceName()»«ENDDEFINE»
@


1.4
log
@1. Don't cache templates if dynamic templates option is on;
2. [199747] Support shortcuts in the Lite diagrams (including notation model update for links between alien shortcuts);
3. Decorations should be visible;
4. TransactionalUpdateManager: more notifications to be dispatched to parents, make it possible to add more in subclasses;
5. On element creation, it should be given an opportunity to contribute its notational update commands;
6. [199749]: Delete from View supported (request, edit policy, command, UI action);
7. Add @@generated tags where they were missing;
8. ChildNotationModelRefresher: if the child feature is derived transient, notation model refresher should listen to containment feature.
@
text
@d39 1
a39 1
		return new «createNotationalNodeCommandFQN»(«parentViewCode», «domainElementCode», «EXPAND defaultConstraint(parentContainer.needsXYLayout())», «getNotationViewFactoryQualifiedClassName()».INSTANCE, false);
@


1.3
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d26 1
a26 7
«FOREACH getChildNodes().select(e|e.modelFacet != null && e.modelFacet.metaClass != null) AS nextNode-»
case «nextNode.getEditPartQualifiedClassName()».VISUAL_ID:
	if (domainElement instanceof «nextNode.modelFacet.metaClass.getQualifiedInterfaceName()») {
		return new org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand(«parentViewCode», domainElement, «EXPAND defaultConstraint(needsXYLayout()) FOR nextNode», «nextNode.getNotationViewFactoryQualifiedClassName()».INSTANCE, false);
	}
	return null;
«ENDFOREACH-»
d32 12
d49 5
a79 1
return new org.eclipse.gmf.runtime.lite.commands.CreateNotationalEdgeCommand(«parentDiagramCode», linkDescriptor.getElement(), sourceView, targetView, decorator);
d92 4
@


1.2
log
@1. Links to links;
2. Exception from TreeEditPartViewer (in the outline) while closing the diagram editor (because unregister is not called, only deactivate) fixed;
3. instead of rerouting a link to an end that does not support it, remove the link
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.1
log
@[176696]: InitDiagramContents: do not create notational edges to and from child label nodes;
Rewrite editpart templates in xpt;
Unify what is refreshed for each edit part type;
Preparation for side-affixed elements.
@
text
@d42 1
a42 1
«DEFINE createNotationalEdgeCommand(String parentDiagramCode) FOR gmfgen::GenContainerBase-»
@

