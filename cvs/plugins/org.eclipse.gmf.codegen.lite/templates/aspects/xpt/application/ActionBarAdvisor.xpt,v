head	1.6;
access;
symbols
	v20080910-1520:1.6
	v20080722-1827:1.6
	v20080716-1642:1.6
	R2_1_maintenance:1.6.0.2
	Root_R2_1_maintenance:1.6
	R2_1_0:1.6
	v20080507-1326:1.6
	v20080501-1739:1.5
	v20080425-1959:1.5
	v20080322-0000:1.5
	v20071108-0000:1.5
	v20071003-0000:1.4
	v20070921-0000:1.4
	v20070915-0000:1.4
	v20070903-0000:1.4
	v20070809-0000:1.4
	R2_0_maintenance:1.4.0.2
	R2_0:1.4
	R4_20:1.4
	v20070621-0000:1.4
	RC3_20:1.4
	v20070614-1400:1.4
	v20070608-1300:1.4
	v20070601-1400:1.4
	v20070525-1500:1.4
	v20070520-1200:1.4
	v20070518-1300:1.3
	v20070504-1000:1.3
	v20070427-0600:1.3
	v20070420-1000:1.3
	v20070413-1300:1.3
	v20070405-1100:1.3
	v20070403-1500:1.2
	v20070330-1300:1.2
	v20060330-1300:1.2
	v20070322-1100:1.2
	v20060316-0600:1.2
	v20070307-0700:1.2
	v20070228-2000:1.2
	v20070221-1500:1.2
	v20070208-1800:1.2
	M4_20:1.1
	v20070103-0300:1.1;
locks; strict;
comment	@# @;


1.6
date	2008.05.07.13.55.39;	author atikhomirov;	state Exp;
branches;
next	1.5;
commitid	388c4821b4d44567;

1.5
date	2007.10.31.17.16.43;	author bblajer;	state Exp;
branches;
next	1.4;
commitid	79fa4728b8794567;

1.4
date	2007.05.18.21.17.26;	author atikhomirov;	state Exp;
branches;
next	1.3;
commitid	25e5464e17e24567;

1.3
date	2007.04.04.11.18.16;	author bblajer;	state Exp;
branches;
next	1.2;
commitid	265a461389784567;

1.2
date	2007.02.02.17.14.33;	author bblajer;	state Exp;
branches;
next	1.1;
commitid	78d445c371764567;

1.1
date	2006.12.25.12.00.12;	author bblajer;	state Exp;
branches;
next	;
commitid	430d458fbd4b4567;


desc
@@


1.6
log
@[228913] updated ValueExpression use in GMFGen to better accomodate codegen needs (items 1,2,3)
@
text
@/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Boris Blajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«EXTENSION xpt::Util»

«AROUND openEditor FOR gmfgen::GenEditorView-»
«ENDAROUND»

«AROUND AboutAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedMemberComment("About action for the RCP application.")»
	public static class AboutAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {
		«EXPAND xpt::Common::generatedMemberComment("@@see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)")»
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.jface.dialogs.MessageDialog.openInformation(getWindow().getShell(), getString("_UI_About_title"),	«EXPAND xpt::Common::nonNLS»
			getString("_UI_About_text"));	«EXPAND xpt::Common::nonNLS»
		}
	}
«ENDAROUND»

«AROUND OpenAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedClassComment("Open action for the " + editorGen.domainGenModel.modelName + " diagram.")»
	public static class OpenAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {
		«EXPAND xpt::Common::generatedMemberComment("Opens the editors for the files selected using the file dialog.")»
		public void run(org.eclipse.jface.action.IAction action) {
			String filePath = «editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».openFilePathDialog(getWindow().getShell(), "*.«editorGen.diagramFileExtension»", org.eclipse.swt.SWT.OPEN);	«EXPAND xpt::Common::nonNLS»
			if (filePath != null) {
«IF editorGen.editor.eclipseEditor-»
				«editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».openEditor(org.eclipse.emf.common.util.URI.createFileURI(filePath));
«ELSE-»
				«editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».showView(org.eclipse.emf.common.util.URI.createFileURI(filePath));
«ENDIF-»
			}
		}
 	}
«ENDAROUND»

«AROUND OpenUriAction FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedMemberComment("Open URI action for the " + editorGen.domainGenModel.modelName + " diagram.")»
	public static class OpenURIAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {
		«EXPAND xpt::Common::generatedMemberComment("Opens the editors for the files selected using the LoadResourceDialog.")»
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog loadResourceDialog = new org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog(getWindow().getShell());
			if (org.eclipse.jface.dialogs.Dialog.OK == loadResourceDialog.open()) {
				for (java.util.Iterator it = loadResourceDialog.getURIs().iterator(); it.hasNext(); ) {
«IF editorGen.editor.eclipseEditor»
					«editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».openEditor((org.eclipse.emf.common.util.URI) it.next());
«ELSE»
					«editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».showView((org.eclipse.emf.common.util.URI) it.next());
«ENDIF»
				}
			}
		}
	}
«ENDAROUND»

«AROUND additions FOR gmfgen::GenApplication-»
	«EXPAND xpt::Common::generatedMemberComment("Looks up a string in the plugin.properties file for the plugin.")»
	private static String getString(String key) {
		return «editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getBundleString(key);
	}
«ENDAROUND»
@


1.5
log
@[208264]: [lite]: Implement border items
[208270]: [lite]: Feedback for element creation should show exactly where the element will be created
Move external label when a deep ancestor is moved;
NodeEditPart.xpt: add variation point to createEditPolicies;
AddNodeCommand.xpt: do not generate unused attribute
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
@


1.4
log
@switching to nsURI format which uses year to denote model version (same way EMF does)
@
text
@d16 2
@


1.3
log
@User should be able to configure whether NON-NLS markers are shown or not
@
text
@d13 1
a13 1
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
@


1.2
log
@[172664]: Provide audits and metrics for Lite diagrams (including view-based and RCP) + validation decorators + validation markers (for non-RCP case);
Several templates are rewritten with xpand;
lite-specific TextEmitter is back (otherwise importManager is sometimes passed to xpand templates)
@
text
@d24 2
a25 2
			org.eclipse.jface.dialogs.MessageDialog.openInformation(getWindow().getShell(), getString("_UI_About_title"),	//$NON-NLS-1$
			getString("_UI_About_text"));	//$NON-NLS-1$
d35 1
a35 1
			String filePath = «editorGen.diagram.getDiagramEditorUtilQualifiedClassName()».openFilePathDialog(getWindow().getShell(), "*.«editorGen.diagramFileExtension»", org.eclipse.swt.SWT.OPEN);	//$NON-NLS-1$
@


1.1
log
@[159567]: Use GenApplication element from gmfgen model to generate RCP code
Use as much of the runtime templates as possible (changes are isolated as aspects)
@
text
@d20 1
a20 1
	«EXPAND xpt::Common::generated FOR "About action for the RCP application."-»
d22 1
a22 1
		«EXPAND xpt::Common::generated FOR "@@see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)"-»
d31 1
a31 4
	/**
	 * Open action for the «editorGen.domainGenModel.modelName» diagram.
	 * @@generated
	 */
d33 1
a33 1
		«EXPAND xpt::Common::generated FOR "Opens the editors for the files selected using the file dialog."-»
d48 1
a48 4
	/**
	 * Open URI action for the «editorGen.domainGenModel.modelName» diagram.
	 * @@generated
	 */
d50 1
a50 1
		«EXPAND xpt::Common::generated FOR "Opens the editors for the files selected using the LoadResourceDialog."-»
d67 1
a67 1
	«EXPAND xpt::Common::generated FOR "Looks up a string in the plugin.properties file for the plugin."-»
@

