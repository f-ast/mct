«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE SheetLabelProvider FOR gmfgen::GenPropertySheet-»
«EXPAND xpt::Common::copyright FOR editorGen»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «labelProviderClassName» extends org.eclipse.jface.viewers.DecoratingLabelProvider {
	«EXPAND xpt::Common::generatedMemberComment»
	public «labelProviderClassName»() {
		super(new org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider(«editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getItemProvidersAdapterFactory()), null);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public String getText(Object element) {
		Object selected = unwrap(element); 
«IF null != editorGen.navigator && null != editorGen.application»
		if (selected instanceof «editorGen.navigator.getNavigatorGroupQualifiedClassName()») {
			return ((«editorGen.navigator.getNavigatorGroupQualifiedClassName()») selected).getGroupName();
		}
«ENDIF»
		return super.getText(selected);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public org.eclipse.swt.graphics.Image getImage(Object element) {
		return super.getImage(unwrap(element));
	}

	«EXPAND unwrap-»
	«EXPAND unwrapView-»
	«EXPAND unwrapEditPart-»
}
«ENDDEFINE»

«DEFINE unwrap FOR gmfgen::GenPropertySheet-»
	«EXPAND xpt::Common::generatedMemberComment»
	private Object unwrap(Object element) {
		if (element instanceof org.eclipse.jface.viewers.IStructuredSelection) {
			return unwrap(((org.eclipse.jface.viewers.IStructuredSelection) element).getFirstElement());
		}
		if (element instanceof org.eclipse.gef.EditPart) {
			return unwrapEditPart((org.eclipse.gef.EditPart) element);
		}
		if (element instanceof org.eclipse.core.runtime.IAdaptable) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
			if (view != null) {
				return unwrapView(view);
			}
		}
		return element;
	}
«ENDDEFINE»

«DEFINE unwrapView FOR gmfgen::GenPropertySheet-»
	«EXPAND xpt::Common::generatedMemberComment»
	private Object unwrapView(org.eclipse.gmf.runtime.notation.View view) {
		return view.getElement() == null ? view : view.getElement();
	}
«ENDDEFINE»

«DEFINE unwrapEditPart FOR gmfgen::GenPropertySheet-»
	«EXPAND xpt::Common::generatedMemberComment»
	private Object unwrapEditPart(org.eclipse.gef.EditPart p) {
		if (p.getModel() instanceof org.eclipse.gmf.runtime.notation.View) {
			return unwrapView((org.eclipse.gmf.runtime.notation.View) p.getModel());
		}
		return p.getModel();
	}
«ENDDEFINE»
