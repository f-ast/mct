/*
 * Copyright (c) 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/emf/2002/Ecore";
import "http://www.eclipse.org/gmf/2008/GenModel";

String i18nKeyForActionBarContributorViewMenu(gmfgen::GenEditorView editor) :
editor.actionBarContributorClassName + ".viewMenu"
;

private String getOpenDiagramInViewActionPrefix(gmfgen::GenEditorGenerator editorGen) :
"OpenDiagramIn" + editorGen.modelID + "DiagramViewAction"
;

String i18nKeyForOpenDiagramInViewActionErrorTitle(gmfgen::GenEditorGenerator editorGen) :
editorGen.getOpenDiagramInViewActionPrefix() + ".errorTitle"
;

String i18nKeyForOpenDiagramInViewActionCannotLoad(gmfgen::GenEditorGenerator editorGen) :
editorGen.getOpenDiagramInViewActionPrefix() + ".cannotLoad"
;

String i18nKeyForOpenDiagramInViewActionExceptionLoading(gmfgen::GenEditorGenerator editorGen) :
editorGen.getOpenDiagramInViewActionPrefix() + ".exceptionLoading"
;

String i18nKeyForOpenDiagramInViewActionPartInitException(gmfgen::GenEditorGenerator editorGen) :
editorGen.getOpenDiagramInViewActionPrefix() + ".partInitException"
;

String i18nKeyForEditorErrorDuringSave(gmfgen::GenEditorView editor) :
editor.className + ".errorSaving"
;

String i18nKeyForEditorLoadDiagramLabel(gmfgen::GenEditorView editor) :
editor.className + ".LoadDiagram"
;

String i18nKeyForEditorFailedLoadDiagramMsg(gmfgen::GenEditorView editor) :
editor.className + ".FailedToLoadDiagramMsg"
;

String i18nKeyForEditorInvalidInputMsg(gmfgen::GenEditorView editor) :
editor.className + ".InvalidInputMsg"
;

String i18nKeyForEditorAlignMenu(gmfgen::GenEditorView editor) :
editor.className + ".Align"
;

String titleKey(String dialogKey) :
    dialogKey+"Title"
;

String messageKey(String dialogKey) :
    dialogKey+"Message"
;

String i18nKeyForDiagramEditorUtilErrorNoDescriptor(gmfgen::GenDiagram diagram) :
diagram.diagramEditorUtilClassName + ".ErrorNoDescriptor"
;

String i18nKeyForDiagramEditorUtilErrorOpeningEditor(gmfgen::GenDiagram diagram) :
diagram.diagramEditorUtilClassName + ".ErrorOpeningEditor"
;

String i18nKeyForDiagramEditorUtilErrorOpeningView(gmfgen::GenDiagram diagram) :
diagram.diagramEditorUtilClassName + ".ErrorOpeningView"
;

String i18nKeyForCreationWizardWindowTitle(gmfgen::GenDiagram diagram) :
diagram.creationWizardClassName + ".WindowTitle"
;

String i18nKeyForCreationWizardPagePageName(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".PageName"
;

String i18nKeyForCreationWizardPageTitle(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".Title"
;

String i18nKeyForCreationWizardPageDescription(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".Description"
;

String i18nKeyForCreationWizardPageResourceURILabel(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".ResourceURILabel"
;

String i18nKeyForCreationWizardPageBrowseButtonLabel(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".BrowseButtonLabel"
;

String i18nKeyForCreationWizardPageDiagramFileExists(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".DiagramFileExists"
;

String i18nKeyForCreationWizardPageIncorrectExtension(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".IncorrectExtension"
;

String i18nKeyForCreationWizardPageModelFileExists(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".ModelFileExists"
;

String i18nKeyForCreationWizardPageCreationFailed(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".CreationFailed"
;

String i18nKeyForCreationWizardPageCommandLabel(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".CommandLabel"
;

String i18nKeyForCreationWizardPageTaskName(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".TaskName"
;

String i18nKeyForCreationWizardPageSaveFailed(gmfgen::GenDiagram diagram) :
diagram.creationWizardPageClassName + ".SaveFailed"
;

String i18nKeyForInitDiagramFileResourceErrorDialog(gmfgen::GenDiagram diagram) :
diagram.initDiagramFileActionClassName + ".ResourceErrorDialog"
;

String i18nKeyForInitDiagramFileWizardTitle(gmfgen::GenDiagram diagram) :
diagram.initDiagramFileActionClassName + ".WizardTitle"
;

String i18nForNewDiagramFileWizardIncorrectExtension(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".IncorrectExtension"
;

String i18nForNewDiagramFileWizardBrowseButton(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".BrowseButton"
;

String i18nForNewDiagramFileWizardFileLabel(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".FileLabel"
;

String i18nForNewDiagramFileWizardNoSourceFile(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".NoSourceFile"
;

String i18nForNewDiagramFileWizardSourceURISelectorPageName(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".SourceURISelectorPageName"
;

String i18nForNewDiagramFileWizardSourceURISelectorPageTitle(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".SourceURISelectorPageTitle"
;

String i18nForNewDiagramFileWizardSourceURISelectorPageDescription(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".SourceURISelectorPageDescription"
;

String i18nForNewDiagramFileWizardDiagramFileExists(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".DiagramFileExists"
;

String i18nForNewDiagramFileWizardDiagramURISelectorPageName(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".DiagramURISelectorPageName"
;

String i18nForNewDiagramFileWizardDiagramURISelectorPageTitle(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".DiagramURISelectorPageTitle"
;

String i18nForNewDiagramFileWizardDiagramURISelectorPageDescription(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".DiagramURISelectorPageDescription"
;

String i18nForNewDiagramFileWizardRootElementSelectorPageName(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".RootElementSelectorPageName"
;

String i18nForNewDiagramFileWizardRootElementSelectorPageTitle(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".RootElementSelectorPageTitle"
;

String i18nForNewDiagramFileWizardRootElementSelectorPageDescription(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".RootElementSelectorPageDescription"
;

String i18nForNewDiagramFileWizardRootElementSelectorPageLabelText(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".RootElementSelectorPageLabelText"
;

String i18nForNewDiagramFileWizardRootElementSelectorPageNoRootSelected(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".RootElementSelectorPageNoRootSelected"
;

String i18nForNewDiagramFileWizardRootElementSelectorPageInvalidRootSelected(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".RootElementSelectorPageInvalidRootSelected"
;

String i18nForNewDiagramFileWizardCommandLabel(gmfgen::GenDiagram diagram) :
diagram.newDiagramFileWizardClassName + ".CommandLabel"
;

String defaultShortcutCreationWizardName(gmfgen::GenDiagram diagram) :
"ShortcutCreationWizard"
;

String i18nForNewShortcutWizardSourceURISelectorPageName(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".URISelector.PageName"
;

String i18nForNewShortcutWizardSourceURISelectorPageTitle(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".URISelector.Title"
;

String i18nForNewShortcutWizardSourceURISelectorPageDescription(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".URISelector.Description"
;

String i18nForNewShortcutWizardNoSourceFile(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".URISelector.NoSourceFile"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageName(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.PageName"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageTitle(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.PageTitle"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageDescription(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.Description"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageLabelText(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.LabelText"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageNoElementSelected(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.NoElementSelected"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageDuplicateShortcut(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.DuplicateShortcut"
;

String i18nForNewShortcutWizardShortcutElementSelectorPageCannotCreateShortcut(gmfgen::GenDiagram diagram) :
diagram.defaultShortcutCreationWizardName() + ".ShortcutElementSelector.CannotCreateShortcut"
;

String i18nForCreateShortcutActionLabel(gmfgen::GenDiagram diagram) :
diagram.createShortcutActionClassName + ".ActionLabel"
;

String i18nForCreateShortcutActionTooltip(gmfgen::GenDiagram diagram) :
diagram.createShortcutActionClassName + ".ActionTooltip"
;

String i18nForCreateShortcutActionWizardWindowTitle(gmfgen::GenDiagram diagram) :
diagram.createShortcutActionClassName + ".WizardWindowTitle"
;

