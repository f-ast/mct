
==

For the renaming of methods, "f" -> "m_f", it is a bit complicated to define a normalisation transformation, but that is not impossible. For example, one can convert both V1 and V2 into something like:

V1: void contextF( ) { … contextF(); … }
V2: void contextM_F( ) { … contextM_F(); … }

where contextF is the positioning information of the method with the enclosing package and class names plus the hash value of the method body with identifiers replaced by constants. 
In this case contextF and contextM_F will be the same. 

