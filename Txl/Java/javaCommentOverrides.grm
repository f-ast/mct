% Overrides to preserve comments in Java
% Jim Cordy, March 2001 (Rev Feb 2003)

#pragma -comment
#define COMMENTS

redefine enum_element
  [comment_nl] ...
end define


redefine type_declaration
   [comment_nl] [NL] ...
end define

redefine type_specifier
   ... [comment_nl] 
end define

redefine add_op_multiplicative_expression
    [add_op] [multiplicative_expression] [comment_nl]
end define


% Can have comments as statements 
redefine statement
	... [comment_nl]
end define

redefine expression_statement
    [expression] '; [comment_nl]
end define


redefine statement
	[comment_nl] ... 
end define

redefine package_declaration
	[comment_nl] [NL] ...
end define

% Can have comments as declarations
redefine class_body_declaration
        [comment_nl] ... 
end define

% redefine class_body_declaration
%   	... [comment_nl]
% end define

redefine import_declaration
	[comment_nl] ... 
end define

% redefine import_declaration
% 	... [comment_nl] 
% end define

redefine type_declaration
	... [comment_nl] 
end define

redefine class_or_interface_body
    '{                                    [NL][IN]
       [comment_nl] 
       [repeat class_body_declaration]    [EX]
       [comment_nl]
    '} [opt ';] [comment_nl]                            [NL][NL]
end define

% ... or after initializers ...
redefine variable_initializer
 	... [comment_nl]
end define

% Can have comments before initializers ...
redefine variable_initializer
	[comment_nl] ...
end define

% redefine variable_declaration
%    [repeat modifier ordered] [type_specifier] [comment_nl] [variable_declarators] '; [NL]
% end define

redefine variable_declarator
	... [comment_nl] 
end define

% ... or before =initializers 
redefine equals_variable_initializer
	[comment_nl] ...
end define

% ... or before =initializers 
redefine equals_variable_initializer
	... [comment_nl] 
end define

% ... or after formal parameters ...
redefine formal_parameter
 	...  [comment_nl]
end define

% Can have comments before formal parameters ...
redefine formal_parameter
	[comment_nl] ...
end define

% ... or after a parameter list 
redefine constructor_declarator
	... [comment_nl]
end define

redefine method_declarator
	... [comment_nl]
end define

% ... or after arguments ...
redefine argument
 	...  [comment_nl]
end define

% Can have comments before arguments ...
redefine argument
	[comment_nl] ...
end define

% ... or after an argument list 
redefine method_argument
	... [comment_nl]
end define

% Can have comments after an if condition
redefine if_statement
    'if '( [expression] ')	[comment_nl]
		[statement]
	[opt else_clause]   [NL]
end define

% Can have comments on a block
redefine block
    '{ 					      [NL] [IN]
	[comment_nl] 			      [EX]
    '}					      [NL]
   |
    '{ 					      [NL] [IN]
	[comment_nl] 			      
        [repeat declaration_or_statement+]     [EX]
	[comment_nl] 
    '}					      [NL]
end define

redefine declaration_or_statement
	... [comment_nl] [NL]
end define

redefine declaration_or_statement
	[comment_nl] [NL] 
	...
end define

% Can have comments before an expression
redefine expression
	... [comment_nl] 
end define
redefine expression
	[comment_nl] [NL] ...
end define

% Need newlines after comments
define mycomment
	[comment]
end define
define comment_nl
	  [empty] 
	| [repeat mycomment] 
end define
