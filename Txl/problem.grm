keys
    INDENT  DEDENT  'problem  ':  'for  '#  'see  'domain  'R  'M  'B  'X  'C  'D  'P  '?  '--  '~~  '<~  '->  '~>  '! 
      'phenomenon  'event  'state  ', 
end keys

comments
    //
end comments

define indent
                [IN]
            [attr  'INDENT] 
    end define

define dedent
                [EX]
    [attr  'DEDENT] 
end define

define program
                [NL]
        'problem  [SPOFF]  ':  [SPON]  [name]  [opt problem_description] 
end define

define problem_description
        [indent]  [E +]  [dedent] 
end define

define E
                [NL]
        [name]  [opt type]  [opt details]  [opt  ':]  [opt stringlit] 
    |    [NL]
        [name]  [SP]  [SPOFF]  [rel]  [SPON]  [name]  [opt details]  [opt desc] 
end define

define desc
        [opt  ':]  [stringlit] 
end define

define details
        '{ [indent]  [list phenomena]  [NL]
        [dedent]  '} 
end define

define phenomena
                [NL]
        [name] 
    |    [NL]
        'event  [name] 
    |    [NL]
        'state  [name] 
end define

define type
        'R 
    |    'M 
    |    'B 
    |    'X 
    |    'C 
    |    'D 
    |    'P 
    |    '? 
end define

define rel
        '-- 
    |    '~~ 
    |    '<~ 
    |    '-> 
    |    '~> 
end define

define name
        [number] 
    |    [id] 
    |    [SPOFF]  '#  [SPON]  [tok *]  [SPOFF]  '#  [SPON] 
end define

define tok
        [id] 
    |    'problem 
    |    ': 
    |    'for 
    |    '# 
    |    'see 
    |    'domain 
    |    'R 
    |    'M 
    |    'B 
    |    'X 
    |    'C 
    |    'D 
    |    'P 
    |    '? 
    |    '-- 
    |    '~~ 
    |    '<~ 
    |    '-> 
    |    '~> 
    |    '! 
    |    'phenomenon 
    |    'event 
    |    'state 
    |    ', 
    |    '- 
end define

rule normalise_list_details_phenomena
    replace  [list phenomena]
        N1  [phenomena] ,  N2  [phenomena] ,  Rest  [list phenomena] 
    construct T1  [stringlit]
        _  [ quote  N1 ] 
    construct T2  [stringlit]
        _  [ quote  N2 ] 
    where
        T1  [>  T2]

    by
        N2 ,  N1 ,  Rest 
end rule

function main
    replace  [program]
        Prg  [ program ] 
    by
        Prg  [ normalise_list_details_phenomena ] 
end function

