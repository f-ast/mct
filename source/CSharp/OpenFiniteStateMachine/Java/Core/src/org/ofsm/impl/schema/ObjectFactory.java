//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-hudson-3037-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.05.08 at 04:44:06 PM MSD 
//


package org.ofsm.impl.schema;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.ofsm.impl.schema package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _InitialState_QNAME = new QName("http://ofsm.sourceforge.net", "initial-state");
    private final static QName _ToState_QNAME = new QName("http://ofsm.sourceforge.net", "to-state");
    private final static QName _State_QNAME = new QName("http://ofsm.sourceforge.net", "state");
    private final static QName _Event_QNAME = new QName("http://ofsm.sourceforge.net", "event");
    private final static QName _FromState_QNAME = new QName("http://ofsm.sourceforge.net", "from-state");
    private final static QName _WhenEvent_QNAME = new QName("http://ofsm.sourceforge.net", "when-event");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.ofsm.impl.schema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Definitions }
     * 
     */
    public Definitions createDefinitions() {
        return new Definitions();
    }

    /**
     * Create an instance of {@link States }
     * 
     */
    public States createStates() {
        return new States();
    }

    /**
     * Create an instance of {@link NamedObject }
     * 
     */
    public NamedObject createNamedObject() {
        return new NamedObject();
    }

    /**
     * Create an instance of {@link Transition }
     * 
     */
    public Transition createTransition() {
        return new Transition();
    }

    /**
     * Create an instance of {@link Transitions }
     * 
     */
    public Transitions createTransitions() {
        return new Transitions();
    }

    /**
     * Create an instance of {@link FiniteStateMachine }
     * 
     */
    public FiniteStateMachine createFiniteStateMachine() {
        return new FiniteStateMachine();
    }

    /**
     * Create an instance of {@link Events }
     * 
     */
    public Events createEvents() {
        return new Events();
    }

    /**
     * Create an instance of {@link StateType }
     * 
     */
    public StateType createStateType() {
        return new StateType();
    }

    /**
     * Create an instance of {@link EventType }
     * 
     */
    public EventType createEventType() {
        return new EventType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ofsm.sourceforge.net", name = "initial-state")
    public JAXBElement<String> createInitialState(String value) {
        return new JAXBElement<String>(_InitialState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ofsm.sourceforge.net", name = "to-state")
    public JAXBElement<String> createToState(String value) {
        return new JAXBElement<String>(_ToState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ofsm.sourceforge.net", name = "state")
    public JAXBElement<StateType> createState(StateType value) {
        return new JAXBElement<StateType>(_State_QNAME, StateType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EventType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ofsm.sourceforge.net", name = "event")
    public JAXBElement<EventType> createEvent(EventType value) {
        return new JAXBElement<EventType>(_Event_QNAME, EventType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ofsm.sourceforge.net", name = "from-state")
    public JAXBElement<String> createFromState(String value) {
        return new JAXBElement<String>(_FromState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ofsm.sourceforge.net", name = "when-event")
    public JAXBElement<String> createWhenEvent(String value) {
        return new JAXBElement<String>(_WhenEvent_QNAME, String.class, null, value);
    }

}
