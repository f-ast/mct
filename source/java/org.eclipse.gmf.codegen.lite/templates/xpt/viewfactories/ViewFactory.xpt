/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::viewfactories::BehaviourUtils»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»

«DEFINE ViewFactory FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().notationViewFactoriesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «notationViewFactoryClassName» «EXPAND supertypes» {
«EXPAND instanceDeclaration-»
«EXPAND decorateView-»
«EXPAND predefinedChildren-»
«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE supertypes FOR gmfgen::GenCommonBase»implements org.eclipse.gmf.runtime.lite.services.IViewDecorator«ENDDEFINE»

«DEFINE instanceDeclaration FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
public static «notationViewFactoryClassName» INSTANCE = new «notationViewFactoryClassName»();
«ENDDEFINE»

«DEFINE decorateView FOR gmfgen::GenCommonBase-»
«EXPAND xpt::Common::generatedMemberComment»
public void decorateView(org.eclipse.gmf.runtime.notation.View view) {
	if (view.eIsSet(org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getView_Type())) {
		return;
	}
«EXPAND setViewType-»
«EXPAND initStyles-»
«EXPAND addCustomStyle FOREACH styles-»
«EXPAND instantiatePredefinedChildren-»
«EXPAND createOpenDiagramAnnotation-»
}
«ENDDEFINE»

«DEFINE addCustomStyle FOR genmodel::GenClass-»
view.getStyles().add(«EXPAND MetaModel::NewInstance»);
«ENDDEFINE»

«DEFINE setViewType FOR gmfgen::GenCommonBase-»
view.setType(«getDiagram().getVisualIDRegistryQualifiedClassName()».getType(«getEditPartQualifiedClassName()».VISUAL_ID));
«ENDDEFINE»

«DEFINE setViewType FOR gmfgen::GenDiagram-»
	view.setType(«getDiagram().getEditPartQualifiedClassName()».MODEL_ID);
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenCommonBase-»
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenDiagram-»
	org.eclipse.gmf.runtime.notation.DiagramStyle style = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createDiagramStyle();
	view.getStyles().add(style);
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenNode-»
«IF viewmap.isFixedFont() || viewmap.isFixedForeground() || viewmap.isFixedBackground()-»
	«IF !viewmap.isFixedFont()-»
	org.eclipse.gmf.runtime.notation.FontStyle fontStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createFontStyle();
	«EXPAND initFontStyle("fontStyle")-»
	view.getStyles().add(fontStyle);
	«ENDIF-»
	«IF !viewmap.isFixedForeground()-»
	org.eclipse.gmf.runtime.notation.LineStyle lineStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createLineStyle();
	«EXPAND initLineStyle("lineStyle")-»
	view.getStyles().add(lineStyle);
	«ENDIF-»
	«IF !viewmap.isFixedBackground()-»
	org.eclipse.gmf.runtime.notation.FillStyle fillStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createFillStyle();
	«EXPAND initFillStyle("fillStyle")-»
	view.getStyles().add(fillStyle);
	«ENDIF-»
«ELSE-»
	org.eclipse.gmf.runtime.notation.ShapeStyle style = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createShapeStyle();
	«EXPAND initFontStyle("style")-»
	«EXPAND initLineStyle("style")-»
	«EXPAND initFillStyle("style")-»
	view.getStyles().add(style);
«ENDIF-»
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenChildLabelNode-»
«IF !viewmap.isFixedFont()-»
	org.eclipse.gmf.runtime.notation.FontStyle style = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createFontStyle();
	«EXPAND initFontStyle("style")-»
	view.getStyles().add(style);
«ENDIF-»
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenCompartment-»
	org.eclipse.gmf.runtime.notation.DrawerStyle drawerStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createDrawerStyle();
	view.getStyles().add(drawerStyle);
	org.eclipse.gmf.runtime.notation.TitleStyle titleStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createTitleStyle();
	view.getStyles().add(titleStyle);
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenLink-»
«IF !viewmap.isFixedFont()-»
	org.eclipse.gmf.runtime.notation.FontStyle fontStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createFontStyle();
	«EXPAND initFontStyle("fontStyle")-»
	view.getStyles().add(fontStyle);
«ENDIF-»
«IF !viewmap.isFixedForeground()-»
	org.eclipse.gmf.runtime.notation.LineStyle lineStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createLineStyle();
	«EXPAND initLineStyle("lineStyle")-»
	view.getStyles().add(lineStyle);
«ENDIF-»
«IF !viewmap.isFixedBackground()-»
	org.eclipse.gmf.runtime.notation.FillStyle fillStyle = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createFillStyle();
	«EXPAND initFillStyle("fillStyle")-»
	view.getStyles().add(fillStyle);
«ENDIF-»
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenLinkLabel-»
«EXPAND initLocation-»
«ENDDEFINE»

«DEFINE initStyles FOR gmfgen::GenExternalNodeLabel-»
«EXPAND initLocation-»
«ENDDEFINE»

«DEFINE initLocation FOR gmfgen::GenLabel-»
		org.eclipse.gmf.runtime.notation.Location location = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createLocation();
«LET viewmap.labelOffsetX(0) AS x-»
«IF x != 0-»
		location.setX(«x»);
«ENDIF»
«ENDLET-»
«LET viewmap.labelOffsetY(0) AS y-»
«IF y != 0-»
		location.setY(«y»);
«ENDIF»
«ENDLET-»
		((org.eclipse.gmf.runtime.notation.Node)view).setLayoutConstraint(location);
«ENDDEFINE»

«DEFINE instantiatePredefinedChildren FOR gmfgen::GenCommonBase-»
«ENDDEFINE»

«DEFINE instantiatePredefinedChildren FOR gmfgen::GenNode-»
«EXPAND instantiatePredefinedChildLabel FOREACH labels-»
«EXPAND instantiatePredefinedChildCompartment FOREACH compartments-»
«ENDDEFINE»

«DEFINE instantiatePredefinedChildCompartment FOR gmfgen::GenCompartment-»
	create«visualID»Compartment(view);
«ENDDEFINE»

«DEFINE instantiatePredefinedChildLabel FOR gmfgen::GenLabel-»
	create«visualID»Label(view);
«ENDDEFINE»

«DEFINE instantiatePredefinedChildren FOR gmfgen::GenChildLabelNode-»
«ENDDEFINE»

«DEFINE instantiatePredefinedChildren FOR gmfgen::GenLink-»
«EXPAND instantiatePredefinedChildLabel FOREACH labels-»
«ENDDEFINE»

«DEFINE predefinedChildren FOR gmfgen::GenCommonBase-»
«ENDDEFINE»

«DEFINE predefinedChildren FOR gmfgen::GenNode-»
«EXPAND predefinedChildLabel FOREACH labels-»
«EXPAND predefinedChildCompartment FOREACH compartments-»
«ENDDEFINE»

«DEFINE predefinedChildren FOR gmfgen::GenChildLabelNode-»
«ENDDEFINE»

«DEFINE predefinedChildCompartment FOR gmfgen::GenCompartment-»
	«EXPAND xpt::Common::generatedMemberComment»
	private void create«visualID»Compartment(org.eclipse.gmf.runtime.notation.View view) {
		org.eclipse.gmf.runtime.notation.Node compartment = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createNode();
		view.getPersistedChildren().add(compartment);
		«getNotationViewFactoryQualifiedClassName()».INSTANCE.decorateView(compartment);
	}
«ENDDEFINE»

«DEFINE predefinedChildLabel FOR gmfgen::GenLabel-»
	«EXPAND xpt::Common::generatedMemberComment»
	private void create«visualID»Label(org.eclipse.gmf.runtime.notation.View view) {
		org.eclipse.gmf.runtime.notation.Node label = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createNode();
		view.getPersistedChildren().add(label);
		«getNotationViewFactoryQualifiedClassName()».INSTANCE.decorateView(label);
	}
«ENDDEFINE»

«DEFINE predefinedChildren FOR gmfgen::GenLink-»
«EXPAND predefinedChildLabel FOREACH labels-»
«ENDDEFINE»

«DEFINE createOpenDiagramAnnotation FOR gmfgen::GenCommonBase-»
«LET openDiagramBehaviours() AS openDiagramBehaviours-»
«IF openDiagramBehaviours.size() == 1-»
	org.eclipse.gmf.runtime.notation.HintedDiagramLinkStyle diagramFacet = org.eclipse.gmf.runtime.notation.NotationFactory.eINSTANCE.createHintedDiagramLinkStyle();
«IF openDiagramBehaviours.diagramKind.first() != null-»
		diagramFacet.setHint("«openDiagramBehaviours.diagramKind.first()»"); «EXPAND xpt::Common::nonNLS»
«ENDIF-»
		view.getStyles().add(diagramFacet);
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE createOpenDiagramAnnotation FOR gmfgen::GenDiagram-»
«ENDDEFINE»

«DEFINE initFontStyle(String styleVar) FOR gmfgen::GenCommonBase-»
org.eclipse.swt.graphics.FontData defaultFontData = org.eclipse.jface.preference.PreferenceConverter.getFontData(«getDiagram().editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getPreferenceStore(), org.eclipse.gmf.runtime.lite.preferences.IPreferenceConstants.DEFAULT_FONT);
«styleVar».setFontName(defaultFontData.getName());
«styleVar».setFontHeight(defaultFontData.getHeight());
«styleVar».setBold((defaultFontData.getStyle() & org.eclipse.swt.SWT.BOLD) != 0);
«styleVar».setItalic((defaultFontData.getStyle() & org.eclipse.swt.SWT.ITALIC) != 0);
org.eclipse.swt.graphics.RGB defaultFontColor = org.eclipse.jface.preference.PreferenceConverter.getColor(«getDiagram().editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getPreferenceStore(), org.eclipse.gmf.runtime.lite.preferences.IPreferenceConstants.FONT_COLOR);
«styleVar».setFontColor((defaultFontColor.blue << 16) | (defaultFontColor.green << 8) | defaultFontColor.red);
«ENDDEFINE»

«DEFINE initLineStyle(String styleVar) FOR gmfgen::GenCommonBase-»
org.eclipse.swt.graphics.RGB defaultLineColor = org.eclipse.jface.preference.PreferenceConverter.getColor(«getDiagram().editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getPreferenceStore(), org.eclipse.gmf.runtime.lite.preferences.IPreferenceConstants.LINE_COLOR);
«styleVar».setLineColor((defaultLineColor.blue << 16) | (defaultLineColor.green << 8) | defaultLineColor.red);
«ENDDEFINE»

«DEFINE initFillStyle(String styleVar) FOR gmfgen::GenCommonBase-»
org.eclipse.swt.graphics.RGB defaultFillColor = org.eclipse.jface.preference.PreferenceConverter.getColor(«getDiagram().editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getPreferenceStore(), org.eclipse.gmf.runtime.lite.preferences.IPreferenceConstants.FILL_COLOR);
«styleVar».setFillColor((defaultFillColor.blue << 16) | (defaultFillColor.green << 8) | defaultFillColor.red);
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenCommonBase-»
«ENDDEFINE»
