/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::commands::CommandUtils»

«DEFINE CloneNodeCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen»
package «getDiagram().editCommandsPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» «EXPAND supertypes» {
	«EXPAND attributes-»
	«EXPAND ctors-»
	«EXPAND createCommand-»
	«EXPAND createAfterCopyCommand-»
	«EXPAND execute-»
	«EXPAND canUndo-»
	«EXPAND undo-»
	«EXPAND redo-»
	«EXPAND dispose-»
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE className FOR gmfgen::GenNode»Clone«EXPAND xpt::commands::Common::commandNameInfix»Command«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenNode»«getDiagram().editCommandsPackageName».«EXPAND className»«ENDDEFINE»
«DEFINE supertypes FOR gmfgen::GenNode»extends org.eclipse.emf.common.command.CommandWrapper«ENDDEFINE»

«DEFINE attributes FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.gmf.runtime.notation.View parentView;
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.gmf.runtime.notation.Node childNode;
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.draw2d.geometry.Rectangle constraint;
«EXPAND xpt::Common::generatedMemberComment»
private final org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain;
«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.emf.common.command.Command afterCopyCommand;
«ENDDEFINE»

«DEFINE ctors FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public «EXPAND className»(org.eclipse.gmf.runtime.notation.View parentView, org.eclipse.gmf.runtime.notation.Node childNode, org.eclipse.draw2d.geometry.Rectangle constraint) {
	this.parentView = parentView;
	this.childNode = childNode;
	this.constraint = constraint;
	this.editingDomain = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(childNode.getDiagram().getElement());
}
«ENDDEFINE»

«DEFINE createCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.emf.common.command.Command createCommand() {
	«EXPAND checkFeatures FOR modelFacet-»
	org.eclipse.emf.ecore.EObject element = childNode.getElement();
	//We are being optimistic here about whether further commands can be executed.
	//Otherwise, we would have to execute the CopyCommand on every mouse move, which could be much too expensive.
	return org.eclipse.emf.edit.command.CopyCommand.create(editingDomain, element);
}
«ENDDEFINE»

«DEFINE execute FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void execute() {
	super.execute();
	afterCopyCommand = createAfterCopyCommand();
	if (afterCopyCommand.canExecute()) {
		afterCopyCommand.execute();
	} else {
		assert false;
	}
}
«ENDDEFINE»

«DEFINE createAfterCopyCommand FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
private org.eclipse.emf.common.command.Command createAfterCopyCommand() {
	final java.util.Collection copyResults = super.getResult();
	assert copyResults.size() == 1;
	org.eclipse.emf.ecore.EObject copyResult = (org.eclipse.emf.ecore.EObject) copyResults.iterator().next();
	org.eclipse.emf.common.command.CompoundCommand result = new org.eclipse.emf.common.command.CompoundCommand();
	«EXPAND plugFeatures FOR modelFacet-»
	«EXPAND xpt::commands::Common::adjustConstraint-»
	result.append(new org.eclipse.gmf.runtime.lite.commands.CreateNotationalNodeCommand(parentView, copyResult, constraint, «getNotationViewFactoryQualifiedClassName()».INSTANCE));
	return result;
}
«ENDDEFINE»

«DEFINE canUndo FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public boolean canUndo() {
	return super.canUndo() && afterCopyCommand != null && afterCopyCommand.canUndo();
}
«ENDDEFINE»

«DEFINE undo FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void undo() {
	afterCopyCommand.undo();
	super.undo();
}
«ENDDEFINE»

«DEFINE redo FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void redo() {
	super.redo();
	afterCopyCommand.redo();
}
«ENDDEFINE»

«DEFINE dispose FOR gmfgen::GenNode-»
«EXPAND xpt::Common::generatedMemberComment»
public void dispose() {
	super.dispose();
	if (afterCopyCommand != null) {
		afterCopyCommand.dispose();
	}
}
«ENDDEFINE»

«DEFINE checkFeatures FOR gmfgen::TypeModelFacet-»
«EXPAND checkFeature("parentView.getElement()", null) FOR containmentMetaFeature-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS addChild-»
«IF addChild-»
	«EXPAND checkFeature("parentView.getElement()", null) FOR childMetaFeature-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE plugFeatures FOR gmfgen::TypeModelFacet-»
«LET childMetaFeature != null && childMetaFeature != containmentMetaFeature && !childMetaFeature.ecoreFeature.derived AS addChild-»
«IF addChild-»
result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("editingDomain", "parentView.getElement()", "copyResult") FOR childMetaFeature»);
«ENDIF-»
«ENDLET-»
«IF containmentMetaFeature == null-»
result.append(new org.eclipse.emf.edit.command.AddCommand(editingDomain, «EXPAND xpt::commands::Common::getPhantomContainmentResource FOR "parentView"».getContents(), copyResult));
«ELSE-»
result.append(«EXPAND xpt::commands::Common::plugFeatureCommand("editingDomain", "parentView.getElement()", "copyResult") FOR containmentMetaFeature»);
«ENDIF-»
«ENDDEFINE»

«DEFINE checkFeature(String containerVar, genmodel::GenClass containerClass) FOR genmodel::GenFeature-»
«IF ecoreFeature.upperBound > 0-»
if («EXPAND xpt::commands::Common::featureMultiplicityComparator(containerVar, containerClass)») {
	return org.eclipse.emf.common.command.UnexecutableCommand.INSTANCE;
}
«ENDIF-»
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenNode»«ENDDEFINE»
