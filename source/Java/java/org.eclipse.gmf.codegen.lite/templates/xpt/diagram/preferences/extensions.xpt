/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2008/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::preferences::Util»

«DEFINE extensions FOR gmfgen::GenDiagram-»
«EXPAND preferencePages-»
«EXPAND preferenceInitializers-»
«ENDDEFINE»

«DEFINE preferencePages FOR gmfgen::GenDiagram-»
«IF preferencePages.hasSupportedPreferencePages()-»
   <extension point="org.eclipse.ui.preferencePages">
      «EXPAND xpt::Common::xmlGeneratedTag»
«EXPAND preferencePage FOREACH preferencePages-»
   </extension>
«ENDIF-»
«ENDDEFINE»

«DEFINE preferenceInitializers FOR gmfgen::GenDiagram-»
«IF preferencePages.hasPreferencePagesWithInitializers()-»
   <extension point="org.eclipse.core.runtime.preferences">
      «EXPAND xpt::Common::xmlGeneratedTag»
«EXPAND preferenceInitializer FOREACH preferencePages-»
   </extension>
«ENDIF-»
«ENDDEFINE»

«DEFINE preferencePage FOR gmfgen::GenPreferencePage-»
«IF isSupported()-»
      <page
            id="«iD»"
            name="%preference.page.title.«iD»"
«IF null != parent-»
            category="«parent.iD»"
«ENDIF-»
            class="«EXPAND qualifiedClassName»">
      </page>
«ENDIF-»
«EXPAND preferencePage FOREACH children-»
«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenPreferencePage»
«ERROR "Unknown preference page: " + this»
«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenCustomPreferencePage»«qualifiedClassName»«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenStandardPreferencePage-»
«IF gmfgen::StandardPreferencePages::General.value == kind.value-»
«EXPAND xpt::diagram::preferences::GeneralPreferencePage::qualifiedClassName FOR getDiagram()-»
«ELSEIF gmfgen::StandardPreferencePages::Appearance.value == kind.value-»
«EXPAND xpt::diagram::preferences::AppearancePreferencePage::qualifiedClassName FOR getDiagram()-»
«REM»TODO: accept more standard preferences, do not forget to register them with Util.ext«ENDREM»«ELSE-»
«ERROR "Unknown preference page: " + this»
«ENDIF-»
«ENDDEFINE»

«DEFINE preferenceInitializer FOR gmfgen::GenPreferencePage»
«IF hasInitializer()-»
<initializer class="«EXPAND preferenceInitializerQualifiedClassName»"/>
«ENDIF-»
«EXPAND preferenceInitializer FOREACH children-»
«ENDDEFINE»

«DEFINE preferenceInitializerQualifiedClassName FOR gmfgen::GenPreferencePage-»
«ERROR "Unknown preference page: " + this»
«ENDDEFINE»

«DEFINE preferenceInitializerQualifiedClassName FOR gmfgen::GenStandardPreferencePage-»
«IF gmfgen::StandardPreferencePages::General.value == kind.value-»
«EXPAND xpt::diagram::preferences::GeneralPreferencePage::preferenceInitializerQualifiedClassName FOR getDiagram()-»
«ELSEIF gmfgen::StandardPreferencePages::Appearance.value == kind.value-»
«EXPAND xpt::diagram::preferences::AppearancePreferencePage::preferenceInitializerQualifiedClassName FOR getDiagram()-»
«REM»TODO: accept more standard preferences, do not forget to register them with Util.ext«ENDREM»«ELSE-»
«ERROR "Unknown preference page: " + this»
«ENDIF-»
«ENDDEFINE»

«DEFINE i18n FOR gmfgen::GenDiagram-»

# Preferences
«EXPAND internal_i18n FOREACH preferencePages»
«ENDDEFINE»

«DEFINE internal_i18n FOR gmfgen::GenPreferencePage-»
«IF isSupported()-»
preference.page.title.«iD»=«name»
«ENDIF-»
«EXPAND internal_i18n FOREACH children-»
«ENDDEFINE»
