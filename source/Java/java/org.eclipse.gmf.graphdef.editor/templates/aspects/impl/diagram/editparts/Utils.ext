/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Anna Karjakina (Borland) - initial API and implementation
 */
 
import "http://www.eclipse.org/gmf/2006/GraphicalDefinition";
import "http://www.eclipse.org/gmf/2008/GenModel";
import "http://www.eclipse.org/emf/2002/GenModel";
import "http://www.eclipse.org/emf/2002/Ecore";
import "http://www.eclipse.org/gmf/2008/GmfGraph/wysiwyg";
import "http://www.eclipse.org/gmf/2008/Context";

extension xpt::GenModelUtils;
extension xpt::EMFUtils;

boolean isPolyline(gmfgen::GenNode genNode) :
	"Polyline" == genNode.getDomainMetaClass().ecoreClass.name || "Polygon" == genNode.getDomainMetaClass().ecoreClass.name
;

boolean isPolylinePoint(gmfgen::GenNode genNode) :
	"Point" == genNode.getDomainMetaClass().ecoreClass.name
;

boolean hasLayoutDataSynchronizers(gmfgen::GenNode genNode) :
!getSynchronizers(genNode).contexts.typeSelect(context::FeatureContext).select(fc | "layoutData" == fc.selector.name).isEmpty()
;

boolean hasSynchronizers(gmfgen::GenNode genNode) :
!getSynchronizers(genNode).isEmpty()
;

List[wysiwyg::DomainPropertiesSynchronizer] getSynchronizers(gmfgen::GenNode genNode) :
getReferencingObjects(genNode).typeSelect(wysiwyg::DomainPropertiesSynchronizer)
;

cached genmodel::GenClass metaclass(gmfgen::GenNode genNode) :
genNode.getDomainMetaClass()
;

boolean isInnerClassViewmap(gmfgen::Viewmap viewmap) :
false
;

boolean isInnerClassViewmap(gmfgen::InnerClassViewmap viewmap) :
true
;