tokens
  id  "[$\u][$\i]*"
end tokens

keys
  'grammar 'with 'generate '= '+= '| '? '* 'enum 'terminal '; '.. '. '[ '] '+
end keys

define qname
    [id] 
  | [qname] [SPOFF] '. [id] [SPON]
end define

define grammar
  'grammar [qname] 'with [qname] [NL]
end define

define generate
  'generate [id] [stringlit] [NL]
end define

define grammar_rule
  [opt 'enum] [id] [SPOFF] ': [SPON] [expr*] [SPOFF] '; [SPON] [NL]
end define

define terminal_rule
  'terminal [id] [SPOFF] ': [SPON] [char_expr*] [SPOFF] '; [SPON] [NL]
end define

define expr
    [literal] 
  | '( [expr*] ')
  | [expr] [SPOFF] '? [SPON]
  | [expr] '| [expr]
  | [expr] [SPOFF] '* [SPON]
  | [expr] [SPOFF] '+ [SPON]
end define

define char_expr
    [charlit] 
  | [charlit] [SPOFF] '.. [SPON] [charlit]
  | '( [char_expr *] ')
  | [char_expr] [SPOFF] '? [SPON]
  | [char_expr] '| [char_expr]
  | [SPOFF] '! [SPON] [char_expr] 
  | [char_expr] [SPOFF] '* [SPON]
  | [char_expr] [SPOFF] '+ [SPON]
end define

define literal
    [type]
  | [stringlit] 
  | [charlit] 
end define

define op
  '= | [SPOFF] '+= [SPON]
end define

define operand
	[id] | [stringlit]
end define

define type
    [id] [SPOFF] [opt '?] [op] [opt '[ ] [SPON] [operand] [SPOFF] [opt '] ] [SPON]
end define

define program
  [grammar]
  [generate]
  [grammar_rule*]
  [terminal_rule*]
end define
