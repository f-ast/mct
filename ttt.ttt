[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/FilteringStyle.java, id.Txl] : TXL0193E predefined function [parse], called from [diff] - Syntax error parsing "   * <p>
   * This is the type of filtering applied to the list represented by the node
   * </p>" as a [class_body_declaration], at or near:
	>>> * <<< < p > * This 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public Bendpoints createBendpoints (EClass eClass) {

    <<<<<< "Bendpoints newBendpoints = (Bendpoints) eClass.getEPackage ().getEFactoryInstance ().create (eClass);"

    <<<<<< "setBendpoints (newBendpoints);"

    <<<<<< "return newBendpoints;"
}

public Bendpoints createBendpoints (EClass eClass) {

    >>>>>> "Bendpoints newBendpoints = (Bendpoints) eClass.getEPackage ().getEFactoryInstance ().create (eClass);"

    >>>>>> "setBendpoints (newBendpoints);"

    >>>>>> "return newBendpoints;"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/FilteringStyleImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at or near:
	= Collections . EMPTY_LIST ; >>> * <<< < ! -- end - 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/FontStyleImpl.java, id.Txl] : TXL0987E - Out of kid space - 30000000 kids have been allocated.
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/FontStyleImpl.java, id.Txl] : TXL0192E line 67 of /Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/FontStyleImpl.java - Syntax error at or near:
	FONT_NAME_EDEFAULT = "Tahoma" ; //$NON-NLS-1$ /** >>> * <<< The cached value of the 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public Node getTypedKey () {

    <<<<<< "if (key != null && key.eIsProxy ()) {EObject oldKey = key; key = (Node) eResolveProxy ((InternalEObject) key); if (key != oldKey) {if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, NotationPackage.NODE_ENTRY__KEY, oldKey, key));}}"

    <<<<<< "return key;"
}

public Node getTypedKey () {

    >>>>>> "if (key != null && key.eIsProxy ()) {EObject oldKey = key; key = (Node) eResolveProxy ((InternalEObject) key); if (key != oldKey) {if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.RESOLVE, NotationPackage.NODE_ENTRY__KEY, oldKey, key));}}"

    >>>>>> "return key;"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public void setTypedKey (Node newKey) {

    <<<<<< "Node oldKey = key;"

    <<<<<< "key = newKey;"

    <<<<<< "if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.NODE_ENTRY__KEY, oldKey, key));"
}

public void setTypedKey (Node newKey) {

    >>>>>> "Node oldKey = key;"

    >>>>>> "key = newKey;"

    >>>>>> "if (eNotificationRequired ()) eNotify (new ENotificationImpl (this, Notification.SET, NotationPackage.NODE_ENTRY__KEY, oldKey, key));"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/NotationFactoryImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at end of:
	, "$" ) ; //$NON-NLS-1$ List newList = new ArrayList (st.countTokens ()); while (st.hasMoreTokens ()) newList.add (new RelativeBendpoint (st.nextToken ().trim ())); return newList;} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/RelativeBendpointsImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at or near:
	= Collections . EMPTY_LIST ; >>> * <<< < ! -- end - 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/SortingStyleImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at or near:
	= Collections . EMPTY_MAP ; >>> * <<< < ! -- end - 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/ViewImpl.java, id.Txl] : TXL0987E - Out of kid space - 30000000 kids have been allocated.
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/ViewImpl.java, id.Txl] : TXL0192E line 86 of /Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/impl/ViewImpl.java - Syntax error at or near:
	TYPE_EDEFAULT = "" ; //$NON-NLS-1$ /** >>> * <<< The cached value of the 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.notation/plugins/org.eclipse.gmf.runtime.notation/src/org/eclipse/gmf/runtime/notation/SortingStyle.java, id.Txl] : TXL0193E predefined function [parse], called from [diff] - Syntax error parsing "   * <p>
   * This is the type of sorting applied to the list represented by the node
   * </p>" as a [class_body_declaration], at or near:
	>>> * <<< < p > * This 
.[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public abstract DiagramCanvas getDiagram ();

abstract public DiagramCanvas getDiagram ();

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public String getProperty (String propertyName) {

    <<<<<< "EAttribute metaAttr = findEAttribute (propertyName);"

    <<<<<< "if (metaAttr != null) {return (String) eGet (metaAttr);}"

    <<<<<< "return (String) getRunTimeProperties ().get (propertyName);"
}

public String getProperty (String propertyName) {

    >>>>>> "EAttribute metaAttr = findEAttribute (propertyName);"

    >>>>>> "if (metaAttr != null) {return (String) eGet (metaAttr);}"

    >>>>>> "return (String) getRunTimeProperties ().get (propertyName);"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public void setProperty (String propertyName, String value) {

    <<<<<< "EAttribute metaAttr = findEAttribute (propertyName);"

    <<<<<< "if (metaAttr != null) {eSet (metaAttr, value); return;}"

    <<<<<< "if (value == null) {getRunTimeProperties ().remove (propertyName);} else {getRunTimeProperties ().put (propertyName, value);}"
}

public void setProperty (String propertyName, String value) {

    >>>>>> "EAttribute metaAttr = findEAttribute (propertyName);"

    >>>>>> "if (metaAttr != null) {eSet (metaAttr, value); return;}"

    >>>>>> "if (value == null) {getRunTimeProperties ().remove (propertyName);} else {getRunTimeProperties ().put (propertyName, value);}"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public int nextAvailableUin () {

    <<<<<< "int rv = getLastAssignedUin () + 1;"

    <<<<<< "while (isUinInUse (rv)) {rv += Math.round (Math.random () * 10);}"

    <<<<<< "setLastAssignedUin (rv);"

    <<<<<< "return rv;"
}

public int nextAvailableUin () {

    >>>>>> "int rv = getLastAssignedUin () + 1;"

    >>>>>> "while (isUinInUse (rv)) {rv += Math.round (Math.random () * 10);}"

    >>>>>> "setLastAssignedUin (rv);"

    >>>>>> "return rv;"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public Dimension createDimensionFromString (EDataType eDataType, String initialValue) {

    <<<<<< "int sep = initialValue.indexOf (',');"

    <<<<<< "if (sep == - 1) {return new Dimension ();}"
    try {

        <<<<<< "int w = Integer.parseInt (initialValue.substring (0, sep).trim ());"

        <<<<<< "int h = Integer.parseInt (initialValue.substring (sep + 1).trim ());"

        <<<<<< "return new Dimension (w, h);"
    } catch (NumberFormatException ex) {

        <<<<<< "return new Dimension ();"
    }

}

public Dimension createDimensionFromString (EDataType eDataType, String initialValue) {

    >>>>>> "int sep = initialValue.indexOf (',');"

    >>>>>> "if (sep == - 1) {return new Dimension ();}"
    try {

        >>>>>> "int w = Integer.parseInt (initialValue.substring (0, sep).trim ());"

        >>>>>> "int h = Integer.parseInt (initialValue.substring (sep + 1).trim ());"

        >>>>>> "return new Dimension (w, h);"
    } catch (NumberFormatException ex) {

        >>>>>> "return new Dimension ();"
    }

}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public String convertDimensionToString (EDataType eDataType, Object instanceValue) {

    <<<<<< "Dimension d = (Dimension) instanceValue;"

    <<<<<< "return new StringBuffer ().append (d.width).append (',').append (d.height).toString ();"
}

public String convertDimensionToString (EDataType eDataType, Object instanceValue) {

    >>>>>> "Dimension d = (Dimension) instanceValue;"

    >>>>>> "return new StringBuffer ().append (d.width).append (',').append (d.height).toString ();"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public Point createPointFromString (EDataType eDataType, String initialValue) {

    <<<<<< "int sep = initialValue.indexOf (',');"

    <<<<<< "if (sep == - 1) {return new Point ();}"
    try {

        <<<<<< "int x = Integer.parseInt (initialValue.substring (0, sep).trim ());"

        <<<<<< "int y = Integer.parseInt (initialValue.substring (sep + 1).trim ());"

        <<<<<< "return new Point (x, y);"
    } catch (NumberFormatException ex) {

        <<<<<< "return new Point ();"
    }

}

public Point createPointFromString (EDataType eDataType, String initialValue) {

    >>>>>> "int sep = initialValue.indexOf (',');"

    >>>>>> "if (sep == - 1) {return new Point ();}"
    try {

        >>>>>> "int x = Integer.parseInt (initialValue.substring (0, sep).trim ());"

        >>>>>> "int y = Integer.parseInt (initialValue.substring (sep + 1).trim ());"

        >>>>>> "return new Point (x, y);"
    } catch (NumberFormatException ex) {

        >>>>>> "return new Point ();"
    }

}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public String convertPointToString (EDataType eDataType, Object instanceValue) {

    <<<<<< "Point p = (Point) instanceValue;"

    <<<<<< "return new StringBuffer ().append (p.x).append (',').append (p.y).toString ();"
}

public String convertPointToString (EDataType eDataType, Object instanceValue) {

    >>>>>> "Point p = (Point) instanceValue;"

    >>>>>> "return new StringBuffer ().append (p.x).append (',').append (p.y).toString ();"
}

..[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public EList getOutputTerminals () {

    <<<<<< "ArrayList outputTerminals = new ArrayList ();"

    <<<<<< "for (Iterator iter = getTerminals ().iterator (); iter.hasNext ();) {Terminal terminal = (Terminal) iter.next (); if (terminal instanceof OutputTerminal) outputTerminals.add (terminal);}"

    <<<<<< "return new EcoreEList.UnmodifiableEList (this, SemanticPackage.eINSTANCE.getElement_InputTerminals (), outputTerminals.size (), outputTerminals.toArray ());"
}

public EList getOutputTerminals () {

    >>>>>> "ArrayList outputTerminals = new ArrayList ();"

    >>>>>> "for (Iterator iter = getTerminals ().iterator (); iter.hasNext ();) {Terminal terminal = (Terminal) iter.next (); if (terminal instanceof OutputTerminal) outputTerminals.add (terminal);}"

    >>>>>> "return new EcoreEList.UnmodifiableEList (this, SemanticPackage.eINSTANCE.getElement_InputTerminals (), outputTerminals.size (), outputTerminals.toArray ());"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public EList getInputTerminals () {

    <<<<<< "ArrayList inputTerminals = new ArrayList ();"

    <<<<<< "for (Iterator iter = getTerminals ().iterator (); iter.hasNext ();) {Terminal terminal = (Terminal) iter.next (); if (terminal instanceof InputTerminal) inputTerminals.add (terminal);}"

    <<<<<< "return new EcoreEList.UnmodifiableEList (this, SemanticPackage.eINSTANCE.getElement_InputTerminals (), inputTerminals.size (), inputTerminals.toArray ());"
}

public EList getInputTerminals () {

    >>>>>> "ArrayList inputTerminals = new ArrayList ();"

    >>>>>> "for (Iterator iter = getTerminals ().iterator (); iter.hasNext ();) {Terminal terminal = (Terminal) iter.next (); if (terminal instanceof InputTerminal) inputTerminals.add (terminal);}"

    >>>>>> "return new EcoreEList.UnmodifiableEList (this, SemanticPackage.eINSTANCE.getElement_InputTerminals (), inputTerminals.size (), inputTerminals.toArray ());"
}

..............[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public ResourceMap basicGetResourceMap () {

    <<<<<< "if (eContainer () instanceof ResourceMap) {return (ResourceMap) eContainer ();}"

    <<<<<< "return null;"
}

public ResourceMap basicGetResourceMap () {

    >>>>>> "if (eContainer () instanceof ResourceMap) {return (ResourceMap) eContainer ();}"

    >>>>>> "return null;"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public ResourceEntry getResourceEntry (EObject child) {

    <<<<<< "ResourceEntry result = null;"

    <<<<<< "for (Iterator iter = getResourceEntries ().iterator (); (result == null) && iter.hasNext ();) {ResourceEntryImpl next = (ResourceEntryImpl) iter.next (); if (next.basicGetChildObject () == child) {result = next;}}"

    <<<<<< "return result;"
}

public ResourceEntry getResourceEntry (EObject child) {

    >>>>>> "ResourceEntry result = null;"

    >>>>>> "for (Iterator iter = getResourceEntries ().iterator (); (result == null) && iter.hasNext ();) {ResourceEntryImpl next = (ResourceEntryImpl) iter.next (); if (next.basicGetChildObject () == child) {result = next;}}"

    >>>>>> "return result;"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public ParentEntry basicGetParentEntry () {

    <<<<<< "if (eContainer () instanceof ParentEntry) {return (ParentEntry) eContainer ();}"

    <<<<<< "return null;"
}

public ParentEntry basicGetParentEntry () {

    >>>>>> "if (eContainer () instanceof ParentEntry) {return (ParentEntry) eContainer ();}"

    >>>>>> "return null;"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.runtime/plugins/org.eclipse.gmf.runtime.emf.core/src/org/eclipse/gmf/runtime/emf/core/internal/resourcemap/impl/ResourceMapImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment2' as a [class_body_declaration], at end of:
	result = null ; // do not attempt to find the correct parent entry by the child's //   eContainer and eContainmentFeature, as it may not have either //   of these at this moment, or they may be different than expected for (Iterator iter = getParentEntries ().iterator (); (result == null) && iter.hasNext ();) {ParentEntry parentEntry = (ParentEntry) iter.next (); result = parentEntry.getResourceEntry (child);} return result;} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
......[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public boolean isListContainerEntry () {

    <<<<<< "if (getContainer () instanceof GenNode) {return ((GenNode) getContainer ()).getChildContainersPlacement () == CompartmentPlacementKind.TOOLBAR_LITERAL;}"

    <<<<<< "if (getContainer () instanceof GenCompartment) {return ((GenCompartment) getContainer ()).getLayoutKind () == CompartmentLayoutKind.TOOLBAR_LITERAL;}"

    <<<<<< "return false;"
}

public boolean isListContainerEntry () {

    >>>>>> "if (getContainer () instanceof GenNode) {return ((GenNode) getContainer ()).getChildContainersPlacement () == CompartmentPlacementKind.TOOLBAR_LITERAL;}"

    >>>>>> "if (getContainer () instanceof GenCompartment) {return ((GenCompartment) getContainer ()).getLayoutKind () == CompartmentLayoutKind.TOOLBAR_LITERAL;}"

    >>>>>> "return false;"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/GenDiagramImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment6' as a [class_body_declaration], at end of:
	{ return "LinkConstraints" ; //$NON-NLS-1$		} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public String [] getRequiredPluginIDs () {

    <<<<<< "return new String [0];"
}

public String [] getRequiredPluginIDs () {

    >>>>>> "return new String [0];"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/GenFeatureSeqInitializerImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at end of:
	next ( ) ; // For now hardcode only the default support for OCL // TODO - to be refactored to plugg-in other languages if ("ocl".equals (valueSpec.getLanguage ())) {//$NON-NLS-1$ ids.add ("org.eclipse.emf.query.ocl"); //$NON-NLS-1$}} return (String []) ids.toArray (new String [ids.size ()]);} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public String getFeatureQualifiedPackageInterfaceName () {

    <<<<<< "if (getFeature () == null) {return null;}"

    <<<<<< "return getFeature ().getGenClass ().getGenPackage ().getQualifiedPackageInterfaceName ();"
}

public String getFeatureQualifiedPackageInterfaceName () {

    >>>>>> "if (getFeature () == null) {return null;}"

    >>>>>> "return getFeature ().getGenClass ().getGenPackage ().getQualifiedPackageInterfaceName ();"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public GenFeature getMetaFeature () {

    <<<<<< "return getModelFacet () == null ? null : getModelFacet ().getMetaFeature ();"
}

public GenFeature getMetaFeature () {

    >>>>>> "return getModelFacet () == null ? null : getModelFacet ().getMetaFeature ();"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/GenLinkConstraintsImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment4' as a [class_body_declaration], at end of:
	) : "" ; //$NON-NLS-1$ } 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public GenClass getDomainMetaClass () {

    <<<<<< "return getModelFacet ().getMetaClass ();"
}

public GenClass getDomainMetaClass () {

    >>>>>> "return getModelFacet ().getMetaClass ();"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public String getGraphicalNodeEditPolicyQualifiedClassName () {

    <<<<<< "return getDiagram ().getEditPoliciesPackageName () + '.' + getGraphicalNodeEditPolicyClassName ();"
}

public String getGraphicalNodeEditPolicyQualifiedClassName () {

    >>>>>> "return getDiagram ().getEditPoliciesPackageName () + '.' + getGraphicalNodeEditPolicyClassName ();"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/GMFGenFactoryImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at end of:
	String initialValue ) { // TODO: implement this method // Ensure that you remove @generated or mark it @generated NOT throw new UnsupportedOperationException ();} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/ModelElementSelectorImpl.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at end of:
	getRequiredPluginIDs ( ) { // For now hardcode only the default support for OCL // TODO - to be refactored to plugg-in other languages if ("ocl".equals (getLanguage ())) {//$NON-NLS-1$ return new String [] {"org.eclipse.emf.query.ocl"}; //$NON-NLS-1$} return new String [0];} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/PaletteImpl.java, id.Txl] : TXL0981E - Out of tree space - 20000000 trees have been allocated.
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/PaletteImpl.java, id.Txl] : TXL0192E line 266 of /Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen/src/org/eclipse/gmf/codegen/gmfgen/impl/PaletteImpl.java - Syntax error at or near:
	   * @generated
    */ public void setFactoryClassName >>> ( <<< String newFactoryClassName ) { String 
.[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public Attributes find (Class attributesClass) {

    <<<<<< "for (Iterator it = getAttributes ().iterator (); it.hasNext ();) {Attributes next = (Attributes) it.next (); if (attributesClass.isInstance (next)) {return next;}}"

    <<<<<< "return null;"
}

public Attributes find (Class attributesClass) {

    >>>>>> "for (Iterator it = getAttributes ().iterator (); it.hasNext ();) {Attributes next = (Attributes) it.next (); if (attributesClass.isInstance (next)) {return next;}}"

    >>>>>> "return null;"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.codegen.edit/src/org/eclipse/gmf/codegen/gmfgen/presentation/GMFGenEditor.java, id.Txl] : TXL0193E predefined function [read], called from [self_comment] - Syntax error parsing file 'tmp_comment1' as a [class_body_declaration], at end of:
	createModel ( ) { // I assume that the input is a file object.// IFileEditorInput modelFile = (IFileEditorInput) getEditorInput (); try {// Load the resource through the editing domain.// // [vano] reconcile genModel for domain Resource res = editingDomain.loadResource (URI.createPlatformResourceURI (modelFile.getFile ().getFullPath ().toString ()).toString ()); GenDiagram gd = (GenDiagram) res.getContents ().get (0); if (gd.getEMFGenModel () != null) {gd.getEMFGenModel ().reconcile ();}} catch (Exception exception) {EditorPlugin.INSTANCE.log (exception);}} 
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
.[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
public EClass getDomainMetaClass () {

    <<<<<< "if (getDomainMetaElement () == null) {return getContainmentFeature ().getEReferenceType ();}"

    <<<<<< "return getDomainMetaElement ();"
}

public EClass getDomainMetaClass () {

    >>>>>> "if (getDomainMetaElement () == null) {return getContainmentFeature ().getEReferenceType ();}"

    >>>>>> "return getDomainMetaElement ();"
}

[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.map.edit/src/org/eclipse/gmf/mappings/provider/AbstractNodeMappingItemProvider.java, id.Txl] : TXL0953W - (Warning) Output token too long for output width
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
protected void addContainmentFeaturePropertyDescriptor (Object object) {

    <<<<<<
[t.1, result/norm/Java/java.Txl] : TXL0953W - (Warning) Output token too long for output width
"itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_AbstractNodeMapping_containmentFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_AbstractNodeMapping_containmentFeature_feature\", \"_UI_AbstractNodeMapping_type\"), GMFMapPackage.eINSTANCE.getAbstractNodeMapping_ContainmentFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof AbstractNodeMapping) {AbstractNodeMapping nm = (AbstractNodeMapping) object; if (nm.getDomainMetaElement () != null) {Set features = new HashSet (); for (Iterator it = nm.getDomainMetaElement ().getEPackage ().eAllContents (); it.hasNext ();) {Object next = it.next (); if (next instanceof EReference) {EReference ref = (EReference) next; if (ref.isContainment () && nm.getDomainMetaElement ().equals (ref.getEType ())) {features.add (ref);}}} return features;}} return Collections.EMPTY_LIST;}});"
    
}

protected void addContainmentFeaturePropertyDescriptor (Object object) {

    >>>>>>
[t.1, result/norm/Java/java.Txl] : TXL0953W - (Warning) Output token too long for output width
"itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_AbstractNodeMapping_containmentFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_AbstractNodeMapping_containmentFeature_feature\", \"_UI_AbstractNodeMapping_type\"), GMFMapPackage.eINSTANCE.getAbstractNodeMapping_ContainmentFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof AbstractNodeMapping) {AbstractNodeMapping nm = (AbstractNodeMapping) object; if (nm.getDomainMetaElement () != null) {Set features = new HashSet (); for (Iterator it = nm.getDomainMetaElement ().getEPackage ().eAllContents (); it.hasNext ();) {Object next = it.next (); if (next instanceof EReference) {EReference ref = (EReference) next; if (ref.isContainment () && nm.getDomainMetaElement ().equals (ref.getEType ())) {features.add (ref);}}} return features;}} return Collections.EMPTY_LIST;}});"
    
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
protected void addEditFeaturePropertyDescriptor (Object object) {

    <<<<<< "itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_AbstractNodeMapping_editFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_AbstractNodeMapping_editFeature_feature\", \"_UI_AbstractNodeMapping_type\"), GMFMapPackage.eINSTANCE.getAbstractNodeMapping_EditFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof AbstractNodeMapping) {AbstractNodeMapping nm = (AbstractNodeMapping) object; if (nm.getDomainMetaElement () != null) {return nm.getDomainMetaElement ().getEAllAttributes ();}} return Collections.EMPTY_LIST;}});"
}

protected void addEditFeaturePropertyDescriptor (Object object) {

    >>>>>> "itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_AbstractNodeMapping_editFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_AbstractNodeMapping_editFeature_feature\", \"_UI_AbstractNodeMapping_type\"), GMFMapPackage.eINSTANCE.getAbstractNodeMapping_EditFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof AbstractNodeMapping) {AbstractNodeMapping nm = (AbstractNodeMapping) object; if (nm.getDomainMetaElement () != null) {return nm.getDomainMetaElement ().getEAllAttributes ();}} return Collections.EMPTY_LIST;}});"
}

[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.map.edit/src/org/eclipse/gmf/mappings/provider/AbstractNodeMappingItemProvider.java, id.Txl] : TXL0953W - (Warning) Output token too long for output width
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.map.edit/src/org/eclipse/gmf/mappings/provider/LinkMappingItemProvider.java, id.Txl] : TXL0953W - (Warning) Output token too long for output width
[] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
protected void addContainmentFeaturePropertyDescriptor (Object object) {

    <<<<<< "itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_LinkMapping_containmentFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_LinkMapping_containmentFeature_feature\", \"_UI_LinkMapping_type\"), GMFMapPackage.eINSTANCE.getLinkMapping_ContainmentFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof LinkMapping) {LinkMapping nm = (LinkMapping) object; if (nm.getDomainMetaElement () != null) {Set features = new HashSet (); for (Iterator it = nm.getDomainMetaElement ().getEPackage ().eAllContents (); it.hasNext ();) {Object next = it.next (); if (next instanceof EReference) {EReference ref = (EReference) next; if (ref.isContainment () && nm.getDomainMetaElement ().equals (ref.getEType ())) {features.add (ref);}}} return features;}} return Collections.EMPTY_LIST;}});"
}

protected void addContainmentFeaturePropertyDescriptor (Object object) {

    >>>>>> "itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_LinkMapping_containmentFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_LinkMapping_containmentFeature_feature\", \"_UI_LinkMapping_type\"), GMFMapPackage.eINSTANCE.getLinkMapping_ContainmentFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof LinkMapping) {LinkMapping nm = (LinkMapping) object; if (nm.getDomainMetaElement () != null) {Set features = new HashSet (); for (Iterator it = nm.getDomainMetaElement ().getEPackage ().eAllContents (); it.hasNext ();) {Object next = it.next (); if (next instanceof EReference) {EReference ref = (EReference) next; if (ref.isContainment () && nm.getDomainMetaElement ().equals (ref.getEType ())) {features.add (ref);}}} return features;}} return Collections.EMPTY_LIST;}});"
}

[result/norm/Java/java.Txl] : TXL0911W - (Warning) Stack limit less than recommended for TXL size (probable cause: shell stack limit)
[result/norm/Java/java.Txl] : TXL0913I - (Information) Recursion stack limit reduced from 16777216 to 7340032 to fit
TXL v10.5h-64 (5.11.10) (c) 1988-2010 Queen's University at Kingston
Compiling result/norm/Java/java.Txl ... 
Parsing t.1 ...
Transforming ...
protected void addLabelEditFeaturePropertyDescriptor (Object object) {

    <<<<<< "itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_LinkMapping_labelEditFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_LinkMapping_labelEditFeature_feature\", \"_UI_LinkMapping_type\"), GMFMapPackage.eINSTANCE.getLinkMapping_LabelEditFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof LinkMapping) {LinkMapping nm = (LinkMapping) object; if (nm.getDomainMetaElement () != null) {return nm.getDomainMetaElement ().getEAllAttributes ();}} return Collections.EMPTY_LIST;}});"
}

protected void addLabelEditFeaturePropertyDescriptor (Object object) {

    >>>>>> "itemPropertyDescriptors.add (new ItemPropertyDescriptor (((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory (), getResourceLocator (), getString (\"_UI_LinkMapping_labelEditFeature_feature\"), getString (\"_UI_PropertyDescriptor_description\", \"_UI_LinkMapping_labelEditFeature_feature\", \"_UI_LinkMapping_type\"), GMFMapPackage.eINSTANCE.getLinkMapping_LabelEditFeature (), true, null, null, null) {protected Collection getComboBoxObjects (Object object) {if (object instanceof LinkMapping) {LinkMapping nm = (LinkMapping) object; if (nm.getDomainMetaElement () != null) {return nm.getDomainMetaElement ().getEAllAttributes ();}} return Collections.EMPTY_LIST;}});"
}

[/Users/yy66/Documents/research/mct/tmp/org.eclipse.gmp/org.eclipse.gmf.tooling/plugins/org.eclipse.gmf.map.edit/src/org/eclipse/gmf/mappings/provider/LinkMappingItemProvider.java, id.Txl] : TXL0953W - (Warning) Output token too long for output width
.