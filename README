Q. What are in the folder?

bin.* -- binaries
norm -- user-defined normalisations
java -- Java program examples
problem -- Problem Frames examples
clone -- Clone removal examples
result/norm -- normalisations transformed 
result/java -- normalised Java program examples
result/problem -- normalised Problem Frames examples
result/clone -- clone removed results
cvs -- experiments on analysing the CVS of java projects

Q. How to define annotations?

Given a TXL grammar, enter the following annotations 
in the end of any non-terminal rule [...]:

	... [ordered [by X] [ignored [by Y]]

where X is an optional user-defined ordering rule, and Y is an optional
user-defined selection rule.

Q. How to generate normalisation transformations from the annotations? 

> bin.*/normc norm/java.norm -o result/norm/java.norm
> bin.*/normc norm/problem.norm -o result/norm/problem.norm

Note the following two commands generate the binary tools to be used in the
normalisations.

> bin.*/txlc result/norm/java.norm -o bin.*/javac
> bin.*/txlc result/norm/problem.norm -o bin.*/problemc

Q. How to run the examples normalisations?

E.g.,

> bin.*/javac java/abc.java -o result/java/abc.java
> bin.*/javac java/HelloWorld.java -o result/java/HelloWorld.java
> bin.*/javac java/HelloWorld2.java -o result/java/HelloWorld2.java
> bin.*/problemc problem/CommandedBehaviour1.problem -o result/problem/CommandedBehaviour1.problem
